ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"port.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c"
  20              		.section	.text.prvTaskExitError,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	prvTaskExitError:
  27              	.LFB6:
   1:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
   2:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * FreeRTOS Kernel V10.5.1
   3:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *
   5:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * SPDX-License-Identifier: MIT
   6:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *
   7:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * the Software without restriction, including without limitation the rights to
  10:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * subject to the following conditions:
  13:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *
  14:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * The above copyright notice and this permission notice shall be included in all
  15:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * copies or substantial portions of the Software.
  16:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *
  17:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *
  24:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * https://www.FreeRTOS.org
  25:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * https://github.com/FreeRTOS
  26:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  *
  27:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
  28:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  29:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------
  30:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** * Implementation of functions defined in portable.h for the ARM CM4F port.
  31:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** *----------------------------------------------------------*/
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 2


  32:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  33:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Scheduler includes. */
  34:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #include "FreeRTOS.h"
  35:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #include "task.h"
  36:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  37:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #ifndef __VFP_FP__
  38:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     #error This port can only be used when the project options are configured to enable hardware fl
  39:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif
  40:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  41:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Constants required to manipulate the core.  Registers first... */
  42:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_CTRL_REG             ( *( ( volatile uint32_t * ) 0xe000e010 ) )
  43:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_LOAD_REG             ( *( ( volatile uint32_t * ) 0xe000e014 ) )
  44:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_CURRENT_VALUE_REG    ( *( ( volatile uint32_t * ) 0xe000e018 ) )
  45:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SHPR3_REG                    ( *( ( volatile uint32_t * ) 0xe000ed20 ) )
  46:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* ...then bits in the registers. */
  47:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_CLK_BIT              ( 1UL << 2UL )
  48:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_INT_BIT              ( 1UL << 1UL )
  49:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_ENABLE_BIT           ( 1UL << 0UL )
  50:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_COUNT_FLAG_BIT       ( 1UL << 16UL )
  51:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PENDSVCLEAR_BIT              ( 1UL << 27UL )
  52:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PEND_SYSTICK_SET_BIT         ( 1UL << 26UL )
  53:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PEND_SYSTICK_CLEAR_BIT       ( 1UL << 25UL )
  54:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  55:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Constants used to detect a Cortex-M7 r0p1 core, which should use the ARM_CM7
  56:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * r0p1 port. */
  57:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portCPUID                             ( *( ( volatile uint32_t * ) 0xE000ed00 ) )
  58:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portCORTEX_M7_r0p1_ID                 ( 0x410FC271UL )
  59:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portCORTEX_M7_r0p0_ID                 ( 0x410FC270UL )
  60:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  61:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_PENDSV_PRI                   ( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) <<
  62:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_SYSTICK_PRI                  ( ( ( uint32_t ) configKERNEL_INTERRUPT_PRIORITY ) <<
  63:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  64:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Constants required to check the validity of an interrupt priority. */
  65:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portFIRST_USER_INTERRUPT_NUMBER       ( 16 )
  66:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portNVIC_IP_REGISTERS_OFFSET_16       ( 0xE000E3F0 )
  67:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portAIRCR_REG                         ( *( ( volatile uint32_t * ) 0xE000ED0C ) )
  68:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portMAX_8_BIT_VALUE                   ( ( uint8_t ) 0xff )
  69:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portTOP_BIT_OF_BYTE                   ( ( uint8_t ) 0x80 )
  70:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portMAX_PRIGROUP_BITS                 ( ( uint8_t ) 7 )
  71:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portPRIORITY_GROUP_MASK               ( 0x07UL << 8UL )
  72:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portPRIGROUP_SHIFT                    ( 8UL )
  73:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  74:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Masks off all bits but the VECTACTIVE bits in the ICSR register. */
  75:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portVECTACTIVE_MASK                   ( 0xFFUL )
  76:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  77:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Constants required to manipulate the VFP. */
  78:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portFPCCR                             ( ( volatile uint32_t * ) 0xe000ef34 ) /* Floating po
  79:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portASPEN_AND_LSPEN_BITS              ( 0x3UL << 30UL )
  80:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  81:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Constants required to set up the initial stack. */
  82:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portINITIAL_XPSR                      ( 0x01000000 )
  83:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portINITIAL_EXC_RETURN                ( 0xfffffffd )
  84:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  85:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* The systick is a 24-bit counter. */
  86:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portMAX_24_BIT_NUMBER                 ( 0xffffffUL )
  87:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  88:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* For strict compliance with the Cortex-M spec the task start address should
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 3


  89:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * have bit-0 clear, as it is loaded into the PC on exit from an ISR. */
  90:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portSTART_ADDRESS_MASK                ( ( StackType_t ) 0xfffffffeUL )
  91:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  92:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* A fiddle factor to estimate the number of SysTick counts that would have
  93:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * occurred while the SysTick counter is stopped during tickless idle
  94:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * calculations. */
  95:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #define portMISSED_COUNTS_FACTOR              ( 94UL )
  96:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
  97:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Let the user override the default SysTick clock rate.  If defined by the
  98:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * user, this symbol must equal the SysTick clock rate when the CLK bit is 0 in the
  99:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * configuration register. */
 100:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #ifndef configSYSTICK_CLOCK_HZ
 101:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     #define configSYSTICK_CLOCK_HZ             ( configCPU_CLOCK_HZ )
 102:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Ensure the SysTick is clocked at the same frequency as the core. */
 103:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     #define portNVIC_SYSTICK_CLK_BIT_CONFIG    ( portNVIC_SYSTICK_CLK_BIT )
 104:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #else
 105:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Select the option to clock SysTick not at the same frequency as the core. */
 106:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     #define portNVIC_SYSTICK_CLK_BIT_CONFIG    ( 0 )
 107:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif
 108:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 109:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Let the user override the pre-loading of the initial LR with the address of
 110:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * prvTaskExitError() in case it messes up unwinding of the stack in the
 111:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * debugger. */
 112:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #ifdef configTASK_RETURN_ADDRESS
 113:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     #define portTASK_RETURN_ADDRESS    configTASK_RETURN_ADDRESS
 114:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #else
 115:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     #define portTASK_RETURN_ADDRESS    prvTaskExitError
 116:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif
 117:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 118:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 119:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Setup the timer to generate the tick interrupts.  The implementation in this
 120:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * file is weak to allow application writers to change the timer used to
 121:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * generate the tick interrupt.
 122:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 123:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortSetupTimerInterrupt( void );
 124:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 125:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 126:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Exception handlers.
 127:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 128:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void xPortPendSVHandler( void ) __attribute__( ( naked ) );
 129:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void xPortSysTickHandler( void );
 130:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortSVCHandler( void ) __attribute__( ( naked ) );
 131:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 132:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 133:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Start first task is a separate function so it can be tested in isolation.
 134:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 135:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void prvPortStartFirstTask( void ) __attribute__( ( naked ) );
 136:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 137:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 138:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Function to enable the VFP.
 139:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 140:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void vPortEnableVFP( void ) __attribute__( ( naked ) );
 141:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 142:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 143:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Used to catch tasks that attempt to return from their implementing function.
 144:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 145:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void prvTaskExitError( void );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 4


 146:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 147:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 148:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 149:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* Each task maintains its own interrupt status in the critical nesting
 150:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * variable. */
 151:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
 152:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 153:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 154:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * The number of SysTick increments that make up one tick period.
 155:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 156:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 157:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     static uint32_t ulTimerCountsForOneTick = 0;
 158:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 159:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 160:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 161:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * The maximum number of tick periods that can be suppressed is limited by the
 162:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * 24 bit resolution of the SysTick timer.
 163:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 164:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 165:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     static uint32_t xMaximumPossibleSuppressedTicks = 0;
 166:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 167:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 168:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 169:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Compensate for the CPU cycles that pass while the SysTick is stopped (low
 170:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * power functionality only.
 171:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 172:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 173:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     static uint32_t ulStoppedTimerCompensation = 0;
 174:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif /* configUSE_TICKLESS_IDLE */
 175:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 176:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 177:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Used by the portASSERT_IF_INTERRUPT_PRIORITY_INVALID() macro to ensure
 178:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * FreeRTOS API functions are not called from interrupts that have been assigned
 179:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * a priority above configMAX_SYSCALL_INTERRUPT_PRIORITY.
 180:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 181:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if ( configASSERT_DEFINED == 1 )
 182:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     static uint8_t ucMaxSysCallPriority = 0;
 183:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     static uint32_t ulMaxPRIGROUPValue = 0;
 184:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     static const volatile uint8_t * const pcInterruptPriorityRegisters = ( const volatile uint8_t *
 185:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif /* configASSERT_DEFINED */
 186:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 187:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 188:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 189:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 190:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * See header file for description.
 191:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 192:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** StackType_t * pxPortInitialiseStack( StackType_t * pxTopOfStack,
 193:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                                      TaskFunction_t pxCode,
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                                      void * pvParameters )
 195:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Simulate the stack frame as it would be created by a context switch
 197:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * interrupt. */
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 199:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Offset added to account for the way the MCU uses the stack on entry/exit
 200:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * of interrupts, and to ensure alignment. */
 201:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
 202:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 5


 203:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = portINITIAL_XPSR;                                    /* xPSR */
 204:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
 205:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK; /* PC */
 206:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
 207:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;             /* LR */
 208:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 209:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Save code space by skipping register initialisation. */
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack -= 5;                            /* R12, R3, R2 and R1. */
 211:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = ( StackType_t ) pvParameters; /* R0 */
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 213:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* A save method is being used that requires each task to maintain its
 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * own exec return value. */
 215:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
 216:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = portINITIAL_EXC_RETURN;
 217:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 218:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack -= 8; /* R11, R10, R9, R8, R7, R6, R5 and R4. */
 219:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 220:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     return pxTopOfStack;
 221:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 222:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 223:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 224:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void prvTaskExitError( void )
 225:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
  28              		.loc 1 225 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 82B0     		sub	sp, sp, #8
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     volatile uint32_t ulDummy = 0;
  36              		.loc 1 226 5 view .LVU1
  37              		.loc 1 226 23 is_stmt 0 view .LVU2
  38 0002 0023     		movs	r3, #0
  39 0004 0193     		str	r3, [sp, #4]
 227:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 228:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* A function that implements a task must not exit or attempt to return to
 229:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * its caller as there is nothing to return to.  If a task wants to exit it
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * should instead call vTaskDelete( NULL ).
 231:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      *
 232:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * Artificially force an assert() to be triggered if configASSERT() is
 233:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * defined, then stop here so application writers can catch the error. */
 234:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( uxCriticalNesting == ~0UL );
  40              		.loc 1 234 5 is_stmt 1 view .LVU3
  41 0006 0D4B     		ldr	r3, .L6
  42 0008 1B68     		ldr	r3, [r3]
  43 000a B3F1FF3F 		cmp	r3, #-1
  44 000e 08D0     		beq	.L2
  45              		.loc 1 234 5 discriminator 1 view .LVU4
  46              	.LBB31:
  47              	.LBI31:
  48              		.file 2 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
   1:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.5.1
   3:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 6


   5:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   7:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  13:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  14:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  16:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  17:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  24:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  25:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  26:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  27:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  28:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  30:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  31:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  32:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  33:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  34:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  35:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  36:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  37:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  38:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  39:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  40:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  41:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  42:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  43:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  44:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  45:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  46:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  48:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  49:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  50:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  51:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  52:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  53:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  54:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  55:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  57:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  58:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  59:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  60:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  61:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 7


  62:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  63:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  64:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  65:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  66:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  68:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  69:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  70:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  71:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  72:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  73:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  74:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  75:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  76:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  77:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  78:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  79:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  80:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  81:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  82:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  83:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  84:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  85:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  86:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  87:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  88:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  89:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  90:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
  91:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  92:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  93:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  94:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  95:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  96:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  97:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  98:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  99:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
 100:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 101:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 102:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 103:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 104:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 105:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 106:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 107:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 109:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 110:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 111:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 112:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 113:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 114:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 115:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 116:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 117:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 118:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 8


 119:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 120:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 121:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 122:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 123:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 124:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 125:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 126:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 127:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 128:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 130:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 131:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 132:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 133:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 134:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 135:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 136:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 137:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 139:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 140:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 141:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 142:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 143:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 144:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 145:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 146:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 147:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 148:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 149:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 152:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 153:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 154:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 155:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 156:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 158:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 159:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 160:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 161:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 162:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 165:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 166:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 167:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 168:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 169:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 170:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 171:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 172:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 173:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 174:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 175:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 9


 176:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 178:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 179:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 181:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 182:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 183:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 184:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         else
 185:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 186:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 187:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 188:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 190:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 191:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 192:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 193:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  49              		.loc 2 194 34 view .LVU5
  50              	.LBB32:
 195:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
  51              		.loc 2 196 9 view .LVU6
 197:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
  52              		.loc 2 198 9 view .LVU7
  53              		.syntax unified
  54              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
  55 0010 4FF05003 			mov r3, #80												
  56 0014 83F31188 		msr basepri, r3											
  57 0018 BFF36F8F 		isb														
  58 001c BFF34F8F 		dsb														
  59              	
  60              	@ 0 "" 2
  61              		.thumb
  62              		.syntax unified
  63              	.L3:
  64              	.LBE32:
  65              	.LBE31:
  66              		.loc 1 234 5 discriminator 3 view .LVU8
  67              		.loc 1 234 5 discriminator 3 view .LVU9
  68 0020 FEE7     		b	.L3
  69              	.L2:
  70              		.loc 1 234 46 discriminator 2 view .LVU10
 235:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portDISABLE_INTERRUPTS();
  71              		.loc 1 235 5 view .LVU11
  72              	.LBB33:
  73              	.LBI33:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
  74              		.loc 2 194 34 view .LVU12
  75              	.LBB34:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  76              		.loc 2 196 9 view .LVU13
  77              		.loc 2 198 9 view .LVU14
  78              		.syntax unified
  79              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 10


  80 0022 4FF05003 			mov r3, #80												
  81 0026 83F31188 		msr basepri, r3											
  82 002a BFF36F8F 		isb														
  83 002e BFF34F8F 		dsb														
  84              	
  85              	@ 0 "" 2
  86              		.thumb
  87              		.syntax unified
  88              	.LBE34:
  89              	.LBE33:
 236:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 237:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     while( ulDummy == 0 )
  90              		.loc 1 237 5 view .LVU15
  91              	.L4:
 238:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 239:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* This file calls prvTaskExitError() after the scheduler has been
 240:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * started to remove a compiler warning about the function being defined
 241:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * but never called.  ulDummy is used purely to quieten other warnings
 242:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * about code appearing after this function is called - making ulDummy
 243:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * volatile makes the compiler think the function could return and
 244:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * therefore not output an 'unreachable code' warning for code that appears
 245:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * after it. */
 246:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
  92              		.loc 1 246 5 view .LVU16
 237:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
  93              		.loc 1 237 20 discriminator 1 view .LVU17
  94 0032 019B     		ldr	r3, [sp, #4]
  95 0034 002B     		cmp	r3, #0
  96 0036 FCD0     		beq	.L4
 247:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
  97              		.loc 1 247 1 is_stmt 0 view .LVU18
  98 0038 02B0     		add	sp, sp, #8
  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 0
 101              		@ sp needed
 102 003a 7047     		bx	lr
 103              	.L7:
 104              		.align	2
 105              	.L6:
 106 003c 00000000 		.word	uxCriticalNesting
 107              		.cfi_endproc
 108              	.LFE6:
 110              		.section	.text.prvPortStartFirstTask,"ax",%progbits
 111              		.align	1
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 116              	prvPortStartFirstTask:
 117              	.LFB8:
 248:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 249:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 250:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortSVCHandler( void )
 251:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 252:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     __asm volatile (
 253:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldr	r3, pxCurrentTCBConst2		\n"/* Restore the context. */
 254:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldr r1, [r3]					\n"/* Use pxCurrentTCBConst to get the pxCurrentTCB address. */
 255:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldr r0, [r1]					\n"/* The first item in pxCurrentTCB is the task top of stack. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 11


 256:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldmia r0!, {r4-r11, r14}		\n"/* Pop the registers that are not automatically saved on exc
 257:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	msr psp, r0						\n"/* Restore the task stack pointer. */
 258:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	isb								\n"
 259:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	mov r0, #0 						\n"
 260:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	msr	basepri, r0					\n"
 261:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	bx r14							\n"
 262:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "									\n"
 263:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	.align 4						\n"
 264:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "pxCurrentTCBConst2: .word pxCurrentTCB				\n"
 265:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         );
 266:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 267:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 268:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 269:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void prvPortStartFirstTask( void )
 270:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 118              		.loc 1 270 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ Naked Function: prologue and epilogue provided by programmer.
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 271:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Start the first task.  This also clears the bit that indicates the FPU is
 272:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * in use in case the FPU was used before the scheduler was started - which
 273:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * would otherwise result in the unnecessary leaving of space in the SVC stack
 274:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * for lazy saving of FPU registers. */
 275:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     __asm volatile (
 123              		.loc 1 275 5 view .LVU20
 124              		.syntax unified
 125              	@ 275 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c" 1
 126 0000 0848     		 ldr r0, =0xE000ED08 	
 127 0002 0068     	 ldr r0, [r0] 			
 128 0004 0068     	 ldr r0, [r0] 			
 129 0006 80F30888 	 msr msp, r0			
 130 000a 4FF00000 	 mov r0, #0			
 131 000e 80F31488 	 msr control, r0		
 132 0012 62B6     	 cpsie i				
 133 0014 61B6     	 cpsie f				
 134 0016 BFF34F8F 	 dsb					
 135 001a BFF36F8F 	 isb					
 136 001e 00DF     	 svc 0					
 137 0020 00BF     	 nop					
 138 0022 000008ED 	 .ltorg				
 138      00E0
 139              	
 140              	@ 0 "" 2
 276:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " ldr r0, =0xE000ED08 	\n"/* Use the NVIC offset register to locate the stack. */
 277:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " ldr r0, [r0] 			\n"
 278:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " ldr r0, [r0] 			\n"
 279:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " msr msp, r0			\n"/* Set the msp back to the start of the stack. */
 280:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " mov r0, #0			\n"/* Clear the bit that indicates the FPU is in use, see comment above. */
 281:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " msr control, r0		\n"
 282:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " cpsie i				\n"/* Globally enable interrupts. */
 283:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " cpsie f				\n"
 284:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " dsb					\n"
 285:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " isb					\n"
 286:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " svc 0					\n"/* System call to start first task. */
 287:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " nop					\n"
 288:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         " .ltorg				\n"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 12


 289:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         );
 290:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 141              		.loc 1 290 1 is_stmt 0 view .LVU21
 142              		.thumb
 143              		.syntax unified
 144              		.cfi_endproc
 145              	.LFE8:
 147              		.section	.text.vPortEnableVFP,"ax",%progbits
 148              		.align	1
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 153              	vPortEnableVFP:
 154              	.LFB16:
 291:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 292:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 293:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 294:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * See header file for description.
 295:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 296:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** BaseType_t xPortStartScheduler( void )
 297:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 298:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 299:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * See https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
 300:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( configMAX_SYSCALL_INTERRUPT_PRIORITY );
 301:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 302:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* This port can be used on all revisions of the Cortex-M7 core other than
 303:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * the r0p1 parts.  r0p1 parts should use the port from the
 304:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * /source/portable/GCC/ARM_CM7/r0p1 directory. */
 305:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 306:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 307:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 308:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     #if ( configASSERT_DEFINED == 1 )
 309:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 310:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         volatile uint32_t ulOriginalPriority;
 311:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( port
 312:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         volatile uint8_t ucMaxPriorityValue;
 313:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 314:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Determine the maximum priority from which ISR safe FreeRTOS API
 315:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * functions can be called.  ISR safe functions are those that end in
 316:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * "FromISR".  FreeRTOS maintains separate thread and ISR API functions to
 317:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * ensure interrupt entry is as fast and simple as possible.
 318:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          *
 319:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * Save the interrupt priority value that is about to be clobbered. */
 320:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         ulOriginalPriority = *pucFirstUserPriorityRegister;
 321:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 322:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Determine the number of priority bits available.  First write to all
 323:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * possible bits. */
 324:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         *pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 325:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 326:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Read the value back to see how many bits stuck. */
 327:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 328:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 329:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Use the same mask on the maximum system call priority. */
 330:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 331:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 332:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Calculate the maximum acceptable priority group value for the number
 333:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * of bits read back. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 13


 334:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 335:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 336:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 337:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 338:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             ulMaxPRIGROUPValue--;
 339:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 340:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 341:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 342:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         #ifdef __NVIC_PRIO_BITS
 343:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 344:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Check the CMSIS configuration that defines the number of
 345:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * priority bits matches the number of priority bits actually queried
 346:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * from the hardware. */
 347:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == __NVIC_PRIO_BITS );
 348:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 349:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         #endif
 350:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 351:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         #ifdef configPRIO_BITS
 352:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 353:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Check the FreeRTOS configuration that defines the number of
 354:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * priority bits matches the number of priority bits actually queried
 355:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * from the hardware. */
 356:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 357:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 358:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         #endif
 359:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 360:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Shift the priority group value back to its position within the AIRCR
 361:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * register. */
 362:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         ulMaxPRIGROUPValue <<= portPRIGROUP_SHIFT;
 363:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 364:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 365:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Restore the clobbered interrupt priority register to its original
 366:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * value. */
 367:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         *pucFirstUserPriorityRegister = ulOriginalPriority;
 368:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 369:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     #endif /* configASSERT_DEFINED */
 370:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 371:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Make PendSV and SysTick the lowest priority interrupts. */
 372:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 373:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 374:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 375:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Start the timer that generates the tick ISR.  Interrupts are disabled
 376:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * here already. */
 377:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     vPortSetupTimerInterrupt();
 378:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 379:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Initialise the critical nesting count ready for the first task. */
 380:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting = 0;
 381:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 382:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Ensure the VFP is enabled - it should be anyway. */
 383:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     vPortEnableVFP();
 384:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 385:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Lazy save always. */
 386:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     *( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 387:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 388:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Start the first task. */
 389:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     prvPortStartFirstTask();
 390:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 14


 391:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Should never get here as the tasks will now be executing!  Call the task
 392:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * exit error function to prevent compiler warnings about a static function
 393:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * not being called in the case that the application writer overrides this
 394:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * functionality by defining configTASK_RETURN_ADDRESS.  Call
 395:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * vTaskSwitchContext() so link time optimisation does not remove the
 396:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * symbol. */
 397:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     vTaskSwitchContext();
 398:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     prvTaskExitError();
 399:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 400:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Should not get here! */
 401:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     return 0;
 402:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 403:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 404:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 405:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortEndScheduler( void )
 406:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 407:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Not implemented in ports where there is nothing to return to.
 408:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * Artificially force an assert. */
 409:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( uxCriticalNesting == 1000UL );
 410:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 411:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 412:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 413:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortEnterCritical( void )
 414:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 415:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portDISABLE_INTERRUPTS();
 416:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting++;
 417:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 418:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* This is not the interrupt safe version of the enter critical function so
 419:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * assert() if it is being called from an interrupt context.  Only API
 420:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * functions that end in "FromISR" can be used in an interrupt.  Only assert if
 421:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * the critical nesting count is 1 to protect against recursive calls if the
 422:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * assert function also uses a critical section. */
 423:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     if( uxCriticalNesting == 1 )
 424:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 425:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 426:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 427:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 428:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 429:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 430:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void vPortExitCritical( void )
 431:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 432:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( uxCriticalNesting );
 433:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting--;
 434:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 435:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     if( uxCriticalNesting == 0 )
 436:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 437:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         portENABLE_INTERRUPTS();
 438:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 439:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 440:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 441:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 442:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void xPortPendSVHandler( void )
 443:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 444:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* This is a naked function. */
 445:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 446:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     __asm volatile
 447:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     (
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 15


 448:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	mrs r0, psp							\n"
 449:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	isb									\n"
 450:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 451:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldr	r3, pxCurrentTCBConst			\n"/* Get the location of the current TCB. */
 452:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldr	r2, [r3]						\n"
 453:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 454:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	tst r14, #0x10						\n"/* Is the task using the FPU context?  If so, push high vfp regist
 455:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	it eq								\n"
 456:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	vstmdbeq r0!, {s16-s31}				\n"
 457:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 458:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	stmdb r0!, {r4-r11, r14}			\n"/* Save the core registers. */
 459:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	str r0, [r2]						\n"/* Save the new top of stack into the first member of the TCB. */
 460:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 461:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	stmdb sp!, {r0, r3}					\n"
 462:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	mov r0, %0 							\n"
 463:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	msr basepri, r0						\n"
 464:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	dsb									\n"
 465:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	isb									\n"
 466:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	bl vTaskSwitchContext				\n"
 467:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	mov r0, #0							\n"
 468:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	msr basepri, r0						\n"
 469:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldmia sp!, {r0, r3}					\n"
 470:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 471:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldr r1, [r3]						\n"/* The first item in pxCurrentTCB is the task top of stack. */
 472:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldr r0, [r1]						\n"
 473:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 474:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldmia r0!, {r4-r11, r14}			\n"/* Pop the core registers. */
 475:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 476:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	tst r14, #0x10						\n"/* Is the task using the FPU context?  If so, pop the high vfp reg
 477:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	it eq								\n"
 478:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	vldmiaeq r0!, {s16-s31}				\n"
 479:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 480:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	msr psp, r0							\n"
 481:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	isb									\n"
 482:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 483:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         #ifdef WORKAROUND_PMU_CM001 /* XMC4000 specific errata workaround. */
 484:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             #if WORKAROUND_PMU_CM001 == 1
 485:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 "			push { r14 }				\n"
 486:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 "			pop { pc }					\n"
 487:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             #endif
 488:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         #endif
 489:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 490:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	bx r14								\n"
 491:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "										\n"
 492:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	.align 4							\n"
 493:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "pxCurrentTCBConst: .word pxCurrentTCB	\n"
 494:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         ::"i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 495:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     );
 496:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 497:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 498:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 499:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** void xPortSysTickHandler( void )
 500:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 501:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* The SysTick runs at the lowest interrupt priority, so when this interrupt
 502:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * executes all interrupts must be unmasked.  There is therefore no need to
 503:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * save and then restore the interrupt mask value as its value is already
 504:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****      * known. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 16


 505:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portDISABLE_INTERRUPTS();
 506:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 507:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Increment the RTOS tick. */
 508:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         if( xTaskIncrementTick() != pdFALSE )
 509:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 510:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* A context switch is required.  Context switching is performed in
 511:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * the PendSV interrupt.  Pend the PendSV interrupt. */
 512:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 513:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 514:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 515:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portENABLE_INTERRUPTS();
 516:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 517:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 518:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 519:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if ( configUSE_TICKLESS_IDLE == 1 )
 520:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 521:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     __attribute__( ( weak ) ) void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime )
 522:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 523:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         uint32_t ulReloadValue, ulCompleteTickPeriods, ulCompletedSysTickDecrements, ulSysTickDecre
 524:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         TickType_t xModifiableIdleTime;
 525:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 526:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Make sure the SysTick reload value does not overflow the counter. */
 527:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 528:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 529:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             xExpectedIdleTime = xMaximumPossibleSuppressedTicks;
 530:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 531:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 532:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Enter a critical section but don't use the taskENTER_CRITICAL()
 533:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * method as that will mask interrupts that should exit sleep mode. */
 534:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         __asm volatile ( "cpsid i" ::: "memory" );
 535:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         __asm volatile ( "dsb" );
 536:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         __asm volatile ( "isb" );
 537:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 538:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* If a context switch is pending or a task is waiting for the scheduler
 539:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * to be unsuspended then abandon the low power entry. */
 540:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 541:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 542:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Re-enable interrupts - see comments above the cpsid instruction
 543:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * above. */
 544:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "cpsie i" ::: "memory" );
 545:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 546:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         else
 547:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 548:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Stop the SysTick momentarily.  The time the SysTick is stopped for
 549:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * is accounted for as best it can be, but using the tickless mode will
 550:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * inevitably result in some tiny drift of the time maintained by the
 551:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * kernel with respect to calendar time. */
 552:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BI
 553:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 554:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Use the SysTick current-value register to determine the number of
 555:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * SysTick decrements remaining until the next tick interrupt.  If the
 556:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * current-value register is zero, then there are actually
 557:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * ulTimerCountsForOneTick decrements remaining, not zero, because the
 558:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * SysTick requests the interrupt when decrementing from 1 to 0. */
 559:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 560:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 561:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             if( ulSysTickDecrementsLeft == 0 )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 17


 562:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             {
 563:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 ulSysTickDecrementsLeft = ulTimerCountsForOneTick;
 564:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             }
 565:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 566:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Calculate the reload value required to wait xExpectedIdleTime
 567:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * tick periods.  -1 is used because this code normally executes part
 568:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * way through the first tick period.  But if the SysTick IRQ is now
 569:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * pending, then clear the IRQ, suppressing the first tick, and correct
 570:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * the reload value to reflect that the second tick period is already
 571:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * underway.  The expected idle time is always at least two ticks. */
 572:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             ulReloadValue = ulSysTickDecrementsLeft + ( ulTimerCountsForOneTick * ( xExpectedIdleTi
 573:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 574:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             if( ( portNVIC_INT_CTRL_REG & portNVIC_PEND_SYSTICK_SET_BIT ) != 0 )
 575:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             {
 576:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 portNVIC_INT_CTRL_REG = portNVIC_PEND_SYSTICK_CLEAR_BIT;
 577:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 ulReloadValue -= ulTimerCountsForOneTick;
 578:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             }
 579:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 580:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             if( ulReloadValue > ulStoppedTimerCompensation )
 581:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             {
 582:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 ulReloadValue -= ulStoppedTimerCompensation;
 583:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             }
 584:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 585:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Set the new reload value. */
 586:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 587:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 588:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Clear the SysTick count flag and set the count value back to
 589:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * zero. */
 590:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 591:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 592:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Restart SysTick. */
 593:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 594:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 595:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Sleep until something happens.  configPRE_SLEEP_PROCESSING() can
 596:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * set its parameter to 0 to indicate that its implementation contains
 597:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * its own wait for interrupt or wait for event instruction, and so wfi
 598:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * should not be executed again.  However, the original expected idle
 599:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * time variable must remain unmodified, so a copy is taken. */
 600:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             xModifiableIdleTime = xExpectedIdleTime;
 601:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             configPRE_SLEEP_PROCESSING( xModifiableIdleTime );
 602:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 603:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             if( xModifiableIdleTime > 0 )
 604:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             {
 605:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 __asm volatile ( "dsb" ::: "memory" );
 606:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 __asm volatile ( "wfi" );
 607:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 __asm volatile ( "isb" );
 608:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             }
 609:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 610:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             configPOST_SLEEP_PROCESSING( xExpectedIdleTime );
 611:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 612:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Re-enable interrupts to allow the interrupt that brought the MCU
 613:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * out of sleep mode to execute immediately.  See comments above
 614:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * the cpsid instruction above. */
 615:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "cpsie i" ::: "memory" );
 616:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "dsb" );
 617:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "isb" );
 618:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 18


 619:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Disable interrupts again because the clock is about to be stopped
 620:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * and interrupts that execute while the clock is stopped will increase
 621:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * any slippage between the time maintained by the RTOS and calendar
 622:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * time. */
 623:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "cpsid i" ::: "memory" );
 624:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "dsb" );
 625:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "isb" );
 626:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 627:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Disable the SysTick clock without reading the
 628:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * portNVIC_SYSTICK_CTRL_REG register to ensure the
 629:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * portNVIC_SYSTICK_COUNT_FLAG_BIT is not cleared if it is set.  Again,
 630:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * the time the SysTick is stopped for is accounted for as best it can
 631:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * be, but using the tickless mode will inevitably result in some tiny
 632:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * drift of the time maintained by the kernel with respect to calendar
 633:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * time*/
 634:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BI
 635:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 636:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Determine whether the SysTick has already counted to zero. */
 637:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 638:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             {
 639:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 uint32_t ulCalculatedLoadValue;
 640:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 641:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 /* The tick interrupt ended the sleep (or is now pending), and
 642:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * a new tick period has started.  Reset portNVIC_SYSTICK_LOAD_REG
 643:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * with whatever remains of the new tick period. */
 644:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portN
 645:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 646:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 /* Don't allow a tiny value, or values that have somehow
 647:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * underflowed because the post sleep hook did something
 648:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * that took too long or because the SysTick current-value register
 649:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * is zero. */
 650:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 if( ( ulCalculatedLoadValue <= ulStoppedTimerCompensation ) || ( ulCalculatedLoadVa
 651:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 {
 652:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                     ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 653:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 }
 654:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 655:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 656:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 657:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 /* As the pending tick will be processed as soon as this
 658:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * function exits, the tick value maintained by the tick is stepped
 659:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * forward by one less than the time spent waiting. */
 660:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 ulCompleteTickPeriods = xExpectedIdleTime - 1UL;
 661:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             }
 662:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             else
 663:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             {
 664:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 /* Something other than the tick interrupt ended the sleep. */
 665:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 666:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 /* Use the SysTick current-value register to determine the
 667:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * number of SysTick decrements remaining until the expected idle
 668:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * time would have ended. */
 669:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 670:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 #if ( portNVIC_SYSTICK_CLK_BIT_CONFIG != portNVIC_SYSTICK_CLK_BIT )
 671:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 {
 672:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                     /* If the SysTick is not using the core clock, the current-
 673:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                      * value register might still be zero here.  In that case, the
 674:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                      * SysTick didn't load from the reload register, and there are
 675:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                      * ulReloadValue decrements remaining in the expected idle
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 19


 676:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                      * time, not zero. */
 677:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                     if( ulSysTickDecrementsLeft == 0 )
 678:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                     {
 679:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                         ulSysTickDecrementsLeft = ulReloadValue;
 680:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                     }
 681:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 }
 682:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 #endif /* portNVIC_SYSTICK_CLK_BIT_CONFIG */
 683:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 684:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 /* Work out how long the sleep lasted rounded to complete tick
 685:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * periods (not the ulReload value which accounted for part
 686:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * ticks). */
 687:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - ul
 688:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 689:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 /* How many complete tick periods passed while the processor
 690:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * was waiting? */
 691:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 692:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 693:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 /* The reload value is set to whatever fraction of a single tick
 694:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * period remains. */
 695:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOne
 696:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             }
 697:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 698:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Restart SysTick so it runs from portNVIC_SYSTICK_LOAD_REG again,
 699:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * then set portNVIC_SYSTICK_LOAD_REG back to its standard value.  If
 700:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * the SysTick is not using the core clock, temporarily configure it to
 701:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * use the core clock.  This configuration forces the SysTick to load
 702:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * from portNVIC_SYSTICK_LOAD_REG immediately instead of at the next
 703:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * cycle of the other clock.  Then portNVIC_SYSTICK_LOAD_REG is ready
 704:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * to receive the standard value immediately. */
 705:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 706:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portN
 707:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             #if ( portNVIC_SYSTICK_CLK_BIT_CONFIG == portNVIC_SYSTICK_CLK_BIT )
 708:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             {
 709:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 710:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             }
 711:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             #else
 712:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             {
 713:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 /* The temporary usage of the core clock has served its purpose,
 714:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                  * as described above.  Resume usage of the other clock. */
 715:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT;
 716:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 717:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 718:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 {
 719:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                     /* The partial tick period already ended.  Be sure the SysTick
 720:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                      * counts it only once. */
 721:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                     portNVIC_SYSTICK_CURRENT_VALUE_REG = 0;
 722:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 }
 723:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 724:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 725:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****                 portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_
 726:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             }
 727:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             #endif /* portNVIC_SYSTICK_CLK_BIT_CONFIG */
 728:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 729:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Step the tick to account for any tick periods that elapsed. */
 730:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             vTaskStepTick( ulCompleteTickPeriods );
 731:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 732:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Exit with interrupts enabled. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 20


 733:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             __asm volatile ( "cpsie i" ::: "memory" );
 734:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 735:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 736:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 737:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #endif /* #if configUSE_TICKLESS_IDLE */
 738:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 739:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 740:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*
 741:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * Setup the systick timer to generate the tick interrupts at the required
 742:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  * frequency.
 743:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****  */
 744:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** __attribute__( ( weak ) ) void vPortSetupTimerInterrupt( void )
 745:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 746:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Calculate the constants required to configure the tick interrupt. */
 747:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     #if ( configUSE_TICKLESS_IDLE == 1 )
 748:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 749:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 750:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 751:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTIC
 752:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 753:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     #endif /* configUSE_TICKLESS_IDLE */
 754:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 755:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Stop and clear the SysTick. */
 756:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CTRL_REG = 0UL;
 757:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 758:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 759:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Configure SysTick to interrupt at the requested rate. */
 760:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 761:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | port
 762:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 763:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 764:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 765:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /* This is a naked function. */
 766:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** static void vPortEnableVFP( void )
 767:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** {
 155              		.loc 1 767 1 is_stmt 1 view -0
 156              		.cfi_startproc
 157              		@ Naked Function: prologue and epilogue provided by programmer.
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 768:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     __asm volatile
 160              		.loc 1 768 5 view .LVU23
 161              		.syntax unified
 162              	@ 768 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c" 1
 163 0000 DFF80C00 			ldr.w r0, =0xE000ED88		
 164 0004 0168     		ldr r1, [r0]				
 165              									
 166 0006 41F47001 		orr r1, r1, #( 0xf << 20 )	
 167 000a 0160     		str r1, [r0]				
 168 000c 7047     		bx r14						
 169 000e 000088ED 		.ltorg						
 169      00E0
 170              	
 171              	@ 0 "" 2
 769:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     (
 770:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldr.w r0, =0xE000ED88		\n"/* The FPU enable bits are in the CPACR. */
 771:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldr r1, [r0]				\n"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 21


 772:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "								\n"
 773:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	orr r1, r1, #( 0xf << 20 )	\n"/* Enable CP10 and CP11 coprocessors, then save back. */
 774:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	str r1, [r0]				\n"
 775:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	bx r14						\n"
 776:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	.ltorg						\n"
 777:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     );
 778:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 172              		.loc 1 778 1 is_stmt 0 view .LVU24
 173              		.thumb
 174              		.syntax unified
 175              		.cfi_endproc
 176              	.LFE16:
 178              		.section	.text.pxPortInitialiseStack,"ax",%progbits
 179              		.align	1
 180              		.global	pxPortInitialiseStack
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 185              	pxPortInitialiseStack:
 186              	.LVL0:
 187              	.LFB5:
 195:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Simulate the stack frame as it would be created by a context switch
 188              		.loc 1 195 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 201:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 193              		.loc 1 201 5 view .LVU26
 203:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
 194              		.loc 1 203 5 view .LVU27
 203:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
 195              		.loc 1 203 19 is_stmt 0 view .LVU28
 196 0000 4FF08073 		mov	r3, #16777216
 197 0004 40F8043C 		str	r3, [r0, #-4]
 204:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK; /* PC */
 198              		.loc 1 204 5 is_stmt 1 view .LVU29
 199              	.LVL1:
 205:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
 200              		.loc 1 205 5 view .LVU30
 205:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
 201              		.loc 1 205 48 is_stmt 0 view .LVU31
 202 0008 21F00101 		bic	r1, r1, #1
 203              	.LVL2:
 205:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     pxTopOfStack--;
 204              		.loc 1 205 19 view .LVU32
 205 000c 40F8081C 		str	r1, [r0, #-8]
 206:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;             /* LR */
 206              		.loc 1 206 5 is_stmt 1 view .LVU33
 207              	.LVL3:
 207:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 208              		.loc 1 207 5 view .LVU34
 207:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 209              		.loc 1 207 21 is_stmt 0 view .LVU35
 210 0010 054B     		ldr	r3, .L11
 207:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 211              		.loc 1 207 19 view .LVU36
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 22


 212 0012 40F80C3C 		str	r3, [r0, #-12]
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = ( StackType_t ) pvParameters; /* R0 */
 213              		.loc 1 210 5 is_stmt 1 view .LVU37
 214              	.LVL4:
 211:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 215              		.loc 1 211 5 view .LVU38
 211:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 216              		.loc 1 211 19 is_stmt 0 view .LVU39
 217 0016 40F8202C 		str	r2, [r0, #-32]
 215:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     *pxTopOfStack = portINITIAL_EXC_RETURN;
 218              		.loc 1 215 5 is_stmt 1 view .LVU40
 219              	.LVL5:
 216:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 220              		.loc 1 216 5 view .LVU41
 216:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 221              		.loc 1 216 19 is_stmt 0 view .LVU42
 222 001a 6FF00203 		mvn	r3, #2
 223 001e 40F8243C 		str	r3, [r0, #-36]
 218:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 224              		.loc 1 218 5 is_stmt 1 view .LVU43
 225              	.LVL6:
 220:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 226              		.loc 1 220 5 view .LVU44
 221:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 227              		.loc 1 221 1 is_stmt 0 view .LVU45
 228 0022 4438     		subs	r0, r0, #68
 229              	.LVL7:
 221:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 230              		.loc 1 221 1 view .LVU46
 231 0024 7047     		bx	lr
 232              	.L12:
 233 0026 00BF     		.align	2
 234              	.L11:
 235 0028 00000000 		.word	prvTaskExitError
 236              		.cfi_endproc
 237              	.LFE5:
 239              		.section	.text.SVC_Handler,"ax",%progbits
 240              		.align	1
 241              		.global	SVC_Handler
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 246              	SVC_Handler:
 247              	.LFB7:
 251:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     __asm volatile (
 248              		.loc 1 251 1 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ Naked Function: prologue and epilogue provided by programmer.
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 252:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         "	ldr	r3, pxCurrentTCBConst2		\n"/* Restore the context. */
 253              		.loc 1 252 5 view .LVU48
 254              		.syntax unified
 255              	@ 252 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c" 1
 256 0000 074B     			ldr	r3, pxCurrentTCBConst2		
 257 0002 1968     		ldr r1, [r3]					
 258 0004 0868     		ldr r0, [r1]					
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 23


 259 0006 B0E8F04F 		ldmia r0!, {r4-r11, r14}		
 260 000a 80F30988 		msr psp, r0						
 261 000e BFF36F8F 		isb								
 262 0012 4FF00000 		mov r0, #0 						
 263 0016 80F31188 		msr	basepri, r0					
 264 001a 7047     		bx r14							
 265              										
 266 001c AFF30080 		.align 4						
 267 0020 00000000 	pxCurrentTCBConst2: .word pxCurrentTCB				
 268              	
 269              	@ 0 "" 2
 266:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 270              		.loc 1 266 1 is_stmt 0 view .LVU49
 271              		.thumb
 272              		.syntax unified
 273              		.cfi_endproc
 274              	.LFE7:
 276              		.section	.text.vPortEndScheduler,"ax",%progbits
 277              		.align	1
 278              		.global	vPortEndScheduler
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 283              	vPortEndScheduler:
 284              	.LFB10:
 406:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Not implemented in ports where there is nothing to return to.
 285              		.loc 1 406 1 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 409:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 290              		.loc 1 409 5 view .LVU51
 291 0000 074B     		ldr	r3, .L17
 292 0002 1B68     		ldr	r3, [r3]
 293 0004 B3F57A7F 		cmp	r3, #1000
 294 0008 08D0     		beq	.L14
 409:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 295              		.loc 1 409 5 discriminator 1 view .LVU52
 296              	.LBB35:
 297              	.LBI35:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 298              		.loc 2 194 34 view .LVU53
 299              	.LBB36:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 300              		.loc 2 196 9 view .LVU54
 301              		.loc 2 198 9 view .LVU55
 302              		.syntax unified
 303              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 304 000a 4FF05003 			mov r3, #80												
 305 000e 83F31188 		msr basepri, r3											
 306 0012 BFF36F8F 		isb														
 307 0016 BFF34F8F 		dsb														
 308              	
 309              	@ 0 "" 2
 310              		.thumb
 311              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 24


 312              	.L16:
 313              	.LBE36:
 314              	.LBE35:
 409:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 315              		.loc 1 409 5 discriminator 3 view .LVU56
 409:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 316              		.loc 1 409 5 discriminator 3 view .LVU57
 317 001a FEE7     		b	.L16
 318              	.L14:
 410:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 319              		.loc 1 410 1 is_stmt 0 view .LVU58
 320 001c 7047     		bx	lr
 321              	.L18:
 322 001e 00BF     		.align	2
 323              	.L17:
 324 0020 00000000 		.word	uxCriticalNesting
 325              		.cfi_endproc
 326              	.LFE10:
 328              		.section	.text.vPortEnterCritical,"ax",%progbits
 329              		.align	1
 330              		.global	vPortEnterCritical
 331              		.syntax unified
 332              		.thumb
 333              		.thumb_func
 335              	vPortEnterCritical:
 336              	.LFB11:
 414:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portDISABLE_INTERRUPTS();
 337              		.loc 1 414 1 is_stmt 1 view -0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              		@ link register save eliminated.
 415:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting++;
 342              		.loc 1 415 5 view .LVU60
 343              	.LBB37:
 344              	.LBI37:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 345              		.loc 2 194 34 view .LVU61
 346              	.LBB38:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 347              		.loc 2 196 9 view .LVU62
 348              		.loc 2 198 9 view .LVU63
 349              		.syntax unified
 350              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 351 0000 4FF05003 			mov r3, #80												
 352 0004 83F31188 		msr basepri, r3											
 353 0008 BFF36F8F 		isb														
 354 000c BFF34F8F 		dsb														
 355              	
 356              	@ 0 "" 2
 357              		.thumb
 358              		.syntax unified
 359              	.LBE38:
 360              	.LBE37:
 416:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 361              		.loc 1 416 5 view .LVU64
 416:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 25


 362              		.loc 1 416 22 is_stmt 0 view .LVU65
 363 0010 0B4A     		ldr	r2, .L23
 364 0012 1368     		ldr	r3, [r2]
 365 0014 0133     		adds	r3, r3, #1
 366 0016 1360     		str	r3, [r2]
 423:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 367              		.loc 1 423 5 is_stmt 1 view .LVU66
 423:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 368              		.loc 1 423 7 is_stmt 0 view .LVU67
 369 0018 012B     		cmp	r3, #1
 370 001a 00D0     		beq	.L22
 371              	.L19:
 427:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 372              		.loc 1 427 1 view .LVU68
 373 001c 7047     		bx	lr
 374              	.L22:
 425:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 375              		.loc 1 425 9 is_stmt 1 view .LVU69
 376 001e 4FF0E023 		mov	r3, #-536813568
 377 0022 D3F8043D 		ldr	r3, [r3, #3332]
 378 0026 13F0FF0F 		tst	r3, #255
 379 002a F7D0     		beq	.L19
 425:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 380              		.loc 1 425 9 discriminator 1 view .LVU70
 381              	.LBB39:
 382              	.LBI39:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 383              		.loc 2 194 34 view .LVU71
 384              	.LBB40:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 385              		.loc 2 196 9 view .LVU72
 386              		.loc 2 198 9 view .LVU73
 387              		.syntax unified
 388              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 389 002c 4FF05003 			mov r3, #80												
 390 0030 83F31188 		msr basepri, r3											
 391 0034 BFF36F8F 		isb														
 392 0038 BFF34F8F 		dsb														
 393              	
 394              	@ 0 "" 2
 395              		.thumb
 396              		.syntax unified
 397              	.L21:
 398              	.LBE40:
 399              	.LBE39:
 425:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 400              		.loc 1 425 9 discriminator 3 view .LVU74
 425:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 401              		.loc 1 425 9 discriminator 3 view .LVU75
 402 003c FEE7     		b	.L21
 403              	.L24:
 404 003e 00BF     		.align	2
 405              	.L23:
 406 0040 00000000 		.word	uxCriticalNesting
 407              		.cfi_endproc
 408              	.LFE11:
 410              		.section	.text.vPortExitCritical,"ax",%progbits
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 26


 411              		.align	1
 412              		.global	vPortExitCritical
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 417              	vPortExitCritical:
 418              	.LFB12:
 431:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( uxCriticalNesting );
 419              		.loc 1 431 1 view -0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 432:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting--;
 424              		.loc 1 432 5 view .LVU77
 425 0000 094B     		ldr	r3, .L29
 426 0002 1B68     		ldr	r3, [r3]
 427 0004 43B9     		cbnz	r3, .L26
 432:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting--;
 428              		.loc 1 432 5 discriminator 1 view .LVU78
 429              	.LBB41:
 430              	.LBI41:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 431              		.loc 2 194 34 view .LVU79
 432              	.LBB42:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 433              		.loc 2 196 9 view .LVU80
 434              		.loc 2 198 9 view .LVU81
 435              		.syntax unified
 436              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 437 0006 4FF05003 			mov r3, #80												
 438 000a 83F31188 		msr basepri, r3											
 439 000e BFF36F8F 		isb														
 440 0012 BFF34F8F 		dsb														
 441              	
 442              	@ 0 "" 2
 443              		.thumb
 444              		.syntax unified
 445              	.L27:
 446              	.LBE42:
 447              	.LBE41:
 432:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting--;
 448              		.loc 1 432 5 discriminator 3 view .LVU82
 432:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting--;
 449              		.loc 1 432 5 discriminator 3 view .LVU83
 450 0016 FEE7     		b	.L27
 451              	.L26:
 432:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     uxCriticalNesting--;
 452              		.loc 1 432 38 discriminator 2 view .LVU84
 433:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 453              		.loc 1 433 5 view .LVU85
 433:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 454              		.loc 1 433 22 is_stmt 0 view .LVU86
 455 0018 013B     		subs	r3, r3, #1
 456 001a 034A     		ldr	r2, .L29
 457 001c 1360     		str	r3, [r2]
 435:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 27


 458              		.loc 1 435 5 is_stmt 1 view .LVU87
 435:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 459              		.loc 1 435 7 is_stmt 0 view .LVU88
 460 001e 0BB9     		cbnz	r3, .L25
 437:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 461              		.loc 1 437 9 is_stmt 1 view .LVU89
 462              	.LVL8:
 463              	.LBB43:
 464              	.LBI43:
 199:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 200:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %0, %1												\n"\
 201:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %0											\n"\
 202:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 203:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 204:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 205:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 206:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 207:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 208:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 209:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 211:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 213:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 215:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 216:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mrs %0, basepri											\n"\
 217:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %1, %2												\n"\
 218:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %1											\n"\
 219:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 220:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 221:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 222:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 223:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 224:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 225:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * warnings. */
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return ulOriginalBASEPRI;
 227:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 228:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 229:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 465              		.loc 2 230 34 view .LVU90
 466              	.LBB44:
 231:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 232:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 467              		.loc 2 232 9 view .LVU91
 468              		.syntax unified
 469              	@ 232 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 470 0020 83F31188 			msr basepri, r3	
 471              	@ 0 "" 2
 472              	.LVL9:
 473              		.thumb
 474              		.syntax unified
 475              	.L25:
 476              		.loc 2 232 9 is_stmt 0 view .LVU92
 477              	.LBE44:
 478              	.LBE43:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 28


 439:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 479              		.loc 1 439 1 view .LVU93
 480 0024 7047     		bx	lr
 481              	.L30:
 482 0026 00BF     		.align	2
 483              	.L29:
 484 0028 00000000 		.word	uxCriticalNesting
 485              		.cfi_endproc
 486              	.LFE12:
 488              		.section	.text.PendSV_Handler,"ax",%progbits
 489              		.align	1
 490              		.global	PendSV_Handler
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 495              	PendSV_Handler:
 496              	.LFB13:
 443:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* This is a naked function. */
 497              		.loc 1 443 1 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ Naked Function: prologue and epilogue provided by programmer.
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 446:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     (
 502              		.loc 1 446 5 view .LVU95
 503              		.syntax unified
 504              	@ 446 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c" 1
 505 0000 EFF30980 			mrs r0, psp							
 506 0004 BFF36F8F 		isb									
 507              											
 508 0008 154B     		ldr	r3, pxCurrentTCBConst			
 509 000a 1A68     		ldr	r2, [r3]						
 510              											
 511 000c 1EF0100F 		tst r14, #0x10						
 512 0010 08BF     		it eq								
 513 0012 20ED108A 		vstmdbeq r0!, {s16-s31}				
 514              											
 515 0016 20E9F04F 		stmdb r0!, {r4-r11, r14}			
 516 001a 1060     		str r0, [r2]						
 517              											
 518 001c 2DE90900 		stmdb sp!, {r0, r3}					
 519 0020 4FF05000 		mov r0, #80 							
 520 0024 80F31188 		msr basepri, r0						
 521 0028 BFF34F8F 		dsb									
 522 002c BFF36F8F 		isb									
 523 0030 FFF7FEFF 		bl vTaskSwitchContext				
 524 0034 4FF00000 		mov r0, #0							
 525 0038 80F31188 		msr basepri, r0						
 526 003c 09BC     		ldmia sp!, {r0, r3}					
 527              											
 528 003e 1968     		ldr r1, [r3]						
 529 0040 0868     		ldr r0, [r1]						
 530              											
 531 0042 B0E8F04F 		ldmia r0!, {r4-r11, r14}			
 532              											
 533 0046 1EF0100F 		tst r14, #0x10						
 534 004a 08BF     		it eq								
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 29


 535 004c B0EC108A 		vldmiaeq r0!, {s16-s31}				
 536              											
 537 0050 80F30988 		msr psp, r0							
 538 0054 BFF36F8F 		isb									
 539              											
 540              											
 541 0058 7047     		bx r14								
 542              											
 543 005a 00BFAFF3 		.align 4							
 543      0080
 544 0060 00000000 	pxCurrentTCBConst: .word pxCurrentTCB	
 545              	
 546              	@ 0 "" 2
 496:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 547              		.loc 1 496 1 is_stmt 0 view .LVU96
 548              		.thumb
 549              		.syntax unified
 550              		.cfi_endproc
 551              	.LFE13:
 553              		.section	.text.SysTick_Handler,"ax",%progbits
 554              		.align	1
 555              		.global	SysTick_Handler
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 560              	SysTick_Handler:
 561              	.LFB14:
 500:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* The SysTick runs at the lowest interrupt priority, so when this interrupt
 562              		.loc 1 500 1 is_stmt 1 view -0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566 0000 08B5     		push	{r3, lr}
 567              	.LCFI2:
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 3, -8
 570              		.cfi_offset 14, -4
 505:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 571              		.loc 1 505 5 view .LVU98
 572              	.LBB45:
 573              	.LBI45:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 574              		.loc 2 194 34 view .LVU99
 575              	.LBB46:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 576              		.loc 2 196 9 view .LVU100
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 577              		.loc 2 198 9 view .LVU101
 578              		.syntax unified
 579              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 580 0002 4FF05003 			mov r3, #80												
 581 0006 83F31188 		msr basepri, r3											
 582 000a BFF36F8F 		isb														
 583 000e BFF34F8F 		dsb														
 584              	
 585              	@ 0 "" 2
 586              		.thumb
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 30


 587              		.syntax unified
 588              	.LBE46:
 589              	.LBE45:
 508:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 590              		.loc 1 508 9 view .LVU102
 508:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 591              		.loc 1 508 13 is_stmt 0 view .LVU103
 592 0012 FFF7FEFF 		bl	xTaskIncrementTick
 593              	.LVL10:
 508:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 594              		.loc 1 508 11 discriminator 1 view .LVU104
 595 0016 28B1     		cbz	r0, .L33
 512:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 596              		.loc 1 512 13 is_stmt 1 view .LVU105
 512:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 597              		.loc 1 512 35 is_stmt 0 view .LVU106
 598 0018 4FF0E023 		mov	r3, #-536813568
 599 001c 4FF08052 		mov	r2, #268435456
 600 0020 C3F8042D 		str	r2, [r3, #3332]
 601              	.L33:
 515:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 602              		.loc 1 515 5 is_stmt 1 view .LVU107
 603              	.LVL11:
 604              	.LBB47:
 605              	.LBI47:
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 606              		.loc 2 230 34 view .LVU108
 607              	.LBB48:
 608              		.loc 2 232 9 view .LVU109
 609 0024 0023     		movs	r3, #0
 610              		.syntax unified
 611              	@ 232 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 612 0026 83F31188 			msr basepri, r3	
 613              	@ 0 "" 2
 614              	.LVL12:
 615              		.loc 2 232 9 is_stmt 0 view .LVU110
 616              		.thumb
 617              		.syntax unified
 618              	.LBE48:
 619              	.LBE47:
 516:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 620              		.loc 1 516 1 view .LVU111
 621 002a 08BD     		pop	{r3, pc}
 622              		.cfi_endproc
 623              	.LFE14:
 625              		.section	.text.vPortSetupTimerInterrupt,"ax",%progbits
 626              		.align	1
 627              		.weak	vPortSetupTimerInterrupt
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 632              	vPortSetupTimerInterrupt:
 633              	.LFB15:
 745:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* Calculate the constants required to configure the tick interrupt. */
 634              		.loc 1 745 1 is_stmt 1 view -0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 31


 637              		@ frame_needed = 0, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 756:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 639              		.loc 1 756 5 view .LVU113
 756:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 640              		.loc 1 756 31 is_stmt 0 view .LVU114
 641 0000 4FF0E022 		mov	r2, #-536813568
 642 0004 0023     		movs	r3, #0
 643 0006 1361     		str	r3, [r2, #16]
 757:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 644              		.loc 1 757 5 is_stmt 1 view .LVU115
 757:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 645              		.loc 1 757 40 is_stmt 0 view .LVU116
 646 0008 9361     		str	r3, [r2, #24]
 760:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | port
 647              		.loc 1 760 5 is_stmt 1 view .LVU117
 760:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | port
 648              		.loc 1 760 58 is_stmt 0 view .LVU118
 649 000a 054B     		ldr	r3, .L36
 650 000c 1B68     		ldr	r3, [r3]
 651 000e 0549     		ldr	r1, .L36+4
 652 0010 A1FB0313 		umull	r1, r3, r1, r3
 653 0014 9B09     		lsrs	r3, r3, #6
 760:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | port
 654              		.loc 1 760 81 view .LVU119
 655 0016 013B     		subs	r3, r3, #1
 760:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | port
 656              		.loc 1 760 31 view .LVU120
 657 0018 5361     		str	r3, [r2, #20]
 761:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 658              		.loc 1 761 5 is_stmt 1 view .LVU121
 761:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 659              		.loc 1 761 31 is_stmt 0 view .LVU122
 660 001a 0723     		movs	r3, #7
 661 001c 1361     		str	r3, [r2, #16]
 762:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 662              		.loc 1 762 1 view .LVU123
 663 001e 7047     		bx	lr
 664              	.L37:
 665              		.align	2
 666              	.L36:
 667 0020 00000000 		.word	SystemCoreClock
 668 0024 D34D6210 		.word	274877907
 669              		.cfi_endproc
 670              	.LFE15:
 672              		.section	.text.xPortStartScheduler,"ax",%progbits
 673              		.align	1
 674              		.global	xPortStartScheduler
 675              		.syntax unified
 676              		.thumb
 677              		.thumb_func
 679              	xPortStartScheduler:
 680              	.LFB9:
 297:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 681              		.loc 1 297 1 is_stmt 1 view -0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 32


 684              		@ frame_needed = 0, uses_anonymous_args = 0
 300:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 685              		.loc 1 300 5 view .LVU125
 300:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 686              		.loc 1 300 57 discriminator 2 view .LVU126
 305:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 687              		.loc 1 305 5 view .LVU127
 688 0000 4FF0E023 		mov	r3, #-536813568
 689 0004 D3F8002D 		ldr	r2, [r3, #3328]
 690 0008 3D4B     		ldr	r3, .L51
 691 000a 9A42     		cmp	r2, r3
 692 000c 1CD0     		beq	.L49
 305:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 693              		.loc 1 305 55 discriminator 2 view .LVU128
 306:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 694              		.loc 1 306 5 view .LVU129
 695 000e 4FF0E023 		mov	r3, #-536813568
 696 0012 D3F8002D 		ldr	r2, [r3, #3328]
 697 0016 3B4B     		ldr	r3, .L51+4
 698 0018 9A42     		cmp	r2, r3
 699 001a 1ED0     		beq	.L50
 297:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     /* configMAX_SYSCALL_INTERRUPT_PRIORITY must not be set to 0.
 700              		.loc 1 297 1 is_stmt 0 view .LVU130
 701 001c 30B5     		push	{r4, r5, lr}
 702              	.LCFI3:
 703              		.cfi_def_cfa_offset 12
 704              		.cfi_offset 4, -12
 705              		.cfi_offset 5, -8
 706              		.cfi_offset 14, -4
 707 001e 83B0     		sub	sp, sp, #12
 708              	.LCFI4:
 709              		.cfi_def_cfa_offset 24
 306:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 710              		.loc 1 306 55 is_stmt 1 discriminator 2 view .LVU131
 711              	.LBB49:
 310:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         volatile uint8_t * const pucFirstUserPriorityRegister = ( volatile uint8_t * const ) ( port
 712              		.loc 1 310 9 view .LVU132
 311:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         volatile uint8_t ucMaxPriorityValue;
 713              		.loc 1 311 9 view .LVU133
 714              	.LVL13:
 312:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 715              		.loc 1 312 9 view .LVU134
 320:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 716              		.loc 1 320 9 view .LVU135
 320:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 717              		.loc 1 320 30 is_stmt 0 view .LVU136
 718 0020 394B     		ldr	r3, .L51+8
 719 0022 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 720 0024 D2B2     		uxtb	r2, r2
 320:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 721              		.loc 1 320 28 view .LVU137
 722 0026 0192     		str	r2, [sp, #4]
 324:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 723              		.loc 1 324 9 is_stmt 1 view .LVU138
 324:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 724              		.loc 1 324 39 is_stmt 0 view .LVU139
 725 0028 FF22     		movs	r2, #255
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 33


 726 002a 1A70     		strb	r2, [r3]
 327:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 727              		.loc 1 327 9 is_stmt 1 view .LVU140
 327:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 728              		.loc 1 327 30 is_stmt 0 view .LVU141
 729 002c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 730 002e DBB2     		uxtb	r3, r3
 327:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 731              		.loc 1 327 28 view .LVU142
 732 0030 8DF80330 		strb	r3, [sp, #3]
 330:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 733              		.loc 1 330 9 is_stmt 1 view .LVU143
 330:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 734              		.loc 1 330 69 is_stmt 0 view .LVU144
 735 0034 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 736 0038 03F05003 		and	r3, r3, #80
 330:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 737              		.loc 1 330 30 view .LVU145
 738 003c 334A     		ldr	r2, .L51+12
 739 003e 1370     		strb	r3, [r2]
 334:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 740              		.loc 1 334 9 is_stmt 1 view .LVU146
 334:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 741              		.loc 1 334 28 is_stmt 0 view .LVU147
 742 0040 334B     		ldr	r3, .L51+16
 743 0042 0722     		movs	r2, #7
 744 0044 1A60     		str	r2, [r3]
 336:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 745              		.loc 1 336 9 is_stmt 1 view .LVU148
 336:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 746              		.loc 1 336 14 is_stmt 0 view .LVU149
 747 0046 1BE0     		b	.L43
 748              	.LVL14:
 749              	.L49:
 750              	.LCFI5:
 751              		.cfi_def_cfa_offset 0
 752              		.cfi_restore 4
 753              		.cfi_restore 5
 754              		.cfi_restore 14
 336:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 755              		.loc 1 336 14 view .LVU150
 756              	.LBE49:
 305:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 757              		.loc 1 305 5 is_stmt 1 discriminator 1 view .LVU151
 758              	.LBB52:
 759              	.LBI52:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 760              		.loc 2 194 34 view .LVU152
 761              	.LBB53:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 762              		.loc 2 196 9 view .LVU153
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 763              		.loc 2 198 9 view .LVU154
 764              		.syntax unified
 765              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 766 0048 4FF05003 			mov r3, #80												
 767 004c 83F31188 		msr basepri, r3											
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 34


 768 0050 BFF36F8F 		isb														
 769 0054 BFF34F8F 		dsb														
 770              	
 771              	@ 0 "" 2
 772              		.thumb
 773              		.syntax unified
 774              	.L40:
 775              	.LBE53:
 776              	.LBE52:
 305:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 777              		.loc 1 305 5 discriminator 3 view .LVU155
 305:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 778              		.loc 1 305 5 discriminator 3 view .LVU156
 779 0058 FEE7     		b	.L40
 780              	.L50:
 306:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 781              		.loc 1 306 5 discriminator 1 view .LVU157
 782              	.LBB54:
 783              	.LBI54:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 784              		.loc 2 194 34 view .LVU158
 785              	.LBB55:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 786              		.loc 2 196 9 view .LVU159
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 787              		.loc 2 198 9 view .LVU160
 788              		.syntax unified
 789              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 790 005a 4FF05003 			mov r3, #80												
 791 005e 83F31188 		msr basepri, r3											
 792 0062 BFF36F8F 		isb														
 793 0066 BFF34F8F 		dsb														
 794              	
 795              	@ 0 "" 2
 796              		.thumb
 797              		.syntax unified
 798              	.L42:
 799              	.LBE55:
 800              	.LBE54:
 306:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 801              		.loc 1 306 5 discriminator 3 view .LVU161
 306:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 802              		.loc 1 306 5 discriminator 3 view .LVU162
 803 006a FEE7     		b	.L42
 804              	.LVL15:
 805              	.L44:
 806              	.LCFI6:
 807              		.cfi_def_cfa_offset 24
 808              		.cfi_offset 4, -12
 809              		.cfi_offset 5, -8
 810              		.cfi_offset 14, -4
 811              	.LBB56:
 338:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 812              		.loc 1 338 13 view .LVU163
 338:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 813              		.loc 1 338 31 is_stmt 0 view .LVU164
 814 006c 284A     		ldr	r2, .L51+16
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 35


 815 006e 1368     		ldr	r3, [r2]
 816 0070 013B     		subs	r3, r3, #1
 817 0072 1360     		str	r3, [r2]
 339:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 818              		.loc 1 339 13 is_stmt 1 view .LVU165
 339:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 819              		.loc 1 339 32 is_stmt 0 view .LVU166
 820 0074 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 821 0078 5B00     		lsls	r3, r3, #1
 822 007a DBB2     		uxtb	r3, r3
 823 007c 8DF80330 		strb	r3, [sp, #3]
 824              	.L43:
 336:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 825              		.loc 1 336 61 is_stmt 1 view .LVU167
 336:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 826              		.loc 1 336 37 is_stmt 0 view .LVU168
 827 0080 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 336:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 828              		.loc 1 336 61 view .LVU169
 829 0084 13F0800F 		tst	r3, #128
 830 0088 F0D1     		bne	.L44
 356:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 831              		.loc 1 356 13 is_stmt 1 view .LVU170
 832 008a 214B     		ldr	r3, .L51+16
 833 008c 1B68     		ldr	r3, [r3]
 834 008e 032B     		cmp	r3, #3
 835 0090 08D0     		beq	.L45
 356:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 836              		.loc 1 356 13 discriminator 1 view .LVU171
 837              	.LBB50:
 838              	.LBI50:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 839              		.loc 2 194 34 view .LVU172
 840              	.LBB51:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 841              		.loc 2 196 9 view .LVU173
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 842              		.loc 2 198 9 view .LVU174
 843              		.syntax unified
 844              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 845 0092 4FF05003 			mov r3, #80												
 846 0096 83F31188 		msr basepri, r3											
 847 009a BFF36F8F 		isb														
 848 009e BFF34F8F 		dsb														
 849              	
 850              	@ 0 "" 2
 851              		.thumb
 852              		.syntax unified
 853              	.L46:
 854              	.LBE51:
 855              	.LBE50:
 356:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 856              		.loc 1 356 13 discriminator 3 view .LVU175
 356:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 857              		.loc 1 356 13 discriminator 3 view .LVU176
 858 00a2 FEE7     		b	.L46
 859              	.L45:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 36


 356:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 860              		.loc 1 356 94 discriminator 2 view .LVU177
 362:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 861              		.loc 1 362 9 view .LVU178
 362:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 862              		.loc 1 362 28 is_stmt 0 view .LVU179
 863 00a4 1B02     		lsls	r3, r3, #8
 864 00a6 1A4A     		ldr	r2, .L51+16
 865 00a8 1360     		str	r3, [r2]
 363:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 866              		.loc 1 363 9 is_stmt 1 view .LVU180
 363:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 867              		.loc 1 363 28 is_stmt 0 view .LVU181
 868 00aa 03F4E063 		and	r3, r3, #1792
 869 00ae 1360     		str	r3, [r2]
 367:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 870              		.loc 1 367 9 is_stmt 1 view .LVU182
 367:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 871              		.loc 1 367 39 is_stmt 0 view .LVU183
 872 00b0 019B     		ldr	r3, [sp, #4]
 873 00b2 DBB2     		uxtb	r3, r3
 874 00b4 144A     		ldr	r2, .L51+8
 875 00b6 1370     		strb	r3, [r2]
 876              	.LBE56:
 372:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 877              		.loc 1 372 5 is_stmt 1 view .LVU184
 878 00b8 4FF0E024 		mov	r4, #-536813568
 879 00bc D4F8203D 		ldr	r3, [r4, #3360]
 372:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 880              		.loc 1 372 24 is_stmt 0 view .LVU185
 881 00c0 43F47003 		orr	r3, r3, #15728640
 882 00c4 C4F8203D 		str	r3, [r4, #3360]
 373:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 883              		.loc 1 373 5 is_stmt 1 view .LVU186
 884 00c8 D4F8203D 		ldr	r3, [r4, #3360]
 373:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 885              		.loc 1 373 24 is_stmt 0 view .LVU187
 886 00cc 43F07043 		orr	r3, r3, #-268435456
 887 00d0 C4F8203D 		str	r3, [r4, #3360]
 377:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 888              		.loc 1 377 5 is_stmt 1 view .LVU188
 889 00d4 FFF7FEFF 		bl	vPortSetupTimerInterrupt
 890              	.LVL16:
 380:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 891              		.loc 1 380 5 view .LVU189
 380:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 892              		.loc 1 380 23 is_stmt 0 view .LVU190
 893 00d8 0025     		movs	r5, #0
 894 00da 0E4B     		ldr	r3, .L51+20
 895 00dc 1D60     		str	r5, [r3]
 383:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 896              		.loc 1 383 5 is_stmt 1 view .LVU191
 897 00de FFF7FEFF 		bl	vPortEnableVFP
 898              	.LVL17:
 386:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 899              		.loc 1 386 5 view .LVU192
 900 00e2 D4F8343F 		ldr	r3, [r4, #3892]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 37


 386:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 901              		.loc 1 386 20 is_stmt 0 view .LVU193
 902 00e6 43F04043 		orr	r3, r3, #-1073741824
 903 00ea C4F8343F 		str	r3, [r4, #3892]
 389:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 904              		.loc 1 389 5 is_stmt 1 view .LVU194
 905 00ee FFF7FEFF 		bl	prvPortStartFirstTask
 906              	.LVL18:
 397:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     prvTaskExitError();
 907              		.loc 1 397 5 view .LVU195
 908 00f2 FFF7FEFF 		bl	vTaskSwitchContext
 909              	.LVL19:
 398:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 910              		.loc 1 398 5 view .LVU196
 911 00f6 FFF7FEFF 		bl	prvTaskExitError
 912              	.LVL20:
 401:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** }
 913              		.loc 1 401 5 view .LVU197
 402:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 914              		.loc 1 402 1 is_stmt 0 view .LVU198
 915 00fa 2846     		mov	r0, r5
 916 00fc 03B0     		add	sp, sp, #12
 917              	.LCFI7:
 918              		.cfi_def_cfa_offset 12
 919              		@ sp needed
 920 00fe 30BD     		pop	{r4, r5, pc}
 921              	.L52:
 922              		.align	2
 923              	.L51:
 924 0100 71C20F41 		.word	1091551857
 925 0104 70C20F41 		.word	1091551856
 926 0108 00E400E0 		.word	-536812544
 927 010c 00000000 		.word	ucMaxSysCallPriority
 928 0110 00000000 		.word	ulMaxPRIGROUPValue
 929 0114 00000000 		.word	uxCriticalNesting
 930              		.cfi_endproc
 931              	.LFE9:
 933              		.section	.text.vPortValidateInterruptPriority,"ax",%progbits
 934              		.align	1
 935              		.global	vPortValidateInterruptPriority
 936              		.syntax unified
 937              		.thumb
 938              		.thumb_func
 940              	vPortValidateInterruptPriority:
 941              	.LFB17:
 779:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** /*-----------------------------------------------------------*/
 780:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 781:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** #if ( configASSERT_DEFINED == 1 )
 782:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 783:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     void vPortValidateInterruptPriority( void )
 784:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     {
 942              		.loc 1 784 5 is_stmt 1 view -0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 0
 945              		@ frame_needed = 0, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 785:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         uint32_t ulCurrentInterrupt;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 38


 947              		.loc 1 785 9 view .LVU200
 786:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         uint8_t ucCurrentPriority;
 948              		.loc 1 786 9 view .LVU201
 787:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 788:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Obtain the number of the currently executing interrupt. */
 789:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 949              		.loc 1 789 9 view .LVU202
 950              		.syntax unified
 951              	@ 789 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c" 1
 952 0000 EFF30583 		mrs r3, ipsr
 953              	@ 0 "" 2
 954              	.LVL21:
 790:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 791:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Is the interrupt number a user defined interrupt? */
 792:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 955              		.loc 1 792 9 view .LVU203
 956              		.loc 1 792 11 is_stmt 0 view .LVU204
 957              		.thumb
 958              		.syntax unified
 959 0004 0F2B     		cmp	r3, #15
 960 0006 0FD9     		bls	.L54
 793:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         {
 794:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* Look up the interrupt's priority. */
 795:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 961              		.loc 1 795 13 is_stmt 1 view .LVU205
 962              		.loc 1 795 61 is_stmt 0 view .LVU206
 963 0008 114A     		ldr	r2, .L58
 964              		.loc 1 795 31 view .LVU207
 965 000a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 966              	.LVL22:
 967              		.loc 1 795 31 view .LVU208
 968 000c DBB2     		uxtb	r3, r3
 969              	.LVL23:
 796:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 797:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             /* The following assertion will fail if a service routine (ISR) for
 798:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * an interrupt that has been assigned a priority above
 799:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * configMAX_SYSCALL_INTERRUPT_PRIORITY calls an ISR safe FreeRTOS API
 800:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * function.  ISR safe FreeRTOS API functions must *only* be called
 801:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * from interrupts that have been assigned a priority at or below
 802:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * configMAX_SYSCALL_INTERRUPT_PRIORITY.
 803:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              *
 804:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * Numerically low interrupt priority numbers represent logically high
 805:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * interrupt priorities, therefore the priority of the interrupt must
 806:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * be set to a value equal to or numerically *higher* than
 807:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * configMAX_SYSCALL_INTERRUPT_PRIORITY.
 808:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              *
 809:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * Interrupts that	use the FreeRTOS API must not be left at their
 810:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * default priority of	zero as that is the highest possible priority,
 811:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * which is guaranteed to be above configMAX_SYSCALL_INTERRUPT_PRIORITY,
 812:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * and	therefore also guaranteed to be invalid.
 813:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              *
 814:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * FreeRTOS maintains separate thread and ISR API functions to ensure
 815:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * interrupt entry is as fast and simple as possible.
 816:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              *
 817:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * The following links provide detailed information:
 818:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html
 819:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****              * https://www.FreeRTOS.org/FAQHelp.html */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 39


 820:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****             configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 970              		.loc 1 820 13 is_stmt 1 view .LVU209
 971 000e 114A     		ldr	r2, .L58+4
 972 0010 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 973 0012 9A42     		cmp	r2, r3
 974 0014 08D9     		bls	.L54
 975              		.loc 1 820 13 discriminator 1 view .LVU210
 976              	.LBB57:
 977              	.LBI57:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 978              		.loc 2 194 34 view .LVU211
 979              	.LBB58:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 980              		.loc 2 196 9 view .LVU212
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 981              		.loc 2 198 9 view .LVU213
 982              		.syntax unified
 983              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 984 0016 4FF05003 			mov r3, #80												
 985 001a 83F31188 		msr basepri, r3											
 986 001e BFF36F8F 		isb														
 987 0022 BFF34F8F 		dsb														
 988              	
 989              	@ 0 "" 2
 990              	.LVL24:
 991              		.thumb
 992              		.syntax unified
 993              	.L55:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 994              		.loc 2 198 9 is_stmt 0 view .LVU214
 995              	.LBE58:
 996              	.LBE57:
 997              		.loc 1 820 13 is_stmt 1 discriminator 3 view .LVU215
 998              		.loc 1 820 13 discriminator 3 view .LVU216
 999 0026 FEE7     		b	.L55
 1000              	.LVL25:
 1001              	.L54:
 1002              		.loc 1 820 70 discriminator 2 view .LVU217
 821:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         }
 822:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c **** 
 823:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         /* Priority grouping:  The interrupt controller (NVIC) allows the bits
 824:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * that define each interrupt's priority to be split between bits that
 825:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * define the interrupt's pre-emption priority bits and bits that define
 826:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * the interrupt's sub-priority.  For simplicity all bits must be defined
 827:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * to be pre-emption priority bits.  The following assertion will fail if
 828:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * this is not the case (if some bits represent a sub-priority).
 829:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          *
 830:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * If the application only uses CMSIS libraries for interrupt
 831:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * configuration then the correct setting can be achieved on all Cortex-M
 832:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
 833:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * scheduler.  Note however that some vendor specific peripheral libraries
 834:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * assume a non-zero priority group setting, in which cases using a value
 835:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****          * of zero will result in unpredictable behaviour. */
 836:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****         configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 1003              		.loc 1 836 9 view .LVU218
 1004 0028 4FF0E023 		mov	r3, #-536813568
 1005 002c D3F80C3D 		ldr	r3, [r3, #3340]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 40


 1006 0030 03F4E063 		and	r3, r3, #1792
 1007 0034 084A     		ldr	r2, .L58+8
 1008 0036 1268     		ldr	r2, [r2]
 1009 0038 9342     		cmp	r3, r2
 1010 003a 08D9     		bls	.L53
 1011              		.loc 1 836 9 discriminator 1 view .LVU219
 1012              	.LBB59:
 1013              	.LBI59:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1014              		.loc 2 194 34 view .LVU220
 1015              	.LBB60:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1016              		.loc 2 196 9 view .LVU221
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1017              		.loc 2 198 9 view .LVU222
 1018              		.syntax unified
 1019              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1020 003c 4FF05003 			mov r3, #80												
 1021 0040 83F31188 		msr basepri, r3											
 1022 0044 BFF36F8F 		isb														
 1023 0048 BFF34F8F 		dsb														
 1024              	
 1025              	@ 0 "" 2
 1026              		.thumb
 1027              		.syntax unified
 1028              	.L57:
 1029              	.LBE60:
 1030              	.LBE59:
 1031              		.loc 1 836 9 discriminator 3 view .LVU223
 1032              		.loc 1 836 9 discriminator 3 view .LVU224
 1033 004c FEE7     		b	.L57
 1034              	.L53:
 837:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/port.c ****     }
 1035              		.loc 1 837 5 is_stmt 0 view .LVU225
 1036 004e 7047     		bx	lr
 1037              	.L59:
 1038              		.align	2
 1039              	.L58:
 1040 0050 F0E300E0 		.word	-536812560
 1041 0054 00000000 		.word	ucMaxSysCallPriority
 1042 0058 00000000 		.word	ulMaxPRIGROUPValue
 1043              		.cfi_endproc
 1044              	.LFE17:
 1046              		.section	.bss.ulMaxPRIGROUPValue,"aw",%nobits
 1047              		.align	2
 1050              	ulMaxPRIGROUPValue:
 1051 0000 00000000 		.space	4
 1052              		.section	.bss.ucMaxSysCallPriority,"aw",%nobits
 1055              	ucMaxSysCallPriority:
 1056 0000 00       		.space	1
 1057              		.section	.data.uxCriticalNesting,"aw"
 1058              		.align	2
 1061              	uxCriticalNesting:
 1062 0000 AAAAAAAA 		.word	-1431655766
 1063              		.text
 1064              	.Letext0:
 1065              		.file 3 "C:/ARM GNU Toolchain/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 41


 1066              		.file 4 "C:/ARM GNU Toolchain/arm-none-eabi/include/sys/_stdint.h"
 1067              		.file 5 "ThirdParty/FreeRTOS/include/projdefs.h"
 1068              		.file 6 "ThirdParty/FreeRTOS/FreeRTOSConfig.h"
 1069              		.file 7 "ThirdParty/FreeRTOS/include/task.h"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 port.c
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:21     .text.prvTaskExitError:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:26     .text.prvTaskExitError:00000000 prvTaskExitError
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:106    .text.prvTaskExitError:0000003c $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:1061   .data.uxCriticalNesting:00000000 uxCriticalNesting
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:111    .text.prvPortStartFirstTask:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:116    .text.prvPortStartFirstTask:00000000 prvPortStartFirstTask
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:138    .text.prvPortStartFirstTask:00000022 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:138    .text.prvPortStartFirstTask:00000024 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:148    .text.vPortEnableVFP:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:153    .text.vPortEnableVFP:00000000 vPortEnableVFP
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:169    .text.vPortEnableVFP:0000000e $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:169    .text.vPortEnableVFP:00000010 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:179    .text.pxPortInitialiseStack:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:185    .text.pxPortInitialiseStack:00000000 pxPortInitialiseStack
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:235    .text.pxPortInitialiseStack:00000028 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:240    .text.SVC_Handler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:246    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:267    .text.SVC_Handler:00000020 pxCurrentTCBConst2
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:267    .text.SVC_Handler:00000020 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:277    .text.vPortEndScheduler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:283    .text.vPortEndScheduler:00000000 vPortEndScheduler
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:324    .text.vPortEndScheduler:00000020 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:329    .text.vPortEnterCritical:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:335    .text.vPortEnterCritical:00000000 vPortEnterCritical
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:406    .text.vPortEnterCritical:00000040 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:411    .text.vPortExitCritical:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:417    .text.vPortExitCritical:00000000 vPortExitCritical
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:484    .text.vPortExitCritical:00000028 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:489    .text.PendSV_Handler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:495    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:544    .text.PendSV_Handler:00000060 pxCurrentTCBConst
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:544    .text.PendSV_Handler:00000060 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:554    .text.SysTick_Handler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:560    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:626    .text.vPortSetupTimerInterrupt:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:632    .text.vPortSetupTimerInterrupt:00000000 vPortSetupTimerInterrupt
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:667    .text.vPortSetupTimerInterrupt:00000020 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:673    .text.xPortStartScheduler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:679    .text.xPortStartScheduler:00000000 xPortStartScheduler
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:924    .text.xPortStartScheduler:00000100 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:1055   .bss.ucMaxSysCallPriority:00000000 ucMaxSysCallPriority
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:1050   .bss.ulMaxPRIGROUPValue:00000000 ulMaxPRIGROUPValue
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:934    .text.vPortValidateInterruptPriority:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:940    .text.vPortValidateInterruptPriority:00000000 vPortValidateInterruptPriority
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:1040   .text.vPortValidateInterruptPriority:00000050 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:1047   .bss.ulMaxPRIGROUPValue:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:1056   .bss.ucMaxSysCallPriority:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\cc9qy2LJ.s:1058   .data.uxCriticalNesting:00000000 $d

UNDEFINED SYMBOLS
pxCurrentTCB
vTaskSwitchContext
xTaskIncrementTick
SystemCoreClock
