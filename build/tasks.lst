ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tasks.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "ThirdParty/FreeRTOS/tasks.c"
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	prvTaskIsTaskSuspended:
  27              	.LVL0:
  28              	.LFB16:
   1:ThirdParty/FreeRTOS/tasks.c **** /*
   2:ThirdParty/FreeRTOS/tasks.c ****  * FreeRTOS Kernel V10.5.1
   3:ThirdParty/FreeRTOS/tasks.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/tasks.c ****  *
   5:ThirdParty/FreeRTOS/tasks.c ****  * SPDX-License-Identifier: MIT
   6:ThirdParty/FreeRTOS/tasks.c ****  *
   7:ThirdParty/FreeRTOS/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:ThirdParty/FreeRTOS/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:ThirdParty/FreeRTOS/tasks.c ****  * the Software without restriction, including without limitation the rights to
  10:ThirdParty/FreeRTOS/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:ThirdParty/FreeRTOS/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:ThirdParty/FreeRTOS/tasks.c ****  * subject to the following conditions:
  13:ThirdParty/FreeRTOS/tasks.c ****  *
  14:ThirdParty/FreeRTOS/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  15:ThirdParty/FreeRTOS/tasks.c ****  * copies or substantial portions of the Software.
  16:ThirdParty/FreeRTOS/tasks.c ****  *
  17:ThirdParty/FreeRTOS/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:ThirdParty/FreeRTOS/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:ThirdParty/FreeRTOS/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:ThirdParty/FreeRTOS/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:ThirdParty/FreeRTOS/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:ThirdParty/FreeRTOS/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:ThirdParty/FreeRTOS/tasks.c ****  *
  24:ThirdParty/FreeRTOS/tasks.c ****  * https://www.FreeRTOS.org
  25:ThirdParty/FreeRTOS/tasks.c ****  * https://github.com/FreeRTOS
  26:ThirdParty/FreeRTOS/tasks.c ****  *
  27:ThirdParty/FreeRTOS/tasks.c ****  */
  28:ThirdParty/FreeRTOS/tasks.c **** 
  29:ThirdParty/FreeRTOS/tasks.c **** /* Standard includes. */
  30:ThirdParty/FreeRTOS/tasks.c **** #include <stdlib.h>
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 2


  31:ThirdParty/FreeRTOS/tasks.c **** #include <string.h>
  32:ThirdParty/FreeRTOS/tasks.c **** 
  33:ThirdParty/FreeRTOS/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  34:ThirdParty/FreeRTOS/tasks.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  35:ThirdParty/FreeRTOS/tasks.c ****  * task.h is included from an application file. */
  36:ThirdParty/FreeRTOS/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  37:ThirdParty/FreeRTOS/tasks.c **** 
  38:ThirdParty/FreeRTOS/tasks.c **** /* FreeRTOS includes. */
  39:ThirdParty/FreeRTOS/tasks.c **** #include "FreeRTOS.h"
  40:ThirdParty/FreeRTOS/tasks.c **** #include "task.h"
  41:ThirdParty/FreeRTOS/tasks.c **** #include "timers.h"
  42:ThirdParty/FreeRTOS/tasks.c **** #include "stack_macros.h"
  43:ThirdParty/FreeRTOS/tasks.c **** 
  44:ThirdParty/FreeRTOS/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:ThirdParty/FreeRTOS/tasks.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:ThirdParty/FreeRTOS/tasks.c ****  * for the header files above, but not in this file, in order to generate the
  47:ThirdParty/FreeRTOS/tasks.c ****  * correct privileged Vs unprivileged linkage and placement. */
  48:ThirdParty/FreeRTOS/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:ThirdParty/FreeRTOS/tasks.c **** 
  50:ThirdParty/FreeRTOS/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  51:ThirdParty/FreeRTOS/tasks.c ****  * functions but without including stdio.h here. */
  52:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  53:ThirdParty/FreeRTOS/tasks.c **** 
  54:ThirdParty/FreeRTOS/tasks.c **** /* At the bottom of this file are two optional functions that can be used
  55:ThirdParty/FreeRTOS/tasks.c ****  * to generate human readable text from the raw data generated by the
  56:ThirdParty/FreeRTOS/tasks.c ****  * uxTaskGetSystemState() function.  Note the formatting functions are provided
  57:ThirdParty/FreeRTOS/tasks.c ****  * for convenience only, and are NOT considered part of the kernel. */
  58:ThirdParty/FreeRTOS/tasks.c ****     #include <stdio.h>
  59:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  60:ThirdParty/FreeRTOS/tasks.c **** 
  61:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_PREEMPTION == 0 )
  62:ThirdParty/FreeRTOS/tasks.c **** 
  63:ThirdParty/FreeRTOS/tasks.c **** /* If the cooperative scheduler is being used then a yield should not be
  64:ThirdParty/FreeRTOS/tasks.c ****  * performed just because a higher priority task has been woken. */
  65:ThirdParty/FreeRTOS/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()
  66:ThirdParty/FreeRTOS/tasks.c **** #else
  67:ThirdParty/FreeRTOS/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()    portYIELD_WITHIN_API()
  68:ThirdParty/FreeRTOS/tasks.c **** #endif
  69:ThirdParty/FreeRTOS/tasks.c **** 
  70:ThirdParty/FreeRTOS/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  71:ThirdParty/FreeRTOS/tasks.c **** #define taskNOT_WAITING_NOTIFICATION              ( ( uint8_t ) 0 ) /* Must be zero as it is the in
  72:ThirdParty/FreeRTOS/tasks.c **** #define taskWAITING_NOTIFICATION                  ( ( uint8_t ) 1 )
  73:ThirdParty/FreeRTOS/tasks.c **** #define taskNOTIFICATION_RECEIVED                 ( ( uint8_t ) 2 )
  74:ThirdParty/FreeRTOS/tasks.c **** 
  75:ThirdParty/FreeRTOS/tasks.c **** /*
  76:ThirdParty/FreeRTOS/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  77:ThirdParty/FreeRTOS/tasks.c ****  * is used purely for checking the high water mark for tasks.
  78:ThirdParty/FreeRTOS/tasks.c ****  */
  79:ThirdParty/FreeRTOS/tasks.c **** #define tskSTACK_FILL_BYTE                        ( 0xa5U )
  80:ThirdParty/FreeRTOS/tasks.c **** 
  81:ThirdParty/FreeRTOS/tasks.c **** /* Bits used to record how a task's stack and TCB were allocated. */
  82:ThirdParty/FreeRTOS/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB    ( ( uint8_t ) 0 )
  83:ThirdParty/FreeRTOS/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY        ( ( uint8_t ) 1 )
  84:ThirdParty/FreeRTOS/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB     ( ( uint8_t ) 2 )
  85:ThirdParty/FreeRTOS/tasks.c **** 
  86:ThirdParty/FreeRTOS/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  87:ThirdParty/FreeRTOS/tasks.c ****  * value so the high water mark can be determined.  If none of the following are
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 3


  88:ThirdParty/FreeRTOS/tasks.c ****  * set then don't fill the stack so there is no unnecessary dependency on memset. */
  89:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
  90:ThirdParty/FreeRTOS/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    1
  91:ThirdParty/FreeRTOS/tasks.c **** #else
  92:ThirdParty/FreeRTOS/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    0
  93:ThirdParty/FreeRTOS/tasks.c **** #endif
  94:ThirdParty/FreeRTOS/tasks.c **** 
  95:ThirdParty/FreeRTOS/tasks.c **** /*
  96:ThirdParty/FreeRTOS/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  97:ThirdParty/FreeRTOS/tasks.c ****  */
  98:ThirdParty/FreeRTOS/tasks.c **** #define tskRUNNING_CHAR      ( 'X' )
  99:ThirdParty/FreeRTOS/tasks.c **** #define tskBLOCKED_CHAR      ( 'B' )
 100:ThirdParty/FreeRTOS/tasks.c **** #define tskREADY_CHAR        ( 'R' )
 101:ThirdParty/FreeRTOS/tasks.c **** #define tskDELETED_CHAR      ( 'D' )
 102:ThirdParty/FreeRTOS/tasks.c **** #define tskSUSPENDED_CHAR    ( 'S' )
 103:ThirdParty/FreeRTOS/tasks.c **** 
 104:ThirdParty/FreeRTOS/tasks.c **** /*
 105:ThirdParty/FreeRTOS/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to to
 106:ThirdParty/FreeRTOS/tasks.c ****  * be global, rather than file scope.
 107:ThirdParty/FreeRTOS/tasks.c ****  */
 108:ThirdParty/FreeRTOS/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 109:ThirdParty/FreeRTOS/tasks.c ****     #define static
 110:ThirdParty/FreeRTOS/tasks.c **** #endif
 111:ThirdParty/FreeRTOS/tasks.c **** 
 112:ThirdParty/FreeRTOS/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 113:ThirdParty/FreeRTOS/tasks.c ****  * configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 114:ThirdParty/FreeRTOS/tasks.c **** #ifndef configIDLE_TASK_NAME
 115:ThirdParty/FreeRTOS/tasks.c ****     #define configIDLE_TASK_NAME    "IDLE"
 116:ThirdParty/FreeRTOS/tasks.c **** #endif
 117:ThirdParty/FreeRTOS/tasks.c **** 
 118:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 119:ThirdParty/FreeRTOS/tasks.c **** 
 120:ThirdParty/FreeRTOS/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 121:ThirdParty/FreeRTOS/tasks.c ****  * performed in a generic way that is not optimised to any particular
 122:ThirdParty/FreeRTOS/tasks.c ****  * microcontroller architecture. */
 123:ThirdParty/FreeRTOS/tasks.c **** 
 124:ThirdParty/FreeRTOS/tasks.c **** /* uxTopReadyPriority holds the priority of the highest priority ready
 125:ThirdParty/FreeRTOS/tasks.c ****  * state task. */
 126:ThirdParty/FreeRTOS/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority ) \
 127:ThirdParty/FreeRTOS/tasks.c ****     {                                               \
 128:ThirdParty/FreeRTOS/tasks.c ****         if( ( uxPriority ) > uxTopReadyPriority )   \
 129:ThirdParty/FreeRTOS/tasks.c ****         {                                           \
 130:ThirdParty/FreeRTOS/tasks.c ****             uxTopReadyPriority = ( uxPriority );    \
 131:ThirdParty/FreeRTOS/tasks.c ****         }                                           \
 132:ThirdParty/FreeRTOS/tasks.c ****     } /* taskRECORD_READY_PRIORITY */
 133:ThirdParty/FreeRTOS/tasks.c **** 
 134:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 135:ThirdParty/FreeRTOS/tasks.c **** 
 136:ThirdParty/FreeRTOS/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                \
 137:ThirdParty/FreeRTOS/tasks.c ****     {                                                                         \
 138:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTopPriority = uxTopReadyPriority;                       \
 139:ThirdParty/FreeRTOS/tasks.c ****                                                                               \
 140:ThirdParty/FreeRTOS/tasks.c ****         /* Find the highest priority queue that contains ready tasks. */      \
 141:ThirdParty/FreeRTOS/tasks.c ****         while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) ) \
 142:ThirdParty/FreeRTOS/tasks.c ****         {                                                                     \
 143:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( uxTopPriority );                                    \
 144:ThirdParty/FreeRTOS/tasks.c ****             --uxTopPriority;                                                  \
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 4


 145:ThirdParty/FreeRTOS/tasks.c ****         }                                                                     \
 146:ThirdParty/FreeRTOS/tasks.c ****                                                                               \
 147:ThirdParty/FreeRTOS/tasks.c ****         /* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of \
 148:ThirdParty/FreeRTOS/tasks.c ****          * the  same priority get an equal share of the processor time. */                    \
 149:ThirdParty/FreeRTOS/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) ); \
 150:ThirdParty/FreeRTOS/tasks.c ****         uxTopReadyPriority = uxTopPriority;                                                   \
 151:ThirdParty/FreeRTOS/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK */
 152:ThirdParty/FreeRTOS/tasks.c **** 
 153:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 154:ThirdParty/FreeRTOS/tasks.c **** 
 155:ThirdParty/FreeRTOS/tasks.c **** /* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 156:ThirdParty/FreeRTOS/tasks.c ****  * they are only required when a port optimised method of task selection is
 157:ThirdParty/FreeRTOS/tasks.c ****  * being used. */
 158:ThirdParty/FreeRTOS/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )
 159:ThirdParty/FreeRTOS/tasks.c ****     #define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 160:ThirdParty/FreeRTOS/tasks.c **** 
 161:ThirdParty/FreeRTOS/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 162:ThirdParty/FreeRTOS/tasks.c **** 
 163:ThirdParty/FreeRTOS/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 164:ThirdParty/FreeRTOS/tasks.c ****  * performed in a way that is tailored to the particular microcontroller
 165:ThirdParty/FreeRTOS/tasks.c ****  * architecture being used. */
 166:ThirdParty/FreeRTOS/tasks.c **** 
 167:ThirdParty/FreeRTOS/tasks.c **** /* A port optimised version is provided.  Call the port defined macros. */
 168:ThirdParty/FreeRTOS/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority )    portRECORD_READY_PRIORITY( ( uxPriority ), u
 169:ThirdParty/FreeRTOS/tasks.c **** 
 170:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 171:ThirdParty/FreeRTOS/tasks.c **** 
 172:ThirdParty/FreeRTOS/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                                  \
 173:ThirdParty/FreeRTOS/tasks.c ****     {                                                                                           \
 174:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTopPriority;                                                              \
 175:ThirdParty/FreeRTOS/tasks.c ****                                                                                                 \
 176:ThirdParty/FreeRTOS/tasks.c ****         /* Find the highest priority list that contains ready tasks. */                         \
 177:ThirdParty/FreeRTOS/tasks.c ****         portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );                          \
 178:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 ); \
 179:ThirdParty/FreeRTOS/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );   \
 180:ThirdParty/FreeRTOS/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 181:ThirdParty/FreeRTOS/tasks.c **** 
 182:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 183:ThirdParty/FreeRTOS/tasks.c **** 
 184:ThirdParty/FreeRTOS/tasks.c **** /* A port optimised version is provided, call it only if the TCB being reset
 185:ThirdParty/FreeRTOS/tasks.c ****  * is being referenced from a ready list.  If it is referenced from a delayed
 186:ThirdParty/FreeRTOS/tasks.c ****  * or suspended list then it won't be in a ready list. */
 187:ThirdParty/FreeRTOS/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )                                                 
 188:ThirdParty/FreeRTOS/tasks.c ****     {                                                                                              
 189:ThirdParty/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 
 190:ThirdParty/FreeRTOS/tasks.c ****         {                                                                                          
 191:ThirdParty/FreeRTOS/tasks.c ****             portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );                    
 192:ThirdParty/FreeRTOS/tasks.c ****         }                                                                                          
 193:ThirdParty/FreeRTOS/tasks.c ****     }
 194:ThirdParty/FreeRTOS/tasks.c **** 
 195:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 196:ThirdParty/FreeRTOS/tasks.c **** 
 197:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 198:ThirdParty/FreeRTOS/tasks.c **** 
 199:ThirdParty/FreeRTOS/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 200:ThirdParty/FreeRTOS/tasks.c ****  * count overflows. */
 201:ThirdParty/FreeRTOS/tasks.c **** #define taskSWITCH_DELAYED_LISTS()                                                \
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 5


 202:ThirdParty/FreeRTOS/tasks.c ****     {                                                                             \
 203:ThirdParty/FreeRTOS/tasks.c ****         List_t * pxTemp;                                                          \
 204:ThirdParty/FreeRTOS/tasks.c ****                                                                                   \
 205:ThirdParty/FreeRTOS/tasks.c ****         /* The delayed tasks list should be empty when the lists are switched. */ \
 206:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );               \
 207:ThirdParty/FreeRTOS/tasks.c ****                                                                                   \
 208:ThirdParty/FreeRTOS/tasks.c ****         pxTemp = pxDelayedTaskList;                                               \
 209:ThirdParty/FreeRTOS/tasks.c ****         pxDelayedTaskList = pxOverflowDelayedTaskList;                            \
 210:ThirdParty/FreeRTOS/tasks.c ****         pxOverflowDelayedTaskList = pxTemp;                                       \
 211:ThirdParty/FreeRTOS/tasks.c ****         xNumOfOverflows++;                                                        \
 212:ThirdParty/FreeRTOS/tasks.c ****         prvResetNextTaskUnblockTime();                                            \
 213:ThirdParty/FreeRTOS/tasks.c ****     }
 214:ThirdParty/FreeRTOS/tasks.c **** 
 215:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 216:ThirdParty/FreeRTOS/tasks.c **** 
 217:ThirdParty/FreeRTOS/tasks.c **** /*
 218:ThirdParty/FreeRTOS/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 219:ThirdParty/FreeRTOS/tasks.c ****  * the task.  It is inserted at the end of the list.
 220:ThirdParty/FreeRTOS/tasks.c ****  */
 221:ThirdParty/FreeRTOS/tasks.c **** #define prvAddTaskToReadyList( pxTCB )                                                             
 222:ThirdParty/FreeRTOS/tasks.c ****     traceMOVED_TASK_TO_READY_STATE( pxTCB );                                                       
 223:ThirdParty/FreeRTOS/tasks.c ****     taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );                                            
 224:ThirdParty/FreeRTOS/tasks.c ****     listINSERT_END( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem )
 225:ThirdParty/FreeRTOS/tasks.c ****     tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 226:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 227:ThirdParty/FreeRTOS/tasks.c **** 
 228:ThirdParty/FreeRTOS/tasks.c **** /*
 229:ThirdParty/FreeRTOS/tasks.c ****  * Several functions take a TaskHandle_t parameter that can optionally be NULL,
 230:ThirdParty/FreeRTOS/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 231:ThirdParty/FreeRTOS/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 232:ThirdParty/FreeRTOS/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 233:ThirdParty/FreeRTOS/tasks.c ****  */
 234:ThirdParty/FreeRTOS/tasks.c **** #define prvGetTCBFromHandle( pxHandle )    ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle )
 235:ThirdParty/FreeRTOS/tasks.c **** 
 236:ThirdParty/FreeRTOS/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 237:ThirdParty/FreeRTOS/tasks.c ****  * of the task to which it belongs (coded to allow it to be held in reverse
 238:ThirdParty/FreeRTOS/tasks.c ****  * priority order).  However, it is occasionally borrowed for other purposes.  It
 239:ThirdParty/FreeRTOS/tasks.c ****  * is important its value is not updated due to a task priority change while it is
 240:ThirdParty/FreeRTOS/tasks.c ****  * being used for another purpose.  The following bit definition is used to inform
 241:ThirdParty/FreeRTOS/tasks.c ****  * the scheduler that the value should not be changed - in which case it is the
 242:ThirdParty/FreeRTOS/tasks.c ****  * responsibility of whichever module is using the value to ensure it gets set back
 243:ThirdParty/FreeRTOS/tasks.c ****  * to its original value when it is released. */
 244:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_16_BIT_TICKS == 1 )
 245:ThirdParty/FreeRTOS/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x8000U
 246:ThirdParty/FreeRTOS/tasks.c **** #else
 247:ThirdParty/FreeRTOS/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x80000000UL
 248:ThirdParty/FreeRTOS/tasks.c **** #endif
 249:ThirdParty/FreeRTOS/tasks.c **** 
 250:ThirdParty/FreeRTOS/tasks.c **** /*
 251:ThirdParty/FreeRTOS/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 252:ThirdParty/FreeRTOS/tasks.c ****  * and stores task state information, including a pointer to the task's context
 253:ThirdParty/FreeRTOS/tasks.c ****  * (the task's run time environment, including register values)
 254:ThirdParty/FreeRTOS/tasks.c ****  */
 255:ThirdParty/FreeRTOS/tasks.c **** typedef struct tskTaskControlBlock       /* The old naming convention is used to prevent breaking k
 256:ThirdParty/FreeRTOS/tasks.c **** {
 257:ThirdParty/FreeRTOS/tasks.c ****     volatile StackType_t * pxTopOfStack; /*< Points to the location of the last item placed on the 
 258:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 6


 259:ThirdParty/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 260:ThirdParty/FreeRTOS/tasks.c ****         xMPU_SETTINGS xMPUSettings; /*< The MPU settings are defined as part of the port layer.  TH
 261:ThirdParty/FreeRTOS/tasks.c ****     #endif
 262:ThirdParty/FreeRTOS/tasks.c **** 
 263:ThirdParty/FreeRTOS/tasks.c ****     ListItem_t xStateListItem;                  /*< The list that the state list item of a task is 
 264:ThirdParty/FreeRTOS/tasks.c ****     ListItem_t xEventListItem;                  /*< Used to reference a task from an event list. */
 265:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;                     /*< The priority of the task.  0 is the lowest prio
 266:ThirdParty/FreeRTOS/tasks.c ****     StackType_t * pxStack;                      /*< Points to the start of the stack. */
 267:ThirdParty/FreeRTOS/tasks.c ****     char pcTaskName[ configMAX_TASK_NAME_LEN ]; /*< Descriptive name given to the task when created
 268:ThirdParty/FreeRTOS/tasks.c **** 
 269:ThirdParty/FreeRTOS/tasks.c ****     #if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 270:ThirdParty/FreeRTOS/tasks.c ****         StackType_t * pxEndOfStack; /*< Points to the highest valid address for the stack. */
 271:ThirdParty/FreeRTOS/tasks.c ****     #endif
 272:ThirdParty/FreeRTOS/tasks.c **** 
 273:ThirdParty/FreeRTOS/tasks.c ****     #if ( portCRITICAL_NESTING_IN_TCB == 1 )
 274:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxCriticalNesting; /*< Holds the critical section nesting depth for ports that 
 275:ThirdParty/FreeRTOS/tasks.c ****     #endif
 276:ThirdParty/FreeRTOS/tasks.c **** 
 277:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 278:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTCBNumber;  /*< Stores a number that increments each time a TCB is created.  
 279:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTaskNumber; /*< Stores a number specifically for use by third party trace cod
 280:ThirdParty/FreeRTOS/tasks.c ****     #endif
 281:ThirdParty/FreeRTOS/tasks.c **** 
 282:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 283:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxBasePriority; /*< The priority last assigned to the task - used by the priori
 284:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxMutexesHeld;
 285:ThirdParty/FreeRTOS/tasks.c ****     #endif
 286:ThirdParty/FreeRTOS/tasks.c **** 
 287:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 288:ThirdParty/FreeRTOS/tasks.c ****         TaskHookFunction_t pxTaskTag;
 289:ThirdParty/FreeRTOS/tasks.c ****     #endif
 290:ThirdParty/FreeRTOS/tasks.c **** 
 291:ThirdParty/FreeRTOS/tasks.c ****     #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 292:ThirdParty/FreeRTOS/tasks.c ****         void * pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 293:ThirdParty/FreeRTOS/tasks.c ****     #endif
 294:ThirdParty/FreeRTOS/tasks.c **** 
 295:ThirdParty/FreeRTOS/tasks.c ****     #if ( configGENERATE_RUN_TIME_STATS == 1 )
 296:ThirdParty/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulRunTimeCounter; /*< Stores the amount of time the task has sp
 297:ThirdParty/FreeRTOS/tasks.c ****     #endif
 298:ThirdParty/FreeRTOS/tasks.c **** 
 299:ThirdParty/FreeRTOS/tasks.c ****     #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
 300:ThirdParty/FreeRTOS/tasks.c ****         configTLS_BLOCK_TYPE xTLSBlock; /*< Memory block used as Thread Local Storage (TLS) Block f
 301:ThirdParty/FreeRTOS/tasks.c ****     #endif
 302:ThirdParty/FreeRTOS/tasks.c **** 
 303:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 304:ThirdParty/FreeRTOS/tasks.c ****         volatile uint32_t ulNotifiedValue[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 305:ThirdParty/FreeRTOS/tasks.c ****         volatile uint8_t ucNotifyState[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 306:ThirdParty/FreeRTOS/tasks.c ****     #endif
 307:ThirdParty/FreeRTOS/tasks.c **** 
 308:ThirdParty/FreeRTOS/tasks.c ****     /* See the comments in FreeRTOS.h with the definition of
 309:ThirdParty/FreeRTOS/tasks.c ****      * tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 310:ThirdParty/FreeRTOS/tasks.c ****     #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been conso
 311:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucStaticallyAllocated;                     /*< Set to pdTRUE if the task is a stati
 312:ThirdParty/FreeRTOS/tasks.c ****     #endif
 313:ThirdParty/FreeRTOS/tasks.c **** 
 314:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
 315:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucDelayAborted;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 7


 316:ThirdParty/FreeRTOS/tasks.c ****     #endif
 317:ThirdParty/FreeRTOS/tasks.c **** 
 318:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_POSIX_ERRNO == 1 )
 319:ThirdParty/FreeRTOS/tasks.c ****         int iTaskErrno;
 320:ThirdParty/FreeRTOS/tasks.c ****     #endif
 321:ThirdParty/FreeRTOS/tasks.c **** } tskTCB;
 322:ThirdParty/FreeRTOS/tasks.c **** 
 323:ThirdParty/FreeRTOS/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 324:ThirdParty/FreeRTOS/tasks.c ****  * below to enable the use of older kernel aware debuggers. */
 325:ThirdParty/FreeRTOS/tasks.c **** typedef tskTCB TCB_t;
 326:ThirdParty/FreeRTOS/tasks.c **** 
 327:ThirdParty/FreeRTOS/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 328:ThirdParty/FreeRTOS/tasks.c ****  * which static variables must be declared volatile. */
 329:ThirdParty/FreeRTOS/tasks.c **** portDONT_DISCARD PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 330:ThirdParty/FreeRTOS/tasks.c **** 
 331:ThirdParty/FreeRTOS/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 332:ThirdParty/FreeRTOS/tasks.c ****  * xDelayedTaskList1 and xDelayedTaskList2 could be moved to function scope but
 333:ThirdParty/FreeRTOS/tasks.c ****  * doing so breaks some kernel aware debuggers and debuggers that rely on removing
 334:ThirdParty/FreeRTOS/tasks.c ****  * the static qualifier. */
 335:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ]; /*< Prioritised ready task
 336:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;                         /*< Delayed tasks. */
 337:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;                         /*< Delayed tasks (two lis
 338:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /*< Points to the delayed 
 339:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /*< Points to the delayed 
 340:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;                         /*< Tasks that have been r
 341:ThirdParty/FreeRTOS/tasks.c **** 
 342:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 343:ThirdParty/FreeRTOS/tasks.c **** 
 344:ThirdParty/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static List_t xTasksWaitingTermination; /*< Tasks that have been deleted - but 
 345:ThirdParty/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 346:ThirdParty/FreeRTOS/tasks.c **** 
 347:ThirdParty/FreeRTOS/tasks.c **** #endif
 348:ThirdParty/FreeRTOS/tasks.c **** 
 349:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 350:ThirdParty/FreeRTOS/tasks.c **** 
 351:ThirdParty/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static List_t xSuspendedTaskList; /*< Tasks that are currently suspended. */
 352:ThirdParty/FreeRTOS/tasks.c **** 
 353:ThirdParty/FreeRTOS/tasks.c **** #endif
 354:ThirdParty/FreeRTOS/tasks.c **** 
 355:ThirdParty/FreeRTOS/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 356:ThirdParty/FreeRTOS/tasks.c ****  * the errno of the currently running task. */
 357:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 358:ThirdParty/FreeRTOS/tasks.c ****     int FreeRTOS_errno = 0;
 359:ThirdParty/FreeRTOS/tasks.c **** #endif
 360:ThirdParty/FreeRTOS/tasks.c **** 
 361:ThirdParty/FreeRTOS/tasks.c **** /* Other file private variables. --------------------------------*/
 362:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
 363:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 364:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
 365:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
 366:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
 367:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending = pdFALSE;
 368:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
 369:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
 370:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised
 371:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle = NULL;                          /*< Holds the 
 372:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 8


 373:ThirdParty/FreeRTOS/tasks.c **** /* Improve support for OpenOCD. The kernel tracks Ready tasks via priority lists.
 374:ThirdParty/FreeRTOS/tasks.c ****  * For tracking the state of remote threads, OpenOCD uses uxTopUsedPriority
 375:ThirdParty/FreeRTOS/tasks.c ****  * to determine the number of priority lists to read back from the remote target. */
 376:ThirdParty/FreeRTOS/tasks.c **** const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
 377:ThirdParty/FreeRTOS/tasks.c **** 
 378:ThirdParty/FreeRTOS/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 379:ThirdParty/FreeRTOS/tasks.c ****  * interrupts must not manipulate the xStateListItem of a TCB, or any of the
 380:ThirdParty/FreeRTOS/tasks.c ****  * lists the xStateListItem can be referenced from, if the scheduler is suspended.
 381:ThirdParty/FreeRTOS/tasks.c ****  * If an interrupt needs to unblock a task while the scheduler is suspended then it
 382:ThirdParty/FreeRTOS/tasks.c ****  * moves the task's event list item into the xPendingReadyList, ready for the
 383:ThirdParty/FreeRTOS/tasks.c ****  * kernel to move the task from the pending ready list into the real ready list
 384:ThirdParty/FreeRTOS/tasks.c ****  * when the scheduler is unsuspended.  The pending ready list itself can only be
 385:ThirdParty/FreeRTOS/tasks.c ****  * accessed from a critical section. */
 386:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) pdFALSE;
 387:ThirdParty/FreeRTOS/tasks.c **** 
 388:ThirdParty/FreeRTOS/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 389:ThirdParty/FreeRTOS/tasks.c **** 
 390:ThirdParty/FreeRTOS/tasks.c **** /* Do not move these variables to function scope as doing so prevents the
 391:ThirdParty/FreeRTOS/tasks.c ****  * code working with debuggers that need to remove the static qualifier. */
 392:ThirdParty/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static configRUN_TIME_COUNTER_TYPE ulTaskSwitchedInTime = 0UL;    /*< Holds the
 393:ThirdParty/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static volatile configRUN_TIME_COUNTER_TYPE ulTotalRunTime = 0UL; /*< Holds the
 394:ThirdParty/FreeRTOS/tasks.c **** 
 395:ThirdParty/FreeRTOS/tasks.c **** #endif
 396:ThirdParty/FreeRTOS/tasks.c **** 
 397:ThirdParty/FreeRTOS/tasks.c **** /*lint -restore */
 398:ThirdParty/FreeRTOS/tasks.c **** 
 399:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 400:ThirdParty/FreeRTOS/tasks.c **** 
 401:ThirdParty/FreeRTOS/tasks.c **** /* File private functions. --------------------------------*/
 402:ThirdParty/FreeRTOS/tasks.c **** 
 403:ThirdParty/FreeRTOS/tasks.c **** /**
 404:ThirdParty/FreeRTOS/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 405:ThirdParty/FreeRTOS/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 406:ThirdParty/FreeRTOS/tasks.c ****  * is in any other state.
 407:ThirdParty/FreeRTOS/tasks.c ****  */
 408:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 409:ThirdParty/FreeRTOS/tasks.c **** 
 410:ThirdParty/FreeRTOS/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 411:ThirdParty/FreeRTOS/tasks.c **** 
 412:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 413:ThirdParty/FreeRTOS/tasks.c **** 
 414:ThirdParty/FreeRTOS/tasks.c **** /*
 415:ThirdParty/FreeRTOS/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 416:ThirdParty/FreeRTOS/tasks.c ****  * automatically upon the creation of the first task.
 417:ThirdParty/FreeRTOS/tasks.c ****  */
 418:ThirdParty/FreeRTOS/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 419:ThirdParty/FreeRTOS/tasks.c **** 
 420:ThirdParty/FreeRTOS/tasks.c **** /*
 421:ThirdParty/FreeRTOS/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 422:ThirdParty/FreeRTOS/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 423:ThirdParty/FreeRTOS/tasks.c ****  * creation of the first user task.
 424:ThirdParty/FreeRTOS/tasks.c ****  *
 425:ThirdParty/FreeRTOS/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 426:ThirdParty/FreeRTOS/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 427:ThirdParty/FreeRTOS/tasks.c ****  *
 428:ThirdParty/FreeRTOS/tasks.c ****  * void prvIdleTask( void *pvParameters );
 429:ThirdParty/FreeRTOS/tasks.c ****  *
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 9


 430:ThirdParty/FreeRTOS/tasks.c ****  */
 431:ThirdParty/FreeRTOS/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters ) PRIVILEGED_FUNCTION;
 432:ThirdParty/FreeRTOS/tasks.c **** 
 433:ThirdParty/FreeRTOS/tasks.c **** /*
 434:ThirdParty/FreeRTOS/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 435:ThirdParty/FreeRTOS/tasks.c ****  * including the stack pointed to by the TCB.
 436:ThirdParty/FreeRTOS/tasks.c ****  *
 437:ThirdParty/FreeRTOS/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 438:ThirdParty/FreeRTOS/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 439:ThirdParty/FreeRTOS/tasks.c ****  */
 440:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 441:ThirdParty/FreeRTOS/tasks.c **** 
 442:ThirdParty/FreeRTOS/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB ) PRIVILEGED_FUNCTION;
 443:ThirdParty/FreeRTOS/tasks.c **** 
 444:ThirdParty/FreeRTOS/tasks.c **** #endif
 445:ThirdParty/FreeRTOS/tasks.c **** 
 446:ThirdParty/FreeRTOS/tasks.c **** /*
 447:ThirdParty/FreeRTOS/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 448:ThirdParty/FreeRTOS/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 449:ThirdParty/FreeRTOS/tasks.c ****  * and its TCB deleted.
 450:ThirdParty/FreeRTOS/tasks.c ****  */
 451:ThirdParty/FreeRTOS/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 452:ThirdParty/FreeRTOS/tasks.c **** 
 453:ThirdParty/FreeRTOS/tasks.c **** /*
 454:ThirdParty/FreeRTOS/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 455:ThirdParty/FreeRTOS/tasks.c ****  * either the current or the overflow delayed task list.
 456:ThirdParty/FreeRTOS/tasks.c ****  */
 457:ThirdParty/FreeRTOS/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
 458:ThirdParty/FreeRTOS/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely ) PRIVILEGED_FUN
 459:ThirdParty/FreeRTOS/tasks.c **** 
 460:ThirdParty/FreeRTOS/tasks.c **** /*
 461:ThirdParty/FreeRTOS/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 462:ThirdParty/FreeRTOS/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 463:ThirdParty/FreeRTOS/tasks.c ****  * a suspended list, etc.).
 464:ThirdParty/FreeRTOS/tasks.c ****  *
 465:ThirdParty/FreeRTOS/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 466:ThirdParty/FreeRTOS/tasks.c ****  * NORMAL APPLICATION CODE.
 467:ThirdParty/FreeRTOS/tasks.c ****  */
 468:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 469:ThirdParty/FreeRTOS/tasks.c **** 
 470:ThirdParty/FreeRTOS/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
 471:ThirdParty/FreeRTOS/tasks.c ****                                                      List_t * pxList,
 472:ThirdParty/FreeRTOS/tasks.c ****                                                      eTaskState eState ) PRIVILEGED_FUNCTION;
 473:ThirdParty/FreeRTOS/tasks.c **** 
 474:ThirdParty/FreeRTOS/tasks.c **** #endif
 475:ThirdParty/FreeRTOS/tasks.c **** 
 476:ThirdParty/FreeRTOS/tasks.c **** /*
 477:ThirdParty/FreeRTOS/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 478:ThirdParty/FreeRTOS/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 479:ThirdParty/FreeRTOS/tasks.c ****  */
 480:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 481:ThirdParty/FreeRTOS/tasks.c **** 
 482:ThirdParty/FreeRTOS/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
 483:ThirdParty/FreeRTOS/tasks.c ****                                                      const char pcNameToQuery[] ) PRIVILEGED_FUNCTI
 484:ThirdParty/FreeRTOS/tasks.c **** 
 485:ThirdParty/FreeRTOS/tasks.c **** #endif
 486:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 10


 487:ThirdParty/FreeRTOS/tasks.c **** /*
 488:ThirdParty/FreeRTOS/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 489:ThirdParty/FreeRTOS/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 490:ThirdParty/FreeRTOS/tasks.c ****  * determining how much of the stack remains at the original preset value.
 491:ThirdParty/FreeRTOS/tasks.c ****  */
 492:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 493:ThirdParty/FreeRTOS/tasks.c **** 
 494:ThirdParty/FreeRTOS/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVIL
 495:ThirdParty/FreeRTOS/tasks.c **** 
 496:ThirdParty/FreeRTOS/tasks.c **** #endif
 497:ThirdParty/FreeRTOS/tasks.c **** 
 498:ThirdParty/FreeRTOS/tasks.c **** /*
 499:ThirdParty/FreeRTOS/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 500:ThirdParty/FreeRTOS/tasks.c ****  * next move a task from the Blocked state to the Running state.
 501:ThirdParty/FreeRTOS/tasks.c ****  *
 502:ThirdParty/FreeRTOS/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 503:ThirdParty/FreeRTOS/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 504:ThirdParty/FreeRTOS/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 505:ThirdParty/FreeRTOS/tasks.c ****  * set to a value other than 1.
 506:ThirdParty/FreeRTOS/tasks.c ****  */
 507:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 508:ThirdParty/FreeRTOS/tasks.c **** 
 509:ThirdParty/FreeRTOS/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 510:ThirdParty/FreeRTOS/tasks.c **** 
 511:ThirdParty/FreeRTOS/tasks.c **** #endif
 512:ThirdParty/FreeRTOS/tasks.c **** 
 513:ThirdParty/FreeRTOS/tasks.c **** /*
 514:ThirdParty/FreeRTOS/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 515:ThirdParty/FreeRTOS/tasks.c ****  * will exit the Blocked state.
 516:ThirdParty/FreeRTOS/tasks.c ****  */
 517:ThirdParty/FreeRTOS/tasks.c **** static void prvResetNextTaskUnblockTime( void ) PRIVILEGED_FUNCTION;
 518:ThirdParty/FreeRTOS/tasks.c **** 
 519:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 )
 520:ThirdParty/FreeRTOS/tasks.c **** 
 521:ThirdParty/FreeRTOS/tasks.c **** /*
 522:ThirdParty/FreeRTOS/tasks.c ****  * Helper function used to pad task names with spaces when printing out
 523:ThirdParty/FreeRTOS/tasks.c ****  * human readable tables of task information.
 524:ThirdParty/FreeRTOS/tasks.c ****  */
 525:ThirdParty/FreeRTOS/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
 526:ThirdParty/FreeRTOS/tasks.c ****                                         const char * pcTaskName ) PRIVILEGED_FUNCTION;
 527:ThirdParty/FreeRTOS/tasks.c **** 
 528:ThirdParty/FreeRTOS/tasks.c **** #endif
 529:ThirdParty/FreeRTOS/tasks.c **** 
 530:ThirdParty/FreeRTOS/tasks.c **** /*
 531:ThirdParty/FreeRTOS/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 532:ThirdParty/FreeRTOS/tasks.c ****  * dynamically to fill in the structure's members.
 533:ThirdParty/FreeRTOS/tasks.c ****  */
 534:ThirdParty/FreeRTOS/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 535:ThirdParty/FreeRTOS/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 536:ThirdParty/FreeRTOS/tasks.c ****                                   const uint32_t ulStackDepth,
 537:ThirdParty/FreeRTOS/tasks.c ****                                   void * const pvParameters,
 538:ThirdParty/FreeRTOS/tasks.c ****                                   UBaseType_t uxPriority,
 539:ThirdParty/FreeRTOS/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 540:ThirdParty/FreeRTOS/tasks.c ****                                   TCB_t * pxNewTCB,
 541:ThirdParty/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 542:ThirdParty/FreeRTOS/tasks.c **** 
 543:ThirdParty/FreeRTOS/tasks.c **** /*
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 11


 544:ThirdParty/FreeRTOS/tasks.c ****  * Called after a new task has been created and initialised to place the task
 545:ThirdParty/FreeRTOS/tasks.c ****  * under the control of the scheduler.
 546:ThirdParty/FreeRTOS/tasks.c ****  */
 547:ThirdParty/FreeRTOS/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB ) PRIVILEGED_FUNCTION;
 548:ThirdParty/FreeRTOS/tasks.c **** 
 549:ThirdParty/FreeRTOS/tasks.c **** /*
 550:ThirdParty/FreeRTOS/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 551:ThirdParty/FreeRTOS/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 552:ThirdParty/FreeRTOS/tasks.c ****  * called by the function.
 553:ThirdParty/FreeRTOS/tasks.c ****  */
 554:ThirdParty/FreeRTOS/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 555:ThirdParty/FreeRTOS/tasks.c **** 
 556:ThirdParty/FreeRTOS/tasks.c ****     static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 557:ThirdParty/FreeRTOS/tasks.c **** 
 558:ThirdParty/FreeRTOS/tasks.c **** #endif
 559:ThirdParty/FreeRTOS/tasks.c **** 
 560:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 561:ThirdParty/FreeRTOS/tasks.c **** 
 562:ThirdParty/FreeRTOS/tasks.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 563:ThirdParty/FreeRTOS/tasks.c **** 
 564:ThirdParty/FreeRTOS/tasks.c ****     TaskHandle_t xTaskCreateStatic( TaskFunction_t pxTaskCode,
 565:ThirdParty/FreeRTOS/tasks.c ****                                     const char * const pcName, /*lint !e971 Unqualified char types 
 566:ThirdParty/FreeRTOS/tasks.c ****                                     const uint32_t ulStackDepth,
 567:ThirdParty/FreeRTOS/tasks.c ****                                     void * const pvParameters,
 568:ThirdParty/FreeRTOS/tasks.c ****                                     UBaseType_t uxPriority,
 569:ThirdParty/FreeRTOS/tasks.c ****                                     StackType_t * const puxStackBuffer,
 570:ThirdParty/FreeRTOS/tasks.c ****                                     StaticTask_t * const pxTaskBuffer )
 571:ThirdParty/FreeRTOS/tasks.c ****     {
 572:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 573:ThirdParty/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
 574:ThirdParty/FreeRTOS/tasks.c **** 
 575:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( puxStackBuffer != NULL );
 576:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 577:ThirdParty/FreeRTOS/tasks.c **** 
 578:ThirdParty/FreeRTOS/tasks.c ****         #if ( configASSERT_DEFINED == 1 )
 579:ThirdParty/FreeRTOS/tasks.c ****         {
 580:ThirdParty/FreeRTOS/tasks.c ****             /* Sanity check that the size of the structure used to declare a
 581:ThirdParty/FreeRTOS/tasks.c ****              * variable of type StaticTask_t equals the size of the real task
 582:ThirdParty/FreeRTOS/tasks.c ****              * structure. */
 583:ThirdParty/FreeRTOS/tasks.c ****             volatile size_t xSize = sizeof( StaticTask_t );
 584:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( xSize == sizeof( TCB_t ) );
 585:ThirdParty/FreeRTOS/tasks.c ****             ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 586:ThirdParty/FreeRTOS/tasks.c ****         }
 587:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configASSERT_DEFINED */
 588:ThirdParty/FreeRTOS/tasks.c **** 
 589:ThirdParty/FreeRTOS/tasks.c ****         if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 590:ThirdParty/FreeRTOS/tasks.c ****         {
 591:ThirdParty/FreeRTOS/tasks.c ****             /* The memory used for the task's TCB and stack are passed into this
 592:ThirdParty/FreeRTOS/tasks.c ****              * function - use them. */
 593:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the stru
 594:ThirdParty/FreeRTOS/tasks.c ****             memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 595:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 596:ThirdParty/FreeRTOS/tasks.c **** 
 597:ThirdParty/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has be
 598:ThirdParty/FreeRTOS/tasks.c ****             {
 599:ThirdParty/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 600:ThirdParty/FreeRTOS/tasks.c ****                  * task was created statically in case the task is later deleted. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 12


 601:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 602:ThirdParty/FreeRTOS/tasks.c ****             }
 603:ThirdParty/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 604:ThirdParty/FreeRTOS/tasks.c **** 
 605:ThirdParty/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xRet
 606:ThirdParty/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 607:ThirdParty/FreeRTOS/tasks.c ****         }
 608:ThirdParty/FreeRTOS/tasks.c ****         else
 609:ThirdParty/FreeRTOS/tasks.c ****         {
 610:ThirdParty/FreeRTOS/tasks.c ****             xReturn = NULL;
 611:ThirdParty/FreeRTOS/tasks.c ****         }
 612:ThirdParty/FreeRTOS/tasks.c **** 
 613:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
 614:ThirdParty/FreeRTOS/tasks.c ****     }
 615:ThirdParty/FreeRTOS/tasks.c **** 
 616:ThirdParty/FreeRTOS/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 617:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 618:ThirdParty/FreeRTOS/tasks.c **** 
 619:ThirdParty/FreeRTOS/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 620:ThirdParty/FreeRTOS/tasks.c **** 
 621:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition,
 622:ThirdParty/FreeRTOS/tasks.c ****                                             TaskHandle_t * pxCreatedTask )
 623:ThirdParty/FreeRTOS/tasks.c ****     {
 624:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 625:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 626:ThirdParty/FreeRTOS/tasks.c **** 
 627:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 628:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 629:ThirdParty/FreeRTOS/tasks.c **** 
 630:ThirdParty/FreeRTOS/tasks.c ****         if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NUL
 631:ThirdParty/FreeRTOS/tasks.c ****         {
 632:ThirdParty/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 633:ThirdParty/FreeRTOS/tasks.c ****              * on the implementation of the port malloc function and whether or
 634:ThirdParty/FreeRTOS/tasks.c ****              * not static allocation is being used. */
 635:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 636:ThirdParty/FreeRTOS/tasks.c ****             memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 637:ThirdParty/FreeRTOS/tasks.c **** 
 638:ThirdParty/FreeRTOS/tasks.c ****             /* Store the stack location in the TCB. */
 639:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 640:ThirdParty/FreeRTOS/tasks.c **** 
 641:ThirdParty/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 642:ThirdParty/FreeRTOS/tasks.c ****             {
 643:ThirdParty/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 644:ThirdParty/FreeRTOS/tasks.c ****                  * task was created statically in case the task is later deleted. */
 645:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 646:ThirdParty/FreeRTOS/tasks.c ****             }
 647:ThirdParty/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 648:ThirdParty/FreeRTOS/tasks.c **** 
 649:ThirdParty/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 650:ThirdParty/FreeRTOS/tasks.c ****                                   pxTaskDefinition->pcName,
 651:ThirdParty/FreeRTOS/tasks.c ****                                   ( uint32_t ) pxTaskDefinition->usStackDepth,
 652:ThirdParty/FreeRTOS/tasks.c ****                                   pxTaskDefinition->pvParameters,
 653:ThirdParty/FreeRTOS/tasks.c ****                                   pxTaskDefinition->uxPriority,
 654:ThirdParty/FreeRTOS/tasks.c ****                                   pxCreatedTask, pxNewTCB,
 655:ThirdParty/FreeRTOS/tasks.c ****                                   pxTaskDefinition->xRegions );
 656:ThirdParty/FreeRTOS/tasks.c **** 
 657:ThirdParty/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 13


 658:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdPASS;
 659:ThirdParty/FreeRTOS/tasks.c ****         }
 660:ThirdParty/FreeRTOS/tasks.c **** 
 661:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
 662:ThirdParty/FreeRTOS/tasks.c ****     }
 663:ThirdParty/FreeRTOS/tasks.c **** 
 664:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 665:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 666:ThirdParty/FreeRTOS/tasks.c **** 
 667:ThirdParty/FreeRTOS/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 668:ThirdParty/FreeRTOS/tasks.c **** 
 669:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition,
 670:ThirdParty/FreeRTOS/tasks.c ****                                       TaskHandle_t * pxCreatedTask )
 671:ThirdParty/FreeRTOS/tasks.c ****     {
 672:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 673:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 674:ThirdParty/FreeRTOS/tasks.c **** 
 675:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer );
 676:ThirdParty/FreeRTOS/tasks.c **** 
 677:ThirdParty/FreeRTOS/tasks.c ****         if( pxTaskDefinition->puxStackBuffer != NULL )
 678:ThirdParty/FreeRTOS/tasks.c ****         {
 679:ThirdParty/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 680:ThirdParty/FreeRTOS/tasks.c ****              * on the implementation of the port malloc function and whether or
 681:ThirdParty/FreeRTOS/tasks.c ****              * not static allocation is being used. */
 682:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 683:ThirdParty/FreeRTOS/tasks.c **** 
 684:ThirdParty/FreeRTOS/tasks.c ****             if( pxNewTCB != NULL )
 685:ThirdParty/FreeRTOS/tasks.c ****             {
 686:ThirdParty/FreeRTOS/tasks.c ****                 memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 687:ThirdParty/FreeRTOS/tasks.c **** 
 688:ThirdParty/FreeRTOS/tasks.c ****                 /* Store the stack location in the TCB. */
 689:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 690:ThirdParty/FreeRTOS/tasks.c **** 
 691:ThirdParty/FreeRTOS/tasks.c ****                 #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 692:ThirdParty/FreeRTOS/tasks.c ****                 {
 693:ThirdParty/FreeRTOS/tasks.c ****                     /* Tasks can be created statically or dynamically, so note
 694:ThirdParty/FreeRTOS/tasks.c ****                      * this task had a statically allocated stack in case it is
 695:ThirdParty/FreeRTOS/tasks.c ****                      * later deleted.  The TCB was allocated dynamically. */
 696:ThirdParty/FreeRTOS/tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 697:ThirdParty/FreeRTOS/tasks.c ****                 }
 698:ThirdParty/FreeRTOS/tasks.c ****                 #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 699:ThirdParty/FreeRTOS/tasks.c **** 
 700:ThirdParty/FreeRTOS/tasks.c ****                 prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 701:ThirdParty/FreeRTOS/tasks.c ****                                       pxTaskDefinition->pcName,
 702:ThirdParty/FreeRTOS/tasks.c ****                                       ( uint32_t ) pxTaskDefinition->usStackDepth,
 703:ThirdParty/FreeRTOS/tasks.c ****                                       pxTaskDefinition->pvParameters,
 704:ThirdParty/FreeRTOS/tasks.c ****                                       pxTaskDefinition->uxPriority,
 705:ThirdParty/FreeRTOS/tasks.c ****                                       pxCreatedTask, pxNewTCB,
 706:ThirdParty/FreeRTOS/tasks.c ****                                       pxTaskDefinition->xRegions );
 707:ThirdParty/FreeRTOS/tasks.c **** 
 708:ThirdParty/FreeRTOS/tasks.c ****                 prvAddNewTaskToReadyList( pxNewTCB );
 709:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 710:ThirdParty/FreeRTOS/tasks.c ****             }
 711:ThirdParty/FreeRTOS/tasks.c ****         }
 712:ThirdParty/FreeRTOS/tasks.c **** 
 713:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
 714:ThirdParty/FreeRTOS/tasks.c ****     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 14


 715:ThirdParty/FreeRTOS/tasks.c **** 
 716:ThirdParty/FreeRTOS/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 717:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 718:ThirdParty/FreeRTOS/tasks.c **** 
 719:ThirdParty/FreeRTOS/tasks.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 720:ThirdParty/FreeRTOS/tasks.c **** 
 721:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
 722:ThirdParty/FreeRTOS/tasks.c ****                             const char * const pcName, /*lint !e971 Unqualified char types are allo
 723:ThirdParty/FreeRTOS/tasks.c ****                             const configSTACK_DEPTH_TYPE usStackDepth,
 724:ThirdParty/FreeRTOS/tasks.c ****                             void * const pvParameters,
 725:ThirdParty/FreeRTOS/tasks.c ****                             UBaseType_t uxPriority,
 726:ThirdParty/FreeRTOS/tasks.c ****                             TaskHandle_t * const pxCreatedTask )
 727:ThirdParty/FreeRTOS/tasks.c ****     {
 728:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 729:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 730:ThirdParty/FreeRTOS/tasks.c **** 
 731:ThirdParty/FreeRTOS/tasks.c ****         /* If the stack grows down then allocate the stack then the TCB so the stack
 732:ThirdParty/FreeRTOS/tasks.c ****          * does not grow into the TCB.  Likewise if the stack grows up then allocate
 733:ThirdParty/FreeRTOS/tasks.c ****          * the TCB then the stack. */
 734:ThirdParty/FreeRTOS/tasks.c ****         #if ( portSTACK_GROWTH > 0 )
 735:ThirdParty/FreeRTOS/tasks.c ****         {
 736:ThirdParty/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends on
 737:ThirdParty/FreeRTOS/tasks.c ****              * the implementation of the port malloc function and whether or not static
 738:ThirdParty/FreeRTOS/tasks.c ****              * allocation is being used. */
 739:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 740:ThirdParty/FreeRTOS/tasks.c **** 
 741:ThirdParty/FreeRTOS/tasks.c ****             if( pxNewTCB != NULL )
 742:ThirdParty/FreeRTOS/tasks.c ****             {
 743:ThirdParty/FreeRTOS/tasks.c ****                 memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 744:ThirdParty/FreeRTOS/tasks.c **** 
 745:ThirdParty/FreeRTOS/tasks.c ****                 /* Allocate space for the stack used by the task being created.
 746:ThirdParty/FreeRTOS/tasks.c ****                  * The base of the stack memory stored in the TCB so the task can
 747:ThirdParty/FreeRTOS/tasks.c ****                  * be deleted later if required. */
 748:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxStack = ( StackType_t * ) pvPortMallocStack( ( ( ( size_t ) usStackDept
 749:ThirdParty/FreeRTOS/tasks.c **** 
 750:ThirdParty/FreeRTOS/tasks.c ****                 if( pxNewTCB->pxStack == NULL )
 751:ThirdParty/FreeRTOS/tasks.c ****                 {
 752:ThirdParty/FreeRTOS/tasks.c ****                     /* Could not allocate the stack.  Delete the allocated TCB. */
 753:ThirdParty/FreeRTOS/tasks.c ****                     vPortFree( pxNewTCB );
 754:ThirdParty/FreeRTOS/tasks.c ****                     pxNewTCB = NULL;
 755:ThirdParty/FreeRTOS/tasks.c ****                 }
 756:ThirdParty/FreeRTOS/tasks.c ****             }
 757:ThirdParty/FreeRTOS/tasks.c ****         }
 758:ThirdParty/FreeRTOS/tasks.c ****         #else /* portSTACK_GROWTH */
 759:ThirdParty/FreeRTOS/tasks.c ****         {
 760:ThirdParty/FreeRTOS/tasks.c ****             StackType_t * pxStack;
 761:ThirdParty/FreeRTOS/tasks.c **** 
 762:ThirdParty/FreeRTOS/tasks.c ****             /* Allocate space for the stack used by the task being created. */
 763:ThirdParty/FreeRTOS/tasks.c ****             pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) );
 764:ThirdParty/FreeRTOS/tasks.c **** 
 765:ThirdParty/FreeRTOS/tasks.c ****             if( pxStack != NULL )
 766:ThirdParty/FreeRTOS/tasks.c ****             {
 767:ThirdParty/FreeRTOS/tasks.c ****                 /* Allocate space for the TCB. */
 768:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All va
 769:ThirdParty/FreeRTOS/tasks.c **** 
 770:ThirdParty/FreeRTOS/tasks.c ****                 if( pxNewTCB != NULL )
 771:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 15


 772:ThirdParty/FreeRTOS/tasks.c ****                     memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 773:ThirdParty/FreeRTOS/tasks.c **** 
 774:ThirdParty/FreeRTOS/tasks.c ****                     /* Store the stack location in the TCB. */
 775:ThirdParty/FreeRTOS/tasks.c ****                     pxNewTCB->pxStack = pxStack;
 776:ThirdParty/FreeRTOS/tasks.c ****                 }
 777:ThirdParty/FreeRTOS/tasks.c ****                 else
 778:ThirdParty/FreeRTOS/tasks.c ****                 {
 779:ThirdParty/FreeRTOS/tasks.c ****                     /* The stack cannot be used as the TCB was not created.  Free
 780:ThirdParty/FreeRTOS/tasks.c ****                      * it again. */
 781:ThirdParty/FreeRTOS/tasks.c ****                     vPortFreeStack( pxStack );
 782:ThirdParty/FreeRTOS/tasks.c ****                 }
 783:ThirdParty/FreeRTOS/tasks.c ****             }
 784:ThirdParty/FreeRTOS/tasks.c ****             else
 785:ThirdParty/FreeRTOS/tasks.c ****             {
 786:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB = NULL;
 787:ThirdParty/FreeRTOS/tasks.c ****             }
 788:ThirdParty/FreeRTOS/tasks.c ****         }
 789:ThirdParty/FreeRTOS/tasks.c ****         #endif /* portSTACK_GROWTH */
 790:ThirdParty/FreeRTOS/tasks.c **** 
 791:ThirdParty/FreeRTOS/tasks.c ****         if( pxNewTCB != NULL )
 792:ThirdParty/FreeRTOS/tasks.c ****         {
 793:ThirdParty/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has be
 794:ThirdParty/FreeRTOS/tasks.c ****             {
 795:ThirdParty/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 796:ThirdParty/FreeRTOS/tasks.c ****                  * task was created dynamically in case it is later deleted. */
 797:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 798:ThirdParty/FreeRTOS/tasks.c ****             }
 799:ThirdParty/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 800:ThirdParty/FreeRTOS/tasks.c **** 
 801:ThirdParty/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPr
 802:ThirdParty/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 803:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdPASS;
 804:ThirdParty/FreeRTOS/tasks.c ****         }
 805:ThirdParty/FreeRTOS/tasks.c ****         else
 806:ThirdParty/FreeRTOS/tasks.c ****         {
 807:ThirdParty/FreeRTOS/tasks.c ****             xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 808:ThirdParty/FreeRTOS/tasks.c ****         }
 809:ThirdParty/FreeRTOS/tasks.c **** 
 810:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
 811:ThirdParty/FreeRTOS/tasks.c ****     }
 812:ThirdParty/FreeRTOS/tasks.c **** 
 813:ThirdParty/FreeRTOS/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 814:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 815:ThirdParty/FreeRTOS/tasks.c **** 
 816:ThirdParty/FreeRTOS/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 817:ThirdParty/FreeRTOS/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 818:ThirdParty/FreeRTOS/tasks.c ****                                   const uint32_t ulStackDepth,
 819:ThirdParty/FreeRTOS/tasks.c ****                                   void * const pvParameters,
 820:ThirdParty/FreeRTOS/tasks.c ****                                   UBaseType_t uxPriority,
 821:ThirdParty/FreeRTOS/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 822:ThirdParty/FreeRTOS/tasks.c ****                                   TCB_t * pxNewTCB,
 823:ThirdParty/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions )
 824:ThirdParty/FreeRTOS/tasks.c **** {
 825:ThirdParty/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 826:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t x;
 827:ThirdParty/FreeRTOS/tasks.c **** 
 828:ThirdParty/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 16


 829:ThirdParty/FreeRTOS/tasks.c ****         /* Should the task be created in privileged mode? */
 830:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xRunPrivileged;
 831:ThirdParty/FreeRTOS/tasks.c **** 
 832:ThirdParty/FreeRTOS/tasks.c ****         if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 833:ThirdParty/FreeRTOS/tasks.c ****         {
 834:ThirdParty/FreeRTOS/tasks.c ****             xRunPrivileged = pdTRUE;
 835:ThirdParty/FreeRTOS/tasks.c ****         }
 836:ThirdParty/FreeRTOS/tasks.c ****         else
 837:ThirdParty/FreeRTOS/tasks.c ****         {
 838:ThirdParty/FreeRTOS/tasks.c ****             xRunPrivileged = pdFALSE;
 839:ThirdParty/FreeRTOS/tasks.c ****         }
 840:ThirdParty/FreeRTOS/tasks.c ****         uxPriority &= ~portPRIVILEGE_BIT;
 841:ThirdParty/FreeRTOS/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS == 1 */
 842:ThirdParty/FreeRTOS/tasks.c **** 
 843:ThirdParty/FreeRTOS/tasks.c ****     /* Avoid dependency on memset() if it is not required. */
 844:ThirdParty/FreeRTOS/tasks.c ****     #if ( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 845:ThirdParty/FreeRTOS/tasks.c ****     {
 846:ThirdParty/FreeRTOS/tasks.c ****         /* Fill the stack with a known value to assist debugging. */
 847:ThirdParty/FreeRTOS/tasks.c ****         ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * s
 848:ThirdParty/FreeRTOS/tasks.c ****     }
 849:ThirdParty/FreeRTOS/tasks.c ****     #endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 850:ThirdParty/FreeRTOS/tasks.c **** 
 851:ThirdParty/FreeRTOS/tasks.c ****     /* Calculate the top of stack address.  This depends on whether the stack
 852:ThirdParty/FreeRTOS/tasks.c ****      * grows from high memory to low (as per the 80x86) or vice versa.
 853:ThirdParty/FreeRTOS/tasks.c ****      * portSTACK_GROWTH is used to make the result positive or negative as required
 854:ThirdParty/FreeRTOS/tasks.c ****      * by the port. */
 855:ThirdParty/FreeRTOS/tasks.c ****     #if ( portSTACK_GROWTH < 0 )
 856:ThirdParty/FreeRTOS/tasks.c ****     {
 857:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 858:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 859:ThirdParty/FreeRTOS/tasks.c **** 
 860:ThirdParty/FreeRTOS/tasks.c ****         /* Check the alignment of the calculated top of stack is correct. */
 861:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBY
 862:ThirdParty/FreeRTOS/tasks.c **** 
 863:ThirdParty/FreeRTOS/tasks.c ****         #if ( configRECORD_STACK_HIGH_ADDRESS == 1 )
 864:ThirdParty/FreeRTOS/tasks.c ****         {
 865:ThirdParty/FreeRTOS/tasks.c ****             /* Also record the stack's high address, which may assist
 866:ThirdParty/FreeRTOS/tasks.c ****              * debugging. */
 867:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pxEndOfStack = pxTopOfStack;
 868:ThirdParty/FreeRTOS/tasks.c ****         }
 869:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configRECORD_STACK_HIGH_ADDRESS */
 870:ThirdParty/FreeRTOS/tasks.c ****     }
 871:ThirdParty/FreeRTOS/tasks.c ****     #else /* portSTACK_GROWTH */
 872:ThirdParty/FreeRTOS/tasks.c ****     {
 873:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = pxNewTCB->pxStack;
 874:ThirdParty/FreeRTOS/tasks.c **** 
 875:ThirdParty/FreeRTOS/tasks.c ****         /* Check the alignment of the stack buffer is correct. */
 876:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) p
 877:ThirdParty/FreeRTOS/tasks.c **** 
 878:ThirdParty/FreeRTOS/tasks.c ****         /* The other extreme of the stack space is required if stack checking is
 879:ThirdParty/FreeRTOS/tasks.c ****          * performed. */
 880:ThirdParty/FreeRTOS/tasks.c ****         pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 881:ThirdParty/FreeRTOS/tasks.c ****     }
 882:ThirdParty/FreeRTOS/tasks.c ****     #endif /* portSTACK_GROWTH */
 883:ThirdParty/FreeRTOS/tasks.c **** 
 884:ThirdParty/FreeRTOS/tasks.c ****     /* Store the task name in the TCB. */
 885:ThirdParty/FreeRTOS/tasks.c ****     if( pcName != NULL )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 17


 886:ThirdParty/FreeRTOS/tasks.c ****     {
 887:ThirdParty/FreeRTOS/tasks.c ****         for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 888:ThirdParty/FreeRTOS/tasks.c ****         {
 889:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 890:ThirdParty/FreeRTOS/tasks.c **** 
 891:ThirdParty/FreeRTOS/tasks.c ****             /* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 892:ThirdParty/FreeRTOS/tasks.c ****              * configMAX_TASK_NAME_LEN characters just in case the memory after the
 893:ThirdParty/FreeRTOS/tasks.c ****              * string is not accessible (extremely unlikely). */
 894:ThirdParty/FreeRTOS/tasks.c ****             if( pcName[ x ] == ( char ) 0x00 )
 895:ThirdParty/FreeRTOS/tasks.c ****             {
 896:ThirdParty/FreeRTOS/tasks.c ****                 break;
 897:ThirdParty/FreeRTOS/tasks.c ****             }
 898:ThirdParty/FreeRTOS/tasks.c ****             else
 899:ThirdParty/FreeRTOS/tasks.c ****             {
 900:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
 901:ThirdParty/FreeRTOS/tasks.c ****             }
 902:ThirdParty/FreeRTOS/tasks.c ****         }
 903:ThirdParty/FreeRTOS/tasks.c **** 
 904:ThirdParty/FreeRTOS/tasks.c ****         /* Ensure the name string is terminated in the case that the string length
 905:ThirdParty/FreeRTOS/tasks.c ****          * was greater or equal to configMAX_TASK_NAME_LEN. */
 906:ThirdParty/FreeRTOS/tasks.c ****         pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 907:ThirdParty/FreeRTOS/tasks.c ****     }
 908:ThirdParty/FreeRTOS/tasks.c ****     else
 909:ThirdParty/FreeRTOS/tasks.c ****     {
 910:ThirdParty/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 911:ThirdParty/FreeRTOS/tasks.c ****     }
 912:ThirdParty/FreeRTOS/tasks.c **** 
 913:ThirdParty/FreeRTOS/tasks.c ****     /* This is used as an array index so must ensure it's not too large. */
 914:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( uxPriority < configMAX_PRIORITIES );
 915:ThirdParty/FreeRTOS/tasks.c **** 
 916:ThirdParty/FreeRTOS/tasks.c ****     if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 917:ThirdParty/FreeRTOS/tasks.c ****     {
 918:ThirdParty/FreeRTOS/tasks.c ****         uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 919:ThirdParty/FreeRTOS/tasks.c ****     }
 920:ThirdParty/FreeRTOS/tasks.c ****     else
 921:ThirdParty/FreeRTOS/tasks.c ****     {
 922:ThirdParty/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 923:ThirdParty/FreeRTOS/tasks.c ****     }
 924:ThirdParty/FreeRTOS/tasks.c **** 
 925:ThirdParty/FreeRTOS/tasks.c ****     pxNewTCB->uxPriority = uxPriority;
 926:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 927:ThirdParty/FreeRTOS/tasks.c ****     {
 928:ThirdParty/FreeRTOS/tasks.c ****         pxNewTCB->uxBasePriority = uxPriority;
 929:ThirdParty/FreeRTOS/tasks.c ****     }
 930:ThirdParty/FreeRTOS/tasks.c ****     #endif /* configUSE_MUTEXES */
 931:ThirdParty/FreeRTOS/tasks.c **** 
 932:ThirdParty/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 933:ThirdParty/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 934:ThirdParty/FreeRTOS/tasks.c **** 
 935:ThirdParty/FreeRTOS/tasks.c ****     /* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 936:ThirdParty/FreeRTOS/tasks.c ****      * back to  the containing TCB from a generic item in a list. */
 937:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 938:ThirdParty/FreeRTOS/tasks.c **** 
 939:ThirdParty/FreeRTOS/tasks.c ****     /* Event lists are always in priority order. */
 940:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - (
 941:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 942:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 18


 943:ThirdParty/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 944:ThirdParty/FreeRTOS/tasks.c ****     {
 945:ThirdParty/FreeRTOS/tasks.c ****         vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStac
 946:ThirdParty/FreeRTOS/tasks.c ****     }
 947:ThirdParty/FreeRTOS/tasks.c ****     #else
 948:ThirdParty/FreeRTOS/tasks.c ****     {
 949:ThirdParty/FreeRTOS/tasks.c ****         /* Avoid compiler warning about unreferenced parameter. */
 950:ThirdParty/FreeRTOS/tasks.c ****         ( void ) xRegions;
 951:ThirdParty/FreeRTOS/tasks.c ****     }
 952:ThirdParty/FreeRTOS/tasks.c ****     #endif
 953:ThirdParty/FreeRTOS/tasks.c **** 
 954:ThirdParty/FreeRTOS/tasks.c ****     #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
 955:ThirdParty/FreeRTOS/tasks.c ****     {
 956:ThirdParty/FreeRTOS/tasks.c ****         /* Allocate and initialize memory for the task's TLS Block. */
 957:ThirdParty/FreeRTOS/tasks.c ****         configINIT_TLS_BLOCK( pxNewTCB->xTLSBlock );
 958:ThirdParty/FreeRTOS/tasks.c ****     }
 959:ThirdParty/FreeRTOS/tasks.c ****     #endif
 960:ThirdParty/FreeRTOS/tasks.c **** 
 961:ThirdParty/FreeRTOS/tasks.c ****     /* Initialize the TCB stack to look as if the task was already running,
 962:ThirdParty/FreeRTOS/tasks.c ****      * but had been interrupted by the scheduler.  The return address is set
 963:ThirdParty/FreeRTOS/tasks.c ****      * to the start of the task function. Once the stack has been initialised
 964:ThirdParty/FreeRTOS/tasks.c ****      * the top of stack variable is updated. */
 965:ThirdParty/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 966:ThirdParty/FreeRTOS/tasks.c ****     {
 967:ThirdParty/FreeRTOS/tasks.c ****         /* If the port has capability to detect stack overflow,
 968:ThirdParty/FreeRTOS/tasks.c ****          * pass the stack end address to the stack initialization
 969:ThirdParty/FreeRTOS/tasks.c ****          * function as well. */
 970:ThirdParty/FreeRTOS/tasks.c ****         #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
 971:ThirdParty/FreeRTOS/tasks.c ****         {
 972:ThirdParty/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH < 0 )
 973:ThirdParty/FreeRTOS/tasks.c ****             {
 974:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, px
 975:ThirdParty/FreeRTOS/tasks.c ****             }
 976:ThirdParty/FreeRTOS/tasks.c ****             #else /* portSTACK_GROWTH */
 977:ThirdParty/FreeRTOS/tasks.c ****             {
 978:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStac
 979:ThirdParty/FreeRTOS/tasks.c ****             }
 980:ThirdParty/FreeRTOS/tasks.c ****             #endif /* portSTACK_GROWTH */
 981:ThirdParty/FreeRTOS/tasks.c ****         }
 982:ThirdParty/FreeRTOS/tasks.c ****         #else /* portHAS_STACK_OVERFLOW_CHECKING */
 983:ThirdParty/FreeRTOS/tasks.c ****         {
 984:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters,
 985:ThirdParty/FreeRTOS/tasks.c ****         }
 986:ThirdParty/FreeRTOS/tasks.c ****         #endif /* portHAS_STACK_OVERFLOW_CHECKING */
 987:ThirdParty/FreeRTOS/tasks.c ****     }
 988:ThirdParty/FreeRTOS/tasks.c ****     #else /* portUSING_MPU_WRAPPERS */
 989:ThirdParty/FreeRTOS/tasks.c ****     {
 990:ThirdParty/FreeRTOS/tasks.c ****         /* If the port has capability to detect stack overflow,
 991:ThirdParty/FreeRTOS/tasks.c ****          * pass the stack end address to the stack initialization
 992:ThirdParty/FreeRTOS/tasks.c ****          * function as well. */
 993:ThirdParty/FreeRTOS/tasks.c ****         #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
 994:ThirdParty/FreeRTOS/tasks.c ****         {
 995:ThirdParty/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH < 0 )
 996:ThirdParty/FreeRTOS/tasks.c ****             {
 997:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, px
 998:ThirdParty/FreeRTOS/tasks.c ****             }
 999:ThirdParty/FreeRTOS/tasks.c ****             #else /* portSTACK_GROWTH */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 19


1000:ThirdParty/FreeRTOS/tasks.c ****             {
1001:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStac
1002:ThirdParty/FreeRTOS/tasks.c ****             }
1003:ThirdParty/FreeRTOS/tasks.c ****             #endif /* portSTACK_GROWTH */
1004:ThirdParty/FreeRTOS/tasks.c ****         }
1005:ThirdParty/FreeRTOS/tasks.c ****         #else /* portHAS_STACK_OVERFLOW_CHECKING */
1006:ThirdParty/FreeRTOS/tasks.c ****         {
1007:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters 
1008:ThirdParty/FreeRTOS/tasks.c ****         }
1009:ThirdParty/FreeRTOS/tasks.c ****         #endif /* portHAS_STACK_OVERFLOW_CHECKING */
1010:ThirdParty/FreeRTOS/tasks.c ****     }
1011:ThirdParty/FreeRTOS/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS */
1012:ThirdParty/FreeRTOS/tasks.c **** 
1013:ThirdParty/FreeRTOS/tasks.c ****     if( pxCreatedTask != NULL )
1014:ThirdParty/FreeRTOS/tasks.c ****     {
1015:ThirdParty/FreeRTOS/tasks.c ****         /* Pass the handle out in an anonymous way.  The handle can be used to
1016:ThirdParty/FreeRTOS/tasks.c ****          * change the created task's priority, delete the created task, etc.*/
1017:ThirdParty/FreeRTOS/tasks.c ****         *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1018:ThirdParty/FreeRTOS/tasks.c ****     }
1019:ThirdParty/FreeRTOS/tasks.c ****     else
1020:ThirdParty/FreeRTOS/tasks.c ****     {
1021:ThirdParty/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1022:ThirdParty/FreeRTOS/tasks.c ****     }
1023:ThirdParty/FreeRTOS/tasks.c **** }
1024:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1025:ThirdParty/FreeRTOS/tasks.c **** 
1026:ThirdParty/FreeRTOS/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
1027:ThirdParty/FreeRTOS/tasks.c **** {
1028:ThirdParty/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
1029:ThirdParty/FreeRTOS/tasks.c ****      * updated. */
1030:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
1031:ThirdParty/FreeRTOS/tasks.c ****     {
1032:ThirdParty/FreeRTOS/tasks.c ****         uxCurrentNumberOfTasks++;
1033:ThirdParty/FreeRTOS/tasks.c **** 
1034:ThirdParty/FreeRTOS/tasks.c ****         if( pxCurrentTCB == NULL )
1035:ThirdParty/FreeRTOS/tasks.c ****         {
1036:ThirdParty/FreeRTOS/tasks.c ****             /* There are no other tasks, or all the other tasks are in
1037:ThirdParty/FreeRTOS/tasks.c ****              * the suspended state - make this the current task. */
1038:ThirdParty/FreeRTOS/tasks.c ****             pxCurrentTCB = pxNewTCB;
1039:ThirdParty/FreeRTOS/tasks.c **** 
1040:ThirdParty/FreeRTOS/tasks.c ****             if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:ThirdParty/FreeRTOS/tasks.c ****             {
1042:ThirdParty/FreeRTOS/tasks.c ****                 /* This is the first task to be created so do the preliminary
1043:ThirdParty/FreeRTOS/tasks.c ****                  * initialisation required.  We will not recover if this call
1044:ThirdParty/FreeRTOS/tasks.c ****                  * fails, but we will report the failure. */
1045:ThirdParty/FreeRTOS/tasks.c ****                 prvInitialiseTaskLists();
1046:ThirdParty/FreeRTOS/tasks.c ****             }
1047:ThirdParty/FreeRTOS/tasks.c ****             else
1048:ThirdParty/FreeRTOS/tasks.c ****             {
1049:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1050:ThirdParty/FreeRTOS/tasks.c ****             }
1051:ThirdParty/FreeRTOS/tasks.c ****         }
1052:ThirdParty/FreeRTOS/tasks.c ****         else
1053:ThirdParty/FreeRTOS/tasks.c ****         {
1054:ThirdParty/FreeRTOS/tasks.c ****             /* If the scheduler is not already running, make this task the
1055:ThirdParty/FreeRTOS/tasks.c ****              * current task if it is the highest priority task to be created
1056:ThirdParty/FreeRTOS/tasks.c ****              * so far. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 20


1057:ThirdParty/FreeRTOS/tasks.c ****             if( xSchedulerRunning == pdFALSE )
1058:ThirdParty/FreeRTOS/tasks.c ****             {
1059:ThirdParty/FreeRTOS/tasks.c ****                 if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:ThirdParty/FreeRTOS/tasks.c ****                 {
1061:ThirdParty/FreeRTOS/tasks.c ****                     pxCurrentTCB = pxNewTCB;
1062:ThirdParty/FreeRTOS/tasks.c ****                 }
1063:ThirdParty/FreeRTOS/tasks.c ****                 else
1064:ThirdParty/FreeRTOS/tasks.c ****                 {
1065:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1066:ThirdParty/FreeRTOS/tasks.c ****                 }
1067:ThirdParty/FreeRTOS/tasks.c ****             }
1068:ThirdParty/FreeRTOS/tasks.c ****             else
1069:ThirdParty/FreeRTOS/tasks.c ****             {
1070:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1071:ThirdParty/FreeRTOS/tasks.c ****             }
1072:ThirdParty/FreeRTOS/tasks.c ****         }
1073:ThirdParty/FreeRTOS/tasks.c **** 
1074:ThirdParty/FreeRTOS/tasks.c ****         uxTaskNumber++;
1075:ThirdParty/FreeRTOS/tasks.c **** 
1076:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
1077:ThirdParty/FreeRTOS/tasks.c ****         {
1078:ThirdParty/FreeRTOS/tasks.c ****             /* Add a counter into the TCB for tracing only. */
1079:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:ThirdParty/FreeRTOS/tasks.c ****         }
1081:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_TRACE_FACILITY */
1082:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_CREATE( pxNewTCB );
1083:ThirdParty/FreeRTOS/tasks.c **** 
1084:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxNewTCB );
1085:ThirdParty/FreeRTOS/tasks.c **** 
1086:ThirdParty/FreeRTOS/tasks.c ****         portSETUP_TCB( pxNewTCB );
1087:ThirdParty/FreeRTOS/tasks.c ****     }
1088:ThirdParty/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
1089:ThirdParty/FreeRTOS/tasks.c **** 
1090:ThirdParty/FreeRTOS/tasks.c ****     if( xSchedulerRunning != pdFALSE )
1091:ThirdParty/FreeRTOS/tasks.c ****     {
1092:ThirdParty/FreeRTOS/tasks.c ****         /* If the created task is of a higher priority than the current task
1093:ThirdParty/FreeRTOS/tasks.c ****          * then it should run now. */
1094:ThirdParty/FreeRTOS/tasks.c ****         if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:ThirdParty/FreeRTOS/tasks.c ****         {
1096:ThirdParty/FreeRTOS/tasks.c ****             taskYIELD_IF_USING_PREEMPTION();
1097:ThirdParty/FreeRTOS/tasks.c ****         }
1098:ThirdParty/FreeRTOS/tasks.c ****         else
1099:ThirdParty/FreeRTOS/tasks.c ****         {
1100:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1101:ThirdParty/FreeRTOS/tasks.c ****         }
1102:ThirdParty/FreeRTOS/tasks.c ****     }
1103:ThirdParty/FreeRTOS/tasks.c ****     else
1104:ThirdParty/FreeRTOS/tasks.c ****     {
1105:ThirdParty/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1106:ThirdParty/FreeRTOS/tasks.c ****     }
1107:ThirdParty/FreeRTOS/tasks.c **** }
1108:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1109:ThirdParty/FreeRTOS/tasks.c **** 
1110:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:ThirdParty/FreeRTOS/tasks.c **** 
1112:ThirdParty/FreeRTOS/tasks.c ****     void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:ThirdParty/FreeRTOS/tasks.c ****     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 21


1114:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1115:ThirdParty/FreeRTOS/tasks.c **** 
1116:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1117:ThirdParty/FreeRTOS/tasks.c ****         {
1118:ThirdParty/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the calling task that is
1119:ThirdParty/FreeRTOS/tasks.c ****              * being deleted. */
1120:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:ThirdParty/FreeRTOS/tasks.c **** 
1122:ThirdParty/FreeRTOS/tasks.c ****             /* Remove task from the ready/delayed list. */
1123:ThirdParty/FreeRTOS/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:ThirdParty/FreeRTOS/tasks.c ****             {
1125:ThirdParty/FreeRTOS/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:ThirdParty/FreeRTOS/tasks.c ****             }
1127:ThirdParty/FreeRTOS/tasks.c ****             else
1128:ThirdParty/FreeRTOS/tasks.c ****             {
1129:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1130:ThirdParty/FreeRTOS/tasks.c ****             }
1131:ThirdParty/FreeRTOS/tasks.c **** 
1132:ThirdParty/FreeRTOS/tasks.c ****             /* Is the task waiting on an event also? */
1133:ThirdParty/FreeRTOS/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:ThirdParty/FreeRTOS/tasks.c ****             {
1135:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:ThirdParty/FreeRTOS/tasks.c ****             }
1137:ThirdParty/FreeRTOS/tasks.c ****             else
1138:ThirdParty/FreeRTOS/tasks.c ****             {
1139:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1140:ThirdParty/FreeRTOS/tasks.c ****             }
1141:ThirdParty/FreeRTOS/tasks.c **** 
1142:ThirdParty/FreeRTOS/tasks.c ****             /* Increment the uxTaskNumber also so kernel aware debuggers can
1143:ThirdParty/FreeRTOS/tasks.c ****              * detect that the task lists need re-generating.  This is done before
1144:ThirdParty/FreeRTOS/tasks.c ****              * portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:ThirdParty/FreeRTOS/tasks.c ****              * not return. */
1146:ThirdParty/FreeRTOS/tasks.c ****             uxTaskNumber++;
1147:ThirdParty/FreeRTOS/tasks.c **** 
1148:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
1149:ThirdParty/FreeRTOS/tasks.c ****             {
1150:ThirdParty/FreeRTOS/tasks.c ****                 /* A task is deleting itself.  This cannot complete within the
1151:ThirdParty/FreeRTOS/tasks.c ****                  * task itself, as a context switch to another task is required.
1152:ThirdParty/FreeRTOS/tasks.c ****                  * Place the task in the termination list.  The idle task will
1153:ThirdParty/FreeRTOS/tasks.c ****                  * check the termination list and free up any memory allocated by
1154:ThirdParty/FreeRTOS/tasks.c ****                  * the scheduler for the TCB and stack of the deleted task. */
1155:ThirdParty/FreeRTOS/tasks.c ****                 vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:ThirdParty/FreeRTOS/tasks.c **** 
1157:ThirdParty/FreeRTOS/tasks.c ****                 /* Increment the ucTasksDeleted variable so the idle task knows
1158:ThirdParty/FreeRTOS/tasks.c ****                  * there is a task that has been deleted and that it should therefore
1159:ThirdParty/FreeRTOS/tasks.c ****                  * check the xTasksWaitingTermination list. */
1160:ThirdParty/FreeRTOS/tasks.c ****                 ++uxDeletedTasksWaitingCleanUp;
1161:ThirdParty/FreeRTOS/tasks.c **** 
1162:ThirdParty/FreeRTOS/tasks.c ****                 /* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1163:ThirdParty/FreeRTOS/tasks.c ****                  * portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1164:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_DELETE( pxTCB );
1165:ThirdParty/FreeRTOS/tasks.c **** 
1166:ThirdParty/FreeRTOS/tasks.c ****                 /* The pre-delete hook is primarily for the Windows simulator,
1167:ThirdParty/FreeRTOS/tasks.c ****                  * in which Windows specific clean up operations are performed,
1168:ThirdParty/FreeRTOS/tasks.c ****                  * after which it is not possible to yield away from this task -
1169:ThirdParty/FreeRTOS/tasks.c ****                  * hence xYieldPending is used to latch that a context switch is
1170:ThirdParty/FreeRTOS/tasks.c ****                  * required. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 22


1171:ThirdParty/FreeRTOS/tasks.c ****                 portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1172:ThirdParty/FreeRTOS/tasks.c ****             }
1173:ThirdParty/FreeRTOS/tasks.c ****             else
1174:ThirdParty/FreeRTOS/tasks.c ****             {
1175:ThirdParty/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
1176:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_DELETE( pxTCB );
1177:ThirdParty/FreeRTOS/tasks.c **** 
1178:ThirdParty/FreeRTOS/tasks.c ****                 /* Reset the next expected unblock time in case it referred to
1179:ThirdParty/FreeRTOS/tasks.c ****                  * the task that has just been deleted. */
1180:ThirdParty/FreeRTOS/tasks.c ****                 prvResetNextTaskUnblockTime();
1181:ThirdParty/FreeRTOS/tasks.c ****             }
1182:ThirdParty/FreeRTOS/tasks.c ****         }
1183:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1184:ThirdParty/FreeRTOS/tasks.c **** 
1185:ThirdParty/FreeRTOS/tasks.c ****         /* If the task is not deleting itself, call prvDeleteTCB from outside of
1186:ThirdParty/FreeRTOS/tasks.c ****          * critical section. If a task deletes itself, prvDeleteTCB is called
1187:ThirdParty/FreeRTOS/tasks.c ****          * from prvCheckTasksWaitingTermination which is called from Idle task. */
1188:ThirdParty/FreeRTOS/tasks.c ****         if( pxTCB != pxCurrentTCB )
1189:ThirdParty/FreeRTOS/tasks.c ****         {
1190:ThirdParty/FreeRTOS/tasks.c ****             prvDeleteTCB( pxTCB );
1191:ThirdParty/FreeRTOS/tasks.c ****         }
1192:ThirdParty/FreeRTOS/tasks.c **** 
1193:ThirdParty/FreeRTOS/tasks.c ****         /* Force a reschedule if it is the currently running task that has just
1194:ThirdParty/FreeRTOS/tasks.c ****          * been deleted. */
1195:ThirdParty/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
1196:ThirdParty/FreeRTOS/tasks.c ****         {
1197:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
1198:ThirdParty/FreeRTOS/tasks.c ****             {
1199:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1200:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
1201:ThirdParty/FreeRTOS/tasks.c ****             }
1202:ThirdParty/FreeRTOS/tasks.c ****             else
1203:ThirdParty/FreeRTOS/tasks.c ****             {
1204:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1205:ThirdParty/FreeRTOS/tasks.c ****             }
1206:ThirdParty/FreeRTOS/tasks.c ****         }
1207:ThirdParty/FreeRTOS/tasks.c ****     }
1208:ThirdParty/FreeRTOS/tasks.c **** 
1209:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1210:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1211:ThirdParty/FreeRTOS/tasks.c **** 
1212:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskDelayUntil == 1 )
1213:ThirdParty/FreeRTOS/tasks.c **** 
1214:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskDelayUntil( TickType_t * const pxPreviousWakeTime,
1215:ThirdParty/FreeRTOS/tasks.c ****                                 const TickType_t xTimeIncrement )
1216:ThirdParty/FreeRTOS/tasks.c ****     {
1217:ThirdParty/FreeRTOS/tasks.c ****         TickType_t xTimeToWake;
1218:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1219:ThirdParty/FreeRTOS/tasks.c **** 
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxPreviousWakeTime );
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
1222:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
1223:ThirdParty/FreeRTOS/tasks.c **** 
1224:ThirdParty/FreeRTOS/tasks.c ****         vTaskSuspendAll();
1225:ThirdParty/FreeRTOS/tasks.c ****         {
1226:ThirdParty/FreeRTOS/tasks.c ****             /* Minor optimisation.  The tick count cannot change in this
1227:ThirdParty/FreeRTOS/tasks.c ****              * block. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 23


1228:ThirdParty/FreeRTOS/tasks.c ****             const TickType_t xConstTickCount = xTickCount;
1229:ThirdParty/FreeRTOS/tasks.c **** 
1230:ThirdParty/FreeRTOS/tasks.c ****             /* Generate the tick time at which the task wants to wake. */
1231:ThirdParty/FreeRTOS/tasks.c ****             xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1232:ThirdParty/FreeRTOS/tasks.c **** 
1233:ThirdParty/FreeRTOS/tasks.c ****             if( xConstTickCount < *pxPreviousWakeTime )
1234:ThirdParty/FreeRTOS/tasks.c ****             {
1235:ThirdParty/FreeRTOS/tasks.c ****                 /* The tick count has overflowed since this function was
1236:ThirdParty/FreeRTOS/tasks.c ****                  * lasted called.  In this case the only time we should ever
1237:ThirdParty/FreeRTOS/tasks.c ****                  * actually delay is if the wake time has also  overflowed,
1238:ThirdParty/FreeRTOS/tasks.c ****                  * and the wake time is greater than the tick time.  When this
1239:ThirdParty/FreeRTOS/tasks.c ****                  * is the case it is as if neither time had overflowed. */
1240:ThirdParty/FreeRTOS/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1241:ThirdParty/FreeRTOS/tasks.c ****                 {
1242:ThirdParty/FreeRTOS/tasks.c ****                     xShouldDelay = pdTRUE;
1243:ThirdParty/FreeRTOS/tasks.c ****                 }
1244:ThirdParty/FreeRTOS/tasks.c ****                 else
1245:ThirdParty/FreeRTOS/tasks.c ****                 {
1246:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1247:ThirdParty/FreeRTOS/tasks.c ****                 }
1248:ThirdParty/FreeRTOS/tasks.c ****             }
1249:ThirdParty/FreeRTOS/tasks.c ****             else
1250:ThirdParty/FreeRTOS/tasks.c ****             {
1251:ThirdParty/FreeRTOS/tasks.c ****                 /* The tick time has not overflowed.  In this case we will
1252:ThirdParty/FreeRTOS/tasks.c ****                  * delay if either the wake time has overflowed, and/or the
1253:ThirdParty/FreeRTOS/tasks.c ****                  * tick time is less than the wake time. */
1254:ThirdParty/FreeRTOS/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1255:ThirdParty/FreeRTOS/tasks.c ****                 {
1256:ThirdParty/FreeRTOS/tasks.c ****                     xShouldDelay = pdTRUE;
1257:ThirdParty/FreeRTOS/tasks.c ****                 }
1258:ThirdParty/FreeRTOS/tasks.c ****                 else
1259:ThirdParty/FreeRTOS/tasks.c ****                 {
1260:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1261:ThirdParty/FreeRTOS/tasks.c ****                 }
1262:ThirdParty/FreeRTOS/tasks.c ****             }
1263:ThirdParty/FreeRTOS/tasks.c **** 
1264:ThirdParty/FreeRTOS/tasks.c ****             /* Update the wake time ready for the next call. */
1265:ThirdParty/FreeRTOS/tasks.c ****             *pxPreviousWakeTime = xTimeToWake;
1266:ThirdParty/FreeRTOS/tasks.c **** 
1267:ThirdParty/FreeRTOS/tasks.c ****             if( xShouldDelay != pdFALSE )
1268:ThirdParty/FreeRTOS/tasks.c ****             {
1269:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_DELAY_UNTIL( xTimeToWake );
1270:ThirdParty/FreeRTOS/tasks.c **** 
1271:ThirdParty/FreeRTOS/tasks.c ****                 /* prvAddCurrentTaskToDelayedList() needs the block time, not
1272:ThirdParty/FreeRTOS/tasks.c ****                  * the time to wake, so subtract the current tick count. */
1273:ThirdParty/FreeRTOS/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1274:ThirdParty/FreeRTOS/tasks.c ****             }
1275:ThirdParty/FreeRTOS/tasks.c ****             else
1276:ThirdParty/FreeRTOS/tasks.c ****             {
1277:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1278:ThirdParty/FreeRTOS/tasks.c ****             }
1279:ThirdParty/FreeRTOS/tasks.c ****         }
1280:ThirdParty/FreeRTOS/tasks.c ****         xAlreadyYielded = xTaskResumeAll();
1281:ThirdParty/FreeRTOS/tasks.c **** 
1282:ThirdParty/FreeRTOS/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1283:ThirdParty/FreeRTOS/tasks.c ****          * have put ourselves to sleep. */
1284:ThirdParty/FreeRTOS/tasks.c ****         if( xAlreadyYielded == pdFALSE )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 24


1285:ThirdParty/FreeRTOS/tasks.c ****         {
1286:ThirdParty/FreeRTOS/tasks.c ****             portYIELD_WITHIN_API();
1287:ThirdParty/FreeRTOS/tasks.c ****         }
1288:ThirdParty/FreeRTOS/tasks.c ****         else
1289:ThirdParty/FreeRTOS/tasks.c ****         {
1290:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1291:ThirdParty/FreeRTOS/tasks.c ****         }
1292:ThirdParty/FreeRTOS/tasks.c **** 
1293:ThirdParty/FreeRTOS/tasks.c ****         return xShouldDelay;
1294:ThirdParty/FreeRTOS/tasks.c ****     }
1295:ThirdParty/FreeRTOS/tasks.c **** 
1296:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskDelayUntil */
1297:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1298:ThirdParty/FreeRTOS/tasks.c **** 
1299:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1300:ThirdParty/FreeRTOS/tasks.c **** 
1301:ThirdParty/FreeRTOS/tasks.c ****     void vTaskDelay( const TickType_t xTicksToDelay )
1302:ThirdParty/FreeRTOS/tasks.c ****     {
1303:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
1304:ThirdParty/FreeRTOS/tasks.c **** 
1305:ThirdParty/FreeRTOS/tasks.c ****         /* A delay time of zero just forces a reschedule. */
1306:ThirdParty/FreeRTOS/tasks.c ****         if( xTicksToDelay > ( TickType_t ) 0U )
1307:ThirdParty/FreeRTOS/tasks.c ****         {
1308:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( uxSchedulerSuspended == 0 );
1309:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
1310:ThirdParty/FreeRTOS/tasks.c ****             {
1311:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_DELAY();
1312:ThirdParty/FreeRTOS/tasks.c **** 
1313:ThirdParty/FreeRTOS/tasks.c ****                 /* A task that is removed from the event list while the
1314:ThirdParty/FreeRTOS/tasks.c ****                  * scheduler is suspended will not get placed in the ready
1315:ThirdParty/FreeRTOS/tasks.c ****                  * list or removed from the blocked list until the scheduler
1316:ThirdParty/FreeRTOS/tasks.c ****                  * is resumed.
1317:ThirdParty/FreeRTOS/tasks.c ****                  *
1318:ThirdParty/FreeRTOS/tasks.c ****                  * This task cannot be in an event list as it is the currently
1319:ThirdParty/FreeRTOS/tasks.c ****                  * executing task. */
1320:ThirdParty/FreeRTOS/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1321:ThirdParty/FreeRTOS/tasks.c ****             }
1322:ThirdParty/FreeRTOS/tasks.c ****             xAlreadyYielded = xTaskResumeAll();
1323:ThirdParty/FreeRTOS/tasks.c ****         }
1324:ThirdParty/FreeRTOS/tasks.c ****         else
1325:ThirdParty/FreeRTOS/tasks.c ****         {
1326:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1327:ThirdParty/FreeRTOS/tasks.c ****         }
1328:ThirdParty/FreeRTOS/tasks.c **** 
1329:ThirdParty/FreeRTOS/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1330:ThirdParty/FreeRTOS/tasks.c ****          * have put ourselves to sleep. */
1331:ThirdParty/FreeRTOS/tasks.c ****         if( xAlreadyYielded == pdFALSE )
1332:ThirdParty/FreeRTOS/tasks.c ****         {
1333:ThirdParty/FreeRTOS/tasks.c ****             portYIELD_WITHIN_API();
1334:ThirdParty/FreeRTOS/tasks.c ****         }
1335:ThirdParty/FreeRTOS/tasks.c ****         else
1336:ThirdParty/FreeRTOS/tasks.c ****         {
1337:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1338:ThirdParty/FreeRTOS/tasks.c ****         }
1339:ThirdParty/FreeRTOS/tasks.c ****     }
1340:ThirdParty/FreeRTOS/tasks.c **** 
1341:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelay */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 25


1342:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1343:ThirdParty/FreeRTOS/tasks.c **** 
1344:ThirdParty/FreeRTOS/tasks.c **** #if ( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDe
1345:ThirdParty/FreeRTOS/tasks.c **** 
1346:ThirdParty/FreeRTOS/tasks.c ****     eTaskState eTaskGetState( TaskHandle_t xTask )
1347:ThirdParty/FreeRTOS/tasks.c ****     {
1348:ThirdParty/FreeRTOS/tasks.c ****         eTaskState eReturn;
1349:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxStateList;
1350:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxDelayedList;
1351:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxOverflowedDelayedList;
1352:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
1353:ThirdParty/FreeRTOS/tasks.c **** 
1354:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTCB );
1355:ThirdParty/FreeRTOS/tasks.c **** 
1356:ThirdParty/FreeRTOS/tasks.c ****         if( pxTCB == pxCurrentTCB )
1357:ThirdParty/FreeRTOS/tasks.c ****         {
1358:ThirdParty/FreeRTOS/tasks.c ****             /* The task calling this function is querying its own state. */
1359:ThirdParty/FreeRTOS/tasks.c ****             eReturn = eRunning;
1360:ThirdParty/FreeRTOS/tasks.c ****         }
1361:ThirdParty/FreeRTOS/tasks.c ****         else
1362:ThirdParty/FreeRTOS/tasks.c ****         {
1363:ThirdParty/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1364:ThirdParty/FreeRTOS/tasks.c ****             {
1365:ThirdParty/FreeRTOS/tasks.c ****                 pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1366:ThirdParty/FreeRTOS/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
1367:ThirdParty/FreeRTOS/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1368:ThirdParty/FreeRTOS/tasks.c ****             }
1369:ThirdParty/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1370:ThirdParty/FreeRTOS/tasks.c **** 
1371:ThirdParty/FreeRTOS/tasks.c ****             if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1372:ThirdParty/FreeRTOS/tasks.c ****             {
1373:ThirdParty/FreeRTOS/tasks.c ****                 /* The task being queried is referenced from one of the Blocked
1374:ThirdParty/FreeRTOS/tasks.c ****                  * lists. */
1375:ThirdParty/FreeRTOS/tasks.c ****                 eReturn = eBlocked;
1376:ThirdParty/FreeRTOS/tasks.c ****             }
1377:ThirdParty/FreeRTOS/tasks.c **** 
1378:ThirdParty/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
1379:ThirdParty/FreeRTOS/tasks.c ****                 else if( pxStateList == &xSuspendedTaskList )
1380:ThirdParty/FreeRTOS/tasks.c ****                 {
1381:ThirdParty/FreeRTOS/tasks.c ****                     /* The task being queried is referenced from the suspended
1382:ThirdParty/FreeRTOS/tasks.c ****                      * list.  Is it genuinely suspended or is it blocked
1383:ThirdParty/FreeRTOS/tasks.c ****                      * indefinitely? */
1384:ThirdParty/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1385:ThirdParty/FreeRTOS/tasks.c ****                     {
1386:ThirdParty/FreeRTOS/tasks.c ****                         #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1387:ThirdParty/FreeRTOS/tasks.c ****                         {
1388:ThirdParty/FreeRTOS/tasks.c ****                             BaseType_t x;
1389:ThirdParty/FreeRTOS/tasks.c **** 
1390:ThirdParty/FreeRTOS/tasks.c ****                             /* The task does not appear on the event list item of
1391:ThirdParty/FreeRTOS/tasks.c ****                              * and of the RTOS objects, but could still be in the
1392:ThirdParty/FreeRTOS/tasks.c ****                              * blocked state if it is waiting on its notification
1393:ThirdParty/FreeRTOS/tasks.c ****                              * rather than waiting on an object.  If not, is
1394:ThirdParty/FreeRTOS/tasks.c ****                              * suspended. */
1395:ThirdParty/FreeRTOS/tasks.c ****                             eReturn = eSuspended;
1396:ThirdParty/FreeRTOS/tasks.c **** 
1397:ThirdParty/FreeRTOS/tasks.c ****                             for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1398:ThirdParty/FreeRTOS/tasks.c ****                             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 26


1399:ThirdParty/FreeRTOS/tasks.c ****                                 if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1400:ThirdParty/FreeRTOS/tasks.c ****                                 {
1401:ThirdParty/FreeRTOS/tasks.c ****                                     eReturn = eBlocked;
1402:ThirdParty/FreeRTOS/tasks.c ****                                     break;
1403:ThirdParty/FreeRTOS/tasks.c ****                                 }
1404:ThirdParty/FreeRTOS/tasks.c ****                             }
1405:ThirdParty/FreeRTOS/tasks.c ****                         }
1406:ThirdParty/FreeRTOS/tasks.c ****                         #else /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1407:ThirdParty/FreeRTOS/tasks.c ****                         {
1408:ThirdParty/FreeRTOS/tasks.c ****                             eReturn = eSuspended;
1409:ThirdParty/FreeRTOS/tasks.c ****                         }
1410:ThirdParty/FreeRTOS/tasks.c ****                         #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1411:ThirdParty/FreeRTOS/tasks.c ****                     }
1412:ThirdParty/FreeRTOS/tasks.c ****                     else
1413:ThirdParty/FreeRTOS/tasks.c ****                     {
1414:ThirdParty/FreeRTOS/tasks.c ****                         eReturn = eBlocked;
1415:ThirdParty/FreeRTOS/tasks.c ****                     }
1416:ThirdParty/FreeRTOS/tasks.c ****                 }
1417:ThirdParty/FreeRTOS/tasks.c ****             #endif /* if ( INCLUDE_vTaskSuspend == 1 ) */
1418:ThirdParty/FreeRTOS/tasks.c **** 
1419:ThirdParty/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
1420:ThirdParty/FreeRTOS/tasks.c ****                 else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1421:ThirdParty/FreeRTOS/tasks.c ****                 {
1422:ThirdParty/FreeRTOS/tasks.c ****                     /* The task being queried is referenced from the deleted
1423:ThirdParty/FreeRTOS/tasks.c ****                      * tasks list, or it is not referenced from any lists at
1424:ThirdParty/FreeRTOS/tasks.c ****                      * all. */
1425:ThirdParty/FreeRTOS/tasks.c ****                     eReturn = eDeleted;
1426:ThirdParty/FreeRTOS/tasks.c ****                 }
1427:ThirdParty/FreeRTOS/tasks.c ****             #endif
1428:ThirdParty/FreeRTOS/tasks.c **** 
1429:ThirdParty/FreeRTOS/tasks.c ****             else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer
1430:ThirdParty/FreeRTOS/tasks.c ****             {
1431:ThirdParty/FreeRTOS/tasks.c ****                 /* If the task is not in any other state, it must be in the
1432:ThirdParty/FreeRTOS/tasks.c ****                  * Ready (including pending ready) state. */
1433:ThirdParty/FreeRTOS/tasks.c ****                 eReturn = eReady;
1434:ThirdParty/FreeRTOS/tasks.c ****             }
1435:ThirdParty/FreeRTOS/tasks.c ****         }
1436:ThirdParty/FreeRTOS/tasks.c **** 
1437:ThirdParty/FreeRTOS/tasks.c ****         return eReturn;
1438:ThirdParty/FreeRTOS/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1439:ThirdParty/FreeRTOS/tasks.c **** 
1440:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1441:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1442:ThirdParty/FreeRTOS/tasks.c **** 
1443:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1444:ThirdParty/FreeRTOS/tasks.c **** 
1445:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1446:ThirdParty/FreeRTOS/tasks.c ****     {
1447:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
1448:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
1449:ThirdParty/FreeRTOS/tasks.c **** 
1450:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1451:ThirdParty/FreeRTOS/tasks.c ****         {
1452:ThirdParty/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the task
1453:ThirdParty/FreeRTOS/tasks.c ****              * that called uxTaskPriorityGet() that is being queried. */
1454:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1455:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 27


1456:ThirdParty/FreeRTOS/tasks.c ****         }
1457:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1458:ThirdParty/FreeRTOS/tasks.c **** 
1459:ThirdParty/FreeRTOS/tasks.c ****         return uxReturn;
1460:ThirdParty/FreeRTOS/tasks.c ****     }
1461:ThirdParty/FreeRTOS/tasks.c **** 
1462:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1463:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1464:ThirdParty/FreeRTOS/tasks.c **** 
1465:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1466:ThirdParty/FreeRTOS/tasks.c **** 
1467:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1468:ThirdParty/FreeRTOS/tasks.c ****     {
1469:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
1470:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn, uxSavedInterruptState;
1471:ThirdParty/FreeRTOS/tasks.c **** 
1472:ThirdParty/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1473:ThirdParty/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1474:ThirdParty/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1475:ThirdParty/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1476:ThirdParty/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1477:ThirdParty/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
1478:ThirdParty/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1479:ThirdParty/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1480:ThirdParty/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
1481:ThirdParty/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1482:ThirdParty/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1483:ThirdParty/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1484:ThirdParty/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1485:ThirdParty/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1486:ThirdParty/FreeRTOS/tasks.c ****          * provided on the following link:
1487:ThirdParty/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1488:ThirdParty/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1489:ThirdParty/FreeRTOS/tasks.c **** 
1490:ThirdParty/FreeRTOS/tasks.c ****         uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1491:ThirdParty/FreeRTOS/tasks.c ****         {
1492:ThirdParty/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1493:ThirdParty/FreeRTOS/tasks.c ****              * task that is being queried. */
1494:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1495:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
1496:ThirdParty/FreeRTOS/tasks.c ****         }
1497:ThirdParty/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1498:ThirdParty/FreeRTOS/tasks.c **** 
1499:ThirdParty/FreeRTOS/tasks.c ****         return uxReturn;
1500:ThirdParty/FreeRTOS/tasks.c ****     }
1501:ThirdParty/FreeRTOS/tasks.c **** 
1502:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1503:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1504:ThirdParty/FreeRTOS/tasks.c **** 
1505:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1506:ThirdParty/FreeRTOS/tasks.c **** 
1507:ThirdParty/FreeRTOS/tasks.c ****     void vTaskPrioritySet( TaskHandle_t xTask,
1508:ThirdParty/FreeRTOS/tasks.c ****                            UBaseType_t uxNewPriority )
1509:ThirdParty/FreeRTOS/tasks.c ****     {
1510:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1511:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1512:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 28


1513:ThirdParty/FreeRTOS/tasks.c **** 
1514:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxNewPriority < configMAX_PRIORITIES );
1515:ThirdParty/FreeRTOS/tasks.c **** 
1516:ThirdParty/FreeRTOS/tasks.c ****         /* Ensure the new priority is valid. */
1517:ThirdParty/FreeRTOS/tasks.c ****         if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1518:ThirdParty/FreeRTOS/tasks.c ****         {
1519:ThirdParty/FreeRTOS/tasks.c ****             uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1520:ThirdParty/FreeRTOS/tasks.c ****         }
1521:ThirdParty/FreeRTOS/tasks.c ****         else
1522:ThirdParty/FreeRTOS/tasks.c ****         {
1523:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1524:ThirdParty/FreeRTOS/tasks.c ****         }
1525:ThirdParty/FreeRTOS/tasks.c **** 
1526:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1527:ThirdParty/FreeRTOS/tasks.c ****         {
1528:ThirdParty/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1529:ThirdParty/FreeRTOS/tasks.c ****              * task that is being changed. */
1530:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1531:ThirdParty/FreeRTOS/tasks.c **** 
1532:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1533:ThirdParty/FreeRTOS/tasks.c **** 
1534:ThirdParty/FreeRTOS/tasks.c ****             #if ( configUSE_MUTEXES == 1 )
1535:ThirdParty/FreeRTOS/tasks.c ****             {
1536:ThirdParty/FreeRTOS/tasks.c ****                 uxCurrentBasePriority = pxTCB->uxBasePriority;
1537:ThirdParty/FreeRTOS/tasks.c ****             }
1538:ThirdParty/FreeRTOS/tasks.c ****             #else
1539:ThirdParty/FreeRTOS/tasks.c ****             {
1540:ThirdParty/FreeRTOS/tasks.c ****                 uxCurrentBasePriority = pxTCB->uxPriority;
1541:ThirdParty/FreeRTOS/tasks.c ****             }
1542:ThirdParty/FreeRTOS/tasks.c ****             #endif
1543:ThirdParty/FreeRTOS/tasks.c **** 
1544:ThirdParty/FreeRTOS/tasks.c ****             if( uxCurrentBasePriority != uxNewPriority )
1545:ThirdParty/FreeRTOS/tasks.c ****             {
1546:ThirdParty/FreeRTOS/tasks.c ****                 /* The priority change may have readied a task of higher
1547:ThirdParty/FreeRTOS/tasks.c ****                  * priority than the calling task. */
1548:ThirdParty/FreeRTOS/tasks.c ****                 if( uxNewPriority > uxCurrentBasePriority )
1549:ThirdParty/FreeRTOS/tasks.c ****                 {
1550:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB != pxCurrentTCB )
1551:ThirdParty/FreeRTOS/tasks.c ****                     {
1552:ThirdParty/FreeRTOS/tasks.c ****                         /* The priority of a task other than the currently
1553:ThirdParty/FreeRTOS/tasks.c ****                          * running task is being raised.  Is the priority being
1554:ThirdParty/FreeRTOS/tasks.c ****                          * raised above that of the running task? */
1555:ThirdParty/FreeRTOS/tasks.c ****                         if( uxNewPriority >= pxCurrentTCB->uxPriority )
1556:ThirdParty/FreeRTOS/tasks.c ****                         {
1557:ThirdParty/FreeRTOS/tasks.c ****                             xYieldRequired = pdTRUE;
1558:ThirdParty/FreeRTOS/tasks.c ****                         }
1559:ThirdParty/FreeRTOS/tasks.c ****                         else
1560:ThirdParty/FreeRTOS/tasks.c ****                         {
1561:ThirdParty/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
1562:ThirdParty/FreeRTOS/tasks.c ****                         }
1563:ThirdParty/FreeRTOS/tasks.c ****                     }
1564:ThirdParty/FreeRTOS/tasks.c ****                     else
1565:ThirdParty/FreeRTOS/tasks.c ****                     {
1566:ThirdParty/FreeRTOS/tasks.c ****                         /* The priority of the running task is being raised,
1567:ThirdParty/FreeRTOS/tasks.c ****                          * but the running task must already be the highest
1568:ThirdParty/FreeRTOS/tasks.c ****                          * priority task able to run so no yield is required. */
1569:ThirdParty/FreeRTOS/tasks.c ****                     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 29


1570:ThirdParty/FreeRTOS/tasks.c ****                 }
1571:ThirdParty/FreeRTOS/tasks.c ****                 else if( pxTCB == pxCurrentTCB )
1572:ThirdParty/FreeRTOS/tasks.c ****                 {
1573:ThirdParty/FreeRTOS/tasks.c ****                     /* Setting the priority of the running task down means
1574:ThirdParty/FreeRTOS/tasks.c ****                      * there may now be another task of higher priority that
1575:ThirdParty/FreeRTOS/tasks.c ****                      * is ready to execute. */
1576:ThirdParty/FreeRTOS/tasks.c ****                     xYieldRequired = pdTRUE;
1577:ThirdParty/FreeRTOS/tasks.c ****                 }
1578:ThirdParty/FreeRTOS/tasks.c ****                 else
1579:ThirdParty/FreeRTOS/tasks.c ****                 {
1580:ThirdParty/FreeRTOS/tasks.c ****                     /* Setting the priority of any other task down does not
1581:ThirdParty/FreeRTOS/tasks.c ****                      * require a yield as the running task must be above the
1582:ThirdParty/FreeRTOS/tasks.c ****                      * new priority of the task being modified. */
1583:ThirdParty/FreeRTOS/tasks.c ****                 }
1584:ThirdParty/FreeRTOS/tasks.c **** 
1585:ThirdParty/FreeRTOS/tasks.c ****                 /* Remember the ready list the task might be referenced from
1586:ThirdParty/FreeRTOS/tasks.c ****                  * before its uxPriority member is changed so the
1587:ThirdParty/FreeRTOS/tasks.c ****                  * taskRESET_READY_PRIORITY() macro can function correctly. */
1588:ThirdParty/FreeRTOS/tasks.c ****                 uxPriorityUsedOnEntry = pxTCB->uxPriority;
1589:ThirdParty/FreeRTOS/tasks.c **** 
1590:ThirdParty/FreeRTOS/tasks.c ****                 #if ( configUSE_MUTEXES == 1 )
1591:ThirdParty/FreeRTOS/tasks.c ****                 {
1592:ThirdParty/FreeRTOS/tasks.c ****                     /* Only change the priority being used if the task is not
1593:ThirdParty/FreeRTOS/tasks.c ****                      * currently using an inherited priority. */
1594:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1595:ThirdParty/FreeRTOS/tasks.c ****                     {
1596:ThirdParty/FreeRTOS/tasks.c ****                         pxTCB->uxPriority = uxNewPriority;
1597:ThirdParty/FreeRTOS/tasks.c ****                     }
1598:ThirdParty/FreeRTOS/tasks.c ****                     else
1599:ThirdParty/FreeRTOS/tasks.c ****                     {
1600:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1601:ThirdParty/FreeRTOS/tasks.c ****                     }
1602:ThirdParty/FreeRTOS/tasks.c **** 
1603:ThirdParty/FreeRTOS/tasks.c ****                     /* The base priority gets set whatever. */
1604:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxBasePriority = uxNewPriority;
1605:ThirdParty/FreeRTOS/tasks.c ****                 }
1606:ThirdParty/FreeRTOS/tasks.c ****                 #else /* if ( configUSE_MUTEXES == 1 ) */
1607:ThirdParty/FreeRTOS/tasks.c ****                 {
1608:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxNewPriority;
1609:ThirdParty/FreeRTOS/tasks.c ****                 }
1610:ThirdParty/FreeRTOS/tasks.c ****                 #endif /* if ( configUSE_MUTEXES == 1 ) */
1611:ThirdParty/FreeRTOS/tasks.c **** 
1612:ThirdParty/FreeRTOS/tasks.c ****                 /* Only reset the event list item value if the value is not
1613:ThirdParty/FreeRTOS/tasks.c ****                  * being used for anything else. */
1614:ThirdParty/FreeRTOS/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_V
1615:ThirdParty/FreeRTOS/tasks.c ****                 {
1616:ThirdParty/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX
1617:ThirdParty/FreeRTOS/tasks.c ****                 }
1618:ThirdParty/FreeRTOS/tasks.c ****                 else
1619:ThirdParty/FreeRTOS/tasks.c ****                 {
1620:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1621:ThirdParty/FreeRTOS/tasks.c ****                 }
1622:ThirdParty/FreeRTOS/tasks.c **** 
1623:ThirdParty/FreeRTOS/tasks.c ****                 /* If the task is in the blocked or suspended list we need do
1624:ThirdParty/FreeRTOS/tasks.c ****                  * nothing more than change its priority variable. However, if
1625:ThirdParty/FreeRTOS/tasks.c ****                  * the task is in a ready list it needs to be removed and placed
1626:ThirdParty/FreeRTOS/tasks.c ****                  * in the list appropriate to its new priority. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 30


1627:ThirdParty/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( px
1628:ThirdParty/FreeRTOS/tasks.c ****                 {
1629:ThirdParty/FreeRTOS/tasks.c ****                     /* The task is currently in its ready list - remove before
1630:ThirdParty/FreeRTOS/tasks.c ****                      * adding it to its new ready list.  As we are in a critical
1631:ThirdParty/FreeRTOS/tasks.c ****                      * section we can do this even if the scheduler is suspended. */
1632:ThirdParty/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1633:ThirdParty/FreeRTOS/tasks.c ****                     {
1634:ThirdParty/FreeRTOS/tasks.c ****                         /* It is known that the task is in its ready list so
1635:ThirdParty/FreeRTOS/tasks.c ****                          * there is no need to check again and the port level
1636:ThirdParty/FreeRTOS/tasks.c ****                          * reset macro can be called directly. */
1637:ThirdParty/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1638:ThirdParty/FreeRTOS/tasks.c ****                     }
1639:ThirdParty/FreeRTOS/tasks.c ****                     else
1640:ThirdParty/FreeRTOS/tasks.c ****                     {
1641:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1642:ThirdParty/FreeRTOS/tasks.c ****                     }
1643:ThirdParty/FreeRTOS/tasks.c **** 
1644:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1645:ThirdParty/FreeRTOS/tasks.c ****                 }
1646:ThirdParty/FreeRTOS/tasks.c ****                 else
1647:ThirdParty/FreeRTOS/tasks.c ****                 {
1648:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1649:ThirdParty/FreeRTOS/tasks.c ****                 }
1650:ThirdParty/FreeRTOS/tasks.c **** 
1651:ThirdParty/FreeRTOS/tasks.c ****                 if( xYieldRequired != pdFALSE )
1652:ThirdParty/FreeRTOS/tasks.c ****                 {
1653:ThirdParty/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
1654:ThirdParty/FreeRTOS/tasks.c ****                 }
1655:ThirdParty/FreeRTOS/tasks.c ****                 else
1656:ThirdParty/FreeRTOS/tasks.c ****                 {
1657:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1658:ThirdParty/FreeRTOS/tasks.c ****                 }
1659:ThirdParty/FreeRTOS/tasks.c **** 
1660:ThirdParty/FreeRTOS/tasks.c ****                 /* Remove compiler warning about unused variables when the port
1661:ThirdParty/FreeRTOS/tasks.c ****                  * optimised task selection is not being used. */
1662:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxPriorityUsedOnEntry;
1663:ThirdParty/FreeRTOS/tasks.c ****             }
1664:ThirdParty/FreeRTOS/tasks.c ****         }
1665:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1666:ThirdParty/FreeRTOS/tasks.c ****     }
1667:ThirdParty/FreeRTOS/tasks.c **** 
1668:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1669:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1670:ThirdParty/FreeRTOS/tasks.c **** 
1671:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1672:ThirdParty/FreeRTOS/tasks.c **** 
1673:ThirdParty/FreeRTOS/tasks.c ****     void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1674:ThirdParty/FreeRTOS/tasks.c ****     {
1675:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1676:ThirdParty/FreeRTOS/tasks.c **** 
1677:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1678:ThirdParty/FreeRTOS/tasks.c ****         {
1679:ThirdParty/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the running task that is
1680:ThirdParty/FreeRTOS/tasks.c ****              * being suspended. */
1681:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1682:ThirdParty/FreeRTOS/tasks.c **** 
1683:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_SUSPEND( pxTCB );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 31


1684:ThirdParty/FreeRTOS/tasks.c **** 
1685:ThirdParty/FreeRTOS/tasks.c ****             /* Remove task from the ready/delayed list and place in the
1686:ThirdParty/FreeRTOS/tasks.c ****              * suspended list. */
1687:ThirdParty/FreeRTOS/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1688:ThirdParty/FreeRTOS/tasks.c ****             {
1689:ThirdParty/FreeRTOS/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1690:ThirdParty/FreeRTOS/tasks.c ****             }
1691:ThirdParty/FreeRTOS/tasks.c ****             else
1692:ThirdParty/FreeRTOS/tasks.c ****             {
1693:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1694:ThirdParty/FreeRTOS/tasks.c ****             }
1695:ThirdParty/FreeRTOS/tasks.c **** 
1696:ThirdParty/FreeRTOS/tasks.c ****             /* Is the task waiting on an event also? */
1697:ThirdParty/FreeRTOS/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1698:ThirdParty/FreeRTOS/tasks.c ****             {
1699:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1700:ThirdParty/FreeRTOS/tasks.c ****             }
1701:ThirdParty/FreeRTOS/tasks.c ****             else
1702:ThirdParty/FreeRTOS/tasks.c ****             {
1703:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1704:ThirdParty/FreeRTOS/tasks.c ****             }
1705:ThirdParty/FreeRTOS/tasks.c **** 
1706:ThirdParty/FreeRTOS/tasks.c ****             vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1707:ThirdParty/FreeRTOS/tasks.c **** 
1708:ThirdParty/FreeRTOS/tasks.c ****             #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1709:ThirdParty/FreeRTOS/tasks.c ****             {
1710:ThirdParty/FreeRTOS/tasks.c ****                 BaseType_t x;
1711:ThirdParty/FreeRTOS/tasks.c **** 
1712:ThirdParty/FreeRTOS/tasks.c ****                 for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1713:ThirdParty/FreeRTOS/tasks.c ****                 {
1714:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1715:ThirdParty/FreeRTOS/tasks.c ****                     {
1716:ThirdParty/FreeRTOS/tasks.c ****                         /* The task was blocked to wait for a notification, but is
1717:ThirdParty/FreeRTOS/tasks.c ****                          * now suspended, so no notification was received. */
1718:ThirdParty/FreeRTOS/tasks.c ****                         pxTCB->ucNotifyState[ x ] = taskNOT_WAITING_NOTIFICATION;
1719:ThirdParty/FreeRTOS/tasks.c ****                     }
1720:ThirdParty/FreeRTOS/tasks.c ****                 }
1721:ThirdParty/FreeRTOS/tasks.c ****             }
1722:ThirdParty/FreeRTOS/tasks.c ****             #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1723:ThirdParty/FreeRTOS/tasks.c ****         }
1724:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1725:ThirdParty/FreeRTOS/tasks.c **** 
1726:ThirdParty/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
1727:ThirdParty/FreeRTOS/tasks.c ****         {
1728:ThirdParty/FreeRTOS/tasks.c ****             /* Reset the next expected unblock time in case it referred to the
1729:ThirdParty/FreeRTOS/tasks.c ****              * task that is now in the Suspended state. */
1730:ThirdParty/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1731:ThirdParty/FreeRTOS/tasks.c ****             {
1732:ThirdParty/FreeRTOS/tasks.c ****                 prvResetNextTaskUnblockTime();
1733:ThirdParty/FreeRTOS/tasks.c ****             }
1734:ThirdParty/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1735:ThirdParty/FreeRTOS/tasks.c ****         }
1736:ThirdParty/FreeRTOS/tasks.c ****         else
1737:ThirdParty/FreeRTOS/tasks.c ****         {
1738:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1739:ThirdParty/FreeRTOS/tasks.c ****         }
1740:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 32


1741:ThirdParty/FreeRTOS/tasks.c ****         if( pxTCB == pxCurrentTCB )
1742:ThirdParty/FreeRTOS/tasks.c ****         {
1743:ThirdParty/FreeRTOS/tasks.c ****             if( xSchedulerRunning != pdFALSE )
1744:ThirdParty/FreeRTOS/tasks.c ****             {
1745:ThirdParty/FreeRTOS/tasks.c ****                 /* The current task has just been suspended. */
1746:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1747:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
1748:ThirdParty/FreeRTOS/tasks.c ****             }
1749:ThirdParty/FreeRTOS/tasks.c ****             else
1750:ThirdParty/FreeRTOS/tasks.c ****             {
1751:ThirdParty/FreeRTOS/tasks.c ****                 /* The scheduler is not running, but the task that was pointed
1752:ThirdParty/FreeRTOS/tasks.c ****                  * to by pxCurrentTCB has just been suspended and pxCurrentTCB
1753:ThirdParty/FreeRTOS/tasks.c ****                  * must be adjusted to point to a different task. */
1754:ThirdParty/FreeRTOS/tasks.c ****                 if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*li
1755:ThirdParty/FreeRTOS/tasks.c ****                 {
1756:ThirdParty/FreeRTOS/tasks.c ****                     /* No other tasks are ready, so set pxCurrentTCB back to
1757:ThirdParty/FreeRTOS/tasks.c ****                      * NULL so when the next task is created pxCurrentTCB will
1758:ThirdParty/FreeRTOS/tasks.c ****                      * be set to point to it no matter what its relative priority
1759:ThirdParty/FreeRTOS/tasks.c ****                      * is. */
1760:ThirdParty/FreeRTOS/tasks.c ****                     pxCurrentTCB = NULL;
1761:ThirdParty/FreeRTOS/tasks.c ****                 }
1762:ThirdParty/FreeRTOS/tasks.c ****                 else
1763:ThirdParty/FreeRTOS/tasks.c ****                 {
1764:ThirdParty/FreeRTOS/tasks.c ****                     vTaskSwitchContext();
1765:ThirdParty/FreeRTOS/tasks.c ****                 }
1766:ThirdParty/FreeRTOS/tasks.c ****             }
1767:ThirdParty/FreeRTOS/tasks.c ****         }
1768:ThirdParty/FreeRTOS/tasks.c ****         else
1769:ThirdParty/FreeRTOS/tasks.c ****         {
1770:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1771:ThirdParty/FreeRTOS/tasks.c ****         }
1772:ThirdParty/FreeRTOS/tasks.c ****     }
1773:ThirdParty/FreeRTOS/tasks.c **** 
1774:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1775:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1776:ThirdParty/FreeRTOS/tasks.c **** 
1777:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1778:ThirdParty/FreeRTOS/tasks.c **** 
1779:ThirdParty/FreeRTOS/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1780:ThirdParty/FreeRTOS/tasks.c ****     {
  29              		.loc 1 1780 5 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1781:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
  34              		.loc 1 1781 9 view .LVU1
1782:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  35              		.loc 1 1782 9 view .LVU2
1783:ThirdParty/FreeRTOS/tasks.c **** 
1784:ThirdParty/FreeRTOS/tasks.c ****         /* Accesses xPendingReadyList so must be called from a critical
1785:ThirdParty/FreeRTOS/tasks.c ****          * section. */
1786:ThirdParty/FreeRTOS/tasks.c **** 
1787:ThirdParty/FreeRTOS/tasks.c ****         /* It does not make sense to check if the calling task is suspended. */
1788:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTask );
  36              		.loc 1 1788 9 view .LVU3
  37 0000 28B1     		cbz	r0, .L8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 33


  38              		.loc 1 1788 30 discriminator 2 view .LVU4
1789:ThirdParty/FreeRTOS/tasks.c **** 
1790:ThirdParty/FreeRTOS/tasks.c ****         /* Is the task being resumed actually in the suspended list? */
1791:ThirdParty/FreeRTOS/tasks.c ****         if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  39              		.loc 1 1791 9 view .LVU5
  40              		.loc 1 1791 13 is_stmt 0 view .LVU6
  41 0002 4169     		ldr	r1, [r0, #20]
  42              		.loc 1 1791 11 view .LVU7
  43 0004 0C4A     		ldr	r2, .L10
  44 0006 9142     		cmp	r1, r2
  45 0008 0AD0     		beq	.L9
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  46              		.loc 1 1781 20 view .LVU8
  47 000a 0020     		movs	r0, #0
  48              	.LVL1:
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  49              		.loc 1 1781 20 view .LVU9
  50 000c 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1788:ThirdParty/FreeRTOS/tasks.c **** 
  53              		.loc 1 1788 9 is_stmt 1 discriminator 1 view .LVU10
  54              	.LBB155:
  55              	.LBI155:
  56              		.file 2 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
   1:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.5.1
   3:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   7:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  13:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  14:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  16:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  17:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  24:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  25:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  26:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  27:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  28:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  30:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  31:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  32:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 34


  33:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  34:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  35:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  36:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  37:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  38:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  39:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  40:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  41:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  42:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  43:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  44:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  45:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  46:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  48:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  49:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  50:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  51:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  52:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  53:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  54:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  55:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  57:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  58:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  59:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  60:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  61:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
  62:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  63:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  64:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  65:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  66:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  68:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  69:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  70:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  71:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  72:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  73:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  74:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  75:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  76:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  77:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  78:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  79:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  80:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  81:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  82:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  83:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  84:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  85:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  86:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  87:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  88:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  89:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 35


  90:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
  91:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  92:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  93:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  94:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  95:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  96:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  97:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  98:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  99:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
 100:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 101:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 102:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 103:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 104:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 105:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 106:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 107:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 109:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 110:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 111:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 112:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 113:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 114:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 115:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 116:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 117:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 118:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 119:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 120:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 121:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 122:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 123:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 124:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 125:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 126:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 127:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 128:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 130:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 131:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 132:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 133:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 134:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 135:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 136:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 137:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 139:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 140:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 141:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 142:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 143:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 144:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 145:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 146:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 36


 147:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 148:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 149:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 152:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 153:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 154:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 155:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 156:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 158:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 159:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 160:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 161:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 162:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 165:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 166:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 167:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 168:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 169:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 170:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 171:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 172:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 173:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 174:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 175:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
 176:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 178:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 179:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 181:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 182:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 183:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 184:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         else
 185:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 186:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 187:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 188:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 190:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 191:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 192:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 193:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  57              		.loc 2 194 34 view .LVU11
  58              	.LBB156:
 195:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
  59              		.loc 2 196 9 view .LVU12
 197:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
  60              		.loc 2 198 9 view .LVU13
  61              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 37


  62              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
  63 000e 4FF05003 			mov r3, #80												
  64 0012 83F31188 		msr basepri, r3											
  65 0016 BFF36F8F 		isb														
  66 001a BFF34F8F 		dsb														
  67              	
  68              	@ 0 "" 2
  69              		.thumb
  70              		.syntax unified
  71              	.L3:
  72              	.LBE156:
  73              	.LBE155:
1788:ThirdParty/FreeRTOS/tasks.c **** 
  74              		.loc 1 1788 9 discriminator 3 view .LVU14
1788:ThirdParty/FreeRTOS/tasks.c **** 
  75              		.loc 1 1788 9 discriminator 3 view .LVU15
  76 001e FEE7     		b	.L3
  77              	.L9:
1792:ThirdParty/FreeRTOS/tasks.c ****         {
1793:ThirdParty/FreeRTOS/tasks.c ****             /* Has the task already been resumed from within an ISR? */
1794:ThirdParty/FreeRTOS/tasks.c ****             if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALS
  78              		.loc 1 1794 13 view .LVU16
  79              		.loc 1 1794 17 is_stmt 0 view .LVU17
  80 0020 836A     		ldr	r3, [r0, #40]
  81              		.loc 1 1794 15 view .LVU18
  82 0022 064A     		ldr	r2, .L10+4
  83 0024 9342     		cmp	r3, r2
  84 0026 02D0     		beq	.L6
1795:ThirdParty/FreeRTOS/tasks.c ****             {
1796:ThirdParty/FreeRTOS/tasks.c ****                 /* Is it in the suspended list because it is in the Suspended
1797:ThirdParty/FreeRTOS/tasks.c ****                  * state, or because is is blocked with no timeout? */
1798:ThirdParty/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint
  85              		.loc 1 1798 17 is_stmt 1 view .LVU19
  86              		.loc 1 1798 19 is_stmt 0 view .LVU20
  87 0028 1BB1     		cbz	r3, .L7
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  88              		.loc 1 1781 20 view .LVU21
  89 002a 0020     		movs	r0, #0
  90              	.LVL3:
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  91              		.loc 1 1781 20 view .LVU22
  92 002c 7047     		bx	lr
  93              	.LVL4:
  94              	.L6:
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  95              		.loc 1 1781 20 view .LVU23
  96 002e 0020     		movs	r0, #0
  97              	.LVL5:
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  98              		.loc 1 1781 20 view .LVU24
  99 0030 7047     		bx	lr
 100              	.LVL6:
 101              	.L7:
1799:ThirdParty/FreeRTOS/tasks.c ****                 {
1800:ThirdParty/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
 102              		.loc 1 1800 29 view .LVU25
 103 0032 0120     		movs	r0, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 38


 104              	.LVL7:
1801:ThirdParty/FreeRTOS/tasks.c ****                 }
1802:ThirdParty/FreeRTOS/tasks.c ****                 else
1803:ThirdParty/FreeRTOS/tasks.c ****                 {
1804:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1805:ThirdParty/FreeRTOS/tasks.c ****                 }
1806:ThirdParty/FreeRTOS/tasks.c ****             }
1807:ThirdParty/FreeRTOS/tasks.c ****             else
1808:ThirdParty/FreeRTOS/tasks.c ****             {
1809:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1810:ThirdParty/FreeRTOS/tasks.c ****             }
1811:ThirdParty/FreeRTOS/tasks.c ****         }
1812:ThirdParty/FreeRTOS/tasks.c ****         else
1813:ThirdParty/FreeRTOS/tasks.c ****         {
1814:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
 105              		.loc 1 1814 37 is_stmt 1 view .LVU26
1815:ThirdParty/FreeRTOS/tasks.c ****         }
1816:ThirdParty/FreeRTOS/tasks.c **** 
1817:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
 106              		.loc 1 1817 9 view .LVU27
1818:ThirdParty/FreeRTOS/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 107              		.loc 1 1818 5 is_stmt 0 view .LVU28
 108 0034 7047     		bx	lr
 109              	.L11:
 110 0036 00BF     		.align	2
 111              	.L10:
 112 0038 00000000 		.word	xSuspendedTaskList
 113 003c 00000000 		.word	xPendingReadyList
 114              		.cfi_endproc
 115              	.LFE16:
 117              		.section	.text.prvTaskCheckFreeStackSpace,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 123              	prvTaskCheckFreeStackSpace:
 124              	.LVL8:
 125              	.LFB47:
1819:ThirdParty/FreeRTOS/tasks.c **** 
1820:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1821:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1822:ThirdParty/FreeRTOS/tasks.c **** 
1823:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1824:ThirdParty/FreeRTOS/tasks.c **** 
1825:ThirdParty/FreeRTOS/tasks.c ****     void vTaskResume( TaskHandle_t xTaskToResume )
1826:ThirdParty/FreeRTOS/tasks.c ****     {
1827:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1828:ThirdParty/FreeRTOS/tasks.c **** 
1829:ThirdParty/FreeRTOS/tasks.c ****         /* It does not make sense to resume the calling task. */
1830:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToResume );
1831:ThirdParty/FreeRTOS/tasks.c **** 
1832:ThirdParty/FreeRTOS/tasks.c ****         /* The parameter cannot be NULL as it is impossible to resume the
1833:ThirdParty/FreeRTOS/tasks.c ****          * currently executing task. */
1834:ThirdParty/FreeRTOS/tasks.c ****         if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1835:ThirdParty/FreeRTOS/tasks.c ****         {
1836:ThirdParty/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1837:ThirdParty/FreeRTOS/tasks.c ****             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 39


1838:ThirdParty/FreeRTOS/tasks.c ****                 if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1839:ThirdParty/FreeRTOS/tasks.c ****                 {
1840:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_RESUME( pxTCB );
1841:ThirdParty/FreeRTOS/tasks.c **** 
1842:ThirdParty/FreeRTOS/tasks.c ****                     /* The ready list can be accessed even if the scheduler is
1843:ThirdParty/FreeRTOS/tasks.c ****                      * suspended because this is inside a critical section. */
1844:ThirdParty/FreeRTOS/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1845:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1846:ThirdParty/FreeRTOS/tasks.c **** 
1847:ThirdParty/FreeRTOS/tasks.c ****                     /* A higher priority task may have just been resumed. */
1848:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1849:ThirdParty/FreeRTOS/tasks.c ****                     {
1850:ThirdParty/FreeRTOS/tasks.c ****                         /* This yield may not cause the task just resumed to run,
1851:ThirdParty/FreeRTOS/tasks.c ****                          * but will leave the lists in the correct state for the
1852:ThirdParty/FreeRTOS/tasks.c ****                          * next yield. */
1853:ThirdParty/FreeRTOS/tasks.c ****                         taskYIELD_IF_USING_PREEMPTION();
1854:ThirdParty/FreeRTOS/tasks.c ****                     }
1855:ThirdParty/FreeRTOS/tasks.c ****                     else
1856:ThirdParty/FreeRTOS/tasks.c ****                     {
1857:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1858:ThirdParty/FreeRTOS/tasks.c ****                     }
1859:ThirdParty/FreeRTOS/tasks.c ****                 }
1860:ThirdParty/FreeRTOS/tasks.c ****                 else
1861:ThirdParty/FreeRTOS/tasks.c ****                 {
1862:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1863:ThirdParty/FreeRTOS/tasks.c ****                 }
1864:ThirdParty/FreeRTOS/tasks.c ****             }
1865:ThirdParty/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1866:ThirdParty/FreeRTOS/tasks.c ****         }
1867:ThirdParty/FreeRTOS/tasks.c ****         else
1868:ThirdParty/FreeRTOS/tasks.c ****         {
1869:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1870:ThirdParty/FreeRTOS/tasks.c ****         }
1871:ThirdParty/FreeRTOS/tasks.c ****     }
1872:ThirdParty/FreeRTOS/tasks.c **** 
1873:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1874:ThirdParty/FreeRTOS/tasks.c **** 
1875:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1876:ThirdParty/FreeRTOS/tasks.c **** 
1877:ThirdParty/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1878:ThirdParty/FreeRTOS/tasks.c **** 
1879:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1880:ThirdParty/FreeRTOS/tasks.c ****     {
1881:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
1882:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1883:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
1884:ThirdParty/FreeRTOS/tasks.c **** 
1885:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToResume );
1886:ThirdParty/FreeRTOS/tasks.c **** 
1887:ThirdParty/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1888:ThirdParty/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1889:ThirdParty/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1890:ThirdParty/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1891:ThirdParty/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1892:ThirdParty/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
1893:ThirdParty/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1894:ThirdParty/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 40


1895:ThirdParty/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
1896:ThirdParty/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1897:ThirdParty/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1898:ThirdParty/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1899:ThirdParty/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1900:ThirdParty/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1901:ThirdParty/FreeRTOS/tasks.c ****          * provided on the following link:
1902:ThirdParty/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1903:ThirdParty/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1904:ThirdParty/FreeRTOS/tasks.c **** 
1905:ThirdParty/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1906:ThirdParty/FreeRTOS/tasks.c ****         {
1907:ThirdParty/FreeRTOS/tasks.c ****             if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1908:ThirdParty/FreeRTOS/tasks.c ****             {
1909:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_RESUME_FROM_ISR( pxTCB );
1910:ThirdParty/FreeRTOS/tasks.c **** 
1911:ThirdParty/FreeRTOS/tasks.c ****                 /* Check the ready lists can be accessed. */
1912:ThirdParty/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1913:ThirdParty/FreeRTOS/tasks.c ****                 {
1914:ThirdParty/FreeRTOS/tasks.c ****                     /* Ready lists can be accessed so move the task from the
1915:ThirdParty/FreeRTOS/tasks.c ****                      * suspended list to the ready list directly. */
1916:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1917:ThirdParty/FreeRTOS/tasks.c ****                     {
1918:ThirdParty/FreeRTOS/tasks.c ****                         xYieldRequired = pdTRUE;
1919:ThirdParty/FreeRTOS/tasks.c **** 
1920:ThirdParty/FreeRTOS/tasks.c ****                         /* Mark that a yield is pending in case the user is not
1921:ThirdParty/FreeRTOS/tasks.c ****                          * using the return value to initiate a context switch
1922:ThirdParty/FreeRTOS/tasks.c ****                          * from the ISR using portYIELD_FROM_ISR. */
1923:ThirdParty/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
1924:ThirdParty/FreeRTOS/tasks.c ****                     }
1925:ThirdParty/FreeRTOS/tasks.c ****                     else
1926:ThirdParty/FreeRTOS/tasks.c ****                     {
1927:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1928:ThirdParty/FreeRTOS/tasks.c ****                     }
1929:ThirdParty/FreeRTOS/tasks.c **** 
1930:ThirdParty/FreeRTOS/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1931:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1932:ThirdParty/FreeRTOS/tasks.c ****                 }
1933:ThirdParty/FreeRTOS/tasks.c ****                 else
1934:ThirdParty/FreeRTOS/tasks.c ****                 {
1935:ThirdParty/FreeRTOS/tasks.c ****                     /* The delayed or ready lists cannot be accessed so the task
1936:ThirdParty/FreeRTOS/tasks.c ****                      * is held in the pending ready list until the scheduler is
1937:ThirdParty/FreeRTOS/tasks.c ****                      * unsuspended. */
1938:ThirdParty/FreeRTOS/tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1939:ThirdParty/FreeRTOS/tasks.c ****                 }
1940:ThirdParty/FreeRTOS/tasks.c ****             }
1941:ThirdParty/FreeRTOS/tasks.c ****             else
1942:ThirdParty/FreeRTOS/tasks.c ****             {
1943:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1944:ThirdParty/FreeRTOS/tasks.c ****             }
1945:ThirdParty/FreeRTOS/tasks.c ****         }
1946:ThirdParty/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1947:ThirdParty/FreeRTOS/tasks.c **** 
1948:ThirdParty/FreeRTOS/tasks.c ****         return xYieldRequired;
1949:ThirdParty/FreeRTOS/tasks.c ****     }
1950:ThirdParty/FreeRTOS/tasks.c **** 
1951:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 41


1952:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1953:ThirdParty/FreeRTOS/tasks.c **** 
1954:ThirdParty/FreeRTOS/tasks.c **** void vTaskStartScheduler( void )
1955:ThirdParty/FreeRTOS/tasks.c **** {
1956:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
1957:ThirdParty/FreeRTOS/tasks.c **** 
1958:ThirdParty/FreeRTOS/tasks.c ****     /* Add the idle task at the lowest priority. */
1959:ThirdParty/FreeRTOS/tasks.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
1960:ThirdParty/FreeRTOS/tasks.c ****     {
1961:ThirdParty/FreeRTOS/tasks.c ****         StaticTask_t * pxIdleTaskTCBBuffer = NULL;
1962:ThirdParty/FreeRTOS/tasks.c ****         StackType_t * pxIdleTaskStackBuffer = NULL;
1963:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulIdleTaskStackSize;
1964:ThirdParty/FreeRTOS/tasks.c **** 
1965:ThirdParty/FreeRTOS/tasks.c ****         /* The Idle task is created using user provided RAM - obtain the
1966:ThirdParty/FreeRTOS/tasks.c ****          * address of the RAM then create the idle task. */
1967:ThirdParty/FreeRTOS/tasks.c ****         vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskSta
1968:ThirdParty/FreeRTOS/tasks.c ****         xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
1969:ThirdParty/FreeRTOS/tasks.c ****                                              configIDLE_TASK_NAME,
1970:ThirdParty/FreeRTOS/tasks.c ****                                              ulIdleTaskStackSize,
1971:ThirdParty/FreeRTOS/tasks.c ****                                              ( void * ) NULL,       /*lint !e961.  The cast is not 
1972:ThirdParty/FreeRTOS/tasks.c ****                                              portPRIVILEGE_BIT,     /* In effect ( tskIDLE_PRIORITY
1973:ThirdParty/FreeRTOS/tasks.c ****                                              pxIdleTaskStackBuffer,
1974:ThirdParty/FreeRTOS/tasks.c ****                                              pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, j
1975:ThirdParty/FreeRTOS/tasks.c **** 
1976:ThirdParty/FreeRTOS/tasks.c ****         if( xIdleTaskHandle != NULL )
1977:ThirdParty/FreeRTOS/tasks.c ****         {
1978:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdPASS;
1979:ThirdParty/FreeRTOS/tasks.c ****         }
1980:ThirdParty/FreeRTOS/tasks.c ****         else
1981:ThirdParty/FreeRTOS/tasks.c ****         {
1982:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdFAIL;
1983:ThirdParty/FreeRTOS/tasks.c ****         }
1984:ThirdParty/FreeRTOS/tasks.c ****     }
1985:ThirdParty/FreeRTOS/tasks.c ****     #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
1986:ThirdParty/FreeRTOS/tasks.c ****     {
1987:ThirdParty/FreeRTOS/tasks.c ****         /* The Idle task is being created using dynamically allocated RAM. */
1988:ThirdParty/FreeRTOS/tasks.c ****         xReturn = xTaskCreate( prvIdleTask,
1989:ThirdParty/FreeRTOS/tasks.c ****                                configIDLE_TASK_NAME,
1990:ThirdParty/FreeRTOS/tasks.c ****                                configMINIMAL_STACK_SIZE,
1991:ThirdParty/FreeRTOS/tasks.c ****                                ( void * ) NULL,
1992:ThirdParty/FreeRTOS/tasks.c ****                                portPRIVILEGE_BIT,  /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_
1993:ThirdParty/FreeRTOS/tasks.c ****                                &xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is
1994:ThirdParty/FreeRTOS/tasks.c ****     }
1995:ThirdParty/FreeRTOS/tasks.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
1996:ThirdParty/FreeRTOS/tasks.c **** 
1997:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_TIMERS == 1 )
1998:ThirdParty/FreeRTOS/tasks.c ****     {
1999:ThirdParty/FreeRTOS/tasks.c ****         if( xReturn == pdPASS )
2000:ThirdParty/FreeRTOS/tasks.c ****         {
2001:ThirdParty/FreeRTOS/tasks.c ****             xReturn = xTimerCreateTimerTask();
2002:ThirdParty/FreeRTOS/tasks.c ****         }
2003:ThirdParty/FreeRTOS/tasks.c ****         else
2004:ThirdParty/FreeRTOS/tasks.c ****         {
2005:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2006:ThirdParty/FreeRTOS/tasks.c ****         }
2007:ThirdParty/FreeRTOS/tasks.c ****     }
2008:ThirdParty/FreeRTOS/tasks.c ****     #endif /* configUSE_TIMERS */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 42


2009:ThirdParty/FreeRTOS/tasks.c **** 
2010:ThirdParty/FreeRTOS/tasks.c ****     if( xReturn == pdPASS )
2011:ThirdParty/FreeRTOS/tasks.c ****     {
2012:ThirdParty/FreeRTOS/tasks.c ****         /* freertos_tasks_c_additions_init() should only be called if the user
2013:ThirdParty/FreeRTOS/tasks.c ****          * definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2014:ThirdParty/FreeRTOS/tasks.c ****          * the only macro called by the function. */
2015:ThirdParty/FreeRTOS/tasks.c ****         #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2016:ThirdParty/FreeRTOS/tasks.c ****         {
2017:ThirdParty/FreeRTOS/tasks.c ****             freertos_tasks_c_additions_init();
2018:ThirdParty/FreeRTOS/tasks.c ****         }
2019:ThirdParty/FreeRTOS/tasks.c ****         #endif
2020:ThirdParty/FreeRTOS/tasks.c **** 
2021:ThirdParty/FreeRTOS/tasks.c ****         /* Interrupts are turned off here, to ensure a tick does not occur
2022:ThirdParty/FreeRTOS/tasks.c ****          * before or during the call to xPortStartScheduler().  The stacks of
2023:ThirdParty/FreeRTOS/tasks.c ****          * the created tasks contain a status word with interrupts switched on
2024:ThirdParty/FreeRTOS/tasks.c ****          * so interrupts will automatically get re-enabled when the first task
2025:ThirdParty/FreeRTOS/tasks.c ****          * starts to run. */
2026:ThirdParty/FreeRTOS/tasks.c ****         portDISABLE_INTERRUPTS();
2027:ThirdParty/FreeRTOS/tasks.c **** 
2028:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
2029:ThirdParty/FreeRTOS/tasks.c ****         {
2030:ThirdParty/FreeRTOS/tasks.c ****             /* Switch C-Runtime's TLS Block to point to the TLS
2031:ThirdParty/FreeRTOS/tasks.c ****              * block specific to the task that will run first. */
2032:ThirdParty/FreeRTOS/tasks.c ****             configSET_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
2033:ThirdParty/FreeRTOS/tasks.c ****         }
2034:ThirdParty/FreeRTOS/tasks.c ****         #endif
2035:ThirdParty/FreeRTOS/tasks.c **** 
2036:ThirdParty/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
2037:ThirdParty/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
2038:ThirdParty/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2039:ThirdParty/FreeRTOS/tasks.c **** 
2040:ThirdParty/FreeRTOS/tasks.c ****         /* If configGENERATE_RUN_TIME_STATS is defined then the following
2041:ThirdParty/FreeRTOS/tasks.c ****          * macro must be defined to configure the timer/counter used to generate
2042:ThirdParty/FreeRTOS/tasks.c ****          * the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2043:ThirdParty/FreeRTOS/tasks.c ****          * is set to 0 and the following line fails to build then ensure you do not
2044:ThirdParty/FreeRTOS/tasks.c ****          * have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2045:ThirdParty/FreeRTOS/tasks.c ****          * FreeRTOSConfig.h file. */
2046:ThirdParty/FreeRTOS/tasks.c ****         portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2047:ThirdParty/FreeRTOS/tasks.c **** 
2048:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
2049:ThirdParty/FreeRTOS/tasks.c **** 
2050:ThirdParty/FreeRTOS/tasks.c ****         /* Setting up the timer tick is hardware specific and thus in the
2051:ThirdParty/FreeRTOS/tasks.c ****          * portable interface. */
2052:ThirdParty/FreeRTOS/tasks.c ****         xPortStartScheduler();
2053:ThirdParty/FreeRTOS/tasks.c **** 
2054:ThirdParty/FreeRTOS/tasks.c ****         /* In most cases, xPortStartScheduler() will not return. If it
2055:ThirdParty/FreeRTOS/tasks.c ****          * returns pdTRUE then there was not enough heap memory available
2056:ThirdParty/FreeRTOS/tasks.c ****          * to create either the Idle or the Timer task. If it returned
2057:ThirdParty/FreeRTOS/tasks.c ****          * pdFALSE, then the application called xTaskEndScheduler().
2058:ThirdParty/FreeRTOS/tasks.c ****          * Most ports don't implement xTaskEndScheduler() as there is
2059:ThirdParty/FreeRTOS/tasks.c ****          * nothing to return to. */
2060:ThirdParty/FreeRTOS/tasks.c ****     }
2061:ThirdParty/FreeRTOS/tasks.c ****     else
2062:ThirdParty/FreeRTOS/tasks.c ****     {
2063:ThirdParty/FreeRTOS/tasks.c ****         /* This line will only be reached if the kernel could not be started,
2064:ThirdParty/FreeRTOS/tasks.c ****          * because there was not enough FreeRTOS heap to create the idle task
2065:ThirdParty/FreeRTOS/tasks.c ****          * or the timer task. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 43


2066:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2067:ThirdParty/FreeRTOS/tasks.c ****     }
2068:ThirdParty/FreeRTOS/tasks.c **** 
2069:ThirdParty/FreeRTOS/tasks.c ****     /* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2070:ThirdParty/FreeRTOS/tasks.c ****      * meaning xIdleTaskHandle is not used anywhere else. */
2071:ThirdParty/FreeRTOS/tasks.c ****     ( void ) xIdleTaskHandle;
2072:ThirdParty/FreeRTOS/tasks.c **** 
2073:ThirdParty/FreeRTOS/tasks.c ****     /* OpenOCD makes use of uxTopUsedPriority for thread debugging. Prevent uxTopUsedPriority
2074:ThirdParty/FreeRTOS/tasks.c ****      * from getting optimized out as it is no longer used by the kernel. */
2075:ThirdParty/FreeRTOS/tasks.c ****     ( void ) uxTopUsedPriority;
2076:ThirdParty/FreeRTOS/tasks.c **** }
2077:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2078:ThirdParty/FreeRTOS/tasks.c **** 
2079:ThirdParty/FreeRTOS/tasks.c **** void vTaskEndScheduler( void )
2080:ThirdParty/FreeRTOS/tasks.c **** {
2081:ThirdParty/FreeRTOS/tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
2082:ThirdParty/FreeRTOS/tasks.c ****      * routine so the original ISRs can be restored if necessary.  The port
2083:ThirdParty/FreeRTOS/tasks.c ****      * layer must ensure interrupts enable  bit is left in the correct state. */
2084:ThirdParty/FreeRTOS/tasks.c ****     portDISABLE_INTERRUPTS();
2085:ThirdParty/FreeRTOS/tasks.c ****     xSchedulerRunning = pdFALSE;
2086:ThirdParty/FreeRTOS/tasks.c ****     vPortEndScheduler();
2087:ThirdParty/FreeRTOS/tasks.c **** }
2088:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2089:ThirdParty/FreeRTOS/tasks.c **** 
2090:ThirdParty/FreeRTOS/tasks.c **** void vTaskSuspendAll( void )
2091:ThirdParty/FreeRTOS/tasks.c **** {
2092:ThirdParty/FreeRTOS/tasks.c ****     /* A critical section is not required as the variable is of type
2093:ThirdParty/FreeRTOS/tasks.c ****      * BaseType_t.  Please read Richard Barry's reply in the following link to a
2094:ThirdParty/FreeRTOS/tasks.c ****      * post in the FreeRTOS support forum before reporting this as a bug! -
2095:ThirdParty/FreeRTOS/tasks.c ****      * https://goo.gl/wu4acr */
2096:ThirdParty/FreeRTOS/tasks.c **** 
2097:ThirdParty/FreeRTOS/tasks.c ****     /* portSOFTWARE_BARRIER() is only implemented for emulated/simulated ports that
2098:ThirdParty/FreeRTOS/tasks.c ****      * do not otherwise exhibit real time behaviour. */
2099:ThirdParty/FreeRTOS/tasks.c ****     portSOFTWARE_BARRIER();
2100:ThirdParty/FreeRTOS/tasks.c **** 
2101:ThirdParty/FreeRTOS/tasks.c ****     /* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2102:ThirdParty/FreeRTOS/tasks.c ****      * is used to allow calls to vTaskSuspendAll() to nest. */
2103:ThirdParty/FreeRTOS/tasks.c ****     ++uxSchedulerSuspended;
2104:ThirdParty/FreeRTOS/tasks.c **** 
2105:ThirdParty/FreeRTOS/tasks.c ****     /* Enforces ordering for ports and optimised compilers that may otherwise place
2106:ThirdParty/FreeRTOS/tasks.c ****      * the above increment elsewhere. */
2107:ThirdParty/FreeRTOS/tasks.c ****     portMEMORY_BARRIER();
2108:ThirdParty/FreeRTOS/tasks.c **** }
2109:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2110:ThirdParty/FreeRTOS/tasks.c **** 
2111:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2112:ThirdParty/FreeRTOS/tasks.c **** 
2113:ThirdParty/FreeRTOS/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void )
2114:ThirdParty/FreeRTOS/tasks.c ****     {
2115:ThirdParty/FreeRTOS/tasks.c ****         TickType_t xReturn;
2116:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2117:ThirdParty/FreeRTOS/tasks.c **** 
2118:ThirdParty/FreeRTOS/tasks.c ****         /* uxHigherPriorityReadyTasks takes care of the case where
2119:ThirdParty/FreeRTOS/tasks.c ****          * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2120:ThirdParty/FreeRTOS/tasks.c ****          * task that are in the Ready state, even though the idle task is
2121:ThirdParty/FreeRTOS/tasks.c ****          * running. */
2122:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 44


2123:ThirdParty/FreeRTOS/tasks.c ****         {
2124:ThirdParty/FreeRTOS/tasks.c ****             if( uxTopReadyPriority > tskIDLE_PRIORITY )
2125:ThirdParty/FreeRTOS/tasks.c ****             {
2126:ThirdParty/FreeRTOS/tasks.c ****                 uxHigherPriorityReadyTasks = pdTRUE;
2127:ThirdParty/FreeRTOS/tasks.c ****             }
2128:ThirdParty/FreeRTOS/tasks.c ****         }
2129:ThirdParty/FreeRTOS/tasks.c ****         #else
2130:ThirdParty/FreeRTOS/tasks.c ****         {
2131:ThirdParty/FreeRTOS/tasks.c ****             const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2132:ThirdParty/FreeRTOS/tasks.c **** 
2133:ThirdParty/FreeRTOS/tasks.c ****             /* When port optimised task selection is used the uxTopReadyPriority
2134:ThirdParty/FreeRTOS/tasks.c ****              * variable is used as a bit map.  If bits other than the least
2135:ThirdParty/FreeRTOS/tasks.c ****              * significant bit are set then there are tasks that have a priority
2136:ThirdParty/FreeRTOS/tasks.c ****              * above the idle priority that are in the Ready state.  This takes
2137:ThirdParty/FreeRTOS/tasks.c ****              * care of the case where the co-operative scheduler is in use. */
2138:ThirdParty/FreeRTOS/tasks.c ****             if( uxTopReadyPriority > uxLeastSignificantBit )
2139:ThirdParty/FreeRTOS/tasks.c ****             {
2140:ThirdParty/FreeRTOS/tasks.c ****                 uxHigherPriorityReadyTasks = pdTRUE;
2141:ThirdParty/FreeRTOS/tasks.c ****             }
2142:ThirdParty/FreeRTOS/tasks.c ****         }
2143:ThirdParty/FreeRTOS/tasks.c ****         #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */
2144:ThirdParty/FreeRTOS/tasks.c **** 
2145:ThirdParty/FreeRTOS/tasks.c ****         if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2146:ThirdParty/FreeRTOS/tasks.c ****         {
2147:ThirdParty/FreeRTOS/tasks.c ****             xReturn = 0;
2148:ThirdParty/FreeRTOS/tasks.c ****         }
2149:ThirdParty/FreeRTOS/tasks.c ****         else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2150:ThirdParty/FreeRTOS/tasks.c ****         {
2151:ThirdParty/FreeRTOS/tasks.c ****             /* There are other idle priority tasks in the ready state.  If
2152:ThirdParty/FreeRTOS/tasks.c ****              * time slicing is used then the very next tick interrupt must be
2153:ThirdParty/FreeRTOS/tasks.c ****              * processed. */
2154:ThirdParty/FreeRTOS/tasks.c ****             xReturn = 0;
2155:ThirdParty/FreeRTOS/tasks.c ****         }
2156:ThirdParty/FreeRTOS/tasks.c ****         else if( uxHigherPriorityReadyTasks != pdFALSE )
2157:ThirdParty/FreeRTOS/tasks.c ****         {
2158:ThirdParty/FreeRTOS/tasks.c ****             /* There are tasks in the Ready state that have a priority above the
2159:ThirdParty/FreeRTOS/tasks.c ****              * idle priority.  This path can only be reached if
2160:ThirdParty/FreeRTOS/tasks.c ****              * configUSE_PREEMPTION is 0. */
2161:ThirdParty/FreeRTOS/tasks.c ****             xReturn = 0;
2162:ThirdParty/FreeRTOS/tasks.c ****         }
2163:ThirdParty/FreeRTOS/tasks.c ****         else
2164:ThirdParty/FreeRTOS/tasks.c ****         {
2165:ThirdParty/FreeRTOS/tasks.c ****             xReturn = xNextTaskUnblockTime - xTickCount;
2166:ThirdParty/FreeRTOS/tasks.c ****         }
2167:ThirdParty/FreeRTOS/tasks.c **** 
2168:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
2169:ThirdParty/FreeRTOS/tasks.c ****     }
2170:ThirdParty/FreeRTOS/tasks.c **** 
2171:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2172:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2173:ThirdParty/FreeRTOS/tasks.c **** 
2174:ThirdParty/FreeRTOS/tasks.c **** BaseType_t xTaskResumeAll( void )
2175:ThirdParty/FreeRTOS/tasks.c **** {
2176:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB = NULL;
2177:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
2178:ThirdParty/FreeRTOS/tasks.c **** 
2179:ThirdParty/FreeRTOS/tasks.c ****     /* If uxSchedulerSuspended is zero then this function does not match a
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 45


2180:ThirdParty/FreeRTOS/tasks.c ****      * previous call to vTaskSuspendAll(). */
2181:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended );
2182:ThirdParty/FreeRTOS/tasks.c **** 
2183:ThirdParty/FreeRTOS/tasks.c ****     /* It is possible that an ISR caused a task to be removed from an event
2184:ThirdParty/FreeRTOS/tasks.c ****      * list while the scheduler was suspended.  If this was the case then the
2185:ThirdParty/FreeRTOS/tasks.c ****      * removed task will have been added to the xPendingReadyList.  Once the
2186:ThirdParty/FreeRTOS/tasks.c ****      * scheduler has been resumed it is safe to move all the pending ready
2187:ThirdParty/FreeRTOS/tasks.c ****      * tasks from this list into their appropriate ready list. */
2188:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
2189:ThirdParty/FreeRTOS/tasks.c ****     {
2190:ThirdParty/FreeRTOS/tasks.c ****         --uxSchedulerSuspended;
2191:ThirdParty/FreeRTOS/tasks.c **** 
2192:ThirdParty/FreeRTOS/tasks.c ****         if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2193:ThirdParty/FreeRTOS/tasks.c ****         {
2194:ThirdParty/FreeRTOS/tasks.c ****             if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2195:ThirdParty/FreeRTOS/tasks.c ****             {
2196:ThirdParty/FreeRTOS/tasks.c ****                 /* Move any readied tasks from the pending list into the
2197:ThirdParty/FreeRTOS/tasks.c ****                  * appropriate ready list. */
2198:ThirdParty/FreeRTOS/tasks.c ****                 while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2199:ThirdParty/FreeRTOS/tasks.c ****                 {
2200:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 vo
2201:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
2202:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
2203:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
2204:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2205:ThirdParty/FreeRTOS/tasks.c **** 
2206:ThirdParty/FreeRTOS/tasks.c ****                     /* If the moved task has a priority higher than or equal to
2207:ThirdParty/FreeRTOS/tasks.c ****                      * the current task then a yield must be performed. */
2208:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2209:ThirdParty/FreeRTOS/tasks.c ****                     {
2210:ThirdParty/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
2211:ThirdParty/FreeRTOS/tasks.c ****                     }
2212:ThirdParty/FreeRTOS/tasks.c ****                     else
2213:ThirdParty/FreeRTOS/tasks.c ****                     {
2214:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2215:ThirdParty/FreeRTOS/tasks.c ****                     }
2216:ThirdParty/FreeRTOS/tasks.c ****                 }
2217:ThirdParty/FreeRTOS/tasks.c **** 
2218:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB != NULL )
2219:ThirdParty/FreeRTOS/tasks.c ****                 {
2220:ThirdParty/FreeRTOS/tasks.c ****                     /* A task was unblocked while the scheduler was suspended,
2221:ThirdParty/FreeRTOS/tasks.c ****                      * which may have prevented the next unblock time from being
2222:ThirdParty/FreeRTOS/tasks.c ****                      * re-calculated, in which case re-calculate it now.  Mainly
2223:ThirdParty/FreeRTOS/tasks.c ****                      * important for low power tickless implementations, where
2224:ThirdParty/FreeRTOS/tasks.c ****                      * this can prevent an unnecessary exit from low power
2225:ThirdParty/FreeRTOS/tasks.c ****                      * state. */
2226:ThirdParty/FreeRTOS/tasks.c ****                     prvResetNextTaskUnblockTime();
2227:ThirdParty/FreeRTOS/tasks.c ****                 }
2228:ThirdParty/FreeRTOS/tasks.c **** 
2229:ThirdParty/FreeRTOS/tasks.c ****                 /* If any ticks occurred while the scheduler was suspended then
2230:ThirdParty/FreeRTOS/tasks.c ****                  * they should be processed now.  This ensures the tick count does
2231:ThirdParty/FreeRTOS/tasks.c ****                  * not  slip, and that any delayed tasks are resumed at the correct
2232:ThirdParty/FreeRTOS/tasks.c ****                  * time. */
2233:ThirdParty/FreeRTOS/tasks.c ****                 {
2234:ThirdParty/FreeRTOS/tasks.c ****                     TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2235:ThirdParty/FreeRTOS/tasks.c **** 
2236:ThirdParty/FreeRTOS/tasks.c ****                     if( xPendedCounts > ( TickType_t ) 0U )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 46


2237:ThirdParty/FreeRTOS/tasks.c ****                     {
2238:ThirdParty/FreeRTOS/tasks.c ****                         do
2239:ThirdParty/FreeRTOS/tasks.c ****                         {
2240:ThirdParty/FreeRTOS/tasks.c ****                             if( xTaskIncrementTick() != pdFALSE )
2241:ThirdParty/FreeRTOS/tasks.c ****                             {
2242:ThirdParty/FreeRTOS/tasks.c ****                                 xYieldPending = pdTRUE;
2243:ThirdParty/FreeRTOS/tasks.c ****                             }
2244:ThirdParty/FreeRTOS/tasks.c ****                             else
2245:ThirdParty/FreeRTOS/tasks.c ****                             {
2246:ThirdParty/FreeRTOS/tasks.c ****                                 mtCOVERAGE_TEST_MARKER();
2247:ThirdParty/FreeRTOS/tasks.c ****                             }
2248:ThirdParty/FreeRTOS/tasks.c **** 
2249:ThirdParty/FreeRTOS/tasks.c ****                             --xPendedCounts;
2250:ThirdParty/FreeRTOS/tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
2251:ThirdParty/FreeRTOS/tasks.c **** 
2252:ThirdParty/FreeRTOS/tasks.c ****                         xPendedTicks = 0;
2253:ThirdParty/FreeRTOS/tasks.c ****                     }
2254:ThirdParty/FreeRTOS/tasks.c ****                     else
2255:ThirdParty/FreeRTOS/tasks.c ****                     {
2256:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2257:ThirdParty/FreeRTOS/tasks.c ****                     }
2258:ThirdParty/FreeRTOS/tasks.c ****                 }
2259:ThirdParty/FreeRTOS/tasks.c **** 
2260:ThirdParty/FreeRTOS/tasks.c ****                 if( xYieldPending != pdFALSE )
2261:ThirdParty/FreeRTOS/tasks.c ****                 {
2262:ThirdParty/FreeRTOS/tasks.c ****                     #if ( configUSE_PREEMPTION != 0 )
2263:ThirdParty/FreeRTOS/tasks.c ****                     {
2264:ThirdParty/FreeRTOS/tasks.c ****                         xAlreadyYielded = pdTRUE;
2265:ThirdParty/FreeRTOS/tasks.c ****                     }
2266:ThirdParty/FreeRTOS/tasks.c ****                     #endif
2267:ThirdParty/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
2268:ThirdParty/FreeRTOS/tasks.c ****                 }
2269:ThirdParty/FreeRTOS/tasks.c ****                 else
2270:ThirdParty/FreeRTOS/tasks.c ****                 {
2271:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2272:ThirdParty/FreeRTOS/tasks.c ****                 }
2273:ThirdParty/FreeRTOS/tasks.c ****             }
2274:ThirdParty/FreeRTOS/tasks.c ****         }
2275:ThirdParty/FreeRTOS/tasks.c ****         else
2276:ThirdParty/FreeRTOS/tasks.c ****         {
2277:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2278:ThirdParty/FreeRTOS/tasks.c ****         }
2279:ThirdParty/FreeRTOS/tasks.c ****     }
2280:ThirdParty/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
2281:ThirdParty/FreeRTOS/tasks.c **** 
2282:ThirdParty/FreeRTOS/tasks.c ****     return xAlreadyYielded;
2283:ThirdParty/FreeRTOS/tasks.c **** }
2284:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2285:ThirdParty/FreeRTOS/tasks.c **** 
2286:ThirdParty/FreeRTOS/tasks.c **** TickType_t xTaskGetTickCount( void )
2287:ThirdParty/FreeRTOS/tasks.c **** {
2288:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xTicks;
2289:ThirdParty/FreeRTOS/tasks.c **** 
2290:ThirdParty/FreeRTOS/tasks.c ****     /* Critical section required if running on a 16 bit processor. */
2291:ThirdParty/FreeRTOS/tasks.c ****     portTICK_TYPE_ENTER_CRITICAL();
2292:ThirdParty/FreeRTOS/tasks.c ****     {
2293:ThirdParty/FreeRTOS/tasks.c ****         xTicks = xTickCount;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 47


2294:ThirdParty/FreeRTOS/tasks.c ****     }
2295:ThirdParty/FreeRTOS/tasks.c ****     portTICK_TYPE_EXIT_CRITICAL();
2296:ThirdParty/FreeRTOS/tasks.c **** 
2297:ThirdParty/FreeRTOS/tasks.c ****     return xTicks;
2298:ThirdParty/FreeRTOS/tasks.c **** }
2299:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2300:ThirdParty/FreeRTOS/tasks.c **** 
2301:ThirdParty/FreeRTOS/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2302:ThirdParty/FreeRTOS/tasks.c **** {
2303:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xReturn;
2304:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxSavedInterruptStatus;
2305:ThirdParty/FreeRTOS/tasks.c **** 
2306:ThirdParty/FreeRTOS/tasks.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
2307:ThirdParty/FreeRTOS/tasks.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
2308:ThirdParty/FreeRTOS/tasks.c ****      * above the maximum system call priority are kept permanently enabled, even
2309:ThirdParty/FreeRTOS/tasks.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
2310:ThirdParty/FreeRTOS/tasks.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2311:ThirdParty/FreeRTOS/tasks.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2312:ThirdParty/FreeRTOS/tasks.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
2313:ThirdParty/FreeRTOS/tasks.c ****      * assigned a priority above the configured maximum system call priority.
2314:ThirdParty/FreeRTOS/tasks.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
2315:ThirdParty/FreeRTOS/tasks.c ****      * that have been assigned a priority at or (logically) below the maximum
2316:ThirdParty/FreeRTOS/tasks.c ****      * system call  interrupt priority.  FreeRTOS maintains a separate interrupt
2317:ThirdParty/FreeRTOS/tasks.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
2318:ThirdParty/FreeRTOS/tasks.c ****      * More information (albeit Cortex-M specific) is provided on the following
2319:ThirdParty/FreeRTOS/tasks.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
2320:ThirdParty/FreeRTOS/tasks.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2321:ThirdParty/FreeRTOS/tasks.c **** 
2322:ThirdParty/FreeRTOS/tasks.c ****     uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2323:ThirdParty/FreeRTOS/tasks.c ****     {
2324:ThirdParty/FreeRTOS/tasks.c ****         xReturn = xTickCount;
2325:ThirdParty/FreeRTOS/tasks.c ****     }
2326:ThirdParty/FreeRTOS/tasks.c ****     portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2327:ThirdParty/FreeRTOS/tasks.c **** 
2328:ThirdParty/FreeRTOS/tasks.c ****     return xReturn;
2329:ThirdParty/FreeRTOS/tasks.c **** }
2330:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2331:ThirdParty/FreeRTOS/tasks.c **** 
2332:ThirdParty/FreeRTOS/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2333:ThirdParty/FreeRTOS/tasks.c **** {
2334:ThirdParty/FreeRTOS/tasks.c ****     /* A critical section is not required because the variables are of type
2335:ThirdParty/FreeRTOS/tasks.c ****      * BaseType_t. */
2336:ThirdParty/FreeRTOS/tasks.c ****     return uxCurrentNumberOfTasks;
2337:ThirdParty/FreeRTOS/tasks.c **** }
2338:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2339:ThirdParty/FreeRTOS/tasks.c **** 
2340:ThirdParty/FreeRTOS/tasks.c **** char * pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed f
2341:ThirdParty/FreeRTOS/tasks.c **** {
2342:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
2343:ThirdParty/FreeRTOS/tasks.c **** 
2344:ThirdParty/FreeRTOS/tasks.c ****     /* If null is passed in here then the name of the calling task is being
2345:ThirdParty/FreeRTOS/tasks.c ****      * queried. */
2346:ThirdParty/FreeRTOS/tasks.c ****     pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2347:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
2348:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
2349:ThirdParty/FreeRTOS/tasks.c **** }
2350:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 48


2351:ThirdParty/FreeRTOS/tasks.c **** 
2352:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2353:ThirdParty/FreeRTOS/tasks.c **** 
2354:ThirdParty/FreeRTOS/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
2355:ThirdParty/FreeRTOS/tasks.c ****                                                      const char pcNameToQuery[] )
2356:ThirdParty/FreeRTOS/tasks.c ****     {
2357:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNextTCB;
2358:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxFirstTCB;
2359:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxReturn = NULL;
2360:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t x;
2361:ThirdParty/FreeRTOS/tasks.c ****         char cNextChar;
2362:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xBreakLoop;
2363:ThirdParty/FreeRTOS/tasks.c **** 
2364:ThirdParty/FreeRTOS/tasks.c ****         /* This function is called with the scheduler suspended. */
2365:ThirdParty/FreeRTOS/tasks.c **** 
2366:ThirdParty/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2367:ThirdParty/FreeRTOS/tasks.c ****         {
2368:ThirdParty/FreeRTOS/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
2369:ThirdParty/FreeRTOS/tasks.c **** 
2370:ThirdParty/FreeRTOS/tasks.c ****             do
2371:ThirdParty/FreeRTOS/tasks.c ****             {
2372:ThirdParty/FreeRTOS/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
2373:ThirdParty/FreeRTOS/tasks.c **** 
2374:ThirdParty/FreeRTOS/tasks.c ****                 /* Check each character in the name looking for a match or
2375:ThirdParty/FreeRTOS/tasks.c ****                  * mismatch. */
2376:ThirdParty/FreeRTOS/tasks.c ****                 xBreakLoop = pdFALSE;
2377:ThirdParty/FreeRTOS/tasks.c **** 
2378:ThirdParty/FreeRTOS/tasks.c ****                 for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2379:ThirdParty/FreeRTOS/tasks.c ****                 {
2380:ThirdParty/FreeRTOS/tasks.c ****                     cNextChar = pxNextTCB->pcTaskName[ x ];
2381:ThirdParty/FreeRTOS/tasks.c **** 
2382:ThirdParty/FreeRTOS/tasks.c ****                     if( cNextChar != pcNameToQuery[ x ] )
2383:ThirdParty/FreeRTOS/tasks.c ****                     {
2384:ThirdParty/FreeRTOS/tasks.c ****                         /* Characters didn't match. */
2385:ThirdParty/FreeRTOS/tasks.c ****                         xBreakLoop = pdTRUE;
2386:ThirdParty/FreeRTOS/tasks.c ****                     }
2387:ThirdParty/FreeRTOS/tasks.c ****                     else if( cNextChar == ( char ) 0x00 )
2388:ThirdParty/FreeRTOS/tasks.c ****                     {
2389:ThirdParty/FreeRTOS/tasks.c ****                         /* Both strings terminated, a match must have been
2390:ThirdParty/FreeRTOS/tasks.c ****                          * found. */
2391:ThirdParty/FreeRTOS/tasks.c ****                         pxReturn = pxNextTCB;
2392:ThirdParty/FreeRTOS/tasks.c ****                         xBreakLoop = pdTRUE;
2393:ThirdParty/FreeRTOS/tasks.c ****                     }
2394:ThirdParty/FreeRTOS/tasks.c ****                     else
2395:ThirdParty/FreeRTOS/tasks.c ****                     {
2396:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2397:ThirdParty/FreeRTOS/tasks.c ****                     }
2398:ThirdParty/FreeRTOS/tasks.c **** 
2399:ThirdParty/FreeRTOS/tasks.c ****                     if( xBreakLoop != pdFALSE )
2400:ThirdParty/FreeRTOS/tasks.c ****                     {
2401:ThirdParty/FreeRTOS/tasks.c ****                         break;
2402:ThirdParty/FreeRTOS/tasks.c ****                     }
2403:ThirdParty/FreeRTOS/tasks.c ****                 }
2404:ThirdParty/FreeRTOS/tasks.c **** 
2405:ThirdParty/FreeRTOS/tasks.c ****                 if( pxReturn != NULL )
2406:ThirdParty/FreeRTOS/tasks.c ****                 {
2407:ThirdParty/FreeRTOS/tasks.c ****                     /* The handle has been found. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 49


2408:ThirdParty/FreeRTOS/tasks.c ****                     break;
2409:ThirdParty/FreeRTOS/tasks.c ****                 }
2410:ThirdParty/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
2411:ThirdParty/FreeRTOS/tasks.c ****         }
2412:ThirdParty/FreeRTOS/tasks.c ****         else
2413:ThirdParty/FreeRTOS/tasks.c ****         {
2414:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2415:ThirdParty/FreeRTOS/tasks.c ****         }
2416:ThirdParty/FreeRTOS/tasks.c **** 
2417:ThirdParty/FreeRTOS/tasks.c ****         return pxReturn;
2418:ThirdParty/FreeRTOS/tasks.c ****     }
2419:ThirdParty/FreeRTOS/tasks.c **** 
2420:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2421:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2422:ThirdParty/FreeRTOS/tasks.c **** 
2423:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2424:ThirdParty/FreeRTOS/tasks.c **** 
2425:ThirdParty/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetHandle( const char * pcNameToQuery ) /*lint !e971 Unqualified char types a
2426:ThirdParty/FreeRTOS/tasks.c ****     {
2427:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxQueue = configMAX_PRIORITIES;
2428:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2429:ThirdParty/FreeRTOS/tasks.c **** 
2430:ThirdParty/FreeRTOS/tasks.c ****         /* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2431:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2432:ThirdParty/FreeRTOS/tasks.c **** 
2433:ThirdParty/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2434:ThirdParty/FreeRTOS/tasks.c ****         {
2435:ThirdParty/FreeRTOS/tasks.c ****             /* Search the ready lists. */
2436:ThirdParty/FreeRTOS/tasks.c ****             do
2437:ThirdParty/FreeRTOS/tasks.c ****             {
2438:ThirdParty/FreeRTOS/tasks.c ****                 uxQueue--;
2439:ThirdParty/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueu
2440:ThirdParty/FreeRTOS/tasks.c **** 
2441:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB != NULL )
2442:ThirdParty/FreeRTOS/tasks.c ****                 {
2443:ThirdParty/FreeRTOS/tasks.c ****                     /* Found the handle. */
2444:ThirdParty/FreeRTOS/tasks.c ****                     break;
2445:ThirdParty/FreeRTOS/tasks.c ****                 }
2446:ThirdParty/FreeRTOS/tasks.c ****             } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as 
2447:ThirdParty/FreeRTOS/tasks.c **** 
2448:ThirdParty/FreeRTOS/tasks.c ****             /* Search the delayed lists. */
2449:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB == NULL )
2450:ThirdParty/FreeRTOS/tasks.c ****             {
2451:ThirdParty/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQ
2452:ThirdParty/FreeRTOS/tasks.c ****             }
2453:ThirdParty/FreeRTOS/tasks.c **** 
2454:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB == NULL )
2455:ThirdParty/FreeRTOS/tasks.c ****             {
2456:ThirdParty/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, p
2457:ThirdParty/FreeRTOS/tasks.c ****             }
2458:ThirdParty/FreeRTOS/tasks.c **** 
2459:ThirdParty/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
2460:ThirdParty/FreeRTOS/tasks.c ****             {
2461:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB == NULL )
2462:ThirdParty/FreeRTOS/tasks.c ****                 {
2463:ThirdParty/FreeRTOS/tasks.c ****                     /* Search the suspended list. */
2464:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 50


2465:ThirdParty/FreeRTOS/tasks.c ****                 }
2466:ThirdParty/FreeRTOS/tasks.c ****             }
2467:ThirdParty/FreeRTOS/tasks.c ****             #endif
2468:ThirdParty/FreeRTOS/tasks.c **** 
2469:ThirdParty/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
2470:ThirdParty/FreeRTOS/tasks.c ****             {
2471:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB == NULL )
2472:ThirdParty/FreeRTOS/tasks.c ****                 {
2473:ThirdParty/FreeRTOS/tasks.c ****                     /* Search the deleted list. */
2474:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQu
2475:ThirdParty/FreeRTOS/tasks.c ****                 }
2476:ThirdParty/FreeRTOS/tasks.c ****             }
2477:ThirdParty/FreeRTOS/tasks.c ****             #endif
2478:ThirdParty/FreeRTOS/tasks.c ****         }
2479:ThirdParty/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2480:ThirdParty/FreeRTOS/tasks.c **** 
2481:ThirdParty/FreeRTOS/tasks.c ****         return pxTCB;
2482:ThirdParty/FreeRTOS/tasks.c ****     }
2483:ThirdParty/FreeRTOS/tasks.c **** 
2484:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2485:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2486:ThirdParty/FreeRTOS/tasks.c **** 
2487:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2488:ThirdParty/FreeRTOS/tasks.c **** 
2489:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,
2490:ThirdParty/FreeRTOS/tasks.c ****                                       const UBaseType_t uxArraySize,
2491:ThirdParty/FreeRTOS/tasks.c ****                                       configRUN_TIME_COUNTER_TYPE * const pulTotalRunTime )
2492:ThirdParty/FreeRTOS/tasks.c ****     {
2493:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2494:ThirdParty/FreeRTOS/tasks.c **** 
2495:ThirdParty/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2496:ThirdParty/FreeRTOS/tasks.c ****         {
2497:ThirdParty/FreeRTOS/tasks.c ****             /* Is there a space in the array for each task in the system? */
2498:ThirdParty/FreeRTOS/tasks.c ****             if( uxArraySize >= uxCurrentNumberOfTasks )
2499:ThirdParty/FreeRTOS/tasks.c ****             {
2500:ThirdParty/FreeRTOS/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2501:ThirdParty/FreeRTOS/tasks.c ****                  * task in the Ready state. */
2502:ThirdParty/FreeRTOS/tasks.c ****                 do
2503:ThirdParty/FreeRTOS/tasks.c ****                 {
2504:ThirdParty/FreeRTOS/tasks.c ****                     uxQueue--;
2505:ThirdParty/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
2506:ThirdParty/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
2507:ThirdParty/FreeRTOS/tasks.c **** 
2508:ThirdParty/FreeRTOS/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2509:ThirdParty/FreeRTOS/tasks.c ****                  * task in the Blocked state. */
2510:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2511:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2512:ThirdParty/FreeRTOS/tasks.c **** 
2513:ThirdParty/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskDelete == 1 )
2514:ThirdParty/FreeRTOS/tasks.c ****                 {
2515:ThirdParty/FreeRTOS/tasks.c ****                     /* Fill in an TaskStatus_t structure with information on
2516:ThirdParty/FreeRTOS/tasks.c ****                      * each task that has been deleted but not yet cleaned up. */
2517:ThirdParty/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTas
2518:ThirdParty/FreeRTOS/tasks.c ****                 }
2519:ThirdParty/FreeRTOS/tasks.c ****                 #endif
2520:ThirdParty/FreeRTOS/tasks.c **** 
2521:ThirdParty/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 51


2522:ThirdParty/FreeRTOS/tasks.c ****                 {
2523:ThirdParty/FreeRTOS/tasks.c ****                     /* Fill in an TaskStatus_t structure with information on
2524:ThirdParty/FreeRTOS/tasks.c ****                      * each task in the Suspended state. */
2525:ThirdParty/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSus
2526:ThirdParty/FreeRTOS/tasks.c ****                 }
2527:ThirdParty/FreeRTOS/tasks.c ****                 #endif
2528:ThirdParty/FreeRTOS/tasks.c **** 
2529:ThirdParty/FreeRTOS/tasks.c ****                 #if ( configGENERATE_RUN_TIME_STATS == 1 )
2530:ThirdParty/FreeRTOS/tasks.c ****                 {
2531:ThirdParty/FreeRTOS/tasks.c ****                     if( pulTotalRunTime != NULL )
2532:ThirdParty/FreeRTOS/tasks.c ****                     {
2533:ThirdParty/FreeRTOS/tasks.c ****                         #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2534:ThirdParty/FreeRTOS/tasks.c ****                             portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2535:ThirdParty/FreeRTOS/tasks.c ****                         #else
2536:ThirdParty/FreeRTOS/tasks.c ****                             *pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2537:ThirdParty/FreeRTOS/tasks.c ****                         #endif
2538:ThirdParty/FreeRTOS/tasks.c ****                     }
2539:ThirdParty/FreeRTOS/tasks.c ****                 }
2540:ThirdParty/FreeRTOS/tasks.c ****                 #else /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2541:ThirdParty/FreeRTOS/tasks.c ****                 {
2542:ThirdParty/FreeRTOS/tasks.c ****                     if( pulTotalRunTime != NULL )
2543:ThirdParty/FreeRTOS/tasks.c ****                     {
2544:ThirdParty/FreeRTOS/tasks.c ****                         *pulTotalRunTime = 0;
2545:ThirdParty/FreeRTOS/tasks.c ****                     }
2546:ThirdParty/FreeRTOS/tasks.c ****                 }
2547:ThirdParty/FreeRTOS/tasks.c ****                 #endif /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2548:ThirdParty/FreeRTOS/tasks.c ****             }
2549:ThirdParty/FreeRTOS/tasks.c ****             else
2550:ThirdParty/FreeRTOS/tasks.c ****             {
2551:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2552:ThirdParty/FreeRTOS/tasks.c ****             }
2553:ThirdParty/FreeRTOS/tasks.c ****         }
2554:ThirdParty/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2555:ThirdParty/FreeRTOS/tasks.c **** 
2556:ThirdParty/FreeRTOS/tasks.c ****         return uxTask;
2557:ThirdParty/FreeRTOS/tasks.c ****     }
2558:ThirdParty/FreeRTOS/tasks.c **** 
2559:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2560:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2561:ThirdParty/FreeRTOS/tasks.c **** 
2562:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2563:ThirdParty/FreeRTOS/tasks.c **** 
2564:ThirdParty/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetIdleTaskHandle( void )
2565:ThirdParty/FreeRTOS/tasks.c ****     {
2566:ThirdParty/FreeRTOS/tasks.c ****         /* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2567:ThirdParty/FreeRTOS/tasks.c ****          * started, then xIdleTaskHandle will be NULL. */
2568:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xIdleTaskHandle != NULL ) );
2569:ThirdParty/FreeRTOS/tasks.c ****         return xIdleTaskHandle;
2570:ThirdParty/FreeRTOS/tasks.c ****     }
2571:ThirdParty/FreeRTOS/tasks.c **** 
2572:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2573:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2574:ThirdParty/FreeRTOS/tasks.c **** 
2575:ThirdParty/FreeRTOS/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2576:ThirdParty/FreeRTOS/tasks.c ****  * This is to ensure vTaskStepTick() is available when user defined low power mode
2577:ThirdParty/FreeRTOS/tasks.c ****  * implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2578:ThirdParty/FreeRTOS/tasks.c ****  * 1. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 52


2579:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2580:ThirdParty/FreeRTOS/tasks.c **** 
2581:ThirdParty/FreeRTOS/tasks.c ****     void vTaskStepTick( TickType_t xTicksToJump )
2582:ThirdParty/FreeRTOS/tasks.c ****     {
2583:ThirdParty/FreeRTOS/tasks.c ****         /* Correct the tick count value after a period during which the tick
2584:ThirdParty/FreeRTOS/tasks.c ****          * was suppressed.  Note this does *not* call the tick hook function for
2585:ThirdParty/FreeRTOS/tasks.c ****          * each stepped tick. */
2586:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2587:ThirdParty/FreeRTOS/tasks.c **** 
2588:ThirdParty/FreeRTOS/tasks.c ****         if( ( xTickCount + xTicksToJump ) == xNextTaskUnblockTime )
2589:ThirdParty/FreeRTOS/tasks.c ****         {
2590:ThirdParty/FreeRTOS/tasks.c ****             /* Arrange for xTickCount to reach xNextTaskUnblockTime in
2591:ThirdParty/FreeRTOS/tasks.c ****              * xTaskIncrementTick() when the scheduler resumes.  This ensures
2592:ThirdParty/FreeRTOS/tasks.c ****              * that any delayed tasks are resumed at the correct time. */
2593:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( uxSchedulerSuspended );
2594:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( xTicksToJump != ( TickType_t ) 0 );
2595:ThirdParty/FreeRTOS/tasks.c **** 
2596:ThirdParty/FreeRTOS/tasks.c ****             /* Prevent the tick interrupt modifying xPendedTicks simultaneously. */
2597:ThirdParty/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
2598:ThirdParty/FreeRTOS/tasks.c ****             {
2599:ThirdParty/FreeRTOS/tasks.c ****                 xPendedTicks++;
2600:ThirdParty/FreeRTOS/tasks.c ****             }
2601:ThirdParty/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
2602:ThirdParty/FreeRTOS/tasks.c ****             xTicksToJump--;
2603:ThirdParty/FreeRTOS/tasks.c ****         }
2604:ThirdParty/FreeRTOS/tasks.c ****         else
2605:ThirdParty/FreeRTOS/tasks.c ****         {
2606:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2607:ThirdParty/FreeRTOS/tasks.c ****         }
2608:ThirdParty/FreeRTOS/tasks.c **** 
2609:ThirdParty/FreeRTOS/tasks.c ****         xTickCount += xTicksToJump;
2610:ThirdParty/FreeRTOS/tasks.c ****         traceINCREASE_TICK_COUNT( xTicksToJump );
2611:ThirdParty/FreeRTOS/tasks.c ****     }
2612:ThirdParty/FreeRTOS/tasks.c **** 
2613:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2614:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2615:ThirdParty/FreeRTOS/tasks.c **** 
2616:ThirdParty/FreeRTOS/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2617:ThirdParty/FreeRTOS/tasks.c **** {
2618:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
2619:ThirdParty/FreeRTOS/tasks.c **** 
2620:ThirdParty/FreeRTOS/tasks.c ****     /* Must not be called with the scheduler suspended as the implementation
2621:ThirdParty/FreeRTOS/tasks.c ****      * relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2622:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended == 0 );
2623:ThirdParty/FreeRTOS/tasks.c **** 
2624:ThirdParty/FreeRTOS/tasks.c ****     /* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2625:ThirdParty/FreeRTOS/tasks.c ****      * the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2626:ThirdParty/FreeRTOS/tasks.c ****     vTaskSuspendAll();
2627:ThirdParty/FreeRTOS/tasks.c **** 
2628:ThirdParty/FreeRTOS/tasks.c ****     /* Prevent the tick interrupt modifying xPendedTicks simultaneously. */
2629:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
2630:ThirdParty/FreeRTOS/tasks.c ****     {
2631:ThirdParty/FreeRTOS/tasks.c ****         xPendedTicks += xTicksToCatchUp;
2632:ThirdParty/FreeRTOS/tasks.c ****     }
2633:ThirdParty/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
2634:ThirdParty/FreeRTOS/tasks.c ****     xYieldOccurred = xTaskResumeAll();
2635:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 53


2636:ThirdParty/FreeRTOS/tasks.c ****     return xYieldOccurred;
2637:ThirdParty/FreeRTOS/tasks.c **** }
2638:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2639:ThirdParty/FreeRTOS/tasks.c **** 
2640:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2641:ThirdParty/FreeRTOS/tasks.c **** 
2642:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2643:ThirdParty/FreeRTOS/tasks.c ****     {
2644:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB = xTask;
2645:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
2646:ThirdParty/FreeRTOS/tasks.c **** 
2647:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTCB );
2648:ThirdParty/FreeRTOS/tasks.c **** 
2649:ThirdParty/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2650:ThirdParty/FreeRTOS/tasks.c ****         {
2651:ThirdParty/FreeRTOS/tasks.c ****             /* A task can only be prematurely removed from the Blocked state if
2652:ThirdParty/FreeRTOS/tasks.c ****              * it is actually in the Blocked state. */
2653:ThirdParty/FreeRTOS/tasks.c ****             if( eTaskGetState( xTask ) == eBlocked )
2654:ThirdParty/FreeRTOS/tasks.c ****             {
2655:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
2656:ThirdParty/FreeRTOS/tasks.c **** 
2657:ThirdParty/FreeRTOS/tasks.c ****                 /* Remove the reference to the task from the blocked list.  An
2658:ThirdParty/FreeRTOS/tasks.c ****                  * interrupt won't touch the xStateListItem because the
2659:ThirdParty/FreeRTOS/tasks.c ****                  * scheduler is suspended. */
2660:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2661:ThirdParty/FreeRTOS/tasks.c **** 
2662:ThirdParty/FreeRTOS/tasks.c ****                 /* Is the task waiting on an event also?  If so remove it from
2663:ThirdParty/FreeRTOS/tasks.c ****                  * the event list too.  Interrupts can touch the event list item,
2664:ThirdParty/FreeRTOS/tasks.c ****                  * even though the scheduler is suspended, so a critical section
2665:ThirdParty/FreeRTOS/tasks.c ****                  * is used. */
2666:ThirdParty/FreeRTOS/tasks.c ****                 taskENTER_CRITICAL();
2667:ThirdParty/FreeRTOS/tasks.c ****                 {
2668:ThirdParty/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2669:ThirdParty/FreeRTOS/tasks.c ****                     {
2670:ThirdParty/FreeRTOS/tasks.c ****                         ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2671:ThirdParty/FreeRTOS/tasks.c **** 
2672:ThirdParty/FreeRTOS/tasks.c ****                         /* This lets the task know it was forcibly removed from the
2673:ThirdParty/FreeRTOS/tasks.c ****                          * blocked state so it should not re-evaluate its block time and
2674:ThirdParty/FreeRTOS/tasks.c ****                          * then block again. */
2675:ThirdParty/FreeRTOS/tasks.c ****                         pxTCB->ucDelayAborted = pdTRUE;
2676:ThirdParty/FreeRTOS/tasks.c ****                     }
2677:ThirdParty/FreeRTOS/tasks.c ****                     else
2678:ThirdParty/FreeRTOS/tasks.c ****                     {
2679:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2680:ThirdParty/FreeRTOS/tasks.c ****                     }
2681:ThirdParty/FreeRTOS/tasks.c ****                 }
2682:ThirdParty/FreeRTOS/tasks.c ****                 taskEXIT_CRITICAL();
2683:ThirdParty/FreeRTOS/tasks.c **** 
2684:ThirdParty/FreeRTOS/tasks.c ****                 /* Place the unblocked task into the appropriate ready list. */
2685:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
2686:ThirdParty/FreeRTOS/tasks.c **** 
2687:ThirdParty/FreeRTOS/tasks.c ****                 /* A task being unblocked cannot cause an immediate context
2688:ThirdParty/FreeRTOS/tasks.c ****                  * switch if preemption is turned off. */
2689:ThirdParty/FreeRTOS/tasks.c ****                 #if ( configUSE_PREEMPTION == 1 )
2690:ThirdParty/FreeRTOS/tasks.c ****                 {
2691:ThirdParty/FreeRTOS/tasks.c ****                     /* Preemption is on, but a context switch should only be
2692:ThirdParty/FreeRTOS/tasks.c ****                      * performed if the unblocked task has a priority that is
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 54


2693:ThirdParty/FreeRTOS/tasks.c ****                      * higher than the currently executing task. */
2694:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2695:ThirdParty/FreeRTOS/tasks.c ****                     {
2696:ThirdParty/FreeRTOS/tasks.c ****                         /* Pend the yield to be performed when the scheduler
2697:ThirdParty/FreeRTOS/tasks.c ****                          * is unsuspended. */
2698:ThirdParty/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
2699:ThirdParty/FreeRTOS/tasks.c ****                     }
2700:ThirdParty/FreeRTOS/tasks.c ****                     else
2701:ThirdParty/FreeRTOS/tasks.c ****                     {
2702:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2703:ThirdParty/FreeRTOS/tasks.c ****                     }
2704:ThirdParty/FreeRTOS/tasks.c ****                 }
2705:ThirdParty/FreeRTOS/tasks.c ****                 #endif /* configUSE_PREEMPTION */
2706:ThirdParty/FreeRTOS/tasks.c ****             }
2707:ThirdParty/FreeRTOS/tasks.c ****             else
2708:ThirdParty/FreeRTOS/tasks.c ****             {
2709:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdFAIL;
2710:ThirdParty/FreeRTOS/tasks.c ****             }
2711:ThirdParty/FreeRTOS/tasks.c ****         }
2712:ThirdParty/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2713:ThirdParty/FreeRTOS/tasks.c **** 
2714:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
2715:ThirdParty/FreeRTOS/tasks.c ****     }
2716:ThirdParty/FreeRTOS/tasks.c **** 
2717:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2718:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2719:ThirdParty/FreeRTOS/tasks.c **** 
2720:ThirdParty/FreeRTOS/tasks.c **** BaseType_t xTaskIncrementTick( void )
2721:ThirdParty/FreeRTOS/tasks.c **** {
2722:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
2723:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xItemValue;
2724:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
2725:ThirdParty/FreeRTOS/tasks.c **** 
2726:ThirdParty/FreeRTOS/tasks.c ****     /* Called by the portable layer each time a tick interrupt occurs.
2727:ThirdParty/FreeRTOS/tasks.c ****      * Increments the tick then checks to see if the new tick value will cause any
2728:ThirdParty/FreeRTOS/tasks.c ****      * tasks to be unblocked. */
2729:ThirdParty/FreeRTOS/tasks.c ****     traceTASK_INCREMENT_TICK( xTickCount );
2730:ThirdParty/FreeRTOS/tasks.c **** 
2731:ThirdParty/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2732:ThirdParty/FreeRTOS/tasks.c ****     {
2733:ThirdParty/FreeRTOS/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this
2734:ThirdParty/FreeRTOS/tasks.c ****          * block. */
2735:ThirdParty/FreeRTOS/tasks.c ****         const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2736:ThirdParty/FreeRTOS/tasks.c **** 
2737:ThirdParty/FreeRTOS/tasks.c ****         /* Increment the RTOS tick, switching the delayed and overflowed
2738:ThirdParty/FreeRTOS/tasks.c ****          * delayed lists if it wraps to 0. */
2739:ThirdParty/FreeRTOS/tasks.c ****         xTickCount = xConstTickCount;
2740:ThirdParty/FreeRTOS/tasks.c **** 
2741:ThirdParty/FreeRTOS/tasks.c ****         if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to fa
2742:ThirdParty/FreeRTOS/tasks.c ****         {
2743:ThirdParty/FreeRTOS/tasks.c ****             taskSWITCH_DELAYED_LISTS();
2744:ThirdParty/FreeRTOS/tasks.c ****         }
2745:ThirdParty/FreeRTOS/tasks.c ****         else
2746:ThirdParty/FreeRTOS/tasks.c ****         {
2747:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2748:ThirdParty/FreeRTOS/tasks.c ****         }
2749:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 55


2750:ThirdParty/FreeRTOS/tasks.c ****         /* See if this tick has made a timeout expire.  Tasks are stored in
2751:ThirdParty/FreeRTOS/tasks.c ****          * the  queue in the order of their wake time - meaning once one task
2752:ThirdParty/FreeRTOS/tasks.c ****          * has been found whose block time has not expired there is no need to
2753:ThirdParty/FreeRTOS/tasks.c ****          * look any further down the list. */
2754:ThirdParty/FreeRTOS/tasks.c ****         if( xConstTickCount >= xNextTaskUnblockTime )
2755:ThirdParty/FreeRTOS/tasks.c ****         {
2756:ThirdParty/FreeRTOS/tasks.c ****             for( ; ; )
2757:ThirdParty/FreeRTOS/tasks.c ****             {
2758:ThirdParty/FreeRTOS/tasks.c ****                 if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2759:ThirdParty/FreeRTOS/tasks.c ****                 {
2760:ThirdParty/FreeRTOS/tasks.c ****                     /* The delayed list is empty.  Set xNextTaskUnblockTime
2761:ThirdParty/FreeRTOS/tasks.c ****                      * to the maximum possible value so it is extremely
2762:ThirdParty/FreeRTOS/tasks.c ****                      * unlikely that the
2763:ThirdParty/FreeRTOS/tasks.c ****                      * if( xTickCount >= xNextTaskUnblockTime ) test will pass
2764:ThirdParty/FreeRTOS/tasks.c ****                      * next time through. */
2765:ThirdParty/FreeRTOS/tasks.c ****                     xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts
2766:ThirdParty/FreeRTOS/tasks.c ****                     break;
2767:ThirdParty/FreeRTOS/tasks.c ****                 }
2768:ThirdParty/FreeRTOS/tasks.c ****                 else
2769:ThirdParty/FreeRTOS/tasks.c ****                 {
2770:ThirdParty/FreeRTOS/tasks.c ****                     /* The delayed list is not empty, get the value of the
2771:ThirdParty/FreeRTOS/tasks.c ****                      * item at the head of the delayed list.  This is the time
2772:ThirdParty/FreeRTOS/tasks.c ****                      * at which the task at the head of the delayed list must
2773:ThirdParty/FreeRTOS/tasks.c ****                      * be removed from the Blocked state. */
2774:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * 
2775:ThirdParty/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2776:ThirdParty/FreeRTOS/tasks.c **** 
2777:ThirdParty/FreeRTOS/tasks.c ****                     if( xConstTickCount < xItemValue )
2778:ThirdParty/FreeRTOS/tasks.c ****                     {
2779:ThirdParty/FreeRTOS/tasks.c ****                         /* It is not time to unblock this item yet, but the
2780:ThirdParty/FreeRTOS/tasks.c ****                          * item value is the time at which the task at the head
2781:ThirdParty/FreeRTOS/tasks.c ****                          * of the blocked list must be removed from the Blocked
2782:ThirdParty/FreeRTOS/tasks.c ****                          * state -  so record the item value in
2783:ThirdParty/FreeRTOS/tasks.c ****                          * xNextTaskUnblockTime. */
2784:ThirdParty/FreeRTOS/tasks.c ****                         xNextTaskUnblockTime = xItemValue;
2785:ThirdParty/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
2786:ThirdParty/FreeRTOS/tasks.c ****                     }
2787:ThirdParty/FreeRTOS/tasks.c ****                     else
2788:ThirdParty/FreeRTOS/tasks.c ****                     {
2789:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2790:ThirdParty/FreeRTOS/tasks.c ****                     }
2791:ThirdParty/FreeRTOS/tasks.c **** 
2792:ThirdParty/FreeRTOS/tasks.c ****                     /* It is time to remove the item from the Blocked state. */
2793:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
2794:ThirdParty/FreeRTOS/tasks.c **** 
2795:ThirdParty/FreeRTOS/tasks.c ****                     /* Is the task waiting on an event also?  If so remove
2796:ThirdParty/FreeRTOS/tasks.c ****                      * it from the event list. */
2797:ThirdParty/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2798:ThirdParty/FreeRTOS/tasks.c ****                     {
2799:ThirdParty/FreeRTOS/tasks.c ****                         listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
2800:ThirdParty/FreeRTOS/tasks.c ****                     }
2801:ThirdParty/FreeRTOS/tasks.c ****                     else
2802:ThirdParty/FreeRTOS/tasks.c ****                     {
2803:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2804:ThirdParty/FreeRTOS/tasks.c ****                     }
2805:ThirdParty/FreeRTOS/tasks.c **** 
2806:ThirdParty/FreeRTOS/tasks.c ****                     /* Place the unblocked task into the appropriate ready
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 56


2807:ThirdParty/FreeRTOS/tasks.c ****                      * list. */
2808:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2809:ThirdParty/FreeRTOS/tasks.c **** 
2810:ThirdParty/FreeRTOS/tasks.c ****                     /* A task being unblocked cannot cause an immediate
2811:ThirdParty/FreeRTOS/tasks.c ****                      * context switch if preemption is turned off. */
2812:ThirdParty/FreeRTOS/tasks.c ****                     #if ( configUSE_PREEMPTION == 1 )
2813:ThirdParty/FreeRTOS/tasks.c ****                     {
2814:ThirdParty/FreeRTOS/tasks.c ****                         /* Preemption is on, but a context switch should
2815:ThirdParty/FreeRTOS/tasks.c ****                          * only be performed if the unblocked task's
2816:ThirdParty/FreeRTOS/tasks.c ****                          * priority is higher than the currently executing
2817:ThirdParty/FreeRTOS/tasks.c ****                          * task.
2818:ThirdParty/FreeRTOS/tasks.c ****                          * The case of equal priority tasks sharing
2819:ThirdParty/FreeRTOS/tasks.c ****                          * processing time (which happens when both
2820:ThirdParty/FreeRTOS/tasks.c ****                          * preemption and time slicing are on) is
2821:ThirdParty/FreeRTOS/tasks.c ****                          * handled below.*/
2822:ThirdParty/FreeRTOS/tasks.c ****                         if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2823:ThirdParty/FreeRTOS/tasks.c ****                         {
2824:ThirdParty/FreeRTOS/tasks.c ****                             xSwitchRequired = pdTRUE;
2825:ThirdParty/FreeRTOS/tasks.c ****                         }
2826:ThirdParty/FreeRTOS/tasks.c ****                         else
2827:ThirdParty/FreeRTOS/tasks.c ****                         {
2828:ThirdParty/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
2829:ThirdParty/FreeRTOS/tasks.c ****                         }
2830:ThirdParty/FreeRTOS/tasks.c ****                     }
2831:ThirdParty/FreeRTOS/tasks.c ****                     #endif /* configUSE_PREEMPTION */
2832:ThirdParty/FreeRTOS/tasks.c ****                 }
2833:ThirdParty/FreeRTOS/tasks.c ****             }
2834:ThirdParty/FreeRTOS/tasks.c ****         }
2835:ThirdParty/FreeRTOS/tasks.c **** 
2836:ThirdParty/FreeRTOS/tasks.c ****         /* Tasks of equal priority to the currently running task will share
2837:ThirdParty/FreeRTOS/tasks.c ****          * processing time (time slice) if preemption is on, and the application
2838:ThirdParty/FreeRTOS/tasks.c ****          * writer has not explicitly turned time slicing off. */
2839:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2840:ThirdParty/FreeRTOS/tasks.c ****         {
2841:ThirdParty/FreeRTOS/tasks.c ****             if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( U
2842:ThirdParty/FreeRTOS/tasks.c ****             {
2843:ThirdParty/FreeRTOS/tasks.c ****                 xSwitchRequired = pdTRUE;
2844:ThirdParty/FreeRTOS/tasks.c ****             }
2845:ThirdParty/FreeRTOS/tasks.c ****             else
2846:ThirdParty/FreeRTOS/tasks.c ****             {
2847:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2848:ThirdParty/FreeRTOS/tasks.c ****             }
2849:ThirdParty/FreeRTOS/tasks.c ****         }
2850:ThirdParty/FreeRTOS/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2851:ThirdParty/FreeRTOS/tasks.c **** 
2852:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2853:ThirdParty/FreeRTOS/tasks.c ****         {
2854:ThirdParty/FreeRTOS/tasks.c ****             /* Guard against the tick hook being called when the pended tick
2855:ThirdParty/FreeRTOS/tasks.c ****              * count is being unwound (when the scheduler is being unlocked). */
2856:ThirdParty/FreeRTOS/tasks.c ****             if( xPendedTicks == ( TickType_t ) 0 )
2857:ThirdParty/FreeRTOS/tasks.c ****             {
2858:ThirdParty/FreeRTOS/tasks.c ****                 vApplicationTickHook();
2859:ThirdParty/FreeRTOS/tasks.c ****             }
2860:ThirdParty/FreeRTOS/tasks.c ****             else
2861:ThirdParty/FreeRTOS/tasks.c ****             {
2862:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2863:ThirdParty/FreeRTOS/tasks.c ****             }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 57


2864:ThirdParty/FreeRTOS/tasks.c ****         }
2865:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_TICK_HOOK */
2866:ThirdParty/FreeRTOS/tasks.c **** 
2867:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_PREEMPTION == 1 )
2868:ThirdParty/FreeRTOS/tasks.c ****         {
2869:ThirdParty/FreeRTOS/tasks.c ****             if( xYieldPending != pdFALSE )
2870:ThirdParty/FreeRTOS/tasks.c ****             {
2871:ThirdParty/FreeRTOS/tasks.c ****                 xSwitchRequired = pdTRUE;
2872:ThirdParty/FreeRTOS/tasks.c ****             }
2873:ThirdParty/FreeRTOS/tasks.c ****             else
2874:ThirdParty/FreeRTOS/tasks.c ****             {
2875:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2876:ThirdParty/FreeRTOS/tasks.c ****             }
2877:ThirdParty/FreeRTOS/tasks.c ****         }
2878:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_PREEMPTION */
2879:ThirdParty/FreeRTOS/tasks.c ****     }
2880:ThirdParty/FreeRTOS/tasks.c ****     else
2881:ThirdParty/FreeRTOS/tasks.c ****     {
2882:ThirdParty/FreeRTOS/tasks.c ****         ++xPendedTicks;
2883:ThirdParty/FreeRTOS/tasks.c **** 
2884:ThirdParty/FreeRTOS/tasks.c ****         /* The tick hook gets called at regular intervals, even if the
2885:ThirdParty/FreeRTOS/tasks.c ****          * scheduler is locked. */
2886:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2887:ThirdParty/FreeRTOS/tasks.c ****         {
2888:ThirdParty/FreeRTOS/tasks.c ****             vApplicationTickHook();
2889:ThirdParty/FreeRTOS/tasks.c ****         }
2890:ThirdParty/FreeRTOS/tasks.c ****         #endif
2891:ThirdParty/FreeRTOS/tasks.c ****     }
2892:ThirdParty/FreeRTOS/tasks.c **** 
2893:ThirdParty/FreeRTOS/tasks.c ****     return xSwitchRequired;
2894:ThirdParty/FreeRTOS/tasks.c **** }
2895:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2896:ThirdParty/FreeRTOS/tasks.c **** 
2897:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2898:ThirdParty/FreeRTOS/tasks.c **** 
2899:ThirdParty/FreeRTOS/tasks.c ****     void vTaskSetApplicationTaskTag( TaskHandle_t xTask,
2900:ThirdParty/FreeRTOS/tasks.c ****                                      TaskHookFunction_t pxHookFunction )
2901:ThirdParty/FreeRTOS/tasks.c ****     {
2902:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * xTCB;
2903:ThirdParty/FreeRTOS/tasks.c **** 
2904:ThirdParty/FreeRTOS/tasks.c ****         /* If xTask is NULL then it is the task hook of the calling task that is
2905:ThirdParty/FreeRTOS/tasks.c ****          * getting set. */
2906:ThirdParty/FreeRTOS/tasks.c ****         if( xTask == NULL )
2907:ThirdParty/FreeRTOS/tasks.c ****         {
2908:ThirdParty/FreeRTOS/tasks.c ****             xTCB = ( TCB_t * ) pxCurrentTCB;
2909:ThirdParty/FreeRTOS/tasks.c ****         }
2910:ThirdParty/FreeRTOS/tasks.c ****         else
2911:ThirdParty/FreeRTOS/tasks.c ****         {
2912:ThirdParty/FreeRTOS/tasks.c ****             xTCB = xTask;
2913:ThirdParty/FreeRTOS/tasks.c ****         }
2914:ThirdParty/FreeRTOS/tasks.c **** 
2915:ThirdParty/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2916:ThirdParty/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2917:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
2918:ThirdParty/FreeRTOS/tasks.c ****         {
2919:ThirdParty/FreeRTOS/tasks.c ****             xTCB->pxTaskTag = pxHookFunction;
2920:ThirdParty/FreeRTOS/tasks.c ****         }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 58


2921:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
2922:ThirdParty/FreeRTOS/tasks.c ****     }
2923:ThirdParty/FreeRTOS/tasks.c **** 
2924:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2925:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2926:ThirdParty/FreeRTOS/tasks.c **** 
2927:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2928:ThirdParty/FreeRTOS/tasks.c **** 
2929:ThirdParty/FreeRTOS/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2930:ThirdParty/FreeRTOS/tasks.c ****     {
2931:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2932:ThirdParty/FreeRTOS/tasks.c ****         TaskHookFunction_t xReturn;
2933:ThirdParty/FreeRTOS/tasks.c **** 
2934:ThirdParty/FreeRTOS/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2935:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2936:ThirdParty/FreeRTOS/tasks.c **** 
2937:ThirdParty/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2938:ThirdParty/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2939:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
2940:ThirdParty/FreeRTOS/tasks.c ****         {
2941:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2942:ThirdParty/FreeRTOS/tasks.c ****         }
2943:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
2944:ThirdParty/FreeRTOS/tasks.c **** 
2945:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
2946:ThirdParty/FreeRTOS/tasks.c ****     }
2947:ThirdParty/FreeRTOS/tasks.c **** 
2948:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2949:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2950:ThirdParty/FreeRTOS/tasks.c **** 
2951:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2952:ThirdParty/FreeRTOS/tasks.c **** 
2953:ThirdParty/FreeRTOS/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2954:ThirdParty/FreeRTOS/tasks.c ****     {
2955:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2956:ThirdParty/FreeRTOS/tasks.c ****         TaskHookFunction_t xReturn;
2957:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
2958:ThirdParty/FreeRTOS/tasks.c **** 
2959:ThirdParty/FreeRTOS/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2960:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2961:ThirdParty/FreeRTOS/tasks.c **** 
2962:ThirdParty/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2963:ThirdParty/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2964:ThirdParty/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2965:ThirdParty/FreeRTOS/tasks.c ****         {
2966:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2967:ThirdParty/FreeRTOS/tasks.c ****         }
2968:ThirdParty/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2969:ThirdParty/FreeRTOS/tasks.c **** 
2970:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
2971:ThirdParty/FreeRTOS/tasks.c ****     }
2972:ThirdParty/FreeRTOS/tasks.c **** 
2973:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2974:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2975:ThirdParty/FreeRTOS/tasks.c **** 
2976:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2977:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 59


2978:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask,
2979:ThirdParty/FreeRTOS/tasks.c ****                                              void * pvParameter )
2980:ThirdParty/FreeRTOS/tasks.c ****     {
2981:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * xTCB;
2982:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
2983:ThirdParty/FreeRTOS/tasks.c **** 
2984:ThirdParty/FreeRTOS/tasks.c ****         /* If xTask is NULL then we are calling our own task hook. */
2985:ThirdParty/FreeRTOS/tasks.c ****         if( xTask == NULL )
2986:ThirdParty/FreeRTOS/tasks.c ****         {
2987:ThirdParty/FreeRTOS/tasks.c ****             xTCB = pxCurrentTCB;
2988:ThirdParty/FreeRTOS/tasks.c ****         }
2989:ThirdParty/FreeRTOS/tasks.c ****         else
2990:ThirdParty/FreeRTOS/tasks.c ****         {
2991:ThirdParty/FreeRTOS/tasks.c ****             xTCB = xTask;
2992:ThirdParty/FreeRTOS/tasks.c ****         }
2993:ThirdParty/FreeRTOS/tasks.c **** 
2994:ThirdParty/FreeRTOS/tasks.c ****         if( xTCB->pxTaskTag != NULL )
2995:ThirdParty/FreeRTOS/tasks.c ****         {
2996:ThirdParty/FreeRTOS/tasks.c ****             xReturn = xTCB->pxTaskTag( pvParameter );
2997:ThirdParty/FreeRTOS/tasks.c ****         }
2998:ThirdParty/FreeRTOS/tasks.c ****         else
2999:ThirdParty/FreeRTOS/tasks.c ****         {
3000:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdFAIL;
3001:ThirdParty/FreeRTOS/tasks.c ****         }
3002:ThirdParty/FreeRTOS/tasks.c **** 
3003:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
3004:ThirdParty/FreeRTOS/tasks.c ****     }
3005:ThirdParty/FreeRTOS/tasks.c **** 
3006:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
3007:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3008:ThirdParty/FreeRTOS/tasks.c **** 
3009:ThirdParty/FreeRTOS/tasks.c **** void vTaskSwitchContext( void )
3010:ThirdParty/FreeRTOS/tasks.c **** {
3011:ThirdParty/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
3012:ThirdParty/FreeRTOS/tasks.c ****     {
3013:ThirdParty/FreeRTOS/tasks.c ****         /* The scheduler is currently suspended - do not allow a context
3014:ThirdParty/FreeRTOS/tasks.c ****          * switch. */
3015:ThirdParty/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3016:ThirdParty/FreeRTOS/tasks.c ****     }
3017:ThirdParty/FreeRTOS/tasks.c ****     else
3018:ThirdParty/FreeRTOS/tasks.c ****     {
3019:ThirdParty/FreeRTOS/tasks.c ****         xYieldPending = pdFALSE;
3020:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
3021:ThirdParty/FreeRTOS/tasks.c **** 
3022:ThirdParty/FreeRTOS/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3023:ThirdParty/FreeRTOS/tasks.c ****         {
3024:ThirdParty/FreeRTOS/tasks.c ****             #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3025:ThirdParty/FreeRTOS/tasks.c ****                 portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3026:ThirdParty/FreeRTOS/tasks.c ****             #else
3027:ThirdParty/FreeRTOS/tasks.c ****                 ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3028:ThirdParty/FreeRTOS/tasks.c ****             #endif
3029:ThirdParty/FreeRTOS/tasks.c **** 
3030:ThirdParty/FreeRTOS/tasks.c ****             /* Add the amount of time the task has been running to the
3031:ThirdParty/FreeRTOS/tasks.c ****              * accumulated time so far.  The time the task started running was
3032:ThirdParty/FreeRTOS/tasks.c ****              * stored in ulTaskSwitchedInTime.  Note that there is no overflow
3033:ThirdParty/FreeRTOS/tasks.c ****              * protection here so count values are only valid until the timer
3034:ThirdParty/FreeRTOS/tasks.c ****              * overflows.  The guard against negative values is to protect
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 60


3035:ThirdParty/FreeRTOS/tasks.c ****              * against suspect run time stat counter implementations - which
3036:ThirdParty/FreeRTOS/tasks.c ****              * are provided by the application, not the kernel. */
3037:ThirdParty/FreeRTOS/tasks.c ****             if( ulTotalRunTime > ulTaskSwitchedInTime )
3038:ThirdParty/FreeRTOS/tasks.c ****             {
3039:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3040:ThirdParty/FreeRTOS/tasks.c ****             }
3041:ThirdParty/FreeRTOS/tasks.c ****             else
3042:ThirdParty/FreeRTOS/tasks.c ****             {
3043:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3044:ThirdParty/FreeRTOS/tasks.c ****             }
3045:ThirdParty/FreeRTOS/tasks.c **** 
3046:ThirdParty/FreeRTOS/tasks.c ****             ulTaskSwitchedInTime = ulTotalRunTime;
3047:ThirdParty/FreeRTOS/tasks.c ****         }
3048:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configGENERATE_RUN_TIME_STATS */
3049:ThirdParty/FreeRTOS/tasks.c **** 
3050:ThirdParty/FreeRTOS/tasks.c ****         /* Check for stack overflow, if configured. */
3051:ThirdParty/FreeRTOS/tasks.c ****         taskCHECK_FOR_STACK_OVERFLOW();
3052:ThirdParty/FreeRTOS/tasks.c **** 
3053:ThirdParty/FreeRTOS/tasks.c ****         /* Before the currently running task is switched out, save its errno. */
3054:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3055:ThirdParty/FreeRTOS/tasks.c ****         {
3056:ThirdParty/FreeRTOS/tasks.c ****             pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3057:ThirdParty/FreeRTOS/tasks.c ****         }
3058:ThirdParty/FreeRTOS/tasks.c ****         #endif
3059:ThirdParty/FreeRTOS/tasks.c **** 
3060:ThirdParty/FreeRTOS/tasks.c ****         /* Select a new task to run using either the generic C or port
3061:ThirdParty/FreeRTOS/tasks.c ****          * optimised asm code. */
3062:ThirdParty/FreeRTOS/tasks.c ****         taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with
3063:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
3064:ThirdParty/FreeRTOS/tasks.c **** 
3065:ThirdParty/FreeRTOS/tasks.c ****         /* After the new task is switched in, update the global errno. */
3066:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3067:ThirdParty/FreeRTOS/tasks.c ****         {
3068:ThirdParty/FreeRTOS/tasks.c ****             FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3069:ThirdParty/FreeRTOS/tasks.c ****         }
3070:ThirdParty/FreeRTOS/tasks.c ****         #endif
3071:ThirdParty/FreeRTOS/tasks.c **** 
3072:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
3073:ThirdParty/FreeRTOS/tasks.c ****         {
3074:ThirdParty/FreeRTOS/tasks.c ****             /* Switch C-Runtime's TLS Block to point to the TLS
3075:ThirdParty/FreeRTOS/tasks.c ****              * Block specific to this task. */
3076:ThirdParty/FreeRTOS/tasks.c ****             configSET_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
3077:ThirdParty/FreeRTOS/tasks.c ****         }
3078:ThirdParty/FreeRTOS/tasks.c ****         #endif
3079:ThirdParty/FreeRTOS/tasks.c ****     }
3080:ThirdParty/FreeRTOS/tasks.c **** }
3081:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3082:ThirdParty/FreeRTOS/tasks.c **** 
3083:ThirdParty/FreeRTOS/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList,
3084:ThirdParty/FreeRTOS/tasks.c ****                             const TickType_t xTicksToWait )
3085:ThirdParty/FreeRTOS/tasks.c **** {
3086:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
3087:ThirdParty/FreeRTOS/tasks.c **** 
3088:ThirdParty/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3089:ThirdParty/FreeRTOS/tasks.c ****      * SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3090:ThirdParty/FreeRTOS/tasks.c **** 
3091:ThirdParty/FreeRTOS/tasks.c ****     /* Place the event list item of the TCB in the appropriate event list.
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 61


3092:ThirdParty/FreeRTOS/tasks.c ****      * This is placed in the list in priority order so the highest priority task
3093:ThirdParty/FreeRTOS/tasks.c ****      * is the first to be woken by the event.
3094:ThirdParty/FreeRTOS/tasks.c ****      *
3095:ThirdParty/FreeRTOS/tasks.c ****      * Note: Lists are sorted in ascending order by ListItem_t.xItemValue.
3096:ThirdParty/FreeRTOS/tasks.c ****      * Normally, the xItemValue of a TCB's ListItem_t members is:
3097:ThirdParty/FreeRTOS/tasks.c ****      *      xItemValue = ( configMAX_PRIORITIES - uxPriority )
3098:ThirdParty/FreeRTOS/tasks.c ****      * Therefore, the event list is sorted in descending priority order.
3099:ThirdParty/FreeRTOS/tasks.c ****      *
3100:ThirdParty/FreeRTOS/tasks.c ****      * The queue that contains the event list is locked, preventing
3101:ThirdParty/FreeRTOS/tasks.c ****      * simultaneous access from interrupts. */
3102:ThirdParty/FreeRTOS/tasks.c ****     vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3103:ThirdParty/FreeRTOS/tasks.c **** 
3104:ThirdParty/FreeRTOS/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3105:ThirdParty/FreeRTOS/tasks.c **** }
3106:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3107:ThirdParty/FreeRTOS/tasks.c **** 
3108:ThirdParty/FreeRTOS/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList,
3109:ThirdParty/FreeRTOS/tasks.c ****                                      const TickType_t xItemValue,
3110:ThirdParty/FreeRTOS/tasks.c ****                                      const TickType_t xTicksToWait )
3111:ThirdParty/FreeRTOS/tasks.c **** {
3112:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
3113:ThirdParty/FreeRTOS/tasks.c **** 
3114:ThirdParty/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3115:ThirdParty/FreeRTOS/tasks.c ****      * the event groups implementation. */
3116:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended != 0 );
3117:ThirdParty/FreeRTOS/tasks.c **** 
3118:ThirdParty/FreeRTOS/tasks.c ****     /* Store the item value in the event list item.  It is safe to access the
3119:ThirdParty/FreeRTOS/tasks.c ****      * event list item here as interrupts won't access the event list item of a
3120:ThirdParty/FreeRTOS/tasks.c ****      * task that is not in the Blocked state. */
3121:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VA
3122:ThirdParty/FreeRTOS/tasks.c **** 
3123:ThirdParty/FreeRTOS/tasks.c ****     /* Place the event list item of the TCB at the end of the appropriate event
3124:ThirdParty/FreeRTOS/tasks.c ****      * list.  It is safe to access the event list here because it is part of an
3125:ThirdParty/FreeRTOS/tasks.c ****      * event group implementation - and interrupts don't access event groups
3126:ThirdParty/FreeRTOS/tasks.c ****      * directly (instead they access them indirectly by pending function calls to
3127:ThirdParty/FreeRTOS/tasks.c ****      * the task level). */
3128:ThirdParty/FreeRTOS/tasks.c ****     listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3129:ThirdParty/FreeRTOS/tasks.c **** 
3130:ThirdParty/FreeRTOS/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3131:ThirdParty/FreeRTOS/tasks.c **** }
3132:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3133:ThirdParty/FreeRTOS/tasks.c **** 
3134:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TIMERS == 1 )
3135:ThirdParty/FreeRTOS/tasks.c **** 
3136:ThirdParty/FreeRTOS/tasks.c ****     void vTaskPlaceOnEventListRestricted( List_t * const pxEventList,
3137:ThirdParty/FreeRTOS/tasks.c ****                                           TickType_t xTicksToWait,
3138:ThirdParty/FreeRTOS/tasks.c ****                                           const BaseType_t xWaitIndefinitely )
3139:ThirdParty/FreeRTOS/tasks.c ****     {
3140:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxEventList );
3141:ThirdParty/FreeRTOS/tasks.c **** 
3142:ThirdParty/FreeRTOS/tasks.c ****         /* This function should not be called by application code hence the
3143:ThirdParty/FreeRTOS/tasks.c ****          * 'Restricted' in its name.  It is not part of the public API.  It is
3144:ThirdParty/FreeRTOS/tasks.c ****          * designed for use by kernel code, and has special calling requirements -
3145:ThirdParty/FreeRTOS/tasks.c ****          * it should be called with the scheduler suspended. */
3146:ThirdParty/FreeRTOS/tasks.c **** 
3147:ThirdParty/FreeRTOS/tasks.c **** 
3148:ThirdParty/FreeRTOS/tasks.c ****         /* Place the event list item of the TCB in the appropriate event list.
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 62


3149:ThirdParty/FreeRTOS/tasks.c ****          * In this case it is assume that this is the only task that is going to
3150:ThirdParty/FreeRTOS/tasks.c ****          * be waiting on this event list, so the faster vListInsertEnd() function
3151:ThirdParty/FreeRTOS/tasks.c ****          * can be used in place of vListInsert. */
3152:ThirdParty/FreeRTOS/tasks.c ****         listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3153:ThirdParty/FreeRTOS/tasks.c **** 
3154:ThirdParty/FreeRTOS/tasks.c ****         /* If the task should block indefinitely then set the block time to a
3155:ThirdParty/FreeRTOS/tasks.c ****          * value that will be recognised as an indefinite delay inside the
3156:ThirdParty/FreeRTOS/tasks.c ****          * prvAddCurrentTaskToDelayedList() function. */
3157:ThirdParty/FreeRTOS/tasks.c ****         if( xWaitIndefinitely != pdFALSE )
3158:ThirdParty/FreeRTOS/tasks.c ****         {
3159:ThirdParty/FreeRTOS/tasks.c ****             xTicksToWait = portMAX_DELAY;
3160:ThirdParty/FreeRTOS/tasks.c ****         }
3161:ThirdParty/FreeRTOS/tasks.c **** 
3162:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3163:ThirdParty/FreeRTOS/tasks.c ****         prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3164:ThirdParty/FreeRTOS/tasks.c ****     }
3165:ThirdParty/FreeRTOS/tasks.c **** 
3166:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TIMERS */
3167:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3168:ThirdParty/FreeRTOS/tasks.c **** 
3169:ThirdParty/FreeRTOS/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3170:ThirdParty/FreeRTOS/tasks.c **** {
3171:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
3172:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
3173:ThirdParty/FreeRTOS/tasks.c **** 
3174:ThirdParty/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3175:ThirdParty/FreeRTOS/tasks.c ****      * called from a critical section within an ISR. */
3176:ThirdParty/FreeRTOS/tasks.c **** 
3177:ThirdParty/FreeRTOS/tasks.c ****     /* The event list is sorted in priority order, so the first in the list can
3178:ThirdParty/FreeRTOS/tasks.c ****      * be removed as it is known to be the highest priority.  Remove the TCB from
3179:ThirdParty/FreeRTOS/tasks.c ****      * the delayed list, and add it to the ready list.
3180:ThirdParty/FreeRTOS/tasks.c ****      *
3181:ThirdParty/FreeRTOS/tasks.c ****      * If an event is for a queue that is locked then this function will never
3182:ThirdParty/FreeRTOS/tasks.c ****      * get called - the lock count on the queue will get modified instead.  This
3183:ThirdParty/FreeRTOS/tasks.c ****      * means exclusive access to the event list is guaranteed here.
3184:ThirdParty/FreeRTOS/tasks.c ****      *
3185:ThirdParty/FreeRTOS/tasks.c ****      * This function assumes that a check has already been made to ensure that
3186:ThirdParty/FreeRTOS/tasks.c ****      * pxEventList is not empty. */
3187:ThirdParty/FreeRTOS/tasks.c ****     pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as th
3188:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
3189:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
3190:ThirdParty/FreeRTOS/tasks.c **** 
3191:ThirdParty/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3192:ThirdParty/FreeRTOS/tasks.c ****     {
3193:ThirdParty/FreeRTOS/tasks.c ****         listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
3194:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
3195:ThirdParty/FreeRTOS/tasks.c **** 
3196:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3197:ThirdParty/FreeRTOS/tasks.c ****         {
3198:ThirdParty/FreeRTOS/tasks.c ****             /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3199:ThirdParty/FreeRTOS/tasks.c ****              * might be set to the blocked task's time out time.  If the task is
3200:ThirdParty/FreeRTOS/tasks.c ****              * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3201:ThirdParty/FreeRTOS/tasks.c ****              * normally left unchanged, because it is automatically reset to a new
3202:ThirdParty/FreeRTOS/tasks.c ****              * value when the tick count equals xNextTaskUnblockTime.  However if
3203:ThirdParty/FreeRTOS/tasks.c ****              * tickless idling is used it might be more important to enter sleep mode
3204:ThirdParty/FreeRTOS/tasks.c ****              * at the earliest possible time - so reset xNextTaskUnblockTime here to
3205:ThirdParty/FreeRTOS/tasks.c ****              * ensure it is updated at the earliest possible time. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 63


3206:ThirdParty/FreeRTOS/tasks.c ****             prvResetNextTaskUnblockTime();
3207:ThirdParty/FreeRTOS/tasks.c ****         }
3208:ThirdParty/FreeRTOS/tasks.c ****         #endif
3209:ThirdParty/FreeRTOS/tasks.c ****     }
3210:ThirdParty/FreeRTOS/tasks.c ****     else
3211:ThirdParty/FreeRTOS/tasks.c ****     {
3212:ThirdParty/FreeRTOS/tasks.c ****         /* The delayed and ready lists cannot be accessed, so hold this task
3213:ThirdParty/FreeRTOS/tasks.c ****          * pending until the scheduler is resumed. */
3214:ThirdParty/FreeRTOS/tasks.c ****         listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3215:ThirdParty/FreeRTOS/tasks.c ****     }
3216:ThirdParty/FreeRTOS/tasks.c **** 
3217:ThirdParty/FreeRTOS/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3218:ThirdParty/FreeRTOS/tasks.c ****     {
3219:ThirdParty/FreeRTOS/tasks.c ****         /* Return true if the task removed from the event list has a higher
3220:ThirdParty/FreeRTOS/tasks.c ****          * priority than the calling task.  This allows the calling task to know if
3221:ThirdParty/FreeRTOS/tasks.c ****          * it should force a context switch now. */
3222:ThirdParty/FreeRTOS/tasks.c ****         xReturn = pdTRUE;
3223:ThirdParty/FreeRTOS/tasks.c **** 
3224:ThirdParty/FreeRTOS/tasks.c ****         /* Mark that a yield is pending in case the user is not using the
3225:ThirdParty/FreeRTOS/tasks.c ****          * "xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3226:ThirdParty/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3227:ThirdParty/FreeRTOS/tasks.c ****     }
3228:ThirdParty/FreeRTOS/tasks.c ****     else
3229:ThirdParty/FreeRTOS/tasks.c ****     {
3230:ThirdParty/FreeRTOS/tasks.c ****         xReturn = pdFALSE;
3231:ThirdParty/FreeRTOS/tasks.c ****     }
3232:ThirdParty/FreeRTOS/tasks.c **** 
3233:ThirdParty/FreeRTOS/tasks.c ****     return xReturn;
3234:ThirdParty/FreeRTOS/tasks.c **** }
3235:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3236:ThirdParty/FreeRTOS/tasks.c **** 
3237:ThirdParty/FreeRTOS/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
3238:ThirdParty/FreeRTOS/tasks.c ****                                         const TickType_t xItemValue )
3239:ThirdParty/FreeRTOS/tasks.c **** {
3240:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
3241:ThirdParty/FreeRTOS/tasks.c **** 
3242:ThirdParty/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3243:ThirdParty/FreeRTOS/tasks.c ****      * the event flags implementation. */
3244:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended != pdFALSE );
3245:ThirdParty/FreeRTOS/tasks.c **** 
3246:ThirdParty/FreeRTOS/tasks.c ****     /* Store the new item value in the event list. */
3247:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3248:ThirdParty/FreeRTOS/tasks.c **** 
3249:ThirdParty/FreeRTOS/tasks.c ****     /* Remove the event list form the event flag.  Interrupts do not access
3250:ThirdParty/FreeRTOS/tasks.c ****      * event flags. */
3251:ThirdParty/FreeRTOS/tasks.c ****     pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as th
3252:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
3253:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
3254:ThirdParty/FreeRTOS/tasks.c **** 
3255:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_TICKLESS_IDLE != 0 )
3256:ThirdParty/FreeRTOS/tasks.c ****     {
3257:ThirdParty/FreeRTOS/tasks.c ****         /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3258:ThirdParty/FreeRTOS/tasks.c ****          * might be set to the blocked task's time out time.  If the task is
3259:ThirdParty/FreeRTOS/tasks.c ****          * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3260:ThirdParty/FreeRTOS/tasks.c ****          * normally left unchanged, because it is automatically reset to a new
3261:ThirdParty/FreeRTOS/tasks.c ****          * value when the tick count equals xNextTaskUnblockTime.  However if
3262:ThirdParty/FreeRTOS/tasks.c ****          * tickless idling is used it might be more important to enter sleep mode
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 64


3263:ThirdParty/FreeRTOS/tasks.c ****          * at the earliest possible time - so reset xNextTaskUnblockTime here to
3264:ThirdParty/FreeRTOS/tasks.c ****          * ensure it is updated at the earliest possible time. */
3265:ThirdParty/FreeRTOS/tasks.c ****         prvResetNextTaskUnblockTime();
3266:ThirdParty/FreeRTOS/tasks.c ****     }
3267:ThirdParty/FreeRTOS/tasks.c ****     #endif
3268:ThirdParty/FreeRTOS/tasks.c **** 
3269:ThirdParty/FreeRTOS/tasks.c ****     /* Remove the task from the delayed list and add it to the ready list.  The
3270:ThirdParty/FreeRTOS/tasks.c ****      * scheduler is suspended so interrupts will not be accessing the ready
3271:ThirdParty/FreeRTOS/tasks.c ****      * lists. */
3272:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
3273:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
3274:ThirdParty/FreeRTOS/tasks.c **** 
3275:ThirdParty/FreeRTOS/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3276:ThirdParty/FreeRTOS/tasks.c ****     {
3277:ThirdParty/FreeRTOS/tasks.c ****         /* The unblocked task has a priority above that of the calling task, so
3278:ThirdParty/FreeRTOS/tasks.c ****          * a context switch is required.  This function is called with the
3279:ThirdParty/FreeRTOS/tasks.c ****          * scheduler suspended so xYieldPending is set so the context switch
3280:ThirdParty/FreeRTOS/tasks.c ****          * occurs immediately that the scheduler is resumed (unsuspended). */
3281:ThirdParty/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3282:ThirdParty/FreeRTOS/tasks.c ****     }
3283:ThirdParty/FreeRTOS/tasks.c **** }
3284:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3285:ThirdParty/FreeRTOS/tasks.c **** 
3286:ThirdParty/FreeRTOS/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3287:ThirdParty/FreeRTOS/tasks.c **** {
3288:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
3289:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
3290:ThirdParty/FreeRTOS/tasks.c ****     {
3291:ThirdParty/FreeRTOS/tasks.c ****         pxTimeOut->xOverflowCount = xNumOfOverflows;
3292:ThirdParty/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
3293:ThirdParty/FreeRTOS/tasks.c ****     }
3294:ThirdParty/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
3295:ThirdParty/FreeRTOS/tasks.c **** }
3296:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3297:ThirdParty/FreeRTOS/tasks.c **** 
3298:ThirdParty/FreeRTOS/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3299:ThirdParty/FreeRTOS/tasks.c **** {
3300:ThirdParty/FreeRTOS/tasks.c ****     /* For internal use only as it does not use a critical section. */
3301:ThirdParty/FreeRTOS/tasks.c ****     pxTimeOut->xOverflowCount = xNumOfOverflows;
3302:ThirdParty/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
3303:ThirdParty/FreeRTOS/tasks.c **** }
3304:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3305:ThirdParty/FreeRTOS/tasks.c **** 
3306:ThirdParty/FreeRTOS/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
3307:ThirdParty/FreeRTOS/tasks.c ****                                  TickType_t * const pxTicksToWait )
3308:ThirdParty/FreeRTOS/tasks.c **** {
3309:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
3310:ThirdParty/FreeRTOS/tasks.c **** 
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
3312:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
3313:ThirdParty/FreeRTOS/tasks.c **** 
3314:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
3315:ThirdParty/FreeRTOS/tasks.c ****     {
3316:ThirdParty/FreeRTOS/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this block. */
3317:ThirdParty/FreeRTOS/tasks.c ****         const TickType_t xConstTickCount = xTickCount;
3318:ThirdParty/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3319:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 65


3320:ThirdParty/FreeRTOS/tasks.c ****         #if ( INCLUDE_xTaskAbortDelay == 1 )
3321:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3322:ThirdParty/FreeRTOS/tasks.c ****             {
3323:ThirdParty/FreeRTOS/tasks.c ****                 /* The delay was aborted, which is not the same as a time out,
3324:ThirdParty/FreeRTOS/tasks.c ****                  * but has the same result. */
3325:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucDelayAborted = pdFALSE;
3326:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
3327:ThirdParty/FreeRTOS/tasks.c ****             }
3328:ThirdParty/FreeRTOS/tasks.c ****             else
3329:ThirdParty/FreeRTOS/tasks.c ****         #endif
3330:ThirdParty/FreeRTOS/tasks.c **** 
3331:ThirdParty/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3332:ThirdParty/FreeRTOS/tasks.c ****             if( *pxTicksToWait == portMAX_DELAY )
3333:ThirdParty/FreeRTOS/tasks.c ****             {
3334:ThirdParty/FreeRTOS/tasks.c ****                 /* If INCLUDE_vTaskSuspend is set to 1 and the block time
3335:ThirdParty/FreeRTOS/tasks.c ****                  * specified is the maximum block time then the task should block
3336:ThirdParty/FreeRTOS/tasks.c ****                  * indefinitely, and therefore never time out. */
3337:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdFALSE;
3338:ThirdParty/FreeRTOS/tasks.c ****             }
3339:ThirdParty/FreeRTOS/tasks.c ****             else
3340:ThirdParty/FreeRTOS/tasks.c ****         #endif
3341:ThirdParty/FreeRTOS/tasks.c **** 
3342:ThirdParty/FreeRTOS/tasks.c ****         if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTi
3343:ThirdParty/FreeRTOS/tasks.c ****         {
3344:ThirdParty/FreeRTOS/tasks.c ****             /* The tick count is greater than the time at which
3345:ThirdParty/FreeRTOS/tasks.c ****              * vTaskSetTimeout() was called, but has also overflowed since
3346:ThirdParty/FreeRTOS/tasks.c ****              * vTaskSetTimeOut() was called.  It must have wrapped all the way
3347:ThirdParty/FreeRTOS/tasks.c ****              * around and gone past again. This passed since vTaskSetTimeout()
3348:ThirdParty/FreeRTOS/tasks.c ****              * was called. */
3349:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
3350:ThirdParty/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3351:ThirdParty/FreeRTOS/tasks.c ****         }
3352:ThirdParty/FreeRTOS/tasks.c ****         else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant wi
3353:ThirdParty/FreeRTOS/tasks.c ****         {
3354:ThirdParty/FreeRTOS/tasks.c ****             /* Not a genuine timeout. Adjust parameters for time remaining. */
3355:ThirdParty/FreeRTOS/tasks.c ****             *pxTicksToWait -= xElapsedTime;
3356:ThirdParty/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
3357:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdFALSE;
3358:ThirdParty/FreeRTOS/tasks.c ****         }
3359:ThirdParty/FreeRTOS/tasks.c ****         else
3360:ThirdParty/FreeRTOS/tasks.c ****         {
3361:ThirdParty/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3362:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
3363:ThirdParty/FreeRTOS/tasks.c ****         }
3364:ThirdParty/FreeRTOS/tasks.c ****     }
3365:ThirdParty/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
3366:ThirdParty/FreeRTOS/tasks.c **** 
3367:ThirdParty/FreeRTOS/tasks.c ****     return xReturn;
3368:ThirdParty/FreeRTOS/tasks.c **** }
3369:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3370:ThirdParty/FreeRTOS/tasks.c **** 
3371:ThirdParty/FreeRTOS/tasks.c **** void vTaskMissedYield( void )
3372:ThirdParty/FreeRTOS/tasks.c **** {
3373:ThirdParty/FreeRTOS/tasks.c ****     xYieldPending = pdTRUE;
3374:ThirdParty/FreeRTOS/tasks.c **** }
3375:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3376:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 66


3377:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3378:ThirdParty/FreeRTOS/tasks.c **** 
3379:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3380:ThirdParty/FreeRTOS/tasks.c ****     {
3381:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
3382:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
3383:ThirdParty/FreeRTOS/tasks.c **** 
3384:ThirdParty/FreeRTOS/tasks.c ****         if( xTask != NULL )
3385:ThirdParty/FreeRTOS/tasks.c ****         {
3386:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = xTask;
3387:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxTaskNumber;
3388:ThirdParty/FreeRTOS/tasks.c ****         }
3389:ThirdParty/FreeRTOS/tasks.c ****         else
3390:ThirdParty/FreeRTOS/tasks.c ****         {
3391:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = 0U;
3392:ThirdParty/FreeRTOS/tasks.c ****         }
3393:ThirdParty/FreeRTOS/tasks.c **** 
3394:ThirdParty/FreeRTOS/tasks.c ****         return uxReturn;
3395:ThirdParty/FreeRTOS/tasks.c ****     }
3396:ThirdParty/FreeRTOS/tasks.c **** 
3397:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3398:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3399:ThirdParty/FreeRTOS/tasks.c **** 
3400:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3401:ThirdParty/FreeRTOS/tasks.c **** 
3402:ThirdParty/FreeRTOS/tasks.c ****     void vTaskSetTaskNumber( TaskHandle_t xTask,
3403:ThirdParty/FreeRTOS/tasks.c ****                              const UBaseType_t uxHandle )
3404:ThirdParty/FreeRTOS/tasks.c ****     {
3405:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3406:ThirdParty/FreeRTOS/tasks.c **** 
3407:ThirdParty/FreeRTOS/tasks.c ****         if( xTask != NULL )
3408:ThirdParty/FreeRTOS/tasks.c ****         {
3409:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = xTask;
3410:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->uxTaskNumber = uxHandle;
3411:ThirdParty/FreeRTOS/tasks.c ****         }
3412:ThirdParty/FreeRTOS/tasks.c ****     }
3413:ThirdParty/FreeRTOS/tasks.c **** 
3414:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3415:ThirdParty/FreeRTOS/tasks.c **** 
3416:ThirdParty/FreeRTOS/tasks.c **** /*
3417:ThirdParty/FreeRTOS/tasks.c ****  * -----------------------------------------------------------
3418:ThirdParty/FreeRTOS/tasks.c ****  * The Idle task.
3419:ThirdParty/FreeRTOS/tasks.c ****  * ----------------------------------------------------------
3420:ThirdParty/FreeRTOS/tasks.c ****  *
3421:ThirdParty/FreeRTOS/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3422:ThirdParty/FreeRTOS/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3423:ThirdParty/FreeRTOS/tasks.c ****  *
3424:ThirdParty/FreeRTOS/tasks.c ****  * void prvIdleTask( void *pvParameters );
3425:ThirdParty/FreeRTOS/tasks.c ****  *
3426:ThirdParty/FreeRTOS/tasks.c ****  */
3427:ThirdParty/FreeRTOS/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3428:ThirdParty/FreeRTOS/tasks.c **** {
3429:ThirdParty/FreeRTOS/tasks.c ****     /* Stop warnings. */
3430:ThirdParty/FreeRTOS/tasks.c ****     ( void ) pvParameters;
3431:ThirdParty/FreeRTOS/tasks.c **** 
3432:ThirdParty/FreeRTOS/tasks.c ****     /** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3433:ThirdParty/FreeRTOS/tasks.c ****      * SCHEDULER IS STARTED. **/
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 67


3434:ThirdParty/FreeRTOS/tasks.c **** 
3435:ThirdParty/FreeRTOS/tasks.c ****     /* In case a task that has a secure context deletes itself, in which case
3436:ThirdParty/FreeRTOS/tasks.c ****      * the idle task is responsible for deleting the task's secure context, if
3437:ThirdParty/FreeRTOS/tasks.c ****      * any. */
3438:ThirdParty/FreeRTOS/tasks.c ****     portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3439:ThirdParty/FreeRTOS/tasks.c **** 
3440:ThirdParty/FreeRTOS/tasks.c ****     for( ; ; )
3441:ThirdParty/FreeRTOS/tasks.c ****     {
3442:ThirdParty/FreeRTOS/tasks.c ****         /* See if any tasks have deleted themselves - if so then the idle task
3443:ThirdParty/FreeRTOS/tasks.c ****          * is responsible for freeing the deleted task's TCB and stack. */
3444:ThirdParty/FreeRTOS/tasks.c ****         prvCheckTasksWaitingTermination();
3445:ThirdParty/FreeRTOS/tasks.c **** 
3446:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_PREEMPTION == 0 )
3447:ThirdParty/FreeRTOS/tasks.c ****         {
3448:ThirdParty/FreeRTOS/tasks.c ****             /* If we are not using preemption we keep forcing a task switch to
3449:ThirdParty/FreeRTOS/tasks.c ****              * see if any other task has become available.  If we are using
3450:ThirdParty/FreeRTOS/tasks.c ****              * preemption we don't need to do this as any task becoming available
3451:ThirdParty/FreeRTOS/tasks.c ****              * will automatically get the processor anyway. */
3452:ThirdParty/FreeRTOS/tasks.c ****             taskYIELD();
3453:ThirdParty/FreeRTOS/tasks.c ****         }
3454:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_PREEMPTION */
3455:ThirdParty/FreeRTOS/tasks.c **** 
3456:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3457:ThirdParty/FreeRTOS/tasks.c ****         {
3458:ThirdParty/FreeRTOS/tasks.c ****             /* When using preemption tasks of equal priority will be
3459:ThirdParty/FreeRTOS/tasks.c ****              * timesliced.  If a task that is sharing the idle priority is ready
3460:ThirdParty/FreeRTOS/tasks.c ****              * to run then the idle task should yield before the end of the
3461:ThirdParty/FreeRTOS/tasks.c ****              * timeslice.
3462:ThirdParty/FreeRTOS/tasks.c ****              *
3463:ThirdParty/FreeRTOS/tasks.c ****              * A critical region is not required here as we are just reading from
3464:ThirdParty/FreeRTOS/tasks.c ****              * the list, and an occasional incorrect value will not matter.  If
3465:ThirdParty/FreeRTOS/tasks.c ****              * the ready list at the idle priority contains more than one task
3466:ThirdParty/FreeRTOS/tasks.c ****              * then a task other than the idle task is ready to execute. */
3467:ThirdParty/FreeRTOS/tasks.c ****             if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType
3468:ThirdParty/FreeRTOS/tasks.c ****             {
3469:ThirdParty/FreeRTOS/tasks.c ****                 taskYIELD();
3470:ThirdParty/FreeRTOS/tasks.c ****             }
3471:ThirdParty/FreeRTOS/tasks.c ****             else
3472:ThirdParty/FreeRTOS/tasks.c ****             {
3473:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3474:ThirdParty/FreeRTOS/tasks.c ****             }
3475:ThirdParty/FreeRTOS/tasks.c ****         }
3476:ThirdParty/FreeRTOS/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3477:ThirdParty/FreeRTOS/tasks.c **** 
3478:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_IDLE_HOOK == 1 )
3479:ThirdParty/FreeRTOS/tasks.c ****         {
3480:ThirdParty/FreeRTOS/tasks.c ****             extern void vApplicationIdleHook( void );
3481:ThirdParty/FreeRTOS/tasks.c **** 
3482:ThirdParty/FreeRTOS/tasks.c ****             /* Call the user defined function from within the idle task.  This
3483:ThirdParty/FreeRTOS/tasks.c ****              * allows the application designer to add background functionality
3484:ThirdParty/FreeRTOS/tasks.c ****              * without the overhead of a separate task.
3485:ThirdParty/FreeRTOS/tasks.c ****              * NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3486:ThirdParty/FreeRTOS/tasks.c ****              * CALL A FUNCTION THAT MIGHT BLOCK. */
3487:ThirdParty/FreeRTOS/tasks.c ****             vApplicationIdleHook();
3488:ThirdParty/FreeRTOS/tasks.c ****         }
3489:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_IDLE_HOOK */
3490:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 68


3491:ThirdParty/FreeRTOS/tasks.c ****         /* This conditional compilation should use inequality to 0, not equality
3492:ThirdParty/FreeRTOS/tasks.c ****          * to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3493:ThirdParty/FreeRTOS/tasks.c ****          * user defined low power mode  implementations require
3494:ThirdParty/FreeRTOS/tasks.c ****          * configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3495:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3496:ThirdParty/FreeRTOS/tasks.c ****         {
3497:ThirdParty/FreeRTOS/tasks.c ****             TickType_t xExpectedIdleTime;
3498:ThirdParty/FreeRTOS/tasks.c **** 
3499:ThirdParty/FreeRTOS/tasks.c ****             /* It is not desirable to suspend then resume the scheduler on
3500:ThirdParty/FreeRTOS/tasks.c ****              * each iteration of the idle task.  Therefore, a preliminary
3501:ThirdParty/FreeRTOS/tasks.c ****              * test of the expected idle time is performed without the
3502:ThirdParty/FreeRTOS/tasks.c ****              * scheduler suspended.  The result here is not necessarily
3503:ThirdParty/FreeRTOS/tasks.c ****              * valid. */
3504:ThirdParty/FreeRTOS/tasks.c ****             xExpectedIdleTime = prvGetExpectedIdleTime();
3505:ThirdParty/FreeRTOS/tasks.c **** 
3506:ThirdParty/FreeRTOS/tasks.c ****             if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3507:ThirdParty/FreeRTOS/tasks.c ****             {
3508:ThirdParty/FreeRTOS/tasks.c ****                 vTaskSuspendAll();
3509:ThirdParty/FreeRTOS/tasks.c ****                 {
3510:ThirdParty/FreeRTOS/tasks.c ****                     /* Now the scheduler is suspended, the expected idle
3511:ThirdParty/FreeRTOS/tasks.c ****                      * time can be sampled again, and this time its value can
3512:ThirdParty/FreeRTOS/tasks.c ****                      * be used. */
3513:ThirdParty/FreeRTOS/tasks.c ****                     configASSERT( xNextTaskUnblockTime >= xTickCount );
3514:ThirdParty/FreeRTOS/tasks.c ****                     xExpectedIdleTime = prvGetExpectedIdleTime();
3515:ThirdParty/FreeRTOS/tasks.c **** 
3516:ThirdParty/FreeRTOS/tasks.c ****                     /* Define the following macro to set xExpectedIdleTime to 0
3517:ThirdParty/FreeRTOS/tasks.c ****                      * if the application does not want
3518:ThirdParty/FreeRTOS/tasks.c ****                      * portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3519:ThirdParty/FreeRTOS/tasks.c ****                     configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3520:ThirdParty/FreeRTOS/tasks.c **** 
3521:ThirdParty/FreeRTOS/tasks.c ****                     if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3522:ThirdParty/FreeRTOS/tasks.c ****                     {
3523:ThirdParty/FreeRTOS/tasks.c ****                         traceLOW_POWER_IDLE_BEGIN();
3524:ThirdParty/FreeRTOS/tasks.c ****                         portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3525:ThirdParty/FreeRTOS/tasks.c ****                         traceLOW_POWER_IDLE_END();
3526:ThirdParty/FreeRTOS/tasks.c ****                     }
3527:ThirdParty/FreeRTOS/tasks.c ****                     else
3528:ThirdParty/FreeRTOS/tasks.c ****                     {
3529:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
3530:ThirdParty/FreeRTOS/tasks.c ****                     }
3531:ThirdParty/FreeRTOS/tasks.c ****                 }
3532:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) xTaskResumeAll();
3533:ThirdParty/FreeRTOS/tasks.c ****             }
3534:ThirdParty/FreeRTOS/tasks.c ****             else
3535:ThirdParty/FreeRTOS/tasks.c ****             {
3536:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3537:ThirdParty/FreeRTOS/tasks.c ****             }
3538:ThirdParty/FreeRTOS/tasks.c ****         }
3539:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_TICKLESS_IDLE */
3540:ThirdParty/FreeRTOS/tasks.c ****     }
3541:ThirdParty/FreeRTOS/tasks.c **** }
3542:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3543:ThirdParty/FreeRTOS/tasks.c **** 
3544:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
3545:ThirdParty/FreeRTOS/tasks.c **** 
3546:ThirdParty/FreeRTOS/tasks.c ****     eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3547:ThirdParty/FreeRTOS/tasks.c ****     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 69


3548:ThirdParty/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3549:ThirdParty/FreeRTOS/tasks.c ****             /* The idle task exists in addition to the application tasks. */
3550:ThirdParty/FreeRTOS/tasks.c ****             const UBaseType_t uxNonApplicationTasks = 1;
3551:ThirdParty/FreeRTOS/tasks.c ****         #endif /* INCLUDE_vTaskSuspend */
3552:ThirdParty/FreeRTOS/tasks.c **** 
3553:ThirdParty/FreeRTOS/tasks.c ****         eSleepModeStatus eReturn = eStandardSleep;
3554:ThirdParty/FreeRTOS/tasks.c **** 
3555:ThirdParty/FreeRTOS/tasks.c ****         /* This function must be called from a critical section. */
3556:ThirdParty/FreeRTOS/tasks.c **** 
3557:ThirdParty/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3558:ThirdParty/FreeRTOS/tasks.c ****         {
3559:ThirdParty/FreeRTOS/tasks.c ****             /* A task was made ready while the scheduler was suspended. */
3560:ThirdParty/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3561:ThirdParty/FreeRTOS/tasks.c ****         }
3562:ThirdParty/FreeRTOS/tasks.c ****         else if( xYieldPending != pdFALSE )
3563:ThirdParty/FreeRTOS/tasks.c ****         {
3564:ThirdParty/FreeRTOS/tasks.c ****             /* A yield was pended while the scheduler was suspended. */
3565:ThirdParty/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3566:ThirdParty/FreeRTOS/tasks.c ****         }
3567:ThirdParty/FreeRTOS/tasks.c ****         else if( xPendedTicks != 0 )
3568:ThirdParty/FreeRTOS/tasks.c ****         {
3569:ThirdParty/FreeRTOS/tasks.c ****             /* A tick interrupt has already occurred but was held pending
3570:ThirdParty/FreeRTOS/tasks.c ****              * because the scheduler is suspended. */
3571:ThirdParty/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3572:ThirdParty/FreeRTOS/tasks.c ****         }
3573:ThirdParty/FreeRTOS/tasks.c **** 
3574:ThirdParty/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3575:ThirdParty/FreeRTOS/tasks.c ****             else if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - u
3576:ThirdParty/FreeRTOS/tasks.c ****             {
3577:ThirdParty/FreeRTOS/tasks.c ****                 /* If all the tasks are in the suspended list (which might mean they
3578:ThirdParty/FreeRTOS/tasks.c ****                  * have an infinite block time rather than actually being suspended)
3579:ThirdParty/FreeRTOS/tasks.c ****                  * then it is safe to turn all clocks off and just wait for external
3580:ThirdParty/FreeRTOS/tasks.c ****                  * interrupts. */
3581:ThirdParty/FreeRTOS/tasks.c ****                 eReturn = eNoTasksWaitingTimeout;
3582:ThirdParty/FreeRTOS/tasks.c ****             }
3583:ThirdParty/FreeRTOS/tasks.c ****         #endif /* INCLUDE_vTaskSuspend */
3584:ThirdParty/FreeRTOS/tasks.c ****         else
3585:ThirdParty/FreeRTOS/tasks.c ****         {
3586:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
3587:ThirdParty/FreeRTOS/tasks.c ****         }
3588:ThirdParty/FreeRTOS/tasks.c **** 
3589:ThirdParty/FreeRTOS/tasks.c ****         return eReturn;
3590:ThirdParty/FreeRTOS/tasks.c ****     }
3591:ThirdParty/FreeRTOS/tasks.c **** 
3592:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3593:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3594:ThirdParty/FreeRTOS/tasks.c **** 
3595:ThirdParty/FreeRTOS/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3596:ThirdParty/FreeRTOS/tasks.c **** 
3597:ThirdParty/FreeRTOS/tasks.c ****     void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet,
3598:ThirdParty/FreeRTOS/tasks.c ****                                             BaseType_t xIndex,
3599:ThirdParty/FreeRTOS/tasks.c ****                                             void * pvValue )
3600:ThirdParty/FreeRTOS/tasks.c ****     {
3601:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3602:ThirdParty/FreeRTOS/tasks.c **** 
3603:ThirdParty/FreeRTOS/tasks.c ****         if( ( xIndex >= 0 ) &&
3604:ThirdParty/FreeRTOS/tasks.c ****             ( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS ) )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 70


3605:ThirdParty/FreeRTOS/tasks.c ****         {
3606:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSet );
3607:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB != NULL );
3608:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3609:ThirdParty/FreeRTOS/tasks.c ****         }
3610:ThirdParty/FreeRTOS/tasks.c ****     }
3611:ThirdParty/FreeRTOS/tasks.c **** 
3612:ThirdParty/FreeRTOS/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3613:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3614:ThirdParty/FreeRTOS/tasks.c **** 
3615:ThirdParty/FreeRTOS/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3616:ThirdParty/FreeRTOS/tasks.c **** 
3617:ThirdParty/FreeRTOS/tasks.c ****     void * pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery,
3618:ThirdParty/FreeRTOS/tasks.c ****                                                BaseType_t xIndex )
3619:ThirdParty/FreeRTOS/tasks.c ****     {
3620:ThirdParty/FreeRTOS/tasks.c ****         void * pvReturn = NULL;
3621:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3622:ThirdParty/FreeRTOS/tasks.c **** 
3623:ThirdParty/FreeRTOS/tasks.c ****         if( ( xIndex >= 0 ) &&
3624:ThirdParty/FreeRTOS/tasks.c ****             ( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS ) )
3625:ThirdParty/FreeRTOS/tasks.c ****         {
3626:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3627:ThirdParty/FreeRTOS/tasks.c ****             pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3628:ThirdParty/FreeRTOS/tasks.c ****         }
3629:ThirdParty/FreeRTOS/tasks.c ****         else
3630:ThirdParty/FreeRTOS/tasks.c ****         {
3631:ThirdParty/FreeRTOS/tasks.c ****             pvReturn = NULL;
3632:ThirdParty/FreeRTOS/tasks.c ****         }
3633:ThirdParty/FreeRTOS/tasks.c **** 
3634:ThirdParty/FreeRTOS/tasks.c ****         return pvReturn;
3635:ThirdParty/FreeRTOS/tasks.c ****     }
3636:ThirdParty/FreeRTOS/tasks.c **** 
3637:ThirdParty/FreeRTOS/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3638:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3639:ThirdParty/FreeRTOS/tasks.c **** 
3640:ThirdParty/FreeRTOS/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3641:ThirdParty/FreeRTOS/tasks.c **** 
3642:ThirdParty/FreeRTOS/tasks.c ****     void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify,
3643:ThirdParty/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions )
3644:ThirdParty/FreeRTOS/tasks.c ****     {
3645:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3646:ThirdParty/FreeRTOS/tasks.c **** 
3647:ThirdParty/FreeRTOS/tasks.c ****         /* If null is passed in here then we are modifying the MPU settings of
3648:ThirdParty/FreeRTOS/tasks.c ****          * the calling task. */
3649:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTaskToModify );
3650:ThirdParty/FreeRTOS/tasks.c **** 
3651:ThirdParty/FreeRTOS/tasks.c ****         vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3652:ThirdParty/FreeRTOS/tasks.c ****     }
3653:ThirdParty/FreeRTOS/tasks.c **** 
3654:ThirdParty/FreeRTOS/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3655:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3656:ThirdParty/FreeRTOS/tasks.c **** 
3657:ThirdParty/FreeRTOS/tasks.c **** static void prvInitialiseTaskLists( void )
3658:ThirdParty/FreeRTOS/tasks.c **** {
3659:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;
3660:ThirdParty/FreeRTOS/tasks.c **** 
3661:ThirdParty/FreeRTOS/tasks.c ****     for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPrio
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 71


3662:ThirdParty/FreeRTOS/tasks.c ****     {
3663:ThirdParty/FreeRTOS/tasks.c ****         vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3664:ThirdParty/FreeRTOS/tasks.c ****     }
3665:ThirdParty/FreeRTOS/tasks.c **** 
3666:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList1 );
3667:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList2 );
3668:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
3669:ThirdParty/FreeRTOS/tasks.c **** 
3670:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3671:ThirdParty/FreeRTOS/tasks.c ****     {
3672:ThirdParty/FreeRTOS/tasks.c ****         vListInitialise( &xTasksWaitingTermination );
3673:ThirdParty/FreeRTOS/tasks.c ****     }
3674:ThirdParty/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3675:ThirdParty/FreeRTOS/tasks.c **** 
3676:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
3677:ThirdParty/FreeRTOS/tasks.c ****     {
3678:ThirdParty/FreeRTOS/tasks.c ****         vListInitialise( &xSuspendedTaskList );
3679:ThirdParty/FreeRTOS/tasks.c ****     }
3680:ThirdParty/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
3681:ThirdParty/FreeRTOS/tasks.c **** 
3682:ThirdParty/FreeRTOS/tasks.c ****     /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3683:ThirdParty/FreeRTOS/tasks.c ****      * using list2. */
3684:ThirdParty/FreeRTOS/tasks.c ****     pxDelayedTaskList = &xDelayedTaskList1;
3685:ThirdParty/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
3686:ThirdParty/FreeRTOS/tasks.c **** }
3687:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3688:ThirdParty/FreeRTOS/tasks.c **** 
3689:ThirdParty/FreeRTOS/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3690:ThirdParty/FreeRTOS/tasks.c **** {
3691:ThirdParty/FreeRTOS/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3692:ThirdParty/FreeRTOS/tasks.c **** 
3693:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3694:ThirdParty/FreeRTOS/tasks.c ****     {
3695:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3696:ThirdParty/FreeRTOS/tasks.c **** 
3697:ThirdParty/FreeRTOS/tasks.c ****         /* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3698:ThirdParty/FreeRTOS/tasks.c ****          * being called too often in the idle task. */
3699:ThirdParty/FreeRTOS/tasks.c ****         while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3700:ThirdParty/FreeRTOS/tasks.c ****         {
3701:ThirdParty/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
3702:ThirdParty/FreeRTOS/tasks.c ****             {
3703:ThirdParty/FreeRTOS/tasks.c ****                 pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079
3704:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3705:ThirdParty/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
3706:ThirdParty/FreeRTOS/tasks.c ****                 --uxDeletedTasksWaitingCleanUp;
3707:ThirdParty/FreeRTOS/tasks.c ****             }
3708:ThirdParty/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
3709:ThirdParty/FreeRTOS/tasks.c **** 
3710:ThirdParty/FreeRTOS/tasks.c ****             prvDeleteTCB( pxTCB );
3711:ThirdParty/FreeRTOS/tasks.c ****         }
3712:ThirdParty/FreeRTOS/tasks.c ****     }
3713:ThirdParty/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3714:ThirdParty/FreeRTOS/tasks.c **** }
3715:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3716:ThirdParty/FreeRTOS/tasks.c **** 
3717:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3718:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 72


3719:ThirdParty/FreeRTOS/tasks.c ****     void vTaskGetInfo( TaskHandle_t xTask,
3720:ThirdParty/FreeRTOS/tasks.c ****                        TaskStatus_t * pxTaskStatus,
3721:ThirdParty/FreeRTOS/tasks.c ****                        BaseType_t xGetFreeStackSpace,
3722:ThirdParty/FreeRTOS/tasks.c ****                        eTaskState eState )
3723:ThirdParty/FreeRTOS/tasks.c ****     {
3724:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3725:ThirdParty/FreeRTOS/tasks.c **** 
3726:ThirdParty/FreeRTOS/tasks.c ****         /* xTask is NULL then get the state of the calling task. */
3727:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3728:ThirdParty/FreeRTOS/tasks.c **** 
3729:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3730:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
3731:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3732:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
3733:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
3734:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->pxTopOfStack = pxTCB->pxTopOfStack;
3735:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->pxEndOfStack = pxTCB->pxEndOfStack;
3736:ThirdParty/FreeRTOS/tasks.c ****         #endif
3737:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3738:ThirdParty/FreeRTOS/tasks.c **** 
3739:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_MUTEXES == 1 )
3740:ThirdParty/FreeRTOS/tasks.c ****         {
3741:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3742:ThirdParty/FreeRTOS/tasks.c ****         }
3743:ThirdParty/FreeRTOS/tasks.c ****         #else
3744:ThirdParty/FreeRTOS/tasks.c ****         {
3745:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->uxBasePriority = 0;
3746:ThirdParty/FreeRTOS/tasks.c ****         }
3747:ThirdParty/FreeRTOS/tasks.c ****         #endif
3748:ThirdParty/FreeRTOS/tasks.c **** 
3749:ThirdParty/FreeRTOS/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3750:ThirdParty/FreeRTOS/tasks.c ****         {
3751:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3752:ThirdParty/FreeRTOS/tasks.c ****         }
3753:ThirdParty/FreeRTOS/tasks.c ****         #else
3754:ThirdParty/FreeRTOS/tasks.c ****         {
3755:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->ulRunTimeCounter = ( configRUN_TIME_COUNTER_TYPE ) 0;
3756:ThirdParty/FreeRTOS/tasks.c ****         }
3757:ThirdParty/FreeRTOS/tasks.c ****         #endif
3758:ThirdParty/FreeRTOS/tasks.c **** 
3759:ThirdParty/FreeRTOS/tasks.c ****         /* Obtaining the task state is a little fiddly, so is only done if the
3760:ThirdParty/FreeRTOS/tasks.c ****          * value of eState passed into this function is eInvalid - otherwise the
3761:ThirdParty/FreeRTOS/tasks.c ****          * state is just set to whatever is passed in. */
3762:ThirdParty/FreeRTOS/tasks.c ****         if( eState != eInvalid )
3763:ThirdParty/FreeRTOS/tasks.c ****         {
3764:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
3765:ThirdParty/FreeRTOS/tasks.c ****             {
3766:ThirdParty/FreeRTOS/tasks.c ****                 pxTaskStatus->eCurrentState = eRunning;
3767:ThirdParty/FreeRTOS/tasks.c ****             }
3768:ThirdParty/FreeRTOS/tasks.c ****             else
3769:ThirdParty/FreeRTOS/tasks.c ****             {
3770:ThirdParty/FreeRTOS/tasks.c ****                 pxTaskStatus->eCurrentState = eState;
3771:ThirdParty/FreeRTOS/tasks.c **** 
3772:ThirdParty/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
3773:ThirdParty/FreeRTOS/tasks.c ****                 {
3774:ThirdParty/FreeRTOS/tasks.c ****                     /* If the task is in the suspended list then there is a
3775:ThirdParty/FreeRTOS/tasks.c ****                      *  chance it is actually just blocked indefinitely - so really
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 73


3776:ThirdParty/FreeRTOS/tasks.c ****                      *  it should be reported as being in the Blocked state. */
3777:ThirdParty/FreeRTOS/tasks.c ****                     if( eState == eSuspended )
3778:ThirdParty/FreeRTOS/tasks.c ****                     {
3779:ThirdParty/FreeRTOS/tasks.c ****                         vTaskSuspendAll();
3780:ThirdParty/FreeRTOS/tasks.c ****                         {
3781:ThirdParty/FreeRTOS/tasks.c ****                             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3782:ThirdParty/FreeRTOS/tasks.c ****                             {
3783:ThirdParty/FreeRTOS/tasks.c ****                                 pxTaskStatus->eCurrentState = eBlocked;
3784:ThirdParty/FreeRTOS/tasks.c ****                             }
3785:ThirdParty/FreeRTOS/tasks.c ****                         }
3786:ThirdParty/FreeRTOS/tasks.c ****                         ( void ) xTaskResumeAll();
3787:ThirdParty/FreeRTOS/tasks.c ****                     }
3788:ThirdParty/FreeRTOS/tasks.c ****                 }
3789:ThirdParty/FreeRTOS/tasks.c ****                 #endif /* INCLUDE_vTaskSuspend */
3790:ThirdParty/FreeRTOS/tasks.c ****             }
3791:ThirdParty/FreeRTOS/tasks.c ****         }
3792:ThirdParty/FreeRTOS/tasks.c ****         else
3793:ThirdParty/FreeRTOS/tasks.c ****         {
3794:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3795:ThirdParty/FreeRTOS/tasks.c ****         }
3796:ThirdParty/FreeRTOS/tasks.c **** 
3797:ThirdParty/FreeRTOS/tasks.c ****         /* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3798:ThirdParty/FreeRTOS/tasks.c ****          * parameter is provided to allow it to be skipped. */
3799:ThirdParty/FreeRTOS/tasks.c ****         if( xGetFreeStackSpace != pdFALSE )
3800:ThirdParty/FreeRTOS/tasks.c ****         {
3801:ThirdParty/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH > 0 )
3802:ThirdParty/FreeRTOS/tasks.c ****             {
3803:ThirdParty/FreeRTOS/tasks.c ****                 pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTC
3804:ThirdParty/FreeRTOS/tasks.c ****             }
3805:ThirdParty/FreeRTOS/tasks.c ****             #else
3806:ThirdParty/FreeRTOS/tasks.c ****             {
3807:ThirdParty/FreeRTOS/tasks.c ****                 pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTC
3808:ThirdParty/FreeRTOS/tasks.c ****             }
3809:ThirdParty/FreeRTOS/tasks.c ****             #endif
3810:ThirdParty/FreeRTOS/tasks.c ****         }
3811:ThirdParty/FreeRTOS/tasks.c ****         else
3812:ThirdParty/FreeRTOS/tasks.c ****         {
3813:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->usStackHighWaterMark = 0;
3814:ThirdParty/FreeRTOS/tasks.c ****         }
3815:ThirdParty/FreeRTOS/tasks.c ****     }
3816:ThirdParty/FreeRTOS/tasks.c **** 
3817:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3818:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3819:ThirdParty/FreeRTOS/tasks.c **** 
3820:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3821:ThirdParty/FreeRTOS/tasks.c **** 
3822:ThirdParty/FreeRTOS/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
3823:ThirdParty/FreeRTOS/tasks.c ****                                                      List_t * pxList,
3824:ThirdParty/FreeRTOS/tasks.c ****                                                      eTaskState eState )
3825:ThirdParty/FreeRTOS/tasks.c ****     {
3826:ThirdParty/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB;
3827:ThirdParty/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxFirstTCB;
3828:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0;
3829:ThirdParty/FreeRTOS/tasks.c **** 
3830:ThirdParty/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3831:ThirdParty/FreeRTOS/tasks.c ****         {
3832:ThirdParty/FreeRTOS/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 74


3833:ThirdParty/FreeRTOS/tasks.c **** 
3834:ThirdParty/FreeRTOS/tasks.c ****             /* Populate an TaskStatus_t structure within the
3835:ThirdParty/FreeRTOS/tasks.c ****              * pxTaskStatusArray array for each task that is referenced from
3836:ThirdParty/FreeRTOS/tasks.c ****              * pxList.  See the definition of TaskStatus_t in task.h for the
3837:ThirdParty/FreeRTOS/tasks.c ****              * meaning of each TaskStatus_t structure member. */
3838:ThirdParty/FreeRTOS/tasks.c ****             do
3839:ThirdParty/FreeRTOS/tasks.c ****             {
3840:ThirdParty/FreeRTOS/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
3841:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
3842:ThirdParty/FreeRTOS/tasks.c ****                 uxTask++;
3843:ThirdParty/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
3844:ThirdParty/FreeRTOS/tasks.c ****         }
3845:ThirdParty/FreeRTOS/tasks.c ****         else
3846:ThirdParty/FreeRTOS/tasks.c ****         {
3847:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
3848:ThirdParty/FreeRTOS/tasks.c ****         }
3849:ThirdParty/FreeRTOS/tasks.c **** 
3850:ThirdParty/FreeRTOS/tasks.c ****         return uxTask;
3851:ThirdParty/FreeRTOS/tasks.c ****     }
3852:ThirdParty/FreeRTOS/tasks.c **** 
3853:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3854:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3855:ThirdParty/FreeRTOS/tasks.c **** 
3856:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3857:ThirdParty/FreeRTOS/tasks.c **** 
3858:ThirdParty/FreeRTOS/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3859:ThirdParty/FreeRTOS/tasks.c ****     {
 126              		.loc 1 3859 5 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
3860:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulCount = 0U;
 131              		.loc 1 3860 9 view .LVU30
3861:ThirdParty/FreeRTOS/tasks.c **** 
3862:ThirdParty/FreeRTOS/tasks.c ****         while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
 132              		.loc 1 3862 9 view .LVU31
3860:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulCount = 0U;
 133              		.loc 1 3860 18 is_stmt 0 view .LVU32
 134 0000 0023     		movs	r3, #0
 135              		.loc 1 3862 14 view .LVU33
 136 0002 01E0     		b	.L13
 137              	.LVL9:
 138              	.L14:
3863:ThirdParty/FreeRTOS/tasks.c ****         {
3864:ThirdParty/FreeRTOS/tasks.c ****             pucStackByte -= portSTACK_GROWTH;
 139              		.loc 1 3864 13 is_stmt 1 view .LVU34
 140              		.loc 1 3864 26 is_stmt 0 view .LVU35
 141 0004 0130     		adds	r0, r0, #1
 142              	.LVL10:
3865:ThirdParty/FreeRTOS/tasks.c ****             ulCount++;
 143              		.loc 1 3865 13 is_stmt 1 view .LVU36
 144              		.loc 1 3865 20 is_stmt 0 view .LVU37
 145 0006 0133     		adds	r3, r3, #1
 146              	.LVL11:
 147              	.L13:
3862:ThirdParty/FreeRTOS/tasks.c ****         {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 75


 148              		.loc 1 3862 30 is_stmt 1 view .LVU38
3862:ThirdParty/FreeRTOS/tasks.c ****         {
 149              		.loc 1 3862 16 is_stmt 0 view .LVU39
 150 0008 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
3862:ThirdParty/FreeRTOS/tasks.c ****         {
 151              		.loc 1 3862 30 view .LVU40
 152 000a A52A     		cmp	r2, #165
 153 000c FAD0     		beq	.L14
3866:ThirdParty/FreeRTOS/tasks.c ****         }
3867:ThirdParty/FreeRTOS/tasks.c **** 
3868:ThirdParty/FreeRTOS/tasks.c ****         ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on sma
 154              		.loc 1 3868 9 is_stmt 1 view .LVU41
 155              	.LVL12:
3869:ThirdParty/FreeRTOS/tasks.c **** 
3870:ThirdParty/FreeRTOS/tasks.c ****         return ( configSTACK_DEPTH_TYPE ) ulCount;
 156              		.loc 1 3870 9 view .LVU42
3871:ThirdParty/FreeRTOS/tasks.c ****     }
 157              		.loc 1 3871 5 is_stmt 0 view .LVU43
 158 000e C3F38F00 		ubfx	r0, r3, #2, #16
 159              	.LVL13:
 160              		.loc 1 3871 5 view .LVU44
 161 0012 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE47:
 165              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 166              		.align	1
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 171              	prvResetNextTaskUnblockTime:
 172              	.LFB49:
3872:ThirdParty/FreeRTOS/tasks.c **** 
3873:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3874:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3875:ThirdParty/FreeRTOS/tasks.c **** 
3876:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3877:ThirdParty/FreeRTOS/tasks.c **** 
3878:ThirdParty/FreeRTOS/tasks.c **** /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3879:ThirdParty/FreeRTOS/tasks.c ****  * same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3880:ThirdParty/FreeRTOS/tasks.c ****  * user to determine the return type.  It gets around the problem of the value
3881:ThirdParty/FreeRTOS/tasks.c ****  * overflowing on 8-bit types without breaking backward compatibility for
3882:ThirdParty/FreeRTOS/tasks.c ****  * applications that expect an 8-bit return type. */
3883:ThirdParty/FreeRTOS/tasks.c ****     configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3884:ThirdParty/FreeRTOS/tasks.c ****     {
3885:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3886:ThirdParty/FreeRTOS/tasks.c ****         uint8_t * pucEndOfStack;
3887:ThirdParty/FreeRTOS/tasks.c ****         configSTACK_DEPTH_TYPE uxReturn;
3888:ThirdParty/FreeRTOS/tasks.c **** 
3889:ThirdParty/FreeRTOS/tasks.c ****         /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3890:ThirdParty/FreeRTOS/tasks.c ****          * the same except for their return type.  Using configSTACK_DEPTH_TYPE
3891:ThirdParty/FreeRTOS/tasks.c ****          * allows the user to determine the return type.  It gets around the
3892:ThirdParty/FreeRTOS/tasks.c ****          * problem of the value overflowing on 8-bit types without breaking
3893:ThirdParty/FreeRTOS/tasks.c ****          * backward compatibility for applications that expect an 8-bit return
3894:ThirdParty/FreeRTOS/tasks.c ****          * type. */
3895:ThirdParty/FreeRTOS/tasks.c **** 
3896:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3897:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 76


3898:ThirdParty/FreeRTOS/tasks.c ****         #if portSTACK_GROWTH < 0
3899:ThirdParty/FreeRTOS/tasks.c ****         {
3900:ThirdParty/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3901:ThirdParty/FreeRTOS/tasks.c ****         }
3902:ThirdParty/FreeRTOS/tasks.c ****         #else
3903:ThirdParty/FreeRTOS/tasks.c ****         {
3904:ThirdParty/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3905:ThirdParty/FreeRTOS/tasks.c ****         }
3906:ThirdParty/FreeRTOS/tasks.c ****         #endif
3907:ThirdParty/FreeRTOS/tasks.c **** 
3908:ThirdParty/FreeRTOS/tasks.c ****         uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3909:ThirdParty/FreeRTOS/tasks.c **** 
3910:ThirdParty/FreeRTOS/tasks.c ****         return uxReturn;
3911:ThirdParty/FreeRTOS/tasks.c ****     }
3912:ThirdParty/FreeRTOS/tasks.c **** 
3913:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3914:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3915:ThirdParty/FreeRTOS/tasks.c **** 
3916:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3917:ThirdParty/FreeRTOS/tasks.c **** 
3918:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3919:ThirdParty/FreeRTOS/tasks.c ****     {
3920:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3921:ThirdParty/FreeRTOS/tasks.c ****         uint8_t * pucEndOfStack;
3922:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
3923:ThirdParty/FreeRTOS/tasks.c **** 
3924:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3925:ThirdParty/FreeRTOS/tasks.c **** 
3926:ThirdParty/FreeRTOS/tasks.c ****         #if portSTACK_GROWTH < 0
3927:ThirdParty/FreeRTOS/tasks.c ****         {
3928:ThirdParty/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3929:ThirdParty/FreeRTOS/tasks.c ****         }
3930:ThirdParty/FreeRTOS/tasks.c ****         #else
3931:ThirdParty/FreeRTOS/tasks.c ****         {
3932:ThirdParty/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3933:ThirdParty/FreeRTOS/tasks.c ****         }
3934:ThirdParty/FreeRTOS/tasks.c ****         #endif
3935:ThirdParty/FreeRTOS/tasks.c **** 
3936:ThirdParty/FreeRTOS/tasks.c ****         uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3937:ThirdParty/FreeRTOS/tasks.c **** 
3938:ThirdParty/FreeRTOS/tasks.c ****         return uxReturn;
3939:ThirdParty/FreeRTOS/tasks.c ****     }
3940:ThirdParty/FreeRTOS/tasks.c **** 
3941:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3942:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3943:ThirdParty/FreeRTOS/tasks.c **** 
3944:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3945:ThirdParty/FreeRTOS/tasks.c **** 
3946:ThirdParty/FreeRTOS/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB )
3947:ThirdParty/FreeRTOS/tasks.c ****     {
3948:ThirdParty/FreeRTOS/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
3949:ThirdParty/FreeRTOS/tasks.c ****          * above the vPortFree() calls.  The call is also used by ports/demos that
3950:ThirdParty/FreeRTOS/tasks.c ****          * want to allocate and clean RAM statically. */
3951:ThirdParty/FreeRTOS/tasks.c ****         portCLEAN_UP_TCB( pxTCB );
3952:ThirdParty/FreeRTOS/tasks.c **** 
3953:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
3954:ThirdParty/FreeRTOS/tasks.c ****         {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 77


3955:ThirdParty/FreeRTOS/tasks.c ****             /* Free up the memory allocated for the task's TLS Block. */
3956:ThirdParty/FreeRTOS/tasks.c ****             configDEINIT_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
3957:ThirdParty/FreeRTOS/tasks.c ****         }
3958:ThirdParty/FreeRTOS/tasks.c ****         #endif
3959:ThirdParty/FreeRTOS/tasks.c **** 
3960:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 )
3961:ThirdParty/FreeRTOS/tasks.c ****         {
3962:ThirdParty/FreeRTOS/tasks.c ****             /* The task can only have been allocated dynamically - free both
3963:ThirdParty/FreeRTOS/tasks.c ****              * the stack and TCB. */
3964:ThirdParty/FreeRTOS/tasks.c ****             vPortFreeStack( pxTCB->pxStack );
3965:ThirdParty/FreeRTOS/tasks.c ****             vPortFree( pxTCB );
3966:ThirdParty/FreeRTOS/tasks.c ****         }
3967:ThirdParty/FreeRTOS/tasks.c ****         #elif ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been
3968:ThirdParty/FreeRTOS/tasks.c ****         {
3969:ThirdParty/FreeRTOS/tasks.c ****             /* The task could have been allocated statically or dynamically, so
3970:ThirdParty/FreeRTOS/tasks.c ****              * check what was statically allocated before trying to free the
3971:ThirdParty/FreeRTOS/tasks.c ****              * memory. */
3972:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3973:ThirdParty/FreeRTOS/tasks.c ****             {
3974:ThirdParty/FreeRTOS/tasks.c ****                 /* Both the stack and TCB were allocated dynamically, so both
3975:ThirdParty/FreeRTOS/tasks.c ****                  * must be freed. */
3976:ThirdParty/FreeRTOS/tasks.c ****                 vPortFreeStack( pxTCB->pxStack );
3977:ThirdParty/FreeRTOS/tasks.c ****                 vPortFree( pxTCB );
3978:ThirdParty/FreeRTOS/tasks.c ****             }
3979:ThirdParty/FreeRTOS/tasks.c ****             else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3980:ThirdParty/FreeRTOS/tasks.c ****             {
3981:ThirdParty/FreeRTOS/tasks.c ****                 /* Only the stack was statically allocated, so the TCB is the
3982:ThirdParty/FreeRTOS/tasks.c ****                  * only memory that must be freed. */
3983:ThirdParty/FreeRTOS/tasks.c ****                 vPortFree( pxTCB );
3984:ThirdParty/FreeRTOS/tasks.c ****             }
3985:ThirdParty/FreeRTOS/tasks.c ****             else
3986:ThirdParty/FreeRTOS/tasks.c ****             {
3987:ThirdParty/FreeRTOS/tasks.c ****                 /* Neither the stack nor the TCB were allocated dynamically, so
3988:ThirdParty/FreeRTOS/tasks.c ****                  * nothing needs to be freed. */
3989:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB
3990:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3991:ThirdParty/FreeRTOS/tasks.c ****             }
3992:ThirdParty/FreeRTOS/tasks.c ****         }
3993:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3994:ThirdParty/FreeRTOS/tasks.c ****     }
3995:ThirdParty/FreeRTOS/tasks.c **** 
3996:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3997:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3998:ThirdParty/FreeRTOS/tasks.c **** 
3999:ThirdParty/FreeRTOS/tasks.c **** static void prvResetNextTaskUnblockTime( void )
4000:ThirdParty/FreeRTOS/tasks.c **** {
 173              		.loc 1 4000 1 is_stmt 1 view -0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
4001:ThirdParty/FreeRTOS/tasks.c ****     if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 178              		.loc 1 4001 5 view .LVU46
 179              		.loc 1 4001 9 is_stmt 0 view .LVU47
 180 0000 074B     		ldr	r3, .L18
 181 0002 1B68     		ldr	r3, [r3]
 182 0004 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 78


 183              		.loc 1 4001 7 view .LVU48
 184 0006 23B9     		cbnz	r3, .L16
4002:ThirdParty/FreeRTOS/tasks.c ****     {
4003:ThirdParty/FreeRTOS/tasks.c ****         /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
4004:ThirdParty/FreeRTOS/tasks.c ****          * the maximum possible value so it is  extremely unlikely that the
4005:ThirdParty/FreeRTOS/tasks.c ****          * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
4006:ThirdParty/FreeRTOS/tasks.c ****          * there is an item in the delayed list. */
4007:ThirdParty/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
 185              		.loc 1 4007 9 is_stmt 1 view .LVU49
 186              		.loc 1 4007 30 is_stmt 0 view .LVU50
 187 0008 064B     		ldr	r3, .L18+4
 188 000a 4FF0FF32 		mov	r2, #-1
 189 000e 1A60     		str	r2, [r3]
 190 0010 7047     		bx	lr
 191              	.L16:
4008:ThirdParty/FreeRTOS/tasks.c ****     }
4009:ThirdParty/FreeRTOS/tasks.c ****     else
4010:ThirdParty/FreeRTOS/tasks.c ****     {
4011:ThirdParty/FreeRTOS/tasks.c ****         /* The new current delayed list is not empty, get the value of
4012:ThirdParty/FreeRTOS/tasks.c ****          * the item at the head of the delayed list.  This is the time at
4013:ThirdParty/FreeRTOS/tasks.c ****          * which the task at the head of the delayed list should be removed
4014:ThirdParty/FreeRTOS/tasks.c ****          * from the Blocked state. */
4015:ThirdParty/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 192              		.loc 1 4015 9 is_stmt 1 view .LVU51
 193              		.loc 1 4015 32 is_stmt 0 view .LVU52
 194 0012 034B     		ldr	r3, .L18
 195 0014 1B68     		ldr	r3, [r3]
 196 0016 DB68     		ldr	r3, [r3, #12]
 197 0018 1A68     		ldr	r2, [r3]
 198              		.loc 1 4015 30 view .LVU53
 199 001a 024B     		ldr	r3, .L18+4
 200 001c 1A60     		str	r2, [r3]
4016:ThirdParty/FreeRTOS/tasks.c ****     }
4017:ThirdParty/FreeRTOS/tasks.c **** }
 201              		.loc 1 4017 1 view .LVU54
 202 001e 7047     		bx	lr
 203              	.L19:
 204              		.align	2
 205              	.L18:
 206 0020 00000000 		.word	pxDelayedTaskList
 207 0024 00000000 		.word	xNextTaskUnblockTime
 208              		.cfi_endproc
 209              	.LFE49:
 211              		.section	.text.prvDeleteTCB,"ax",%progbits
 212              		.align	1
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 217              	prvDeleteTCB:
 218              	.LVL14:
 219              	.LFB48:
3947:ThirdParty/FreeRTOS/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
 220              		.loc 1 3947 5 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
3947:ThirdParty/FreeRTOS/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 79


 224              		.loc 1 3947 5 is_stmt 0 view .LVU56
 225 0000 10B5     		push	{r4, lr}
 226              	.LCFI0:
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 4, -8
 229              		.cfi_offset 14, -4
 230 0002 0446     		mov	r4, r0
3951:ThirdParty/FreeRTOS/tasks.c **** 
 231              		.loc 1 3951 9 is_stmt 1 view .LVU57
3964:ThirdParty/FreeRTOS/tasks.c ****             vPortFree( pxTCB );
 232              		.loc 1 3964 13 view .LVU58
 233 0004 006B     		ldr	r0, [r0, #48]
 234              	.LVL15:
3964:ThirdParty/FreeRTOS/tasks.c ****             vPortFree( pxTCB );
 235              		.loc 1 3964 13 is_stmt 0 view .LVU59
 236 0006 FFF7FEFF 		bl	vPortFree
 237              	.LVL16:
3965:ThirdParty/FreeRTOS/tasks.c ****         }
 238              		.loc 1 3965 13 is_stmt 1 view .LVU60
 239 000a 2046     		mov	r0, r4
 240 000c FFF7FEFF 		bl	vPortFree
 241              	.LVL17:
3994:ThirdParty/FreeRTOS/tasks.c **** 
 242              		.loc 1 3994 5 is_stmt 0 view .LVU61
 243 0010 10BD     		pop	{r4, pc}
3994:ThirdParty/FreeRTOS/tasks.c **** 
 244              		.loc 1 3994 5 view .LVU62
 245              		.cfi_endproc
 246              	.LFE48:
 248              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 249              		.align	1
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	prvInitialiseNewTask:
 255              	.LVL18:
 256              	.LFB6:
 824:ThirdParty/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 257              		.loc 1 824 1 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 16, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 824:ThirdParty/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 261              		.loc 1 824 1 is_stmt 0 view .LVU64
 262 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 263              	.LCFI1:
 264              		.cfi_def_cfa_offset 32
 265              		.cfi_offset 3, -32
 266              		.cfi_offset 4, -28
 267              		.cfi_offset 5, -24
 268              		.cfi_offset 6, -20
 269              		.cfi_offset 7, -16
 270              		.cfi_offset 8, -12
 271              		.cfi_offset 9, -8
 272              		.cfi_offset 14, -4
 273 0004 8046     		mov	r8, r0
 274 0006 0D46     		mov	r5, r1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 80


 275 0008 1646     		mov	r6, r2
 276 000a 9946     		mov	r9, r3
 277 000c 089F     		ldr	r7, [sp, #32]
 278 000e 0A9C     		ldr	r4, [sp, #40]
 825:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t x;
 279              		.loc 1 825 5 is_stmt 1 view .LVU65
 826:ThirdParty/FreeRTOS/tasks.c **** 
 280              		.loc 1 826 5 view .LVU66
 847:ThirdParty/FreeRTOS/tasks.c ****     }
 281              		.loc 1 847 9 view .LVU67
 847:ThirdParty/FreeRTOS/tasks.c ****     }
 282              		.loc 1 847 18 is_stmt 0 view .LVU68
 283 0010 9200     		lsls	r2, r2, #2
 284              	.LVL19:
 847:ThirdParty/FreeRTOS/tasks.c ****     }
 285              		.loc 1 847 18 view .LVU69
 286 0012 A521     		movs	r1, #165
 287              	.LVL20:
 847:ThirdParty/FreeRTOS/tasks.c ****     }
 288              		.loc 1 847 18 view .LVU70
 289 0014 206B     		ldr	r0, [r4, #48]
 290              	.LVL21:
 847:ThirdParty/FreeRTOS/tasks.c ****     }
 291              		.loc 1 847 18 view .LVU71
 292 0016 FFF7FEFF 		bl	memset
 293              	.LVL22:
 857:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 294              		.loc 1 857 9 is_stmt 1 view .LVU72
 857:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 295              		.loc 1 857 35 is_stmt 0 view .LVU73
 296 001a 226B     		ldr	r2, [r4, #48]
 857:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 297              		.loc 1 857 44 view .LVU74
 298 001c 06F18043 		add	r3, r6, #1073741824
 299 0020 013B     		subs	r3, r3, #1
 857:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 300              		.loc 1 857 22 view .LVU75
 301 0022 02EB8302 		add	r2, r2, r3, lsl #2
 302              	.LVL23:
 858:ThirdParty/FreeRTOS/tasks.c **** 
 303              		.loc 1 858 9 is_stmt 1 view .LVU76
 858:ThirdParty/FreeRTOS/tasks.c **** 
 304              		.loc 1 858 87 is_stmt 0 view .LVU77
 305 0026 22F00706 		bic	r6, r2, #7
 306              	.LVL24:
 861:ThirdParty/FreeRTOS/tasks.c **** 
 307              		.loc 1 861 9 is_stmt 1 view .LVU78
 861:ThirdParty/FreeRTOS/tasks.c **** 
 308              		.loc 1 861 130 discriminator 2 view .LVU79
 885:ThirdParty/FreeRTOS/tasks.c ****     {
 309              		.loc 1 885 5 view .LVU80
 885:ThirdParty/FreeRTOS/tasks.c ****     {
 310              		.loc 1 885 7 is_stmt 0 view .LVU81
 311 002a 65B1     		cbz	r5, .L24
 887:ThirdParty/FreeRTOS/tasks.c ****         {
 312              		.loc 1 887 16 view .LVU82
 313 002c 0022     		movs	r2, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 81


 314              	.LVL25:
 315              	.L23:
 887:ThirdParty/FreeRTOS/tasks.c ****         {
 316              		.loc 1 887 39 is_stmt 1 discriminator 1 view .LVU83
 317 002e 092A     		cmp	r2, #9
 318 0030 06D8     		bhi	.L25
 889:ThirdParty/FreeRTOS/tasks.c **** 
 319              		.loc 1 889 13 view .LVU84
 889:ThirdParty/FreeRTOS/tasks.c **** 
 320              		.loc 1 889 47 is_stmt 0 view .LVU85
 321 0032 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 889:ThirdParty/FreeRTOS/tasks.c **** 
 322              		.loc 1 889 39 view .LVU86
 323 0034 A118     		adds	r1, r4, r2
 324 0036 81F83430 		strb	r3, [r1, #52]
 894:ThirdParty/FreeRTOS/tasks.c ****             {
 325              		.loc 1 894 13 is_stmt 1 view .LVU87
 894:ThirdParty/FreeRTOS/tasks.c ****             {
 326              		.loc 1 894 15 is_stmt 0 view .LVU88
 327 003a 0BB1     		cbz	r3, .L25
 900:ThirdParty/FreeRTOS/tasks.c ****             }
 328              		.loc 1 900 41 is_stmt 1 view .LVU89
 887:ThirdParty/FreeRTOS/tasks.c ****         {
 329              		.loc 1 887 83 discriminator 2 view .LVU90
 330 003c 0132     		adds	r2, r2, #1
 331              	.LVL26:
 887:ThirdParty/FreeRTOS/tasks.c ****         {
 332              		.loc 1 887 83 is_stmt 0 discriminator 2 view .LVU91
 333 003e F6E7     		b	.L23
 334              	.L25:
 906:ThirdParty/FreeRTOS/tasks.c ****     }
 335              		.loc 1 906 9 is_stmt 1 view .LVU92
 906:ThirdParty/FreeRTOS/tasks.c ****     }
 336              		.loc 1 906 61 is_stmt 0 view .LVU93
 337 0040 0023     		movs	r3, #0
 338 0042 84F83D30 		strb	r3, [r4, #61]
 339              	.LVL27:
 340              	.L24:
 910:ThirdParty/FreeRTOS/tasks.c ****     }
 341              		.loc 1 910 33 is_stmt 1 view .LVU94
 914:ThirdParty/FreeRTOS/tasks.c **** 
 342              		.loc 1 914 5 view .LVU95
 343 0046 042F     		cmp	r7, #4
 344 0048 08D9     		bls	.L27
 914:ThirdParty/FreeRTOS/tasks.c **** 
 345              		.loc 1 914 5 discriminator 1 view .LVU96
 346              	.LBB157:
 347              	.LBI157:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 348              		.loc 2 194 34 view .LVU97
 349              	.LBB158:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 350              		.loc 2 196 9 view .LVU98
 351              		.loc 2 198 9 view .LVU99
 352              		.syntax unified
 353              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 354 004a 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 82


 355 004e 83F31188 		msr basepri, r3											
 356 0052 BFF36F8F 		isb														
 357 0056 BFF34F8F 		dsb														
 358              	
 359              	@ 0 "" 2
 360              		.thumb
 361              		.syntax unified
 362              	.L28:
 363              	.LBE158:
 364              	.LBE157:
 914:ThirdParty/FreeRTOS/tasks.c **** 
 365              		.loc 1 914 5 discriminator 3 view .LVU100
 914:ThirdParty/FreeRTOS/tasks.c **** 
 366              		.loc 1 914 5 discriminator 3 view .LVU101
 367 005a FEE7     		b	.L28
 368              	.L27:
 914:ThirdParty/FreeRTOS/tasks.c **** 
 369              		.loc 1 914 54 discriminator 2 view .LVU102
 916:ThirdParty/FreeRTOS/tasks.c ****     {
 370              		.loc 1 916 5 view .LVU103
 371              	.LVL28:
 922:ThirdParty/FreeRTOS/tasks.c ****     }
 372              		.loc 1 922 33 view .LVU104
 925:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 373              		.loc 1 925 5 view .LVU105
 925:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 374              		.loc 1 925 26 is_stmt 0 view .LVU106
 375 005c E762     		str	r7, [r4, #44]
 928:ThirdParty/FreeRTOS/tasks.c ****     }
 376              		.loc 1 928 9 is_stmt 1 view .LVU107
 928:ThirdParty/FreeRTOS/tasks.c ****     }
 377              		.loc 1 928 34 is_stmt 0 view .LVU108
 378 005e A764     		str	r7, [r4, #72]
 932:ThirdParty/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 379              		.loc 1 932 5 is_stmt 1 view .LVU109
 380 0060 201D     		adds	r0, r4, #4
 381 0062 FFF7FEFF 		bl	vListInitialiseItem
 382              	.LVL29:
 933:ThirdParty/FreeRTOS/tasks.c **** 
 383              		.loc 1 933 5 view .LVU110
 384 0066 04F11800 		add	r0, r4, #24
 385 006a FFF7FEFF 		bl	vListInitialiseItem
 386              	.LVL30:
 937:ThirdParty/FreeRTOS/tasks.c **** 
 387              		.loc 1 937 5 view .LVU111
 388 006e 2461     		str	r4, [r4, #16]
 940:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 389              		.loc 1 940 5 view .LVU112
 390 0070 C7F10507 		rsb	r7, r7, #5
 391              	.LVL31:
 940:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 392              		.loc 1 940 5 is_stmt 0 view .LVU113
 393 0074 A761     		str	r7, [r4, #24]
 941:ThirdParty/FreeRTOS/tasks.c **** 
 394              		.loc 1 941 5 is_stmt 1 view .LVU114
 395 0076 6462     		str	r4, [r4, #36]
 950:ThirdParty/FreeRTOS/tasks.c ****     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 83


 396              		.loc 1 950 9 view .LVU115
1007:ThirdParty/FreeRTOS/tasks.c ****         }
 397              		.loc 1 1007 13 view .LVU116
1007:ThirdParty/FreeRTOS/tasks.c ****         }
 398              		.loc 1 1007 38 is_stmt 0 view .LVU117
 399 0078 4A46     		mov	r2, r9
 400 007a 4146     		mov	r1, r8
 401 007c 3046     		mov	r0, r6
 402 007e FFF7FEFF 		bl	pxPortInitialiseStack
 403              	.LVL32:
1007:ThirdParty/FreeRTOS/tasks.c ****         }
 404              		.loc 1 1007 36 discriminator 1 view .LVU118
 405 0082 2060     		str	r0, [r4]
1013:ThirdParty/FreeRTOS/tasks.c ****     {
 406              		.loc 1 1013 5 is_stmt 1 view .LVU119
1013:ThirdParty/FreeRTOS/tasks.c ****     {
 407              		.loc 1 1013 7 is_stmt 0 view .LVU120
 408 0084 099B     		ldr	r3, [sp, #36]
 409 0086 03B1     		cbz	r3, .L22
1017:ThirdParty/FreeRTOS/tasks.c ****     }
 410              		.loc 1 1017 9 is_stmt 1 view .LVU121
1017:ThirdParty/FreeRTOS/tasks.c ****     }
 411              		.loc 1 1017 24 is_stmt 0 view .LVU122
 412 0088 1C60     		str	r4, [r3]
1021:ThirdParty/FreeRTOS/tasks.c ****     }
 413              		.loc 1 1021 33 is_stmt 1 view .LVU123
 414              	.L22:
1023:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 415              		.loc 1 1023 1 is_stmt 0 view .LVU124
 416 008a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
1023:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 417              		.loc 1 1023 1 view .LVU125
 418              		.cfi_endproc
 419              	.LFE6:
 421              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 422              		.align	1
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 427              	prvInitialiseTaskLists:
 428              	.LFB43:
3658:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;
 429              		.loc 1 3658 1 is_stmt 1 view -0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433 0000 38B5     		push	{r3, r4, r5, lr}
 434              	.LCFI2:
 435              		.cfi_def_cfa_offset 16
 436              		.cfi_offset 3, -16
 437              		.cfi_offset 4, -12
 438              		.cfi_offset 5, -8
 439              		.cfi_offset 14, -4
3659:ThirdParty/FreeRTOS/tasks.c **** 
 440              		.loc 1 3659 5 view .LVU127
3661:ThirdParty/FreeRTOS/tasks.c ****     {
 441              		.loc 1 3661 5 view .LVU128
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 84


 442              	.LVL33:
3661:ThirdParty/FreeRTOS/tasks.c ****     {
 443              		.loc 1 3661 21 is_stmt 0 view .LVU129
 444 0002 0024     		movs	r4, #0
3661:ThirdParty/FreeRTOS/tasks.c ****     {
 445              		.loc 1 3661 5 view .LVU130
 446 0004 07E0     		b	.L33
 447              	.LVL34:
 448              	.L34:
3663:ThirdParty/FreeRTOS/tasks.c ****     }
 449              		.loc 1 3663 9 is_stmt 1 view .LVU131
 450 0006 04EB8402 		add	r2, r4, r4, lsl #2
 451 000a 9300     		lsls	r3, r2, #2
 452 000c 0E48     		ldr	r0, .L36
 453 000e 1844     		add	r0, r0, r3
 454 0010 FFF7FEFF 		bl	vListInitialise
 455              	.LVL35:
3661:ThirdParty/FreeRTOS/tasks.c ****     {
 456              		.loc 1 3661 104 discriminator 3 view .LVU132
 457 0014 0134     		adds	r4, r4, #1
 458              	.LVL36:
 459              	.L33:
3661:ThirdParty/FreeRTOS/tasks.c ****     {
 460              		.loc 1 3661 54 discriminator 1 view .LVU133
 461 0016 042C     		cmp	r4, #4
 462 0018 F5D9     		bls	.L34
3666:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList2 );
 463              		.loc 1 3666 5 view .LVU134
 464 001a 0C4D     		ldr	r5, .L36+4
 465 001c 2846     		mov	r0, r5
 466 001e FFF7FEFF 		bl	vListInitialise
 467              	.LVL37:
3667:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
 468              		.loc 1 3667 5 view .LVU135
 469 0022 0B4C     		ldr	r4, .L36+8
 470              	.LVL38:
3667:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
 471              		.loc 1 3667 5 is_stmt 0 view .LVU136
 472 0024 2046     		mov	r0, r4
 473 0026 FFF7FEFF 		bl	vListInitialise
 474              	.LVL39:
3668:ThirdParty/FreeRTOS/tasks.c **** 
 475              		.loc 1 3668 5 is_stmt 1 view .LVU137
 476 002a 0A48     		ldr	r0, .L36+12
 477 002c FFF7FEFF 		bl	vListInitialise
 478              	.LVL40:
3672:ThirdParty/FreeRTOS/tasks.c ****     }
 479              		.loc 1 3672 9 view .LVU138
 480 0030 0948     		ldr	r0, .L36+16
 481 0032 FFF7FEFF 		bl	vListInitialise
 482              	.LVL41:
3678:ThirdParty/FreeRTOS/tasks.c ****     }
 483              		.loc 1 3678 9 view .LVU139
 484 0036 0948     		ldr	r0, .L36+20
 485 0038 FFF7FEFF 		bl	vListInitialise
 486              	.LVL42:
3684:ThirdParty/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 85


 487              		.loc 1 3684 5 view .LVU140
3684:ThirdParty/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
 488              		.loc 1 3684 23 is_stmt 0 view .LVU141
 489 003c 084B     		ldr	r3, .L36+24
 490 003e 1D60     		str	r5, [r3]
3685:ThirdParty/FreeRTOS/tasks.c **** }
 491              		.loc 1 3685 5 is_stmt 1 view .LVU142
3685:ThirdParty/FreeRTOS/tasks.c **** }
 492              		.loc 1 3685 31 is_stmt 0 view .LVU143
 493 0040 084B     		ldr	r3, .L36+28
 494 0042 1C60     		str	r4, [r3]
3686:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 495              		.loc 1 3686 1 view .LVU144
 496 0044 38BD     		pop	{r3, r4, r5, pc}
 497              	.L37:
 498 0046 00BF     		.align	2
 499              	.L36:
 500 0048 00000000 		.word	pxReadyTasksLists
 501 004c 00000000 		.word	xDelayedTaskList1
 502 0050 00000000 		.word	xDelayedTaskList2
 503 0054 00000000 		.word	xPendingReadyList
 504 0058 00000000 		.word	xTasksWaitingTermination
 505 005c 00000000 		.word	xSuspendedTaskList
 506 0060 00000000 		.word	pxDelayedTaskList
 507 0064 00000000 		.word	pxOverflowDelayedTaskList
 508              		.cfi_endproc
 509              	.LFE43:
 511              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 512              		.align	1
 513              		.syntax unified
 514              		.thumb
 515              		.thumb_func
 517              	prvAddNewTaskToReadyList:
 518              	.LVL43:
 519              	.LFB7:
1027:ThirdParty/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
 520              		.loc 1 1027 1 is_stmt 1 view -0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
1027:ThirdParty/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
 524              		.loc 1 1027 1 is_stmt 0 view .LVU146
 525 0000 10B5     		push	{r4, lr}
 526              	.LCFI3:
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 4, -8
 529              		.cfi_offset 14, -4
 530 0002 0446     		mov	r4, r0
1030:ThirdParty/FreeRTOS/tasks.c ****     {
 531              		.loc 1 1030 5 is_stmt 1 view .LVU147
 532 0004 FFF7FEFF 		bl	vPortEnterCritical
 533              	.LVL44:
1032:ThirdParty/FreeRTOS/tasks.c **** 
 534              		.loc 1 1032 9 view .LVU148
1032:ThirdParty/FreeRTOS/tasks.c **** 
 535              		.loc 1 1032 31 is_stmt 0 view .LVU149
 536 0008 294A     		ldr	r2, .L45
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 86


 537 000a 1368     		ldr	r3, [r2]
 538 000c 0133     		adds	r3, r3, #1
 539 000e 1360     		str	r3, [r2]
1034:ThirdParty/FreeRTOS/tasks.c ****         {
 540              		.loc 1 1034 9 is_stmt 1 view .LVU150
1034:ThirdParty/FreeRTOS/tasks.c ****         {
 541              		.loc 1 1034 26 is_stmt 0 view .LVU151
 542 0010 284B     		ldr	r3, .L45+4
 543 0012 1B68     		ldr	r3, [r3]
1034:ThirdParty/FreeRTOS/tasks.c ****         {
 544              		.loc 1 1034 11 view .LVU152
 545 0014 5BB1     		cbz	r3, .L43
1057:ThirdParty/FreeRTOS/tasks.c ****             {
 546              		.loc 1 1057 13 is_stmt 1 view .LVU153
1057:ThirdParty/FreeRTOS/tasks.c ****             {
 547              		.loc 1 1057 35 is_stmt 0 view .LVU154
 548 0016 284B     		ldr	r3, .L45+8
 549 0018 1B68     		ldr	r3, [r3]
1057:ThirdParty/FreeRTOS/tasks.c ****             {
 550              		.loc 1 1057 15 view .LVU155
 551 001a 6BB9     		cbnz	r3, .L40
1059:ThirdParty/FreeRTOS/tasks.c ****                 {
 552              		.loc 1 1059 17 is_stmt 1 view .LVU156
1059:ThirdParty/FreeRTOS/tasks.c ****                 {
 553              		.loc 1 1059 33 is_stmt 0 view .LVU157
 554 001c 254B     		ldr	r3, .L45+4
 555 001e 1B68     		ldr	r3, [r3]
 556 0020 DA6A     		ldr	r2, [r3, #44]
1059:ThirdParty/FreeRTOS/tasks.c ****                 {
 557              		.loc 1 1059 57 view .LVU158
 558 0022 E36A     		ldr	r3, [r4, #44]
1059:ThirdParty/FreeRTOS/tasks.c ****                 {
 559              		.loc 1 1059 19 view .LVU159
 560 0024 9A42     		cmp	r2, r3
 561 0026 07D8     		bhi	.L40
1061:ThirdParty/FreeRTOS/tasks.c ****                 }
 562              		.loc 1 1061 21 is_stmt 1 view .LVU160
1061:ThirdParty/FreeRTOS/tasks.c ****                 }
 563              		.loc 1 1061 34 is_stmt 0 view .LVU161
 564 0028 224B     		ldr	r3, .L45+4
 565 002a 1C60     		str	r4, [r3]
 566 002c 04E0     		b	.L40
 567              	.L43:
1038:ThirdParty/FreeRTOS/tasks.c **** 
 568              		.loc 1 1038 13 is_stmt 1 view .LVU162
1038:ThirdParty/FreeRTOS/tasks.c **** 
 569              		.loc 1 1038 26 is_stmt 0 view .LVU163
 570 002e 214B     		ldr	r3, .L45+4
 571 0030 1C60     		str	r4, [r3]
1040:ThirdParty/FreeRTOS/tasks.c ****             {
 572              		.loc 1 1040 13 is_stmt 1 view .LVU164
1040:ThirdParty/FreeRTOS/tasks.c ****             {
 573              		.loc 1 1040 40 is_stmt 0 view .LVU165
 574 0032 1368     		ldr	r3, [r2]
1040:ThirdParty/FreeRTOS/tasks.c ****             {
 575              		.loc 1 1040 15 view .LVU166
 576 0034 012B     		cmp	r3, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 87


 577 0036 37D0     		beq	.L44
 578              	.L40:
1070:ThirdParty/FreeRTOS/tasks.c ****             }
 579              		.loc 1 1070 41 is_stmt 1 view .LVU167
1074:ThirdParty/FreeRTOS/tasks.c **** 
 580              		.loc 1 1074 9 view .LVU168
1074:ThirdParty/FreeRTOS/tasks.c **** 
 581              		.loc 1 1074 21 is_stmt 0 view .LVU169
 582 0038 204A     		ldr	r2, .L45+12
 583 003a 1368     		ldr	r3, [r2]
 584 003c 0133     		adds	r3, r3, #1
 585 003e 1360     		str	r3, [r2]
1079:ThirdParty/FreeRTOS/tasks.c ****         }
 586              		.loc 1 1079 13 is_stmt 1 view .LVU170
1079:ThirdParty/FreeRTOS/tasks.c ****         }
 587              		.loc 1 1079 35 is_stmt 0 view .LVU171
 588 0040 2364     		str	r3, [r4, #64]
1082:ThirdParty/FreeRTOS/tasks.c **** 
 589              		.loc 1 1082 37 is_stmt 1 view .LVU172
1084:ThirdParty/FreeRTOS/tasks.c **** 
 590              		.loc 1 1084 9 view .LVU173
1084:ThirdParty/FreeRTOS/tasks.c **** 
 591              		.loc 1 1084 9 view .LVU174
 592 0042 E36A     		ldr	r3, [r4, #44]
 593 0044 0122     		movs	r2, #1
 594 0046 9A40     		lsls	r2, r2, r3
 595 0048 1D49     		ldr	r1, .L45+16
 596 004a 0868     		ldr	r0, [r1]
 597 004c 0243     		orrs	r2, r2, r0
 598 004e 0A60     		str	r2, [r1]
 599              	.LBB159:
1084:ThirdParty/FreeRTOS/tasks.c **** 
 600              		.loc 1 1084 9 view .LVU175
 601 0050 1C4A     		ldr	r2, .L45+20
 602 0052 03EB8303 		add	r3, r3, r3, lsl #2
 603 0056 02EB8303 		add	r3, r2, r3, lsl #2
 604 005a 5B68     		ldr	r3, [r3, #4]
 605              	.LVL45:
1084:ThirdParty/FreeRTOS/tasks.c **** 
 606              		.loc 1 1084 9 view .LVU176
1084:ThirdParty/FreeRTOS/tasks.c **** 
 607              		.loc 1 1084 9 view .LVU177
1084:ThirdParty/FreeRTOS/tasks.c **** 
 608              		.loc 1 1084 9 view .LVU178
 609 005c A360     		str	r3, [r4, #8]
1084:ThirdParty/FreeRTOS/tasks.c **** 
 610              		.loc 1 1084 9 view .LVU179
 611 005e 9868     		ldr	r0, [r3, #8]
 612 0060 E060     		str	r0, [r4, #12]
1084:ThirdParty/FreeRTOS/tasks.c **** 
 613              		.loc 1 1084 9 view .LVU180
 614 0062 211D     		adds	r1, r4, #4
 615 0064 4160     		str	r1, [r0, #4]
1084:ThirdParty/FreeRTOS/tasks.c **** 
 616              		.loc 1 1084 9 view .LVU181
 617 0066 9960     		str	r1, [r3, #8]
1084:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 88


 618              		.loc 1 1084 9 view .LVU182
 619 0068 E36A     		ldr	r3, [r4, #44]
 620              	.LVL46:
1084:ThirdParty/FreeRTOS/tasks.c **** 
 621              		.loc 1 1084 9 is_stmt 0 view .LVU183
 622 006a 03EB8301 		add	r1, r3, r3, lsl #2
 623 006e 8800     		lsls	r0, r1, #2
 624 0070 02EB8101 		add	r1, r2, r1, lsl #2
 625 0074 6161     		str	r1, [r4, #20]
1084:ThirdParty/FreeRTOS/tasks.c **** 
 626              		.loc 1 1084 9 is_stmt 1 view .LVU184
 627 0076 1158     		ldr	r1, [r2, r0]
 628 0078 0131     		adds	r1, r1, #1
 629 007a 1150     		str	r1, [r2, r0]
 630              	.LBE159:
1084:ThirdParty/FreeRTOS/tasks.c **** 
 631              		.loc 1 1084 9 view .LVU185
1084:ThirdParty/FreeRTOS/tasks.c **** 
 632              		.loc 1 1084 42 view .LVU186
1086:ThirdParty/FreeRTOS/tasks.c ****     }
 633              		.loc 1 1086 9 view .LVU187
1088:ThirdParty/FreeRTOS/tasks.c **** 
 634              		.loc 1 1088 5 view .LVU188
 635 007c FFF7FEFF 		bl	vPortExitCritical
 636              	.LVL47:
1090:ThirdParty/FreeRTOS/tasks.c ****     {
 637              		.loc 1 1090 5 view .LVU189
1090:ThirdParty/FreeRTOS/tasks.c ****     {
 638              		.loc 1 1090 27 is_stmt 0 view .LVU190
 639 0080 0D4B     		ldr	r3, .L45+8
 640 0082 1B68     		ldr	r3, [r3]
1090:ThirdParty/FreeRTOS/tasks.c ****     {
 641              		.loc 1 1090 7 view .LVU191
 642 0084 7BB1     		cbz	r3, .L38
1094:ThirdParty/FreeRTOS/tasks.c ****         {
 643              		.loc 1 1094 9 is_stmt 1 view .LVU192
1094:ThirdParty/FreeRTOS/tasks.c ****         {
 644              		.loc 1 1094 25 is_stmt 0 view .LVU193
 645 0086 0B4B     		ldr	r3, .L45+4
 646 0088 1B68     		ldr	r3, [r3]
 647 008a DA6A     		ldr	r2, [r3, #44]
1094:ThirdParty/FreeRTOS/tasks.c ****         {
 648              		.loc 1 1094 48 view .LVU194
 649 008c E36A     		ldr	r3, [r4, #44]
1094:ThirdParty/FreeRTOS/tasks.c ****         {
 650              		.loc 1 1094 11 view .LVU195
 651 008e 9A42     		cmp	r2, r3
 652 0090 09D2     		bcs	.L38
1096:ThirdParty/FreeRTOS/tasks.c ****         }
 653              		.loc 1 1096 13 is_stmt 1 view .LVU196
 654 0092 4FF0E023 		mov	r3, #-536813568
 655 0096 4FF08052 		mov	r2, #268435456
 656 009a C3F8042D 		str	r2, [r3, #3332]
1096:ThirdParty/FreeRTOS/tasks.c ****         }
 657              		.loc 1 1096 13 view .LVU197
 658              		.syntax unified
 659              	@ 1096 "ThirdParty/FreeRTOS/tasks.c" 1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 89


 660 009e BFF34F8F 		dsb
 661              	@ 0 "" 2
1096:ThirdParty/FreeRTOS/tasks.c ****         }
 662              		.loc 1 1096 13 view .LVU198
 663              	@ 1096 "ThirdParty/FreeRTOS/tasks.c" 1
 664 00a2 BFF36F8F 		isb
 665              	@ 0 "" 2
1096:ThirdParty/FreeRTOS/tasks.c ****         }
 666              		.loc 1 1096 44 view .LVU199
1105:ThirdParty/FreeRTOS/tasks.c ****     }
 667              		.loc 1 1105 33 view .LVU200
 668              		.thumb
 669              		.syntax unified
 670              	.L38:
1107:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 671              		.loc 1 1107 1 is_stmt 0 view .LVU201
 672 00a6 10BD     		pop	{r4, pc}
 673              	.LVL48:
 674              	.L44:
1045:ThirdParty/FreeRTOS/tasks.c ****             }
 675              		.loc 1 1045 17 is_stmt 1 view .LVU202
 676 00a8 FFF7FEFF 		bl	prvInitialiseTaskLists
 677              	.LVL49:
 678 00ac C4E7     		b	.L40
 679              	.L46:
 680 00ae 00BF     		.align	2
 681              	.L45:
 682 00b0 00000000 		.word	uxCurrentNumberOfTasks
 683 00b4 00000000 		.word	pxCurrentTCB
 684 00b8 00000000 		.word	xSchedulerRunning
 685 00bc 00000000 		.word	uxTaskNumber
 686 00c0 00000000 		.word	uxTopReadyPriority
 687 00c4 00000000 		.word	pxReadyTasksLists
 688              		.cfi_endproc
 689              	.LFE7:
 691              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 692              		.align	1
 693              		.syntax unified
 694              		.thumb
 695              		.thumb_func
 697              	prvCheckTasksWaitingTermination:
 698              	.LFB44:
3690:ThirdParty/FreeRTOS/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
 699              		.loc 1 3690 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 703              	.LBB160:
3695:ThirdParty/FreeRTOS/tasks.c **** 
 704              		.loc 1 3695 9 view .LVU204
3699:ThirdParty/FreeRTOS/tasks.c ****         {
 705              		.loc 1 3699 9 view .LVU205
3699:ThirdParty/FreeRTOS/tasks.c ****         {
 706              		.loc 1 3699 45 view .LVU206
 707 0000 0F4B     		ldr	r3, .L54
 708 0002 1B68     		ldr	r3, [r3]
 709 0004 D3B1     		cbz	r3, .L53
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 90


 710              	.LBE160:
3690:ThirdParty/FreeRTOS/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
 711              		.loc 1 3690 1 is_stmt 0 view .LVU207
 712 0006 10B5     		push	{r4, lr}
 713              	.LCFI4:
 714              		.cfi_def_cfa_offset 8
 715              		.cfi_offset 4, -8
 716              		.cfi_offset 14, -4
 717              	.L49:
 718              	.LBB161:
3701:ThirdParty/FreeRTOS/tasks.c ****             {
 719              		.loc 1 3701 13 is_stmt 1 view .LVU208
 720 0008 FFF7FEFF 		bl	vPortEnterCritical
 721              	.LVL50:
3703:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 722              		.loc 1 3703 17 view .LVU209
3703:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 723              		.loc 1 3703 25 is_stmt 0 view .LVU210
 724 000c 0D4B     		ldr	r3, .L54+4
 725 000e DB68     		ldr	r3, [r3, #12]
3703:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 726              		.loc 1 3703 23 view .LVU211
 727 0010 DC68     		ldr	r4, [r3, #12]
 728              	.LVL51:
3704:ThirdParty/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
 729              		.loc 1 3704 17 is_stmt 1 view .LVU212
3704:ThirdParty/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
 730              		.loc 1 3704 26 is_stmt 0 view .LVU213
 731 0012 201D     		adds	r0, r4, #4
 732 0014 FFF7FEFF 		bl	uxListRemove
 733              	.LVL52:
3705:ThirdParty/FreeRTOS/tasks.c ****                 --uxDeletedTasksWaitingCleanUp;
 734              		.loc 1 3705 17 is_stmt 1 view .LVU214
 735 0018 0B4A     		ldr	r2, .L54+8
 736 001a 1368     		ldr	r3, [r2]
 737 001c 013B     		subs	r3, r3, #1
 738 001e 1360     		str	r3, [r2]
3706:ThirdParty/FreeRTOS/tasks.c ****             }
 739              		.loc 1 3706 17 view .LVU215
 740 0020 074A     		ldr	r2, .L54
 741 0022 1368     		ldr	r3, [r2]
 742 0024 013B     		subs	r3, r3, #1
 743 0026 1360     		str	r3, [r2]
3708:ThirdParty/FreeRTOS/tasks.c **** 
 744              		.loc 1 3708 13 view .LVU216
 745 0028 FFF7FEFF 		bl	vPortExitCritical
 746              	.LVL53:
3710:ThirdParty/FreeRTOS/tasks.c ****         }
 747              		.loc 1 3710 13 view .LVU217
 748 002c 2046     		mov	r0, r4
 749 002e FFF7FEFF 		bl	prvDeleteTCB
 750              	.LVL54:
3699:ThirdParty/FreeRTOS/tasks.c ****         {
 751              		.loc 1 3699 45 view .LVU218
 752 0032 034B     		ldr	r3, .L54
 753 0034 1B68     		ldr	r3, [r3]
 754 0036 002B     		cmp	r3, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 91


 755 0038 E6D1     		bne	.L49
 756              	.LBE161:
3714:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 757              		.loc 1 3714 1 is_stmt 0 view .LVU219
 758 003a 10BD     		pop	{r4, pc}
 759              	.LVL55:
 760              	.L53:
 761              	.LCFI5:
 762              		.cfi_def_cfa_offset 0
 763              		.cfi_restore 4
 764              		.cfi_restore 14
3714:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 765              		.loc 1 3714 1 view .LVU220
 766 003c 7047     		bx	lr
 767              	.L55:
 768 003e 00BF     		.align	2
 769              	.L54:
 770 0040 00000000 		.word	uxDeletedTasksWaitingCleanUp
 771 0044 00000000 		.word	xTasksWaitingTermination
 772 0048 00000000 		.word	uxCurrentNumberOfTasks
 773              		.cfi_endproc
 774              	.LFE44:
 776              		.section	.text.prvIdleTask,"ax",%progbits
 777              		.align	1
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 782              	prvIdleTask:
 783              	.LFB42:
3428:ThirdParty/FreeRTOS/tasks.c ****     /* Stop warnings. */
 784              		.loc 1 3428 1 is_stmt 1 view -0
 785              		.cfi_startproc
 786              		@ Volatile: function does not return.
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              	.LVL56:
3428:ThirdParty/FreeRTOS/tasks.c ****     /* Stop warnings. */
 790              		.loc 1 3428 1 is_stmt 0 view .LVU222
 791 0000 08B5     		push	{r3, lr}
 792              	.LCFI6:
 793              		.cfi_def_cfa_offset 8
 794              		.cfi_offset 3, -8
 795              		.cfi_offset 14, -4
 796              	.LVL57:
 797              	.L57:
3430:ThirdParty/FreeRTOS/tasks.c **** 
 798              		.loc 1 3430 5 is_stmt 1 view .LVU223
3438:ThirdParty/FreeRTOS/tasks.c **** 
 799              		.loc 1 3438 67 view .LVU224
3440:ThirdParty/FreeRTOS/tasks.c ****     {
 800              		.loc 1 3440 5 view .LVU225
3444:ThirdParty/FreeRTOS/tasks.c **** 
 801              		.loc 1 3444 9 view .LVU226
 802 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 803              	.LVL58:
3467:ThirdParty/FreeRTOS/tasks.c ****             {
 804              		.loc 1 3467 13 view .LVU227
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 92


3467:ThirdParty/FreeRTOS/tasks.c ****             {
 805              		.loc 1 3467 17 is_stmt 0 view .LVU228
 806 0006 074B     		ldr	r3, .L60
 807 0008 1B68     		ldr	r3, [r3]
3467:ThirdParty/FreeRTOS/tasks.c ****             {
 808              		.loc 1 3467 15 view .LVU229
 809 000a 012B     		cmp	r3, #1
 810 000c F9D9     		bls	.L57
3469:ThirdParty/FreeRTOS/tasks.c ****             }
 811              		.loc 1 3469 17 is_stmt 1 view .LVU230
 812 000e 4FF0E023 		mov	r3, #-536813568
 813 0012 4FF08052 		mov	r2, #268435456
 814 0016 C3F8042D 		str	r2, [r3, #3332]
3469:ThirdParty/FreeRTOS/tasks.c ****             }
 815              		.loc 1 3469 17 view .LVU231
 816              		.syntax unified
 817              	@ 3469 "ThirdParty/FreeRTOS/tasks.c" 1
 818 001a BFF34F8F 		dsb
 819              	@ 0 "" 2
3469:ThirdParty/FreeRTOS/tasks.c ****             }
 820              		.loc 1 3469 17 view .LVU232
 821              	@ 3469 "ThirdParty/FreeRTOS/tasks.c" 1
 822 001e BFF36F8F 		isb
 823              	@ 0 "" 2
3469:ThirdParty/FreeRTOS/tasks.c ****             }
 824              		.loc 1 3469 28 view .LVU233
 825              		.thumb
 826              		.syntax unified
 827 0022 EEE7     		b	.L57
 828              	.L61:
 829              		.align	2
 830              	.L60:
 831 0024 00000000 		.word	pxReadyTasksLists
 832              		.cfi_endproc
 833              	.LFE42:
 835              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 836              		.align	1
 837              		.syntax unified
 838              		.thumb
 839              		.thumb_func
 841              	prvAddCurrentTaskToDelayedList:
 842              	.LVL59:
 843              	.LFB64:
4018:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4019:ThirdParty/FreeRTOS/tasks.c **** 
4020:ThirdParty/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
4021:ThirdParty/FreeRTOS/tasks.c **** 
4022:ThirdParty/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetCurrentTaskHandle( void )
4023:ThirdParty/FreeRTOS/tasks.c ****     {
4024:ThirdParty/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
4025:ThirdParty/FreeRTOS/tasks.c **** 
4026:ThirdParty/FreeRTOS/tasks.c ****         /* A critical section is not required as this is not called from
4027:ThirdParty/FreeRTOS/tasks.c ****          * an interrupt and the current TCB will always be the same for any
4028:ThirdParty/FreeRTOS/tasks.c ****          * individual execution thread. */
4029:ThirdParty/FreeRTOS/tasks.c ****         xReturn = pxCurrentTCB;
4030:ThirdParty/FreeRTOS/tasks.c **** 
4031:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 93


4032:ThirdParty/FreeRTOS/tasks.c ****     }
4033:ThirdParty/FreeRTOS/tasks.c **** 
4034:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
4035:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4036:ThirdParty/FreeRTOS/tasks.c **** 
4037:ThirdParty/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
4038:ThirdParty/FreeRTOS/tasks.c **** 
4039:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskGetSchedulerState( void )
4040:ThirdParty/FreeRTOS/tasks.c ****     {
4041:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
4042:ThirdParty/FreeRTOS/tasks.c **** 
4043:ThirdParty/FreeRTOS/tasks.c ****         if( xSchedulerRunning == pdFALSE )
4044:ThirdParty/FreeRTOS/tasks.c ****         {
4045:ThirdParty/FreeRTOS/tasks.c ****             xReturn = taskSCHEDULER_NOT_STARTED;
4046:ThirdParty/FreeRTOS/tasks.c ****         }
4047:ThirdParty/FreeRTOS/tasks.c ****         else
4048:ThirdParty/FreeRTOS/tasks.c ****         {
4049:ThirdParty/FreeRTOS/tasks.c ****             if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4050:ThirdParty/FreeRTOS/tasks.c ****             {
4051:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = taskSCHEDULER_RUNNING;
4052:ThirdParty/FreeRTOS/tasks.c ****             }
4053:ThirdParty/FreeRTOS/tasks.c ****             else
4054:ThirdParty/FreeRTOS/tasks.c ****             {
4055:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = taskSCHEDULER_SUSPENDED;
4056:ThirdParty/FreeRTOS/tasks.c ****             }
4057:ThirdParty/FreeRTOS/tasks.c ****         }
4058:ThirdParty/FreeRTOS/tasks.c **** 
4059:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
4060:ThirdParty/FreeRTOS/tasks.c ****     }
4061:ThirdParty/FreeRTOS/tasks.c **** 
4062:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4063:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4064:ThirdParty/FreeRTOS/tasks.c **** 
4065:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4066:ThirdParty/FreeRTOS/tasks.c **** 
4067:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4068:ThirdParty/FreeRTOS/tasks.c ****     {
4069:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4070:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
4071:ThirdParty/FreeRTOS/tasks.c **** 
4072:ThirdParty/FreeRTOS/tasks.c ****         /* If the mutex was given back by an interrupt while the queue was
4073:ThirdParty/FreeRTOS/tasks.c ****          * locked then the mutex holder might now be NULL.  _RB_ Is this still
4074:ThirdParty/FreeRTOS/tasks.c ****          * needed as interrupts can no longer use mutexes? */
4075:ThirdParty/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
4076:ThirdParty/FreeRTOS/tasks.c ****         {
4077:ThirdParty/FreeRTOS/tasks.c ****             /* If the holder of the mutex has a priority below the priority of
4078:ThirdParty/FreeRTOS/tasks.c ****              * the task attempting to obtain the mutex then it will temporarily
4079:ThirdParty/FreeRTOS/tasks.c ****              * inherit the priority of the task attempting to obtain the mutex. */
4080:ThirdParty/FreeRTOS/tasks.c ****             if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4081:ThirdParty/FreeRTOS/tasks.c ****             {
4082:ThirdParty/FreeRTOS/tasks.c ****                 /* Adjust the mutex holder state to account for its new
4083:ThirdParty/FreeRTOS/tasks.c ****                  * priority.  Only reset the event list item value if the value is
4084:ThirdParty/FreeRTOS/tasks.c ****                  * not being used for anything else. */
4085:ThirdParty/FreeRTOS/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_
4086:ThirdParty/FreeRTOS/tasks.c ****                 {
4087:ThirdParty/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) 
4088:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 94


4089:ThirdParty/FreeRTOS/tasks.c ****                 else
4090:ThirdParty/FreeRTOS/tasks.c ****                 {
4091:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4092:ThirdParty/FreeRTOS/tasks.c ****                 }
4093:ThirdParty/FreeRTOS/tasks.c **** 
4094:ThirdParty/FreeRTOS/tasks.c ****                 /* If the task being modified is in the ready state it will need
4095:ThirdParty/FreeRTOS/tasks.c ****                  * to be moved into a new list. */
4096:ThirdParty/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] )
4097:ThirdParty/FreeRTOS/tasks.c ****                 {
4098:ThirdParty/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 
4099:ThirdParty/FreeRTOS/tasks.c ****                     {
4100:ThirdParty/FreeRTOS/tasks.c ****                         /* It is known that the task is in its ready list so
4101:ThirdParty/FreeRTOS/tasks.c ****                          * there is no need to check again and the port level
4102:ThirdParty/FreeRTOS/tasks.c ****                          * reset macro can be called directly. */
4103:ThirdParty/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority 
4104:ThirdParty/FreeRTOS/tasks.c ****                     }
4105:ThirdParty/FreeRTOS/tasks.c ****                     else
4106:ThirdParty/FreeRTOS/tasks.c ****                     {
4107:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4108:ThirdParty/FreeRTOS/tasks.c ****                     }
4109:ThirdParty/FreeRTOS/tasks.c **** 
4110:ThirdParty/FreeRTOS/tasks.c ****                     /* Inherit the priority before being moved into the new list. */
4111:ThirdParty/FreeRTOS/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4112:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
4113:ThirdParty/FreeRTOS/tasks.c ****                 }
4114:ThirdParty/FreeRTOS/tasks.c ****                 else
4115:ThirdParty/FreeRTOS/tasks.c ****                 {
4116:ThirdParty/FreeRTOS/tasks.c ****                     /* Just inherit the priority. */
4117:ThirdParty/FreeRTOS/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4118:ThirdParty/FreeRTOS/tasks.c ****                 }
4119:ThirdParty/FreeRTOS/tasks.c **** 
4120:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4121:ThirdParty/FreeRTOS/tasks.c **** 
4122:ThirdParty/FreeRTOS/tasks.c ****                 /* Inheritance occurred. */
4123:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
4124:ThirdParty/FreeRTOS/tasks.c ****             }
4125:ThirdParty/FreeRTOS/tasks.c ****             else
4126:ThirdParty/FreeRTOS/tasks.c ****             {
4127:ThirdParty/FreeRTOS/tasks.c ****                 if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4128:ThirdParty/FreeRTOS/tasks.c ****                 {
4129:ThirdParty/FreeRTOS/tasks.c ****                     /* The base priority of the mutex holder is lower than the
4130:ThirdParty/FreeRTOS/tasks.c ****                      * priority of the task attempting to take the mutex, but the
4131:ThirdParty/FreeRTOS/tasks.c ****                      * current priority of the mutex holder is not lower than the
4132:ThirdParty/FreeRTOS/tasks.c ****                      * priority of the task attempting to take the mutex.
4133:ThirdParty/FreeRTOS/tasks.c ****                      * Therefore the mutex holder must have already inherited a
4134:ThirdParty/FreeRTOS/tasks.c ****                      * priority, but inheritance would have occurred if that had
4135:ThirdParty/FreeRTOS/tasks.c ****                      * not been the case. */
4136:ThirdParty/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
4137:ThirdParty/FreeRTOS/tasks.c ****                 }
4138:ThirdParty/FreeRTOS/tasks.c ****                 else
4139:ThirdParty/FreeRTOS/tasks.c ****                 {
4140:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4141:ThirdParty/FreeRTOS/tasks.c ****                 }
4142:ThirdParty/FreeRTOS/tasks.c ****             }
4143:ThirdParty/FreeRTOS/tasks.c ****         }
4144:ThirdParty/FreeRTOS/tasks.c ****         else
4145:ThirdParty/FreeRTOS/tasks.c ****         {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 95


4146:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4147:ThirdParty/FreeRTOS/tasks.c ****         }
4148:ThirdParty/FreeRTOS/tasks.c **** 
4149:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
4150:ThirdParty/FreeRTOS/tasks.c ****     }
4151:ThirdParty/FreeRTOS/tasks.c **** 
4152:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4153:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4154:ThirdParty/FreeRTOS/tasks.c **** 
4155:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4156:ThirdParty/FreeRTOS/tasks.c **** 
4157:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4158:ThirdParty/FreeRTOS/tasks.c ****     {
4159:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4160:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
4161:ThirdParty/FreeRTOS/tasks.c **** 
4162:ThirdParty/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
4163:ThirdParty/FreeRTOS/tasks.c ****         {
4164:ThirdParty/FreeRTOS/tasks.c ****             /* A task can only have an inherited priority if it holds the mutex.
4165:ThirdParty/FreeRTOS/tasks.c ****              * If the mutex is held by a task then it cannot be given from an
4166:ThirdParty/FreeRTOS/tasks.c ****              * interrupt, and if a mutex is given by the holding task then it must
4167:ThirdParty/FreeRTOS/tasks.c ****              * be the running state task. */
4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB == pxCurrentTCB );
4169:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4170:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
4171:ThirdParty/FreeRTOS/tasks.c **** 
4172:ThirdParty/FreeRTOS/tasks.c ****             /* Has the holder of the mutex inherited the priority of another
4173:ThirdParty/FreeRTOS/tasks.c ****              * task? */
4174:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4175:ThirdParty/FreeRTOS/tasks.c ****             {
4176:ThirdParty/FreeRTOS/tasks.c ****                 /* Only disinherit if no other mutexes are held. */
4177:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4178:ThirdParty/FreeRTOS/tasks.c ****                 {
4179:ThirdParty/FreeRTOS/tasks.c ****                     /* A task can only have an inherited priority if it holds
4180:ThirdParty/FreeRTOS/tasks.c ****                      * the mutex.  If the mutex is held by a task then it cannot be
4181:ThirdParty/FreeRTOS/tasks.c ****                      * given from an interrupt, and if a mutex is given by the
4182:ThirdParty/FreeRTOS/tasks.c ****                      * holding task then it must be the running state task.  Remove
4183:ThirdParty/FreeRTOS/tasks.c ****                      * the holding task from the ready list. */
4184:ThirdParty/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4185:ThirdParty/FreeRTOS/tasks.c ****                     {
4186:ThirdParty/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4187:ThirdParty/FreeRTOS/tasks.c ****                     }
4188:ThirdParty/FreeRTOS/tasks.c ****                     else
4189:ThirdParty/FreeRTOS/tasks.c ****                     {
4190:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4191:ThirdParty/FreeRTOS/tasks.c ****                     }
4192:ThirdParty/FreeRTOS/tasks.c **** 
4193:ThirdParty/FreeRTOS/tasks.c ****                     /* Disinherit the priority before adding the task into the
4194:ThirdParty/FreeRTOS/tasks.c ****                      * new  ready list. */
4195:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4196:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = pxTCB->uxBasePriority;
4197:ThirdParty/FreeRTOS/tasks.c **** 
4198:ThirdParty/FreeRTOS/tasks.c ****                     /* Reset the event list item value.  It cannot be in use for
4199:ThirdParty/FreeRTOS/tasks.c ****                      * any other purpose if this task is running, and it must be
4200:ThirdParty/FreeRTOS/tasks.c ****                      * running to give back the mutex. */
4201:ThirdParty/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_P
4202:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 96


4203:ThirdParty/FreeRTOS/tasks.c **** 
4204:ThirdParty/FreeRTOS/tasks.c ****                     /* Return true to indicate that a context switch is required.
4205:ThirdParty/FreeRTOS/tasks.c ****                      * This is only actually required in the corner case whereby
4206:ThirdParty/FreeRTOS/tasks.c ****                      * multiple mutexes were held and the mutexes were given back
4207:ThirdParty/FreeRTOS/tasks.c ****                      * in an order different to that in which they were taken.
4208:ThirdParty/FreeRTOS/tasks.c ****                      * If a context switch did not occur when the first mutex was
4209:ThirdParty/FreeRTOS/tasks.c ****                      * returned, even if a task was waiting on it, then a context
4210:ThirdParty/FreeRTOS/tasks.c ****                      * switch should occur when the last mutex is returned whether
4211:ThirdParty/FreeRTOS/tasks.c ****                      * a task is waiting on it or not. */
4212:ThirdParty/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
4213:ThirdParty/FreeRTOS/tasks.c ****                 }
4214:ThirdParty/FreeRTOS/tasks.c ****                 else
4215:ThirdParty/FreeRTOS/tasks.c ****                 {
4216:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4217:ThirdParty/FreeRTOS/tasks.c ****                 }
4218:ThirdParty/FreeRTOS/tasks.c ****             }
4219:ThirdParty/FreeRTOS/tasks.c ****             else
4220:ThirdParty/FreeRTOS/tasks.c ****             {
4221:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4222:ThirdParty/FreeRTOS/tasks.c ****             }
4223:ThirdParty/FreeRTOS/tasks.c ****         }
4224:ThirdParty/FreeRTOS/tasks.c ****         else
4225:ThirdParty/FreeRTOS/tasks.c ****         {
4226:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4227:ThirdParty/FreeRTOS/tasks.c ****         }
4228:ThirdParty/FreeRTOS/tasks.c **** 
4229:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
4230:ThirdParty/FreeRTOS/tasks.c ****     }
4231:ThirdParty/FreeRTOS/tasks.c **** 
4232:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4233:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4234:ThirdParty/FreeRTOS/tasks.c **** 
4235:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4236:ThirdParty/FreeRTOS/tasks.c **** 
4237:ThirdParty/FreeRTOS/tasks.c ****     void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder,
4238:ThirdParty/FreeRTOS/tasks.c ****                                               UBaseType_t uxHighestPriorityWaitingTask )
4239:ThirdParty/FreeRTOS/tasks.c ****     {
4240:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4241:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4242:ThirdParty/FreeRTOS/tasks.c ****         const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4243:ThirdParty/FreeRTOS/tasks.c **** 
4244:ThirdParty/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
4245:ThirdParty/FreeRTOS/tasks.c ****         {
4246:ThirdParty/FreeRTOS/tasks.c ****             /* If pxMutexHolder is not NULL then the holder must hold at least
4247:ThirdParty/FreeRTOS/tasks.c ****              * one mutex. */
4248:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4249:ThirdParty/FreeRTOS/tasks.c **** 
4250:ThirdParty/FreeRTOS/tasks.c ****             /* Determine the priority to which the priority of the task that
4251:ThirdParty/FreeRTOS/tasks.c ****              * holds the mutex should be set.  This will be the greater of the
4252:ThirdParty/FreeRTOS/tasks.c ****              * holding task's base priority and the priority of the highest
4253:ThirdParty/FreeRTOS/tasks.c ****              * priority task that is waiting to obtain the mutex. */
4254:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4255:ThirdParty/FreeRTOS/tasks.c ****             {
4256:ThirdParty/FreeRTOS/tasks.c ****                 uxPriorityToUse = uxHighestPriorityWaitingTask;
4257:ThirdParty/FreeRTOS/tasks.c ****             }
4258:ThirdParty/FreeRTOS/tasks.c ****             else
4259:ThirdParty/FreeRTOS/tasks.c ****             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 97


4260:ThirdParty/FreeRTOS/tasks.c ****                 uxPriorityToUse = pxTCB->uxBasePriority;
4261:ThirdParty/FreeRTOS/tasks.c ****             }
4262:ThirdParty/FreeRTOS/tasks.c **** 
4263:ThirdParty/FreeRTOS/tasks.c ****             /* Does the priority need to change? */
4264:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB->uxPriority != uxPriorityToUse )
4265:ThirdParty/FreeRTOS/tasks.c ****             {
4266:ThirdParty/FreeRTOS/tasks.c ****                 /* Only disinherit if no other mutexes are held.  This is a
4267:ThirdParty/FreeRTOS/tasks.c ****                  * simplification in the priority inheritance implementation.  If
4268:ThirdParty/FreeRTOS/tasks.c ****                  * the task that holds the mutex is also holding other mutexes then
4269:ThirdParty/FreeRTOS/tasks.c ****                  * the other mutexes may have caused the priority inheritance. */
4270:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4271:ThirdParty/FreeRTOS/tasks.c ****                 {
4272:ThirdParty/FreeRTOS/tasks.c ****                     /* If a task has timed out because it already holds the
4273:ThirdParty/FreeRTOS/tasks.c ****                      * mutex it was trying to obtain then it cannot of inherited
4274:ThirdParty/FreeRTOS/tasks.c ****                      * its own priority. */
4275:ThirdParty/FreeRTOS/tasks.c ****                     configASSERT( pxTCB != pxCurrentTCB );
4276:ThirdParty/FreeRTOS/tasks.c **** 
4277:ThirdParty/FreeRTOS/tasks.c ****                     /* Disinherit the priority, remembering the previous
4278:ThirdParty/FreeRTOS/tasks.c ****                      * priority to facilitate determining the subject task's
4279:ThirdParty/FreeRTOS/tasks.c ****                      * state. */
4280:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, uxPriorityToUse );
4281:ThirdParty/FreeRTOS/tasks.c ****                     uxPriorityUsedOnEntry = pxTCB->uxPriority;
4282:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxPriorityToUse;
4283:ThirdParty/FreeRTOS/tasks.c **** 
4284:ThirdParty/FreeRTOS/tasks.c ****                     /* Only reset the event list item value if the value is not
4285:ThirdParty/FreeRTOS/tasks.c ****                      * being used for anything else. */
4286:ThirdParty/FreeRTOS/tasks.c ****                     if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_IT
4287:ThirdParty/FreeRTOS/tasks.c ****                     {
4288:ThirdParty/FreeRTOS/tasks.c ****                         listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configM
4289:ThirdParty/FreeRTOS/tasks.c ****                     }
4290:ThirdParty/FreeRTOS/tasks.c ****                     else
4291:ThirdParty/FreeRTOS/tasks.c ****                     {
4292:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4293:ThirdParty/FreeRTOS/tasks.c ****                     }
4294:ThirdParty/FreeRTOS/tasks.c **** 
4295:ThirdParty/FreeRTOS/tasks.c ****                     /* If the running task is not the task that holds the mutex
4296:ThirdParty/FreeRTOS/tasks.c ****                      * then the task that holds the mutex could be in either the
4297:ThirdParty/FreeRTOS/tasks.c ****                      * Ready, Blocked or Suspended states.  Only remove the task
4298:ThirdParty/FreeRTOS/tasks.c ****                      * from its current state list if it is in the Ready state as
4299:ThirdParty/FreeRTOS/tasks.c ****                      * the task's priority is going to change and there is one
4300:ThirdParty/FreeRTOS/tasks.c ****                      * Ready list per priority. */
4301:ThirdParty/FreeRTOS/tasks.c ****                     if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &
4302:ThirdParty/FreeRTOS/tasks.c ****                     {
4303:ThirdParty/FreeRTOS/tasks.c ****                         if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4304:ThirdParty/FreeRTOS/tasks.c ****                         {
4305:ThirdParty/FreeRTOS/tasks.c ****                             /* It is known that the task is in its ready list so
4306:ThirdParty/FreeRTOS/tasks.c ****                              * there is no need to check again and the port level
4307:ThirdParty/FreeRTOS/tasks.c ****                              * reset macro can be called directly. */
4308:ThirdParty/FreeRTOS/tasks.c ****                             portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4309:ThirdParty/FreeRTOS/tasks.c ****                         }
4310:ThirdParty/FreeRTOS/tasks.c ****                         else
4311:ThirdParty/FreeRTOS/tasks.c ****                         {
4312:ThirdParty/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
4313:ThirdParty/FreeRTOS/tasks.c ****                         }
4314:ThirdParty/FreeRTOS/tasks.c **** 
4315:ThirdParty/FreeRTOS/tasks.c ****                         prvAddTaskToReadyList( pxTCB );
4316:ThirdParty/FreeRTOS/tasks.c ****                     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 98


4317:ThirdParty/FreeRTOS/tasks.c ****                     else
4318:ThirdParty/FreeRTOS/tasks.c ****                     {
4319:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4320:ThirdParty/FreeRTOS/tasks.c ****                     }
4321:ThirdParty/FreeRTOS/tasks.c ****                 }
4322:ThirdParty/FreeRTOS/tasks.c ****                 else
4323:ThirdParty/FreeRTOS/tasks.c ****                 {
4324:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4325:ThirdParty/FreeRTOS/tasks.c ****                 }
4326:ThirdParty/FreeRTOS/tasks.c ****             }
4327:ThirdParty/FreeRTOS/tasks.c ****             else
4328:ThirdParty/FreeRTOS/tasks.c ****             {
4329:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4330:ThirdParty/FreeRTOS/tasks.c ****             }
4331:ThirdParty/FreeRTOS/tasks.c ****         }
4332:ThirdParty/FreeRTOS/tasks.c ****         else
4333:ThirdParty/FreeRTOS/tasks.c ****         {
4334:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4335:ThirdParty/FreeRTOS/tasks.c ****         }
4336:ThirdParty/FreeRTOS/tasks.c ****     }
4337:ThirdParty/FreeRTOS/tasks.c **** 
4338:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4339:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4340:ThirdParty/FreeRTOS/tasks.c **** 
4341:ThirdParty/FreeRTOS/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4342:ThirdParty/FreeRTOS/tasks.c **** 
4343:ThirdParty/FreeRTOS/tasks.c ****     void vTaskEnterCritical( void )
4344:ThirdParty/FreeRTOS/tasks.c ****     {
4345:ThirdParty/FreeRTOS/tasks.c ****         portDISABLE_INTERRUPTS();
4346:ThirdParty/FreeRTOS/tasks.c **** 
4347:ThirdParty/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4348:ThirdParty/FreeRTOS/tasks.c ****         {
4349:ThirdParty/FreeRTOS/tasks.c ****             ( pxCurrentTCB->uxCriticalNesting )++;
4350:ThirdParty/FreeRTOS/tasks.c **** 
4351:ThirdParty/FreeRTOS/tasks.c ****             /* This is not the interrupt safe version of the enter critical
4352:ThirdParty/FreeRTOS/tasks.c ****              * function so  assert() if it is being called from an interrupt
4353:ThirdParty/FreeRTOS/tasks.c ****              * context.  Only API functions that end in "FromISR" can be used in an
4354:ThirdParty/FreeRTOS/tasks.c ****              * interrupt.  Only assert if the critical nesting count is 1 to
4355:ThirdParty/FreeRTOS/tasks.c ****              * protect against recursive calls if the assert function also uses a
4356:ThirdParty/FreeRTOS/tasks.c ****              * critical section. */
4357:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting == 1 )
4358:ThirdParty/FreeRTOS/tasks.c ****             {
4359:ThirdParty/FreeRTOS/tasks.c ****                 portASSERT_IF_IN_ISR();
4360:ThirdParty/FreeRTOS/tasks.c ****             }
4361:ThirdParty/FreeRTOS/tasks.c ****         }
4362:ThirdParty/FreeRTOS/tasks.c ****         else
4363:ThirdParty/FreeRTOS/tasks.c ****         {
4364:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4365:ThirdParty/FreeRTOS/tasks.c ****         }
4366:ThirdParty/FreeRTOS/tasks.c ****     }
4367:ThirdParty/FreeRTOS/tasks.c **** 
4368:ThirdParty/FreeRTOS/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4369:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4370:ThirdParty/FreeRTOS/tasks.c **** 
4371:ThirdParty/FreeRTOS/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4372:ThirdParty/FreeRTOS/tasks.c **** 
4373:ThirdParty/FreeRTOS/tasks.c ****     void vTaskExitCritical( void )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 99


4374:ThirdParty/FreeRTOS/tasks.c ****     {
4375:ThirdParty/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4376:ThirdParty/FreeRTOS/tasks.c ****         {
4377:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting > 0U )
4378:ThirdParty/FreeRTOS/tasks.c ****             {
4379:ThirdParty/FreeRTOS/tasks.c ****                 ( pxCurrentTCB->uxCriticalNesting )--;
4380:ThirdParty/FreeRTOS/tasks.c **** 
4381:ThirdParty/FreeRTOS/tasks.c ****                 if( pxCurrentTCB->uxCriticalNesting == 0U )
4382:ThirdParty/FreeRTOS/tasks.c ****                 {
4383:ThirdParty/FreeRTOS/tasks.c ****                     portENABLE_INTERRUPTS();
4384:ThirdParty/FreeRTOS/tasks.c ****                 }
4385:ThirdParty/FreeRTOS/tasks.c ****                 else
4386:ThirdParty/FreeRTOS/tasks.c ****                 {
4387:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4388:ThirdParty/FreeRTOS/tasks.c ****                 }
4389:ThirdParty/FreeRTOS/tasks.c ****             }
4390:ThirdParty/FreeRTOS/tasks.c ****             else
4391:ThirdParty/FreeRTOS/tasks.c ****             {
4392:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4393:ThirdParty/FreeRTOS/tasks.c ****             }
4394:ThirdParty/FreeRTOS/tasks.c ****         }
4395:ThirdParty/FreeRTOS/tasks.c ****         else
4396:ThirdParty/FreeRTOS/tasks.c ****         {
4397:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4398:ThirdParty/FreeRTOS/tasks.c ****         }
4399:ThirdParty/FreeRTOS/tasks.c ****     }
4400:ThirdParty/FreeRTOS/tasks.c **** 
4401:ThirdParty/FreeRTOS/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4402:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4403:ThirdParty/FreeRTOS/tasks.c **** 
4404:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 )
4405:ThirdParty/FreeRTOS/tasks.c **** 
4406:ThirdParty/FreeRTOS/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
4407:ThirdParty/FreeRTOS/tasks.c ****                                         const char * pcTaskName )
4408:ThirdParty/FreeRTOS/tasks.c ****     {
4409:ThirdParty/FreeRTOS/tasks.c ****         size_t x;
4410:ThirdParty/FreeRTOS/tasks.c **** 
4411:ThirdParty/FreeRTOS/tasks.c ****         /* Start by copying the entire string. */
4412:ThirdParty/FreeRTOS/tasks.c ****         strcpy( pcBuffer, pcTaskName );
4413:ThirdParty/FreeRTOS/tasks.c **** 
4414:ThirdParty/FreeRTOS/tasks.c ****         /* Pad the end of the string with spaces to ensure columns line up when
4415:ThirdParty/FreeRTOS/tasks.c ****          * printed out. */
4416:ThirdParty/FreeRTOS/tasks.c ****         for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4417:ThirdParty/FreeRTOS/tasks.c ****         {
4418:ThirdParty/FreeRTOS/tasks.c ****             pcBuffer[ x ] = ' ';
4419:ThirdParty/FreeRTOS/tasks.c ****         }
4420:ThirdParty/FreeRTOS/tasks.c **** 
4421:ThirdParty/FreeRTOS/tasks.c ****         /* Terminate. */
4422:ThirdParty/FreeRTOS/tasks.c ****         pcBuffer[ x ] = ( char ) 0x00;
4423:ThirdParty/FreeRTOS/tasks.c **** 
4424:ThirdParty/FreeRTOS/tasks.c ****         /* Return the new end of string. */
4425:ThirdParty/FreeRTOS/tasks.c ****         return &( pcBuffer[ x ] );
4426:ThirdParty/FreeRTOS/tasks.c ****     }
4427:ThirdParty/FreeRTOS/tasks.c **** 
4428:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4429:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4430:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 100


4431:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4432:ThirdParty/FreeRTOS/tasks.c **** 
4433:ThirdParty/FreeRTOS/tasks.c ****     void vTaskList( char * pcWriteBuffer )
4434:ThirdParty/FreeRTOS/tasks.c ****     {
4435:ThirdParty/FreeRTOS/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4436:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxArraySize, x;
4437:ThirdParty/FreeRTOS/tasks.c ****         char cStatus;
4438:ThirdParty/FreeRTOS/tasks.c **** 
4439:ThirdParty/FreeRTOS/tasks.c ****         /*
4440:ThirdParty/FreeRTOS/tasks.c ****          * PLEASE NOTE:
4441:ThirdParty/FreeRTOS/tasks.c ****          *
4442:ThirdParty/FreeRTOS/tasks.c ****          * This function is provided for convenience only, and is used by many
4443:ThirdParty/FreeRTOS/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4444:ThirdParty/FreeRTOS/tasks.c ****          * scheduler.
4445:ThirdParty/FreeRTOS/tasks.c ****          *
4446:ThirdParty/FreeRTOS/tasks.c ****          * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4447:ThirdParty/FreeRTOS/tasks.c ****          * uxTaskGetSystemState() output into a human readable table that
4448:ThirdParty/FreeRTOS/tasks.c ****          * displays task: names, states, priority, stack usage and task number.
4449:ThirdParty/FreeRTOS/tasks.c ****          * Stack usage specified as the number of unused StackType_t words stack can hold
4450:ThirdParty/FreeRTOS/tasks.c ****          * on top of stack - not the number of bytes.
4451:ThirdParty/FreeRTOS/tasks.c ****          *
4452:ThirdParty/FreeRTOS/tasks.c ****          * vTaskList() has a dependency on the sprintf() C library function that
4453:ThirdParty/FreeRTOS/tasks.c ****          * might bloat the code size, use a lot of stack, and provide different
4454:ThirdParty/FreeRTOS/tasks.c ****          * results on different platforms.  An alternative, tiny, third party,
4455:ThirdParty/FreeRTOS/tasks.c ****          * and limited functionality implementation of sprintf() is provided in
4456:ThirdParty/FreeRTOS/tasks.c ****          * many of the FreeRTOS/Demo sub-directories in a file called
4457:ThirdParty/FreeRTOS/tasks.c ****          * printf-stdarg.c (note printf-stdarg.c does not provide a full
4458:ThirdParty/FreeRTOS/tasks.c ****          * snprintf() implementation!).
4459:ThirdParty/FreeRTOS/tasks.c ****          *
4460:ThirdParty/FreeRTOS/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4461:ThirdParty/FreeRTOS/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4462:ThirdParty/FreeRTOS/tasks.c ****          * through a call to vTaskList().
4463:ThirdParty/FreeRTOS/tasks.c ****          */
4464:ThirdParty/FreeRTOS/tasks.c **** 
4465:ThirdParty/FreeRTOS/tasks.c **** 
4466:ThirdParty/FreeRTOS/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4467:ThirdParty/FreeRTOS/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4468:ThirdParty/FreeRTOS/tasks.c **** 
4469:ThirdParty/FreeRTOS/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4470:ThirdParty/FreeRTOS/tasks.c ****          * function is executing. */
4471:ThirdParty/FreeRTOS/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4472:ThirdParty/FreeRTOS/tasks.c **** 
4473:ThirdParty/FreeRTOS/tasks.c ****         /* Allocate an array index for each task.  NOTE!  if
4474:ThirdParty/FreeRTOS/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4475:ThirdParty/FreeRTOS/tasks.c ****          * equate to NULL. */
4476:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4477:ThirdParty/FreeRTOS/tasks.c **** 
4478:ThirdParty/FreeRTOS/tasks.c ****         if( pxTaskStatusArray != NULL )
4479:ThirdParty/FreeRTOS/tasks.c ****         {
4480:ThirdParty/FreeRTOS/tasks.c ****             /* Generate the (binary) data. */
4481:ThirdParty/FreeRTOS/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4482:ThirdParty/FreeRTOS/tasks.c **** 
4483:ThirdParty/FreeRTOS/tasks.c ****             /* Create a human readable table from the binary data. */
4484:ThirdParty/FreeRTOS/tasks.c ****             for( x = 0; x < uxArraySize; x++ )
4485:ThirdParty/FreeRTOS/tasks.c ****             {
4486:ThirdParty/FreeRTOS/tasks.c ****                 switch( pxTaskStatusArray[ x ].eCurrentState )
4487:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 101


4488:ThirdParty/FreeRTOS/tasks.c ****                     case eRunning:
4489:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = tskRUNNING_CHAR;
4490:ThirdParty/FreeRTOS/tasks.c ****                         break;
4491:ThirdParty/FreeRTOS/tasks.c **** 
4492:ThirdParty/FreeRTOS/tasks.c ****                     case eReady:
4493:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = tskREADY_CHAR;
4494:ThirdParty/FreeRTOS/tasks.c ****                         break;
4495:ThirdParty/FreeRTOS/tasks.c **** 
4496:ThirdParty/FreeRTOS/tasks.c ****                     case eBlocked:
4497:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = tskBLOCKED_CHAR;
4498:ThirdParty/FreeRTOS/tasks.c ****                         break;
4499:ThirdParty/FreeRTOS/tasks.c **** 
4500:ThirdParty/FreeRTOS/tasks.c ****                     case eSuspended:
4501:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = tskSUSPENDED_CHAR;
4502:ThirdParty/FreeRTOS/tasks.c ****                         break;
4503:ThirdParty/FreeRTOS/tasks.c **** 
4504:ThirdParty/FreeRTOS/tasks.c ****                     case eDeleted:
4505:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = tskDELETED_CHAR;
4506:ThirdParty/FreeRTOS/tasks.c ****                         break;
4507:ThirdParty/FreeRTOS/tasks.c **** 
4508:ThirdParty/FreeRTOS/tasks.c ****                     case eInvalid: /* Fall through. */
4509:ThirdParty/FreeRTOS/tasks.c ****                     default:       /* Should not get here, but it is included
4510:ThirdParty/FreeRTOS/tasks.c ****                                     * to prevent static checking errors. */
4511:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = ( char ) 0x00;
4512:ThirdParty/FreeRTOS/tasks.c ****                         break;
4513:ThirdParty/FreeRTOS/tasks.c ****                 }
4514:ThirdParty/FreeRTOS/tasks.c **** 
4515:ThirdParty/FreeRTOS/tasks.c ****                 /* Write the task name to the string, padding with spaces so it
4516:ThirdParty/FreeRTOS/tasks.c ****                  * can be printed in tabular form more easily. */
4517:ThirdParty/FreeRTOS/tasks.c ****                 pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskN
4518:ThirdParty/FreeRTOS/tasks.c **** 
4519:ThirdParty/FreeRTOS/tasks.c ****                 /* Write the rest of the string. */
4520:ThirdParty/FreeRTOS/tasks.c ****                 sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskSta
4521:ThirdParty/FreeRTOS/tasks.c ****                 pcWriteBuffer += strlen( pcWriteBuffer );                                          
4522:ThirdParty/FreeRTOS/tasks.c ****             }
4523:ThirdParty/FreeRTOS/tasks.c **** 
4524:ThirdParty/FreeRTOS/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4525:ThirdParty/FreeRTOS/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4526:ThirdParty/FreeRTOS/tasks.c ****             vPortFree( pxTaskStatusArray );
4527:ThirdParty/FreeRTOS/tasks.c ****         }
4528:ThirdParty/FreeRTOS/tasks.c ****         else
4529:ThirdParty/FreeRTOS/tasks.c ****         {
4530:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4531:ThirdParty/FreeRTOS/tasks.c ****         }
4532:ThirdParty/FreeRTOS/tasks.c ****     }
4533:ThirdParty/FreeRTOS/tasks.c **** 
4534:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4535:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
4536:ThirdParty/FreeRTOS/tasks.c **** 
4537:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4538:ThirdParty/FreeRTOS/tasks.c **** 
4539:ThirdParty/FreeRTOS/tasks.c ****     void vTaskGetRunTimeStats( char * pcWriteBuffer )
4540:ThirdParty/FreeRTOS/tasks.c ****     {
4541:ThirdParty/FreeRTOS/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4542:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxArraySize, x;
4543:ThirdParty/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulTotalTime, ulStatsAsPercentage;
4544:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 102


4545:ThirdParty/FreeRTOS/tasks.c ****         /*
4546:ThirdParty/FreeRTOS/tasks.c ****          * PLEASE NOTE:
4547:ThirdParty/FreeRTOS/tasks.c ****          *
4548:ThirdParty/FreeRTOS/tasks.c ****          * This function is provided for convenience only, and is used by many
4549:ThirdParty/FreeRTOS/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4550:ThirdParty/FreeRTOS/tasks.c ****          * scheduler.
4551:ThirdParty/FreeRTOS/tasks.c ****          *
4552:ThirdParty/FreeRTOS/tasks.c ****          * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4553:ThirdParty/FreeRTOS/tasks.c ****          * of the uxTaskGetSystemState() output into a human readable table that
4554:ThirdParty/FreeRTOS/tasks.c ****          * displays the amount of time each task has spent in the Running state
4555:ThirdParty/FreeRTOS/tasks.c ****          * in both absolute and percentage terms.
4556:ThirdParty/FreeRTOS/tasks.c ****          *
4557:ThirdParty/FreeRTOS/tasks.c ****          * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4558:ThirdParty/FreeRTOS/tasks.c ****          * function that might bloat the code size, use a lot of stack, and
4559:ThirdParty/FreeRTOS/tasks.c ****          * provide different results on different platforms.  An alternative,
4560:ThirdParty/FreeRTOS/tasks.c ****          * tiny, third party, and limited functionality implementation of
4561:ThirdParty/FreeRTOS/tasks.c ****          * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4562:ThirdParty/FreeRTOS/tasks.c ****          * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4563:ThirdParty/FreeRTOS/tasks.c ****          * a full snprintf() implementation!).
4564:ThirdParty/FreeRTOS/tasks.c ****          *
4565:ThirdParty/FreeRTOS/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4566:ThirdParty/FreeRTOS/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4567:ThirdParty/FreeRTOS/tasks.c ****          * through a call to vTaskGetRunTimeStats().
4568:ThirdParty/FreeRTOS/tasks.c ****          */
4569:ThirdParty/FreeRTOS/tasks.c **** 
4570:ThirdParty/FreeRTOS/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4571:ThirdParty/FreeRTOS/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4572:ThirdParty/FreeRTOS/tasks.c **** 
4573:ThirdParty/FreeRTOS/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4574:ThirdParty/FreeRTOS/tasks.c ****          * function is executing. */
4575:ThirdParty/FreeRTOS/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4576:ThirdParty/FreeRTOS/tasks.c **** 
4577:ThirdParty/FreeRTOS/tasks.c ****         /* Allocate an array index for each task.  NOTE!  If
4578:ThirdParty/FreeRTOS/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4579:ThirdParty/FreeRTOS/tasks.c ****          * equate to NULL. */
4580:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4581:ThirdParty/FreeRTOS/tasks.c **** 
4582:ThirdParty/FreeRTOS/tasks.c ****         if( pxTaskStatusArray != NULL )
4583:ThirdParty/FreeRTOS/tasks.c ****         {
4584:ThirdParty/FreeRTOS/tasks.c ****             /* Generate the (binary) data. */
4585:ThirdParty/FreeRTOS/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4586:ThirdParty/FreeRTOS/tasks.c **** 
4587:ThirdParty/FreeRTOS/tasks.c ****             /* For percentage calculations. */
4588:ThirdParty/FreeRTOS/tasks.c ****             ulTotalTime /= 100UL;
4589:ThirdParty/FreeRTOS/tasks.c **** 
4590:ThirdParty/FreeRTOS/tasks.c ****             /* Avoid divide by zero errors. */
4591:ThirdParty/FreeRTOS/tasks.c ****             if( ulTotalTime > 0UL )
4592:ThirdParty/FreeRTOS/tasks.c ****             {
4593:ThirdParty/FreeRTOS/tasks.c ****                 /* Create a human readable table from the binary data. */
4594:ThirdParty/FreeRTOS/tasks.c ****                 for( x = 0; x < uxArraySize; x++ )
4595:ThirdParty/FreeRTOS/tasks.c ****                 {
4596:ThirdParty/FreeRTOS/tasks.c ****                     /* What percentage of the total run time has the task used?
4597:ThirdParty/FreeRTOS/tasks.c ****                      * This will always be rounded down to the nearest integer.
4598:ThirdParty/FreeRTOS/tasks.c ****                      * ulTotalRunTime has already been divided by 100. */
4599:ThirdParty/FreeRTOS/tasks.c ****                     ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4600:ThirdParty/FreeRTOS/tasks.c **** 
4601:ThirdParty/FreeRTOS/tasks.c ****                     /* Write the task name to the string, padding with
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 103


4602:ThirdParty/FreeRTOS/tasks.c ****                      * spaces so it can be printed in tabular form more
4603:ThirdParty/FreeRTOS/tasks.c ****                      * easily. */
4604:ThirdParty/FreeRTOS/tasks.c ****                     pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcT
4605:ThirdParty/FreeRTOS/tasks.c **** 
4606:ThirdParty/FreeRTOS/tasks.c ****                     if( ulStatsAsPercentage > 0UL )
4607:ThirdParty/FreeRTOS/tasks.c ****                     {
4608:ThirdParty/FreeRTOS/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4609:ThirdParty/FreeRTOS/tasks.c ****                         {
4610:ThirdParty/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ul
4611:ThirdParty/FreeRTOS/tasks.c ****                         }
4612:ThirdParty/FreeRTOS/tasks.c ****                         #else
4613:ThirdParty/FreeRTOS/tasks.c ****                         {
4614:ThirdParty/FreeRTOS/tasks.c ****                             /* sizeof( int ) == sizeof( long ) so a smaller
4615:ThirdParty/FreeRTOS/tasks.c ****                              * printf() library can be used. */
4616:ThirdParty/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStat
4617:ThirdParty/FreeRTOS/tasks.c ****                         }
4618:ThirdParty/FreeRTOS/tasks.c ****                         #endif
4619:ThirdParty/FreeRTOS/tasks.c ****                     }
4620:ThirdParty/FreeRTOS/tasks.c ****                     else
4621:ThirdParty/FreeRTOS/tasks.c ****                     {
4622:ThirdParty/FreeRTOS/tasks.c ****                         /* If the percentage is zero here then the task has
4623:ThirdParty/FreeRTOS/tasks.c ****                          * consumed less than 1% of the total run time. */
4624:ThirdParty/FreeRTOS/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4625:ThirdParty/FreeRTOS/tasks.c ****                         {
4626:ThirdParty/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulR
4627:ThirdParty/FreeRTOS/tasks.c ****                         }
4628:ThirdParty/FreeRTOS/tasks.c ****                         #else
4629:ThirdParty/FreeRTOS/tasks.c ****                         {
4630:ThirdParty/FreeRTOS/tasks.c ****                             /* sizeof( int ) == sizeof( long ) so a smaller
4631:ThirdParty/FreeRTOS/tasks.c ****                              * printf() library can be used. */
4632:ThirdParty/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStat
4633:ThirdParty/FreeRTOS/tasks.c ****                         }
4634:ThirdParty/FreeRTOS/tasks.c ****                         #endif
4635:ThirdParty/FreeRTOS/tasks.c ****                     }
4636:ThirdParty/FreeRTOS/tasks.c **** 
4637:ThirdParty/FreeRTOS/tasks.c ****                     pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok o
4638:ThirdParty/FreeRTOS/tasks.c ****                 }
4639:ThirdParty/FreeRTOS/tasks.c ****             }
4640:ThirdParty/FreeRTOS/tasks.c ****             else
4641:ThirdParty/FreeRTOS/tasks.c ****             {
4642:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4643:ThirdParty/FreeRTOS/tasks.c ****             }
4644:ThirdParty/FreeRTOS/tasks.c **** 
4645:ThirdParty/FreeRTOS/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4646:ThirdParty/FreeRTOS/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4647:ThirdParty/FreeRTOS/tasks.c ****             vPortFree( pxTaskStatusArray );
4648:ThirdParty/FreeRTOS/tasks.c ****         }
4649:ThirdParty/FreeRTOS/tasks.c ****         else
4650:ThirdParty/FreeRTOS/tasks.c ****         {
4651:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4652:ThirdParty/FreeRTOS/tasks.c ****         }
4653:ThirdParty/FreeRTOS/tasks.c ****     }
4654:ThirdParty/FreeRTOS/tasks.c **** 
4655:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4656:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4657:ThirdParty/FreeRTOS/tasks.c **** 
4658:ThirdParty/FreeRTOS/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 104


4659:ThirdParty/FreeRTOS/tasks.c **** {
4660:ThirdParty/FreeRTOS/tasks.c ****     TickType_t uxReturn;
4661:ThirdParty/FreeRTOS/tasks.c **** 
4662:ThirdParty/FreeRTOS/tasks.c ****     uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4663:ThirdParty/FreeRTOS/tasks.c **** 
4664:ThirdParty/FreeRTOS/tasks.c ****     /* Reset the event list item to its normal value - so it can be used with
4665:ThirdParty/FreeRTOS/tasks.c ****      * queues and semaphores. */
4666:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITI
4667:ThirdParty/FreeRTOS/tasks.c **** 
4668:ThirdParty/FreeRTOS/tasks.c ****     return uxReturn;
4669:ThirdParty/FreeRTOS/tasks.c **** }
4670:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4671:ThirdParty/FreeRTOS/tasks.c **** 
4672:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4673:ThirdParty/FreeRTOS/tasks.c **** 
4674:ThirdParty/FreeRTOS/tasks.c ****     TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4675:ThirdParty/FreeRTOS/tasks.c ****     {
4676:ThirdParty/FreeRTOS/tasks.c ****         /* If xSemaphoreCreateMutex() is called before any tasks have been created
4677:ThirdParty/FreeRTOS/tasks.c ****          * then pxCurrentTCB will be NULL. */
4678:ThirdParty/FreeRTOS/tasks.c ****         if( pxCurrentTCB != NULL )
4679:ThirdParty/FreeRTOS/tasks.c ****         {
4680:ThirdParty/FreeRTOS/tasks.c ****             ( pxCurrentTCB->uxMutexesHeld )++;
4681:ThirdParty/FreeRTOS/tasks.c ****         }
4682:ThirdParty/FreeRTOS/tasks.c **** 
4683:ThirdParty/FreeRTOS/tasks.c ****         return pxCurrentTCB;
4684:ThirdParty/FreeRTOS/tasks.c ****     }
4685:ThirdParty/FreeRTOS/tasks.c **** 
4686:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4687:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4688:ThirdParty/FreeRTOS/tasks.c **** 
4689:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4690:ThirdParty/FreeRTOS/tasks.c **** 
4691:ThirdParty/FreeRTOS/tasks.c ****     uint32_t ulTaskGenericNotifyTake( UBaseType_t uxIndexToWait,
4692:ThirdParty/FreeRTOS/tasks.c ****                                       BaseType_t xClearCountOnExit,
4693:ThirdParty/FreeRTOS/tasks.c ****                                       TickType_t xTicksToWait )
4694:ThirdParty/FreeRTOS/tasks.c ****     {
4695:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulReturn;
4696:ThirdParty/FreeRTOS/tasks.c **** 
4697:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4698:ThirdParty/FreeRTOS/tasks.c **** 
4699:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4700:ThirdParty/FreeRTOS/tasks.c ****         {
4701:ThirdParty/FreeRTOS/tasks.c ****             /* Only block if the notification count is not already non-zero. */
4702:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] == 0UL )
4703:ThirdParty/FreeRTOS/tasks.c ****             {
4704:ThirdParty/FreeRTOS/tasks.c ****                 /* Mark this task as waiting for a notification. */
4705:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4706:ThirdParty/FreeRTOS/tasks.c **** 
4707:ThirdParty/FreeRTOS/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
4708:ThirdParty/FreeRTOS/tasks.c ****                 {
4709:ThirdParty/FreeRTOS/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4710:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
4711:ThirdParty/FreeRTOS/tasks.c **** 
4712:ThirdParty/FreeRTOS/tasks.c ****                     /* All ports are written to allow a yield in a critical
4713:ThirdParty/FreeRTOS/tasks.c ****                      * section (some will yield immediately, others wait until the
4714:ThirdParty/FreeRTOS/tasks.c ****                      * critical section exits) - but it is not something that
4715:ThirdParty/FreeRTOS/tasks.c ****                      * application code should ever do. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 105


4716:ThirdParty/FreeRTOS/tasks.c ****                     portYIELD_WITHIN_API();
4717:ThirdParty/FreeRTOS/tasks.c ****                 }
4718:ThirdParty/FreeRTOS/tasks.c ****                 else
4719:ThirdParty/FreeRTOS/tasks.c ****                 {
4720:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4721:ThirdParty/FreeRTOS/tasks.c ****                 }
4722:ThirdParty/FreeRTOS/tasks.c ****             }
4723:ThirdParty/FreeRTOS/tasks.c ****             else
4724:ThirdParty/FreeRTOS/tasks.c ****             {
4725:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4726:ThirdParty/FreeRTOS/tasks.c ****             }
4727:ThirdParty/FreeRTOS/tasks.c ****         }
4728:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4729:ThirdParty/FreeRTOS/tasks.c **** 
4730:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4731:ThirdParty/FreeRTOS/tasks.c ****         {
4732:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_TAKE( uxIndexToWait );
4733:ThirdParty/FreeRTOS/tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4734:ThirdParty/FreeRTOS/tasks.c **** 
4735:ThirdParty/FreeRTOS/tasks.c ****             if( ulReturn != 0UL )
4736:ThirdParty/FreeRTOS/tasks.c ****             {
4737:ThirdParty/FreeRTOS/tasks.c ****                 if( xClearCountOnExit != pdFALSE )
4738:ThirdParty/FreeRTOS/tasks.c ****                 {
4739:ThirdParty/FreeRTOS/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = 0UL;
4740:ThirdParty/FreeRTOS/tasks.c ****                 }
4741:ThirdParty/FreeRTOS/tasks.c ****                 else
4742:ThirdParty/FreeRTOS/tasks.c ****                 {
4743:ThirdParty/FreeRTOS/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = ulReturn - ( uint32_t ) 1;
4744:ThirdParty/FreeRTOS/tasks.c ****                 }
4745:ThirdParty/FreeRTOS/tasks.c ****             }
4746:ThirdParty/FreeRTOS/tasks.c ****             else
4747:ThirdParty/FreeRTOS/tasks.c ****             {
4748:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4749:ThirdParty/FreeRTOS/tasks.c ****             }
4750:ThirdParty/FreeRTOS/tasks.c **** 
4751:ThirdParty/FreeRTOS/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4752:ThirdParty/FreeRTOS/tasks.c ****         }
4753:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4754:ThirdParty/FreeRTOS/tasks.c **** 
4755:ThirdParty/FreeRTOS/tasks.c ****         return ulReturn;
4756:ThirdParty/FreeRTOS/tasks.c ****     }
4757:ThirdParty/FreeRTOS/tasks.c **** 
4758:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4759:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4760:ThirdParty/FreeRTOS/tasks.c **** 
4761:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4762:ThirdParty/FreeRTOS/tasks.c **** 
4763:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyWait( UBaseType_t uxIndexToWait,
4764:ThirdParty/FreeRTOS/tasks.c ****                                        uint32_t ulBitsToClearOnEntry,
4765:ThirdParty/FreeRTOS/tasks.c ****                                        uint32_t ulBitsToClearOnExit,
4766:ThirdParty/FreeRTOS/tasks.c ****                                        uint32_t * pulNotificationValue,
4767:ThirdParty/FreeRTOS/tasks.c ****                                        TickType_t xTicksToWait )
4768:ThirdParty/FreeRTOS/tasks.c ****     {
4769:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
4770:ThirdParty/FreeRTOS/tasks.c **** 
4771:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4772:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 106


4773:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4774:ThirdParty/FreeRTOS/tasks.c ****         {
4775:ThirdParty/FreeRTOS/tasks.c ****             /* Only block if a notification is not already pending. */
4776:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4777:ThirdParty/FreeRTOS/tasks.c ****             {
4778:ThirdParty/FreeRTOS/tasks.c ****                 /* Clear bits in the task's notification value as bits may get
4779:ThirdParty/FreeRTOS/tasks.c ****                  * set  by the notifying task or interrupt.  This can be used to
4780:ThirdParty/FreeRTOS/tasks.c ****                  * clear the value to zero. */
4781:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnEntry;
4782:ThirdParty/FreeRTOS/tasks.c **** 
4783:ThirdParty/FreeRTOS/tasks.c ****                 /* Mark this task as waiting for a notification. */
4784:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4785:ThirdParty/FreeRTOS/tasks.c **** 
4786:ThirdParty/FreeRTOS/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
4787:ThirdParty/FreeRTOS/tasks.c ****                 {
4788:ThirdParty/FreeRTOS/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4789:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
4790:ThirdParty/FreeRTOS/tasks.c **** 
4791:ThirdParty/FreeRTOS/tasks.c ****                     /* All ports are written to allow a yield in a critical
4792:ThirdParty/FreeRTOS/tasks.c ****                      * section (some will yield immediately, others wait until the
4793:ThirdParty/FreeRTOS/tasks.c ****                      * critical section exits) - but it is not something that
4794:ThirdParty/FreeRTOS/tasks.c ****                      * application code should ever do. */
4795:ThirdParty/FreeRTOS/tasks.c ****                     portYIELD_WITHIN_API();
4796:ThirdParty/FreeRTOS/tasks.c ****                 }
4797:ThirdParty/FreeRTOS/tasks.c ****                 else
4798:ThirdParty/FreeRTOS/tasks.c ****                 {
4799:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4800:ThirdParty/FreeRTOS/tasks.c ****                 }
4801:ThirdParty/FreeRTOS/tasks.c ****             }
4802:ThirdParty/FreeRTOS/tasks.c ****             else
4803:ThirdParty/FreeRTOS/tasks.c ****             {
4804:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4805:ThirdParty/FreeRTOS/tasks.c ****             }
4806:ThirdParty/FreeRTOS/tasks.c ****         }
4807:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4808:ThirdParty/FreeRTOS/tasks.c **** 
4809:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4810:ThirdParty/FreeRTOS/tasks.c ****         {
4811:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_WAIT( uxIndexToWait );
4812:ThirdParty/FreeRTOS/tasks.c **** 
4813:ThirdParty/FreeRTOS/tasks.c ****             if( pulNotificationValue != NULL )
4814:ThirdParty/FreeRTOS/tasks.c ****             {
4815:ThirdParty/FreeRTOS/tasks.c ****                 /* Output the current notification value, which may or may not
4816:ThirdParty/FreeRTOS/tasks.c ****                  * have changed. */
4817:ThirdParty/FreeRTOS/tasks.c ****                 *pulNotificationValue = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4818:ThirdParty/FreeRTOS/tasks.c ****             }
4819:ThirdParty/FreeRTOS/tasks.c **** 
4820:ThirdParty/FreeRTOS/tasks.c ****             /* If ucNotifyValue is set then either the task never entered the
4821:ThirdParty/FreeRTOS/tasks.c ****              * blocked state (because a notification was already pending) or the
4822:ThirdParty/FreeRTOS/tasks.c ****              * task unblocked because of a notification.  Otherwise the task
4823:ThirdParty/FreeRTOS/tasks.c ****              * unblocked because of a timeout. */
4824:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4825:ThirdParty/FreeRTOS/tasks.c ****             {
4826:ThirdParty/FreeRTOS/tasks.c ****                 /* A notification was not received. */
4827:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdFALSE;
4828:ThirdParty/FreeRTOS/tasks.c ****             }
4829:ThirdParty/FreeRTOS/tasks.c ****             else
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 107


4830:ThirdParty/FreeRTOS/tasks.c ****             {
4831:ThirdParty/FreeRTOS/tasks.c ****                 /* A notification was already pending or a notification was
4832:ThirdParty/FreeRTOS/tasks.c ****                  * received while the task was waiting. */
4833:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnExit;
4834:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
4835:ThirdParty/FreeRTOS/tasks.c ****             }
4836:ThirdParty/FreeRTOS/tasks.c **** 
4837:ThirdParty/FreeRTOS/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4838:ThirdParty/FreeRTOS/tasks.c ****         }
4839:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4840:ThirdParty/FreeRTOS/tasks.c **** 
4841:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
4842:ThirdParty/FreeRTOS/tasks.c ****     }
4843:ThirdParty/FreeRTOS/tasks.c **** 
4844:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4845:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4846:ThirdParty/FreeRTOS/tasks.c **** 
4847:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4848:ThirdParty/FreeRTOS/tasks.c **** 
4849:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
4850:ThirdParty/FreeRTOS/tasks.c ****                                    UBaseType_t uxIndexToNotify,
4851:ThirdParty/FreeRTOS/tasks.c ****                                    uint32_t ulValue,
4852:ThirdParty/FreeRTOS/tasks.c ****                                    eNotifyAction eAction,
4853:ThirdParty/FreeRTOS/tasks.c ****                                    uint32_t * pulPreviousNotificationValue )
4854:ThirdParty/FreeRTOS/tasks.c ****     {
4855:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
4856:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
4857:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
4858:ThirdParty/FreeRTOS/tasks.c **** 
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4860:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
4861:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
4862:ThirdParty/FreeRTOS/tasks.c **** 
4863:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4864:ThirdParty/FreeRTOS/tasks.c ****         {
4865:ThirdParty/FreeRTOS/tasks.c ****             if( pulPreviousNotificationValue != NULL )
4866:ThirdParty/FreeRTOS/tasks.c ****             {
4867:ThirdParty/FreeRTOS/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
4868:ThirdParty/FreeRTOS/tasks.c ****             }
4869:ThirdParty/FreeRTOS/tasks.c **** 
4870:ThirdParty/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
4871:ThirdParty/FreeRTOS/tasks.c **** 
4872:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
4873:ThirdParty/FreeRTOS/tasks.c **** 
4874:ThirdParty/FreeRTOS/tasks.c ****             switch( eAction )
4875:ThirdParty/FreeRTOS/tasks.c ****             {
4876:ThirdParty/FreeRTOS/tasks.c ****                 case eSetBits:
4877:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
4878:ThirdParty/FreeRTOS/tasks.c ****                     break;
4879:ThirdParty/FreeRTOS/tasks.c **** 
4880:ThirdParty/FreeRTOS/tasks.c ****                 case eIncrement:
4881:ThirdParty/FreeRTOS/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
4882:ThirdParty/FreeRTOS/tasks.c ****                     break;
4883:ThirdParty/FreeRTOS/tasks.c **** 
4884:ThirdParty/FreeRTOS/tasks.c ****                 case eSetValueWithOverwrite:
4885:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
4886:ThirdParty/FreeRTOS/tasks.c ****                     break;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 108


4887:ThirdParty/FreeRTOS/tasks.c **** 
4888:ThirdParty/FreeRTOS/tasks.c ****                 case eSetValueWithoutOverwrite:
4889:ThirdParty/FreeRTOS/tasks.c **** 
4890:ThirdParty/FreeRTOS/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4891:ThirdParty/FreeRTOS/tasks.c ****                     {
4892:ThirdParty/FreeRTOS/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
4893:ThirdParty/FreeRTOS/tasks.c ****                     }
4894:ThirdParty/FreeRTOS/tasks.c ****                     else
4895:ThirdParty/FreeRTOS/tasks.c ****                     {
4896:ThirdParty/FreeRTOS/tasks.c ****                         /* The value could not be written to the task. */
4897:ThirdParty/FreeRTOS/tasks.c ****                         xReturn = pdFAIL;
4898:ThirdParty/FreeRTOS/tasks.c ****                     }
4899:ThirdParty/FreeRTOS/tasks.c **** 
4900:ThirdParty/FreeRTOS/tasks.c ****                     break;
4901:ThirdParty/FreeRTOS/tasks.c **** 
4902:ThirdParty/FreeRTOS/tasks.c ****                 case eNoAction:
4903:ThirdParty/FreeRTOS/tasks.c **** 
4904:ThirdParty/FreeRTOS/tasks.c ****                     /* The task is being notified without its notify value being
4905:ThirdParty/FreeRTOS/tasks.c ****                      * updated. */
4906:ThirdParty/FreeRTOS/tasks.c ****                     break;
4907:ThirdParty/FreeRTOS/tasks.c **** 
4908:ThirdParty/FreeRTOS/tasks.c ****                 default:
4909:ThirdParty/FreeRTOS/tasks.c **** 
4910:ThirdParty/FreeRTOS/tasks.c ****                     /* Should not get here if all enums are handled.
4911:ThirdParty/FreeRTOS/tasks.c ****                      * Artificially force an assert by testing a value the
4912:ThirdParty/FreeRTOS/tasks.c ****                      * compiler can't assume is const. */
4913:ThirdParty/FreeRTOS/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
4914:ThirdParty/FreeRTOS/tasks.c **** 
4915:ThirdParty/FreeRTOS/tasks.c ****                     break;
4916:ThirdParty/FreeRTOS/tasks.c ****             }
4917:ThirdParty/FreeRTOS/tasks.c **** 
4918:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_NOTIFY( uxIndexToNotify );
4919:ThirdParty/FreeRTOS/tasks.c **** 
4920:ThirdParty/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
4921:ThirdParty/FreeRTOS/tasks.c ****              * notification then unblock it now. */
4922:ThirdParty/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4923:ThirdParty/FreeRTOS/tasks.c ****             {
4924:ThirdParty/FreeRTOS/tasks.c ****                 listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
4925:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
4926:ThirdParty/FreeRTOS/tasks.c **** 
4927:ThirdParty/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
4928:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4929:ThirdParty/FreeRTOS/tasks.c **** 
4930:ThirdParty/FreeRTOS/tasks.c ****                 #if ( configUSE_TICKLESS_IDLE != 0 )
4931:ThirdParty/FreeRTOS/tasks.c ****                 {
4932:ThirdParty/FreeRTOS/tasks.c ****                     /* If a task is blocked waiting for a notification then
4933:ThirdParty/FreeRTOS/tasks.c ****                      * xNextTaskUnblockTime might be set to the blocked task's time
4934:ThirdParty/FreeRTOS/tasks.c ****                      * out time.  If the task is unblocked for a reason other than
4935:ThirdParty/FreeRTOS/tasks.c ****                      * a timeout xNextTaskUnblockTime is normally left unchanged,
4936:ThirdParty/FreeRTOS/tasks.c ****                      * because it will automatically get reset to a new value when
4937:ThirdParty/FreeRTOS/tasks.c ****                      * the tick count equals xNextTaskUnblockTime.  However if
4938:ThirdParty/FreeRTOS/tasks.c ****                      * tickless idling is used it might be more important to enter
4939:ThirdParty/FreeRTOS/tasks.c ****                      * sleep mode at the earliest possible time - so reset
4940:ThirdParty/FreeRTOS/tasks.c ****                      * xNextTaskUnblockTime here to ensure it is updated at the
4941:ThirdParty/FreeRTOS/tasks.c ****                      * earliest possible time. */
4942:ThirdParty/FreeRTOS/tasks.c ****                     prvResetNextTaskUnblockTime();
4943:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 109


4944:ThirdParty/FreeRTOS/tasks.c ****                 #endif
4945:ThirdParty/FreeRTOS/tasks.c **** 
4946:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4947:ThirdParty/FreeRTOS/tasks.c ****                 {
4948:ThirdParty/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
4949:ThirdParty/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
4950:ThirdParty/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
4951:ThirdParty/FreeRTOS/tasks.c ****                 }
4952:ThirdParty/FreeRTOS/tasks.c ****                 else
4953:ThirdParty/FreeRTOS/tasks.c ****                 {
4954:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4955:ThirdParty/FreeRTOS/tasks.c ****                 }
4956:ThirdParty/FreeRTOS/tasks.c ****             }
4957:ThirdParty/FreeRTOS/tasks.c ****             else
4958:ThirdParty/FreeRTOS/tasks.c ****             {
4959:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4960:ThirdParty/FreeRTOS/tasks.c ****             }
4961:ThirdParty/FreeRTOS/tasks.c ****         }
4962:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4963:ThirdParty/FreeRTOS/tasks.c **** 
4964:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
4965:ThirdParty/FreeRTOS/tasks.c ****     }
4966:ThirdParty/FreeRTOS/tasks.c **** 
4967:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4968:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4969:ThirdParty/FreeRTOS/tasks.c **** 
4970:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4971:ThirdParty/FreeRTOS/tasks.c **** 
4972:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify,
4973:ThirdParty/FreeRTOS/tasks.c ****                                           UBaseType_t uxIndexToNotify,
4974:ThirdParty/FreeRTOS/tasks.c ****                                           uint32_t ulValue,
4975:ThirdParty/FreeRTOS/tasks.c ****                                           eNotifyAction eAction,
4976:ThirdParty/FreeRTOS/tasks.c ****                                           uint32_t * pulPreviousNotificationValue,
4977:ThirdParty/FreeRTOS/tasks.c ****                                           BaseType_t * pxHigherPriorityTaskWoken )
4978:ThirdParty/FreeRTOS/tasks.c ****     {
4979:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
4980:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
4981:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
4982:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
4983:ThirdParty/FreeRTOS/tasks.c **** 
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
4985:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4986:ThirdParty/FreeRTOS/tasks.c **** 
4987:ThirdParty/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
4988:ThirdParty/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
4989:ThirdParty/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
4990:ThirdParty/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
4991:ThirdParty/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4992:ThirdParty/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
4993:ThirdParty/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4994:ThirdParty/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
4995:ThirdParty/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
4996:ThirdParty/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
4997:ThirdParty/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
4998:ThirdParty/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
4999:ThirdParty/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
5000:ThirdParty/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 110


5001:ThirdParty/FreeRTOS/tasks.c ****          * provided on the following link:
5002:ThirdParty/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
5003:ThirdParty/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5004:ThirdParty/FreeRTOS/tasks.c **** 
5005:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
5006:ThirdParty/FreeRTOS/tasks.c **** 
5007:ThirdParty/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5008:ThirdParty/FreeRTOS/tasks.c ****         {
5009:ThirdParty/FreeRTOS/tasks.c ****             if( pulPreviousNotificationValue != NULL )
5010:ThirdParty/FreeRTOS/tasks.c ****             {
5011:ThirdParty/FreeRTOS/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
5012:ThirdParty/FreeRTOS/tasks.c ****             }
5013:ThirdParty/FreeRTOS/tasks.c **** 
5014:ThirdParty/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
5015:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
5016:ThirdParty/FreeRTOS/tasks.c **** 
5017:ThirdParty/FreeRTOS/tasks.c ****             switch( eAction )
5018:ThirdParty/FreeRTOS/tasks.c ****             {
5019:ThirdParty/FreeRTOS/tasks.c ****                 case eSetBits:
5020:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
5021:ThirdParty/FreeRTOS/tasks.c ****                     break;
5022:ThirdParty/FreeRTOS/tasks.c **** 
5023:ThirdParty/FreeRTOS/tasks.c ****                 case eIncrement:
5024:ThirdParty/FreeRTOS/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5025:ThirdParty/FreeRTOS/tasks.c ****                     break;
5026:ThirdParty/FreeRTOS/tasks.c **** 
5027:ThirdParty/FreeRTOS/tasks.c ****                 case eSetValueWithOverwrite:
5028:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5029:ThirdParty/FreeRTOS/tasks.c ****                     break;
5030:ThirdParty/FreeRTOS/tasks.c **** 
5031:ThirdParty/FreeRTOS/tasks.c ****                 case eSetValueWithoutOverwrite:
5032:ThirdParty/FreeRTOS/tasks.c **** 
5033:ThirdParty/FreeRTOS/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
5034:ThirdParty/FreeRTOS/tasks.c ****                     {
5035:ThirdParty/FreeRTOS/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5036:ThirdParty/FreeRTOS/tasks.c ****                     }
5037:ThirdParty/FreeRTOS/tasks.c ****                     else
5038:ThirdParty/FreeRTOS/tasks.c ****                     {
5039:ThirdParty/FreeRTOS/tasks.c ****                         /* The value could not be written to the task. */
5040:ThirdParty/FreeRTOS/tasks.c ****                         xReturn = pdFAIL;
5041:ThirdParty/FreeRTOS/tasks.c ****                     }
5042:ThirdParty/FreeRTOS/tasks.c **** 
5043:ThirdParty/FreeRTOS/tasks.c ****                     break;
5044:ThirdParty/FreeRTOS/tasks.c **** 
5045:ThirdParty/FreeRTOS/tasks.c ****                 case eNoAction:
5046:ThirdParty/FreeRTOS/tasks.c **** 
5047:ThirdParty/FreeRTOS/tasks.c ****                     /* The task is being notified without its notify value being
5048:ThirdParty/FreeRTOS/tasks.c ****                      * updated. */
5049:ThirdParty/FreeRTOS/tasks.c ****                     break;
5050:ThirdParty/FreeRTOS/tasks.c **** 
5051:ThirdParty/FreeRTOS/tasks.c ****                 default:
5052:ThirdParty/FreeRTOS/tasks.c **** 
5053:ThirdParty/FreeRTOS/tasks.c ****                     /* Should not get here if all enums are handled.
5054:ThirdParty/FreeRTOS/tasks.c ****                      * Artificially force an assert by testing a value the
5055:ThirdParty/FreeRTOS/tasks.c ****                      * compiler can't assume is const. */
5056:ThirdParty/FreeRTOS/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
5057:ThirdParty/FreeRTOS/tasks.c ****                     break;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 111


5058:ThirdParty/FreeRTOS/tasks.c ****             }
5059:ThirdParty/FreeRTOS/tasks.c **** 
5060:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_FROM_ISR( uxIndexToNotify );
5061:ThirdParty/FreeRTOS/tasks.c **** 
5062:ThirdParty/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5063:ThirdParty/FreeRTOS/tasks.c ****              * notification then unblock it now. */
5064:ThirdParty/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5065:ThirdParty/FreeRTOS/tasks.c ****             {
5066:ThirdParty/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
5067:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5068:ThirdParty/FreeRTOS/tasks.c **** 
5069:ThirdParty/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5070:ThirdParty/FreeRTOS/tasks.c ****                 {
5071:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
5072:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
5073:ThirdParty/FreeRTOS/tasks.c ****                 }
5074:ThirdParty/FreeRTOS/tasks.c ****                 else
5075:ThirdParty/FreeRTOS/tasks.c ****                 {
5076:ThirdParty/FreeRTOS/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5077:ThirdParty/FreeRTOS/tasks.c ****                      * this task pending until the scheduler is resumed. */
5078:ThirdParty/FreeRTOS/tasks.c ****                     listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5079:ThirdParty/FreeRTOS/tasks.c ****                 }
5080:ThirdParty/FreeRTOS/tasks.c **** 
5081:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5082:ThirdParty/FreeRTOS/tasks.c ****                 {
5083:ThirdParty/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
5084:ThirdParty/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
5085:ThirdParty/FreeRTOS/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5086:ThirdParty/FreeRTOS/tasks.c ****                     {
5087:ThirdParty/FreeRTOS/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5088:ThirdParty/FreeRTOS/tasks.c ****                     }
5089:ThirdParty/FreeRTOS/tasks.c **** 
5090:ThirdParty/FreeRTOS/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5091:ThirdParty/FreeRTOS/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter to an ISR
5092:ThirdParty/FreeRTOS/tasks.c ****                      * safe FreeRTOS function. */
5093:ThirdParty/FreeRTOS/tasks.c ****                     xYieldPending = pdTRUE;
5094:ThirdParty/FreeRTOS/tasks.c ****                 }
5095:ThirdParty/FreeRTOS/tasks.c ****                 else
5096:ThirdParty/FreeRTOS/tasks.c ****                 {
5097:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5098:ThirdParty/FreeRTOS/tasks.c ****                 }
5099:ThirdParty/FreeRTOS/tasks.c ****             }
5100:ThirdParty/FreeRTOS/tasks.c ****         }
5101:ThirdParty/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5102:ThirdParty/FreeRTOS/tasks.c **** 
5103:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
5104:ThirdParty/FreeRTOS/tasks.c ****     }
5105:ThirdParty/FreeRTOS/tasks.c **** 
5106:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5107:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5108:ThirdParty/FreeRTOS/tasks.c **** 
5109:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5110:ThirdParty/FreeRTOS/tasks.c **** 
5111:ThirdParty/FreeRTOS/tasks.c ****     void vTaskGenericNotifyGiveFromISR( TaskHandle_t xTaskToNotify,
5112:ThirdParty/FreeRTOS/tasks.c ****                                         UBaseType_t uxIndexToNotify,
5113:ThirdParty/FreeRTOS/tasks.c ****                                         BaseType_t * pxHigherPriorityTaskWoken )
5114:ThirdParty/FreeRTOS/tasks.c ****     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 112


5115:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5116:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
5117:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
5118:ThirdParty/FreeRTOS/tasks.c **** 
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
5120:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
5121:ThirdParty/FreeRTOS/tasks.c **** 
5122:ThirdParty/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
5123:ThirdParty/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
5124:ThirdParty/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
5125:ThirdParty/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
5126:ThirdParty/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5127:ThirdParty/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
5128:ThirdParty/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5129:ThirdParty/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
5130:ThirdParty/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
5131:ThirdParty/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
5132:ThirdParty/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
5133:ThirdParty/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
5134:ThirdParty/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
5135:ThirdParty/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
5136:ThirdParty/FreeRTOS/tasks.c ****          * provided on the following link:
5137:ThirdParty/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
5138:ThirdParty/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5139:ThirdParty/FreeRTOS/tasks.c **** 
5140:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
5141:ThirdParty/FreeRTOS/tasks.c **** 
5142:ThirdParty/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5143:ThirdParty/FreeRTOS/tasks.c ****         {
5144:ThirdParty/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
5145:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
5146:ThirdParty/FreeRTOS/tasks.c **** 
5147:ThirdParty/FreeRTOS/tasks.c ****             /* 'Giving' is equivalent to incrementing a count in a counting
5148:ThirdParty/FreeRTOS/tasks.c ****              * semaphore. */
5149:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5150:ThirdParty/FreeRTOS/tasks.c **** 
5151:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_GIVE_FROM_ISR( uxIndexToNotify );
5152:ThirdParty/FreeRTOS/tasks.c **** 
5153:ThirdParty/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5154:ThirdParty/FreeRTOS/tasks.c ****              * notification then unblock it now. */
5155:ThirdParty/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5156:ThirdParty/FreeRTOS/tasks.c ****             {
5157:ThirdParty/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
5158:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5159:ThirdParty/FreeRTOS/tasks.c **** 
5160:ThirdParty/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5161:ThirdParty/FreeRTOS/tasks.c ****                 {
5162:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
5163:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
5164:ThirdParty/FreeRTOS/tasks.c ****                 }
5165:ThirdParty/FreeRTOS/tasks.c ****                 else
5166:ThirdParty/FreeRTOS/tasks.c ****                 {
5167:ThirdParty/FreeRTOS/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5168:ThirdParty/FreeRTOS/tasks.c ****                      * this task pending until the scheduler is resumed. */
5169:ThirdParty/FreeRTOS/tasks.c ****                     listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5170:ThirdParty/FreeRTOS/tasks.c ****                 }
5171:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 113


5172:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5173:ThirdParty/FreeRTOS/tasks.c ****                 {
5174:ThirdParty/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
5175:ThirdParty/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
5176:ThirdParty/FreeRTOS/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5177:ThirdParty/FreeRTOS/tasks.c ****                     {
5178:ThirdParty/FreeRTOS/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5179:ThirdParty/FreeRTOS/tasks.c ****                     }
5180:ThirdParty/FreeRTOS/tasks.c **** 
5181:ThirdParty/FreeRTOS/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5182:ThirdParty/FreeRTOS/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter in an ISR
5183:ThirdParty/FreeRTOS/tasks.c ****                      * safe FreeRTOS function. */
5184:ThirdParty/FreeRTOS/tasks.c ****                     xYieldPending = pdTRUE;
5185:ThirdParty/FreeRTOS/tasks.c ****                 }
5186:ThirdParty/FreeRTOS/tasks.c ****                 else
5187:ThirdParty/FreeRTOS/tasks.c ****                 {
5188:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5189:ThirdParty/FreeRTOS/tasks.c ****                 }
5190:ThirdParty/FreeRTOS/tasks.c ****             }
5191:ThirdParty/FreeRTOS/tasks.c ****         }
5192:ThirdParty/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5193:ThirdParty/FreeRTOS/tasks.c ****     }
5194:ThirdParty/FreeRTOS/tasks.c **** 
5195:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5196:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5197:ThirdParty/FreeRTOS/tasks.c **** 
5198:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5199:ThirdParty/FreeRTOS/tasks.c **** 
5200:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyStateClear( TaskHandle_t xTask,
5201:ThirdParty/FreeRTOS/tasks.c ****                                              UBaseType_t uxIndexToClear )
5202:ThirdParty/FreeRTOS/tasks.c ****     {
5203:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5204:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
5205:ThirdParty/FreeRTOS/tasks.c **** 
5206:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToClear < configTASK_NOTIFICATION_ARRAY_ENTRIES );
5207:ThirdParty/FreeRTOS/tasks.c **** 
5208:ThirdParty/FreeRTOS/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5209:ThirdParty/FreeRTOS/tasks.c ****          * its notification state cleared. */
5210:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5211:ThirdParty/FreeRTOS/tasks.c **** 
5212:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
5213:ThirdParty/FreeRTOS/tasks.c ****         {
5214:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB->ucNotifyState[ uxIndexToClear ] == taskNOTIFICATION_RECEIVED )
5215:ThirdParty/FreeRTOS/tasks.c ****             {
5216:ThirdParty/FreeRTOS/tasks.c ****                 pxTCB->ucNotifyState[ uxIndexToClear ] = taskNOT_WAITING_NOTIFICATION;
5217:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
5218:ThirdParty/FreeRTOS/tasks.c ****             }
5219:ThirdParty/FreeRTOS/tasks.c ****             else
5220:ThirdParty/FreeRTOS/tasks.c ****             {
5221:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdFAIL;
5222:ThirdParty/FreeRTOS/tasks.c ****             }
5223:ThirdParty/FreeRTOS/tasks.c ****         }
5224:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
5225:ThirdParty/FreeRTOS/tasks.c **** 
5226:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
5227:ThirdParty/FreeRTOS/tasks.c ****     }
5228:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 114


5229:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5230:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5231:ThirdParty/FreeRTOS/tasks.c **** 
5232:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5233:ThirdParty/FreeRTOS/tasks.c **** 
5234:ThirdParty/FreeRTOS/tasks.c ****     uint32_t ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
5235:ThirdParty/FreeRTOS/tasks.c ****                                             UBaseType_t uxIndexToClear,
5236:ThirdParty/FreeRTOS/tasks.c ****                                             uint32_t ulBitsToClear )
5237:ThirdParty/FreeRTOS/tasks.c ****     {
5238:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5239:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulReturn;
5240:ThirdParty/FreeRTOS/tasks.c **** 
5241:ThirdParty/FreeRTOS/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5242:ThirdParty/FreeRTOS/tasks.c ****          * its notification state cleared. */
5243:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5244:ThirdParty/FreeRTOS/tasks.c **** 
5245:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
5246:ThirdParty/FreeRTOS/tasks.c ****         {
5247:ThirdParty/FreeRTOS/tasks.c ****             /* Return the notification as it was before the bits were cleared,
5248:ThirdParty/FreeRTOS/tasks.c ****              * then clear the bit mask. */
5249:ThirdParty/FreeRTOS/tasks.c ****             ulReturn = pxTCB->ulNotifiedValue[ uxIndexToClear ];
5250:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
5251:ThirdParty/FreeRTOS/tasks.c ****         }
5252:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
5253:ThirdParty/FreeRTOS/tasks.c **** 
5254:ThirdParty/FreeRTOS/tasks.c ****         return ulReturn;
5255:ThirdParty/FreeRTOS/tasks.c ****     }
5256:ThirdParty/FreeRTOS/tasks.c **** 
5257:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5258:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5259:ThirdParty/FreeRTOS/tasks.c **** 
5260:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5261:ThirdParty/FreeRTOS/tasks.c **** 
5262:ThirdParty/FreeRTOS/tasks.c ****     configRUN_TIME_COUNTER_TYPE ulTaskGetIdleRunTimeCounter( void )
5263:ThirdParty/FreeRTOS/tasks.c ****     {
5264:ThirdParty/FreeRTOS/tasks.c ****         return xIdleTaskHandle->ulRunTimeCounter;
5265:ThirdParty/FreeRTOS/tasks.c ****     }
5266:ThirdParty/FreeRTOS/tasks.c **** 
5267:ThirdParty/FreeRTOS/tasks.c **** #endif
5268:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5269:ThirdParty/FreeRTOS/tasks.c **** 
5270:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5271:ThirdParty/FreeRTOS/tasks.c **** 
5272:ThirdParty/FreeRTOS/tasks.c ****     configRUN_TIME_COUNTER_TYPE ulTaskGetIdleRunTimePercent( void )
5273:ThirdParty/FreeRTOS/tasks.c ****     {
5274:ThirdParty/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulTotalTime, ulReturn;
5275:ThirdParty/FreeRTOS/tasks.c **** 
5276:ThirdParty/FreeRTOS/tasks.c ****         ulTotalTime = portGET_RUN_TIME_COUNTER_VALUE();
5277:ThirdParty/FreeRTOS/tasks.c **** 
5278:ThirdParty/FreeRTOS/tasks.c ****         /* For percentage calculations. */
5279:ThirdParty/FreeRTOS/tasks.c ****         ulTotalTime /= ( configRUN_TIME_COUNTER_TYPE ) 100;
5280:ThirdParty/FreeRTOS/tasks.c **** 
5281:ThirdParty/FreeRTOS/tasks.c ****         /* Avoid divide by zero errors. */
5282:ThirdParty/FreeRTOS/tasks.c ****         if( ulTotalTime > ( configRUN_TIME_COUNTER_TYPE ) 0 )
5283:ThirdParty/FreeRTOS/tasks.c ****         {
5284:ThirdParty/FreeRTOS/tasks.c ****             ulReturn = xIdleTaskHandle->ulRunTimeCounter / ulTotalTime;
5285:ThirdParty/FreeRTOS/tasks.c ****         }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 115


5286:ThirdParty/FreeRTOS/tasks.c ****         else
5287:ThirdParty/FreeRTOS/tasks.c ****         {
5288:ThirdParty/FreeRTOS/tasks.c ****             ulReturn = 0;
5289:ThirdParty/FreeRTOS/tasks.c ****         }
5290:ThirdParty/FreeRTOS/tasks.c **** 
5291:ThirdParty/FreeRTOS/tasks.c ****         return ulReturn;
5292:ThirdParty/FreeRTOS/tasks.c ****     }
5293:ThirdParty/FreeRTOS/tasks.c **** 
5294:ThirdParty/FreeRTOS/tasks.c **** #endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) 
5295:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5296:ThirdParty/FreeRTOS/tasks.c **** 
5297:ThirdParty/FreeRTOS/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
5298:ThirdParty/FreeRTOS/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely )
5299:ThirdParty/FreeRTOS/tasks.c **** {
 844              		.loc 1 5299 1 view -0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 0
 847              		@ frame_needed = 0, uses_anonymous_args = 0
 848              		.loc 1 5299 1 is_stmt 0 view .LVU235
 849 0000 70B5     		push	{r4, r5, r6, lr}
 850              	.LCFI7:
 851              		.cfi_def_cfa_offset 16
 852              		.cfi_offset 4, -16
 853              		.cfi_offset 5, -12
 854              		.cfi_offset 6, -8
 855              		.cfi_offset 14, -4
 856 0002 0446     		mov	r4, r0
 857 0004 0D46     		mov	r5, r1
5300:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xTimeToWake;
 858              		.loc 1 5300 5 is_stmt 1 view .LVU236
5301:ThirdParty/FreeRTOS/tasks.c ****     const TickType_t xConstTickCount = xTickCount;
 859              		.loc 1 5301 5 view .LVU237
 860              		.loc 1 5301 22 is_stmt 0 view .LVU238
 861 0006 234B     		ldr	r3, .L69
 862 0008 1E68     		ldr	r6, [r3]
 863              	.LVL60:
5302:ThirdParty/FreeRTOS/tasks.c **** 
5303:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
5304:ThirdParty/FreeRTOS/tasks.c ****     {
5305:ThirdParty/FreeRTOS/tasks.c ****         /* About to enter a delayed list, so ensure the ucDelayAborted flag is
5306:ThirdParty/FreeRTOS/tasks.c ****          * reset to pdFALSE so it can be detected as having been set to pdTRUE
5307:ThirdParty/FreeRTOS/tasks.c ****          * when the task leaves the Blocked state. */
5308:ThirdParty/FreeRTOS/tasks.c ****         pxCurrentTCB->ucDelayAborted = pdFALSE;
5309:ThirdParty/FreeRTOS/tasks.c ****     }
5310:ThirdParty/FreeRTOS/tasks.c ****     #endif
5311:ThirdParty/FreeRTOS/tasks.c **** 
5312:ThirdParty/FreeRTOS/tasks.c ****     /* Remove the task from the ready list before adding it to the blocked list
5313:ThirdParty/FreeRTOS/tasks.c ****      * as the same list item is used for both lists. */
5314:ThirdParty/FreeRTOS/tasks.c ****     if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 864              		.loc 1 5314 5 is_stmt 1 view .LVU239
 865              		.loc 1 5314 38 is_stmt 0 view .LVU240
 866 000a 234B     		ldr	r3, .L69+4
 867 000c 1868     		ldr	r0, [r3]
 868              	.LVL61:
 869              		.loc 1 5314 9 view .LVU241
 870 000e 0430     		adds	r0, r0, #4
 871 0010 FFF7FEFF 		bl	uxListRemove
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 116


 872              	.LVL62:
 873              		.loc 1 5314 7 discriminator 1 view .LVU242
 874 0014 48B9     		cbnz	r0, .L63
5315:ThirdParty/FreeRTOS/tasks.c ****     {
5316:ThirdParty/FreeRTOS/tasks.c ****         /* The current task must be in a ready list, so there is no need to
5317:ThirdParty/FreeRTOS/tasks.c ****          * check, and the port reset macro can be called directly. */
5318:ThirdParty/FreeRTOS/tasks.c ****         portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCu
 875              		.loc 1 5318 9 is_stmt 1 view .LVU243
 876 0016 204B     		ldr	r3, .L69+4
 877 0018 1B68     		ldr	r3, [r3]
 878 001a DB6A     		ldr	r3, [r3, #44]
 879 001c 0122     		movs	r2, #1
 880 001e 9A40     		lsls	r2, r2, r3
 881 0020 1E49     		ldr	r1, .L69+8
 882 0022 0B68     		ldr	r3, [r1]
 883 0024 23EA0203 		bic	r3, r3, r2
 884 0028 0B60     		str	r3, [r1]
 885              	.L63:
5319:ThirdParty/FreeRTOS/tasks.c ****     }
5320:ThirdParty/FreeRTOS/tasks.c ****     else
5321:ThirdParty/FreeRTOS/tasks.c ****     {
5322:ThirdParty/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 886              		.loc 1 5322 33 view .LVU244
5323:ThirdParty/FreeRTOS/tasks.c ****     }
5324:ThirdParty/FreeRTOS/tasks.c **** 
5325:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
5326:ThirdParty/FreeRTOS/tasks.c ****     {
5327:ThirdParty/FreeRTOS/tasks.c ****         if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 887              		.loc 1 5327 9 view .LVU245
 888              		.loc 1 5327 11 is_stmt 0 view .LVU246
 889 002a B4F1FF3F 		cmp	r4, #-1
 890 002e 0DD0     		beq	.L68
 891              	.L64:
5328:ThirdParty/FreeRTOS/tasks.c ****         {
5329:ThirdParty/FreeRTOS/tasks.c ****             /* Add the task to the suspended task list instead of a delayed task
5330:ThirdParty/FreeRTOS/tasks.c ****              * list to ensure it is not woken by a timing event.  It will block
5331:ThirdParty/FreeRTOS/tasks.c ****              * indefinitely. */
5332:ThirdParty/FreeRTOS/tasks.c ****             listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5333:ThirdParty/FreeRTOS/tasks.c ****         }
5334:ThirdParty/FreeRTOS/tasks.c ****         else
5335:ThirdParty/FreeRTOS/tasks.c ****         {
5336:ThirdParty/FreeRTOS/tasks.c ****             /* Calculate the time at which the task should be woken if the event
5337:ThirdParty/FreeRTOS/tasks.c ****              * does not occur.  This may overflow but this doesn't matter, the
5338:ThirdParty/FreeRTOS/tasks.c ****              * kernel will manage it correctly. */
5339:ThirdParty/FreeRTOS/tasks.c ****             xTimeToWake = xConstTickCount + xTicksToWait;
 892              		.loc 1 5339 13 is_stmt 1 view .LVU247
 893              		.loc 1 5339 25 is_stmt 0 view .LVU248
 894 0030 3444     		add	r4, r4, r6
 895              	.LVL63:
5340:ThirdParty/FreeRTOS/tasks.c **** 
5341:ThirdParty/FreeRTOS/tasks.c ****             /* The list item will be inserted in wake time order. */
5342:ThirdParty/FreeRTOS/tasks.c ****             listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 896              		.loc 1 5342 13 is_stmt 1 view .LVU249
 897 0032 194B     		ldr	r3, .L69+4
 898 0034 1B68     		ldr	r3, [r3]
 899 0036 5C60     		str	r4, [r3, #4]
5343:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 117


5344:ThirdParty/FreeRTOS/tasks.c ****             if( xTimeToWake < xConstTickCount )
 900              		.loc 1 5344 13 view .LVU250
 901              		.loc 1 5344 15 is_stmt 0 view .LVU251
 902 0038 A642     		cmp	r6, r4
 903 003a 1DD9     		bls	.L66
5345:ThirdParty/FreeRTOS/tasks.c ****             {
5346:ThirdParty/FreeRTOS/tasks.c ****                 /* Wake time has overflowed.  Place this item in the overflow
5347:ThirdParty/FreeRTOS/tasks.c ****                  * list. */
5348:ThirdParty/FreeRTOS/tasks.c ****                 vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 904              		.loc 1 5348 17 is_stmt 1 view .LVU252
 905 003c 184B     		ldr	r3, .L69+12
 906 003e 1868     		ldr	r0, [r3]
 907              		.loc 1 5348 72 is_stmt 0 view .LVU253
 908 0040 154B     		ldr	r3, .L69+4
 909 0042 1968     		ldr	r1, [r3]
 910              		.loc 1 5348 17 view .LVU254
 911 0044 0431     		adds	r1, r1, #4
 912 0046 FFF7FEFF 		bl	vListInsert
 913              	.LVL64:
 914              	.L62:
5349:ThirdParty/FreeRTOS/tasks.c ****             }
5350:ThirdParty/FreeRTOS/tasks.c ****             else
5351:ThirdParty/FreeRTOS/tasks.c ****             {
5352:ThirdParty/FreeRTOS/tasks.c ****                 /* The wake time has not overflowed, so the current block list
5353:ThirdParty/FreeRTOS/tasks.c ****                  * is used. */
5354:ThirdParty/FreeRTOS/tasks.c ****                 vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5355:ThirdParty/FreeRTOS/tasks.c **** 
5356:ThirdParty/FreeRTOS/tasks.c ****                 /* If the task entering the blocked state was placed at the
5357:ThirdParty/FreeRTOS/tasks.c ****                  * head of the list of blocked tasks then xNextTaskUnblockTime
5358:ThirdParty/FreeRTOS/tasks.c ****                  * needs to be updated too. */
5359:ThirdParty/FreeRTOS/tasks.c ****                 if( xTimeToWake < xNextTaskUnblockTime )
5360:ThirdParty/FreeRTOS/tasks.c ****                 {
5361:ThirdParty/FreeRTOS/tasks.c ****                     xNextTaskUnblockTime = xTimeToWake;
5362:ThirdParty/FreeRTOS/tasks.c ****                 }
5363:ThirdParty/FreeRTOS/tasks.c ****                 else
5364:ThirdParty/FreeRTOS/tasks.c ****                 {
5365:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5366:ThirdParty/FreeRTOS/tasks.c ****                 }
5367:ThirdParty/FreeRTOS/tasks.c ****             }
5368:ThirdParty/FreeRTOS/tasks.c ****         }
5369:ThirdParty/FreeRTOS/tasks.c ****     }
5370:ThirdParty/FreeRTOS/tasks.c ****     #else /* INCLUDE_vTaskSuspend */
5371:ThirdParty/FreeRTOS/tasks.c ****     {
5372:ThirdParty/FreeRTOS/tasks.c ****         /* Calculate the time at which the task should be woken if the event
5373:ThirdParty/FreeRTOS/tasks.c ****          * does not occur.  This may overflow but this doesn't matter, the kernel
5374:ThirdParty/FreeRTOS/tasks.c ****          * will manage it correctly. */
5375:ThirdParty/FreeRTOS/tasks.c ****         xTimeToWake = xConstTickCount + xTicksToWait;
5376:ThirdParty/FreeRTOS/tasks.c **** 
5377:ThirdParty/FreeRTOS/tasks.c ****         /* The list item will be inserted in wake time order. */
5378:ThirdParty/FreeRTOS/tasks.c ****         listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5379:ThirdParty/FreeRTOS/tasks.c **** 
5380:ThirdParty/FreeRTOS/tasks.c ****         if( xTimeToWake < xConstTickCount )
5381:ThirdParty/FreeRTOS/tasks.c ****         {
5382:ThirdParty/FreeRTOS/tasks.c ****             /* Wake time has overflowed.  Place this item in the overflow list. */
5383:ThirdParty/FreeRTOS/tasks.c ****             vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5384:ThirdParty/FreeRTOS/tasks.c ****         }
5385:ThirdParty/FreeRTOS/tasks.c ****         else
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 118


5386:ThirdParty/FreeRTOS/tasks.c ****         {
5387:ThirdParty/FreeRTOS/tasks.c ****             /* The wake time has not overflowed, so the current block list is used. */
5388:ThirdParty/FreeRTOS/tasks.c ****             vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5389:ThirdParty/FreeRTOS/tasks.c **** 
5390:ThirdParty/FreeRTOS/tasks.c ****             /* If the task entering the blocked state was placed at the head of the
5391:ThirdParty/FreeRTOS/tasks.c ****              * list of blocked tasks then xNextTaskUnblockTime needs to be updated
5392:ThirdParty/FreeRTOS/tasks.c ****              * too. */
5393:ThirdParty/FreeRTOS/tasks.c ****             if( xTimeToWake < xNextTaskUnblockTime )
5394:ThirdParty/FreeRTOS/tasks.c ****             {
5395:ThirdParty/FreeRTOS/tasks.c ****                 xNextTaskUnblockTime = xTimeToWake;
5396:ThirdParty/FreeRTOS/tasks.c ****             }
5397:ThirdParty/FreeRTOS/tasks.c ****             else
5398:ThirdParty/FreeRTOS/tasks.c ****             {
5399:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
5400:ThirdParty/FreeRTOS/tasks.c ****             }
5401:ThirdParty/FreeRTOS/tasks.c ****         }
5402:ThirdParty/FreeRTOS/tasks.c **** 
5403:ThirdParty/FreeRTOS/tasks.c ****         /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5404:ThirdParty/FreeRTOS/tasks.c ****         ( void ) xCanBlockIndefinitely;
5405:ThirdParty/FreeRTOS/tasks.c ****     }
5406:ThirdParty/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
5407:ThirdParty/FreeRTOS/tasks.c **** }
 915              		.loc 1 5407 1 view .LVU255
 916 004a 70BD     		pop	{r4, r5, r6, pc}
 917              	.LVL65:
 918              	.L68:
5327:ThirdParty/FreeRTOS/tasks.c ****         {
 919              		.loc 1 5327 47 discriminator 1 view .LVU256
 920 004c 002D     		cmp	r5, #0
 921 004e EFD0     		beq	.L64
 922              	.LBB162:
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 923              		.loc 1 5332 13 is_stmt 1 view .LVU257
 924 0050 144A     		ldr	r2, .L69+16
 925 0052 5168     		ldr	r1, [r2, #4]
 926              	.LVL66:
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 927              		.loc 1 5332 13 view .LVU258
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 928              		.loc 1 5332 13 view .LVU259
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 929              		.loc 1 5332 13 view .LVU260
 930 0054 104B     		ldr	r3, .L69+4
 931 0056 1868     		ldr	r0, [r3]
 932 0058 8160     		str	r1, [r0, #8]
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 933              		.loc 1 5332 13 view .LVU261
 934 005a 1868     		ldr	r0, [r3]
 935 005c 8C68     		ldr	r4, [r1, #8]
 936              	.LVL67:
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 937              		.loc 1 5332 13 is_stmt 0 view .LVU262
 938 005e C460     		str	r4, [r0, #12]
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 939              		.loc 1 5332 13 is_stmt 1 view .LVU263
 940 0060 1868     		ldr	r0, [r3]
 941 0062 0430     		adds	r0, r0, #4
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 119


 942 0064 6060     		str	r0, [r4, #4]
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 943              		.loc 1 5332 13 view .LVU264
 944 0066 1868     		ldr	r0, [r3]
 945 0068 0430     		adds	r0, r0, #4
 946 006a 8860     		str	r0, [r1, #8]
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 947              		.loc 1 5332 13 view .LVU265
 948 006c 1B68     		ldr	r3, [r3]
 949 006e 5A61     		str	r2, [r3, #20]
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 950              		.loc 1 5332 13 view .LVU266
 951 0070 1368     		ldr	r3, [r2]
 952 0072 0133     		adds	r3, r3, #1
 953 0074 1360     		str	r3, [r2]
 954              	.LBE162:
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 955              		.loc 1 5332 85 view .LVU267
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 956              		.loc 1 5332 13 is_stmt 0 view .LVU268
 957 0076 E8E7     		b	.L62
 958              	.LVL68:
 959              	.L66:
5354:ThirdParty/FreeRTOS/tasks.c **** 
 960              		.loc 1 5354 17 is_stmt 1 view .LVU269
 961 0078 0B4B     		ldr	r3, .L69+20
 962 007a 1868     		ldr	r0, [r3]
5354:ThirdParty/FreeRTOS/tasks.c **** 
 963              		.loc 1 5354 64 is_stmt 0 view .LVU270
 964 007c 064B     		ldr	r3, .L69+4
 965 007e 1968     		ldr	r1, [r3]
5354:ThirdParty/FreeRTOS/tasks.c **** 
 966              		.loc 1 5354 17 view .LVU271
 967 0080 0431     		adds	r1, r1, #4
 968 0082 FFF7FEFF 		bl	vListInsert
 969              	.LVL69:
5359:ThirdParty/FreeRTOS/tasks.c ****                 {
 970              		.loc 1 5359 17 is_stmt 1 view .LVU272
5359:ThirdParty/FreeRTOS/tasks.c ****                 {
 971              		.loc 1 5359 33 is_stmt 0 view .LVU273
 972 0086 094B     		ldr	r3, .L69+24
 973 0088 1B68     		ldr	r3, [r3]
5359:ThirdParty/FreeRTOS/tasks.c ****                 {
 974              		.loc 1 5359 19 view .LVU274
 975 008a A342     		cmp	r3, r4
 976 008c DDD9     		bls	.L62
5361:ThirdParty/FreeRTOS/tasks.c ****                 }
 977              		.loc 1 5361 21 is_stmt 1 view .LVU275
5361:ThirdParty/FreeRTOS/tasks.c ****                 }
 978              		.loc 1 5361 42 is_stmt 0 view .LVU276
 979 008e 074B     		ldr	r3, .L69+24
 980 0090 1C60     		str	r4, [r3]
5365:ThirdParty/FreeRTOS/tasks.c ****                 }
 981              		.loc 1 5365 45 is_stmt 1 view .LVU277
 982              		.loc 1 5407 1 is_stmt 0 view .LVU278
 983 0092 DAE7     		b	.L62
 984              	.L70:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 120


 985              		.align	2
 986              	.L69:
 987 0094 00000000 		.word	xTickCount
 988 0098 00000000 		.word	pxCurrentTCB
 989 009c 00000000 		.word	uxTopReadyPriority
 990 00a0 00000000 		.word	pxOverflowDelayedTaskList
 991 00a4 00000000 		.word	xSuspendedTaskList
 992 00a8 00000000 		.word	pxDelayedTaskList
 993 00ac 00000000 		.word	xNextTaskUnblockTime
 994              		.cfi_endproc
 995              	.LFE64:
 997              		.section	.text.xTaskCreate,"ax",%progbits
 998              		.align	1
 999              		.global	xTaskCreate
 1000              		.syntax unified
 1001              		.thumb
 1002              		.thumb_func
 1004              	xTaskCreate:
 1005              	.LVL70:
 1006              	.LFB5:
 727:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 1007              		.loc 1 727 5 is_stmt 1 view -0
 1008              		.cfi_startproc
 1009              		@ args = 8, pretend = 0, frame = 0
 1010              		@ frame_needed = 0, uses_anonymous_args = 0
 727:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 1011              		.loc 1 727 5 is_stmt 0 view .LVU280
 1012 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1013              	.LCFI8:
 1014              		.cfi_def_cfa_offset 28
 1015              		.cfi_offset 4, -28
 1016              		.cfi_offset 5, -24
 1017              		.cfi_offset 6, -20
 1018              		.cfi_offset 7, -16
 1019              		.cfi_offset 8, -12
 1020              		.cfi_offset 9, -8
 1021              		.cfi_offset 14, -4
 1022 0004 85B0     		sub	sp, sp, #20
 1023              	.LCFI9:
 1024              		.cfi_def_cfa_offset 48
 1025 0006 0746     		mov	r7, r0
 1026 0008 8846     		mov	r8, r1
 1027 000a 1446     		mov	r4, r2
 1028 000c 1E46     		mov	r6, r3
 728:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 1029              		.loc 1 728 9 is_stmt 1 view .LVU281
 729:ThirdParty/FreeRTOS/tasks.c **** 
 1030              		.loc 1 729 9 view .LVU282
 1031              	.LBB163:
 760:ThirdParty/FreeRTOS/tasks.c **** 
 1032              		.loc 1 760 13 view .LVU283
 763:ThirdParty/FreeRTOS/tasks.c **** 
 1033              		.loc 1 763 13 view .LVU284
 763:ThirdParty/FreeRTOS/tasks.c **** 
 1034              		.loc 1 763 23 is_stmt 0 view .LVU285
 1035 000e 9000     		lsls	r0, r2, #2
 1036              	.LVL71:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 121


 763:ThirdParty/FreeRTOS/tasks.c **** 
 1037              		.loc 1 763 23 view .LVU286
 1038 0010 FFF7FEFF 		bl	pvPortMalloc
 1039              	.LVL72:
 765:ThirdParty/FreeRTOS/tasks.c ****             {
 1040              		.loc 1 765 13 is_stmt 1 view .LVU287
 765:ThirdParty/FreeRTOS/tasks.c ****             {
 1041              		.loc 1 765 15 is_stmt 0 view .LVU288
 1042 0014 18B3     		cbz	r0, .L74
 1043 0016 8146     		mov	r9, r0
 768:ThirdParty/FreeRTOS/tasks.c **** 
 1044              		.loc 1 768 17 is_stmt 1 view .LVU289
 768:ThirdParty/FreeRTOS/tasks.c **** 
 1045              		.loc 1 768 40 is_stmt 0 view .LVU290
 1046 0018 5820     		movs	r0, #88
 1047              	.LVL73:
 768:ThirdParty/FreeRTOS/tasks.c **** 
 1048              		.loc 1 768 40 view .LVU291
 1049 001a FFF7FEFF 		bl	pvPortMalloc
 1050              	.LVL74:
 770:ThirdParty/FreeRTOS/tasks.c ****                 {
 1051              		.loc 1 770 17 is_stmt 1 view .LVU292
 770:ThirdParty/FreeRTOS/tasks.c ****                 {
 1052              		.loc 1 770 19 is_stmt 0 view .LVU293
 1053 001e 0546     		mov	r5, r0
 1054 0020 B8B1     		cbz	r0, .L73
 772:ThirdParty/FreeRTOS/tasks.c **** 
 1055              		.loc 1 772 21 is_stmt 1 view .LVU294
 1056 0022 5822     		movs	r2, #88
 1057 0024 0021     		movs	r1, #0
 1058 0026 FFF7FEFF 		bl	memset
 1059              	.LVL75:
 775:ThirdParty/FreeRTOS/tasks.c ****                 }
 1060              		.loc 1 775 21 view .LVU295
 775:ThirdParty/FreeRTOS/tasks.c ****                 }
 1061              		.loc 1 775 39 is_stmt 0 view .LVU296
 1062 002a C5F83090 		str	r9, [r5, #48]
 775:ThirdParty/FreeRTOS/tasks.c ****                 }
 1063              		.loc 1 775 39 view .LVU297
 1064              	.LBE163:
 791:ThirdParty/FreeRTOS/tasks.c ****         {
 1065              		.loc 1 791 9 is_stmt 1 view .LVU298
 801:ThirdParty/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 1066              		.loc 1 801 13 view .LVU299
 1067 002e 0023     		movs	r3, #0
 1068 0030 0393     		str	r3, [sp, #12]
 1069 0032 0295     		str	r5, [sp, #8]
 1070 0034 0D9B     		ldr	r3, [sp, #52]
 1071 0036 0193     		str	r3, [sp, #4]
 1072 0038 0C9B     		ldr	r3, [sp, #48]
 1073 003a 0093     		str	r3, [sp]
 1074 003c 3346     		mov	r3, r6
 1075 003e 2246     		mov	r2, r4
 1076 0040 4146     		mov	r1, r8
 1077 0042 3846     		mov	r0, r7
 1078 0044 FFF7FEFF 		bl	prvInitialiseNewTask
 1079              	.LVL76:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 122


 802:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdPASS;
 1080              		.loc 1 802 13 view .LVU300
 1081 0048 2846     		mov	r0, r5
 1082 004a FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1083              	.LVL77:
 803:ThirdParty/FreeRTOS/tasks.c ****         }
 1084              		.loc 1 803 13 view .LVU301
 803:ThirdParty/FreeRTOS/tasks.c ****         }
 1085              		.loc 1 803 21 is_stmt 0 view .LVU302
 1086 004e 0120     		movs	r0, #1
 1087 0050 07E0     		b	.L71
 1088              	.LVL78:
 1089              	.L73:
 1090              	.LBB164:
 781:ThirdParty/FreeRTOS/tasks.c ****                 }
 1091              		.loc 1 781 21 is_stmt 1 view .LVU303
 1092 0052 4846     		mov	r0, r9
 1093              	.LVL79:
 781:ThirdParty/FreeRTOS/tasks.c ****                 }
 1094              		.loc 1 781 21 is_stmt 0 view .LVU304
 1095 0054 FFF7FEFF 		bl	vPortFree
 1096              	.LVL80:
 781:ThirdParty/FreeRTOS/tasks.c ****                 }
 1097              		.loc 1 781 21 view .LVU305
 1098              	.LBE164:
 791:ThirdParty/FreeRTOS/tasks.c ****         {
 1099              		.loc 1 791 9 is_stmt 1 view .LVU306
 807:ThirdParty/FreeRTOS/tasks.c ****         }
 1100              		.loc 1 807 21 is_stmt 0 view .LVU307
 1101 0058 4FF0FF30 		mov	r0, #-1
 1102 005c 01E0     		b	.L71
 1103              	.LVL81:
 1104              	.L74:
 807:ThirdParty/FreeRTOS/tasks.c ****         }
 1105              		.loc 1 807 21 view .LVU308
 1106 005e 4FF0FF30 		mov	r0, #-1
 1107              	.LVL82:
 810:ThirdParty/FreeRTOS/tasks.c ****     }
 1108              		.loc 1 810 9 is_stmt 1 view .LVU309
 1109              	.L71:
 811:ThirdParty/FreeRTOS/tasks.c **** 
 1110              		.loc 1 811 5 is_stmt 0 view .LVU310
 1111 0062 05B0     		add	sp, sp, #20
 1112              	.LCFI10:
 1113              		.cfi_def_cfa_offset 28
 1114              		@ sp needed
 1115 0064 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 811:ThirdParty/FreeRTOS/tasks.c **** 
 1116              		.loc 1 811 5 view .LVU311
 1117              		.cfi_endproc
 1118              	.LFE5:
 1120              		.section	.text.vTaskDelete,"ax",%progbits
 1121              		.align	1
 1122              		.global	vTaskDelete
 1123              		.syntax unified
 1124              		.thumb
 1125              		.thumb_func
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 123


 1127              	vTaskDelete:
 1128              	.LVL83:
 1129              	.LFB8:
1113:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1130              		.loc 1 1113 5 is_stmt 1 view -0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 0
 1133              		@ frame_needed = 0, uses_anonymous_args = 0
1113:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1134              		.loc 1 1113 5 is_stmt 0 view .LVU313
 1135 0000 38B5     		push	{r3, r4, r5, lr}
 1136              	.LCFI11:
 1137              		.cfi_def_cfa_offset 16
 1138              		.cfi_offset 3, -16
 1139              		.cfi_offset 4, -12
 1140              		.cfi_offset 5, -8
 1141              		.cfi_offset 14, -4
 1142 0002 0446     		mov	r4, r0
1114:ThirdParty/FreeRTOS/tasks.c **** 
 1143              		.loc 1 1114 9 is_stmt 1 view .LVU314
1116:ThirdParty/FreeRTOS/tasks.c ****         {
 1144              		.loc 1 1116 9 view .LVU315
 1145 0004 FFF7FEFF 		bl	vPortEnterCritical
 1146              	.LVL84:
1120:ThirdParty/FreeRTOS/tasks.c **** 
 1147              		.loc 1 1120 13 view .LVU316
1120:ThirdParty/FreeRTOS/tasks.c **** 
 1148              		.loc 1 1120 21 is_stmt 0 view .LVU317
 1149 0008 002C     		cmp	r4, #0
 1150 000a 38D0     		beq	.L87
 1151              	.LVL85:
 1152              	.L77:
1123:ThirdParty/FreeRTOS/tasks.c ****             {
 1153              		.loc 1 1123 13 is_stmt 1 view .LVU318
1123:ThirdParty/FreeRTOS/tasks.c ****             {
 1154              		.loc 1 1123 17 is_stmt 0 view .LVU319
 1155 000c 251D     		adds	r5, r4, #4
 1156 000e 2846     		mov	r0, r5
 1157 0010 FFF7FEFF 		bl	uxListRemove
 1158              	.LVL86:
1123:ThirdParty/FreeRTOS/tasks.c ****             {
 1159              		.loc 1 1123 15 discriminator 1 view .LVU320
 1160 0014 70B9     		cbnz	r0, .L78
1125:ThirdParty/FreeRTOS/tasks.c ****             }
 1161              		.loc 1 1125 17 is_stmt 1 view .LVU321
 1162 0016 E26A     		ldr	r2, [r4, #44]
 1163 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1164 001c 9B00     		lsls	r3, r3, #2
 1165 001e 2949     		ldr	r1, .L90
 1166 0020 CB58     		ldr	r3, [r1, r3]
 1167 0022 3BB9     		cbnz	r3, .L78
1125:ThirdParty/FreeRTOS/tasks.c ****             }
 1168              		.loc 1 1125 17 discriminator 1 view .LVU322
 1169 0024 0123     		movs	r3, #1
 1170 0026 03FA02F2 		lsl	r2, r3, r2
 1171 002a 2749     		ldr	r1, .L90+4
 1172 002c 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 124


 1173 002e 23EA0203 		bic	r3, r3, r2
 1174 0032 0B60     		str	r3, [r1]
 1175              	.L78:
1129:ThirdParty/FreeRTOS/tasks.c ****             }
 1176              		.loc 1 1129 41 view .LVU323
1133:ThirdParty/FreeRTOS/tasks.c ****             {
 1177              		.loc 1 1133 13 view .LVU324
1133:ThirdParty/FreeRTOS/tasks.c ****             {
 1178              		.loc 1 1133 17 is_stmt 0 view .LVU325
 1179 0034 A36A     		ldr	r3, [r4, #40]
1133:ThirdParty/FreeRTOS/tasks.c ****             {
 1180              		.loc 1 1133 15 view .LVU326
 1181 0036 1BB1     		cbz	r3, .L79
1135:ThirdParty/FreeRTOS/tasks.c ****             }
 1182              		.loc 1 1135 17 is_stmt 1 view .LVU327
1135:ThirdParty/FreeRTOS/tasks.c ****             }
 1183              		.loc 1 1135 26 is_stmt 0 view .LVU328
 1184 0038 04F11800 		add	r0, r4, #24
 1185 003c FFF7FEFF 		bl	uxListRemove
 1186              	.LVL87:
 1187              	.L79:
1139:ThirdParty/FreeRTOS/tasks.c ****             }
 1188              		.loc 1 1139 41 is_stmt 1 view .LVU329
1146:ThirdParty/FreeRTOS/tasks.c **** 
 1189              		.loc 1 1146 13 view .LVU330
1146:ThirdParty/FreeRTOS/tasks.c **** 
 1190              		.loc 1 1146 25 is_stmt 0 view .LVU331
 1191 0040 224A     		ldr	r2, .L90+8
 1192 0042 1368     		ldr	r3, [r2]
 1193 0044 0133     		adds	r3, r3, #1
 1194 0046 1360     		str	r3, [r2]
1148:ThirdParty/FreeRTOS/tasks.c ****             {
 1195              		.loc 1 1148 13 is_stmt 1 view .LVU332
1148:ThirdParty/FreeRTOS/tasks.c ****             {
 1196              		.loc 1 1148 23 is_stmt 0 view .LVU333
 1197 0048 214B     		ldr	r3, .L90+12
 1198 004a 1B68     		ldr	r3, [r3]
1148:ThirdParty/FreeRTOS/tasks.c ****             {
 1199              		.loc 1 1148 15 view .LVU334
 1200 004c A342     		cmp	r3, r4
 1201 004e 19D0     		beq	.L88
1175:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_DELETE( pxTCB );
 1202              		.loc 1 1175 17 is_stmt 1 view .LVU335
 1203 0050 204A     		ldr	r2, .L90+16
 1204 0052 1368     		ldr	r3, [r2]
 1205 0054 013B     		subs	r3, r3, #1
 1206 0056 1360     		str	r3, [r2]
1176:ThirdParty/FreeRTOS/tasks.c **** 
 1207              		.loc 1 1176 42 view .LVU336
1180:ThirdParty/FreeRTOS/tasks.c ****             }
 1208              		.loc 1 1180 17 view .LVU337
 1209 0058 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1210              	.LVL88:
 1211              	.L81:
1183:ThirdParty/FreeRTOS/tasks.c **** 
 1212              		.loc 1 1183 9 view .LVU338
 1213 005c FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 125


 1214              	.LVL89:
1188:ThirdParty/FreeRTOS/tasks.c ****         {
 1215              		.loc 1 1188 9 view .LVU339
1188:ThirdParty/FreeRTOS/tasks.c ****         {
 1216              		.loc 1 1188 19 is_stmt 0 view .LVU340
 1217 0060 1B4B     		ldr	r3, .L90+12
 1218 0062 1B68     		ldr	r3, [r3]
1188:ThirdParty/FreeRTOS/tasks.c ****         {
 1219              		.loc 1 1188 11 view .LVU341
 1220 0064 A342     		cmp	r3, r4
 1221 0066 02D0     		beq	.L82
1190:ThirdParty/FreeRTOS/tasks.c ****         }
 1222              		.loc 1 1190 13 is_stmt 1 view .LVU342
 1223 0068 2046     		mov	r0, r4
 1224 006a FFF7FEFF 		bl	prvDeleteTCB
 1225              	.LVL90:
 1226              	.L82:
1195:ThirdParty/FreeRTOS/tasks.c ****         {
 1227              		.loc 1 1195 9 view .LVU343
1195:ThirdParty/FreeRTOS/tasks.c ****         {
 1228              		.loc 1 1195 31 is_stmt 0 view .LVU344
 1229 006e 1A4B     		ldr	r3, .L90+20
 1230 0070 1B68     		ldr	r3, [r3]
1195:ThirdParty/FreeRTOS/tasks.c ****         {
 1231              		.loc 1 1195 11 view .LVU345
 1232 0072 1BB1     		cbz	r3, .L76
1197:ThirdParty/FreeRTOS/tasks.c ****             {
 1233              		.loc 1 1197 13 is_stmt 1 view .LVU346
1197:ThirdParty/FreeRTOS/tasks.c ****             {
 1234              		.loc 1 1197 23 is_stmt 0 view .LVU347
 1235 0074 164B     		ldr	r3, .L90+12
 1236 0076 1B68     		ldr	r3, [r3]
1197:ThirdParty/FreeRTOS/tasks.c ****             {
 1237              		.loc 1 1197 15 view .LVU348
 1238 0078 A342     		cmp	r3, r4
 1239 007a 0CD0     		beq	.L89
 1240              	.L76:
1207:ThirdParty/FreeRTOS/tasks.c **** 
 1241              		.loc 1 1207 5 view .LVU349
 1242 007c 38BD     		pop	{r3, r4, r5, pc}
 1243              	.LVL91:
 1244              	.L87:
1120:ThirdParty/FreeRTOS/tasks.c **** 
 1245              		.loc 1 1120 21 discriminator 1 view .LVU350
 1246 007e 144B     		ldr	r3, .L90+12
 1247 0080 1C68     		ldr	r4, [r3]
 1248              	.LVL92:
1120:ThirdParty/FreeRTOS/tasks.c **** 
 1249              		.loc 1 1120 21 discriminator 1 view .LVU351
 1250 0082 C3E7     		b	.L77
 1251              	.LVL93:
 1252              	.L88:
1155:ThirdParty/FreeRTOS/tasks.c **** 
 1253              		.loc 1 1155 17 is_stmt 1 view .LVU352
 1254 0084 2946     		mov	r1, r5
 1255 0086 1548     		ldr	r0, .L90+24
 1256 0088 FFF7FEFF 		bl	vListInsertEnd
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 126


 1257              	.LVL94:
1160:ThirdParty/FreeRTOS/tasks.c **** 
 1258              		.loc 1 1160 17 view .LVU353
 1259 008c 144A     		ldr	r2, .L90+28
 1260 008e 1368     		ldr	r3, [r2]
 1261 0090 0133     		adds	r3, r3, #1
 1262 0092 1360     		str	r3, [r2]
1164:ThirdParty/FreeRTOS/tasks.c **** 
 1263              		.loc 1 1164 42 view .LVU354
1171:ThirdParty/FreeRTOS/tasks.c ****             }
 1264              		.loc 1 1171 66 view .LVU355
 1265 0094 E2E7     		b	.L81
 1266              	.L89:
1199:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1267              		.loc 1 1199 17 view .LVU356
 1268 0096 134B     		ldr	r3, .L90+32
 1269 0098 1B68     		ldr	r3, [r3]
 1270 009a 43B1     		cbz	r3, .L84
1199:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1271              		.loc 1 1199 17 discriminator 1 view .LVU357
 1272              	.LBB165:
 1273              	.LBI165:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1274              		.loc 2 194 34 view .LVU358
 1275              	.LBB166:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1276              		.loc 2 196 9 view .LVU359
 1277              		.loc 2 198 9 view .LVU360
 1278              		.syntax unified
 1279              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1280 009c 4FF05003 			mov r3, #80												
 1281 00a0 83F31188 		msr basepri, r3											
 1282 00a4 BFF36F8F 		isb														
 1283 00a8 BFF34F8F 		dsb														
 1284              	
 1285              	@ 0 "" 2
 1286              		.thumb
 1287              		.syntax unified
 1288              	.L85:
 1289              	.LBE166:
 1290              	.LBE165:
1199:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1291              		.loc 1 1199 17 discriminator 3 view .LVU361
1199:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1292              		.loc 1 1199 17 discriminator 3 view .LVU362
 1293 00ac FEE7     		b	.L85
 1294              	.L84:
1199:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1295              		.loc 1 1199 58 discriminator 2 view .LVU363
1200:ThirdParty/FreeRTOS/tasks.c ****             }
 1296              		.loc 1 1200 17 view .LVU364
 1297 00ae 4FF0E023 		mov	r3, #-536813568
 1298 00b2 4FF08052 		mov	r2, #268435456
 1299 00b6 C3F8042D 		str	r2, [r3, #3332]
1200:ThirdParty/FreeRTOS/tasks.c ****             }
 1300              		.loc 1 1200 17 view .LVU365
 1301              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 127


 1302              	@ 1200 "ThirdParty/FreeRTOS/tasks.c" 1
 1303 00ba BFF34F8F 		dsb
 1304              	@ 0 "" 2
1200:ThirdParty/FreeRTOS/tasks.c ****             }
 1305              		.loc 1 1200 17 view .LVU366
 1306              	@ 1200 "ThirdParty/FreeRTOS/tasks.c" 1
 1307 00be BFF36F8F 		isb
 1308              	@ 0 "" 2
1200:ThirdParty/FreeRTOS/tasks.c ****             }
 1309              		.loc 1 1200 39 view .LVU367
1204:ThirdParty/FreeRTOS/tasks.c ****             }
 1310              		.loc 1 1204 41 view .LVU368
1207:ThirdParty/FreeRTOS/tasks.c **** 
 1311              		.loc 1 1207 5 is_stmt 0 view .LVU369
 1312              		.thumb
 1313              		.syntax unified
 1314 00c2 DBE7     		b	.L76
 1315              	.L91:
 1316              		.align	2
 1317              	.L90:
 1318 00c4 00000000 		.word	pxReadyTasksLists
 1319 00c8 00000000 		.word	uxTopReadyPriority
 1320 00cc 00000000 		.word	uxTaskNumber
 1321 00d0 00000000 		.word	pxCurrentTCB
 1322 00d4 00000000 		.word	uxCurrentNumberOfTasks
 1323 00d8 00000000 		.word	xSchedulerRunning
 1324 00dc 00000000 		.word	xTasksWaitingTermination
 1325 00e0 00000000 		.word	uxDeletedTasksWaitingCleanUp
 1326 00e4 00000000 		.word	uxSchedulerSuspended
 1327              		.cfi_endproc
 1328              	.LFE8:
 1330              		.section	.text.eTaskGetState,"ax",%progbits
 1331              		.align	1
 1332              		.global	eTaskGetState
 1333              		.syntax unified
 1334              		.thumb
 1335              		.thumb_func
 1337              	eTaskGetState:
 1338              	.LVL95:
 1339              	.LFB11:
1347:ThirdParty/FreeRTOS/tasks.c ****         eTaskState eReturn;
 1340              		.loc 1 1347 5 is_stmt 1 view -0
 1341              		.cfi_startproc
 1342              		@ args = 0, pretend = 0, frame = 0
 1343              		@ frame_needed = 0, uses_anonymous_args = 0
1347:ThirdParty/FreeRTOS/tasks.c ****         eTaskState eReturn;
 1344              		.loc 1 1347 5 is_stmt 0 view .LVU371
 1345 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1346              	.LCFI12:
 1347              		.cfi_def_cfa_offset 24
 1348              		.cfi_offset 3, -24
 1349              		.cfi_offset 4, -20
 1350              		.cfi_offset 5, -16
 1351              		.cfi_offset 6, -12
 1352              		.cfi_offset 7, -8
 1353              		.cfi_offset 14, -4
1348:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxStateList;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 128


 1354              		.loc 1 1348 9 is_stmt 1 view .LVU372
1349:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxDelayedList;
 1355              		.loc 1 1349 9 view .LVU373
1350:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxOverflowedDelayedList;
 1356              		.loc 1 1350 9 view .LVU374
1351:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
 1357              		.loc 1 1351 9 view .LVU375
1352:ThirdParty/FreeRTOS/tasks.c **** 
 1358              		.loc 1 1352 9 view .LVU376
 1359              	.LVL96:
1354:ThirdParty/FreeRTOS/tasks.c **** 
 1360              		.loc 1 1354 9 view .LVU377
 1361 0002 D0B1     		cbz	r0, .L107
 1362 0004 0446     		mov	r4, r0
1354:ThirdParty/FreeRTOS/tasks.c **** 
 1363              		.loc 1 1354 30 discriminator 2 view .LVU378
1356:ThirdParty/FreeRTOS/tasks.c ****         {
 1364              		.loc 1 1356 9 view .LVU379
1356:ThirdParty/FreeRTOS/tasks.c ****         {
 1365              		.loc 1 1356 19 is_stmt 0 view .LVU380
 1366 0006 204B     		ldr	r3, .L110
 1367 0008 1B68     		ldr	r3, [r3]
1356:ThirdParty/FreeRTOS/tasks.c ****         {
 1368              		.loc 1 1356 11 view .LVU381
 1369 000a 8342     		cmp	r3, r0
 1370 000c 31D0     		beq	.L99
1363:ThirdParty/FreeRTOS/tasks.c ****             {
 1371              		.loc 1 1363 13 is_stmt 1 view .LVU382
 1372 000e FFF7FEFF 		bl	vPortEnterCritical
 1373              	.LVL97:
1365:ThirdParty/FreeRTOS/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
 1374              		.loc 1 1365 17 view .LVU383
1365:ThirdParty/FreeRTOS/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
 1375              		.loc 1 1365 29 is_stmt 0 view .LVU384
 1376 0012 6569     		ldr	r5, [r4, #20]
 1377              	.LVL98:
1366:ThirdParty/FreeRTOS/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 1378              		.loc 1 1366 17 is_stmt 1 view .LVU385
1366:ThirdParty/FreeRTOS/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 1379              		.loc 1 1366 31 is_stmt 0 view .LVU386
 1380 0014 1D4B     		ldr	r3, .L110+4
 1381 0016 1E68     		ldr	r6, [r3]
 1382              	.LVL99:
1367:ThirdParty/FreeRTOS/tasks.c ****             }
 1383              		.loc 1 1367 17 is_stmt 1 view .LVU387
1367:ThirdParty/FreeRTOS/tasks.c ****             }
 1384              		.loc 1 1367 41 is_stmt 0 view .LVU388
 1385 0018 1D4B     		ldr	r3, .L110+8
 1386 001a 1F68     		ldr	r7, [r3]
 1387              	.LVL100:
1369:ThirdParty/FreeRTOS/tasks.c **** 
 1388              		.loc 1 1369 13 is_stmt 1 view .LVU389
 1389 001c FFF7FEFF 		bl	vPortExitCritical
 1390              	.LVL101:
1371:ThirdParty/FreeRTOS/tasks.c ****             {
 1391              		.loc 1 1371 13 view .LVU390
1371:ThirdParty/FreeRTOS/tasks.c ****             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 129


 1392              		.loc 1 1371 15 is_stmt 0 view .LVU391
 1393 0020 B542     		cmp	r5, r6
 1394 0022 28D0     		beq	.L100
1371:ThirdParty/FreeRTOS/tasks.c ****             {
 1395              		.loc 1 1371 50 discriminator 1 view .LVU392
 1396 0024 BD42     		cmp	r5, r7
 1397 0026 28D0     		beq	.L101
1379:ThirdParty/FreeRTOS/tasks.c ****                 {
 1398              		.loc 1 1379 22 is_stmt 1 view .LVU393
1379:ThirdParty/FreeRTOS/tasks.c ****                 {
 1399              		.loc 1 1379 24 is_stmt 0 view .LVU394
 1400 0028 1A4B     		ldr	r3, .L110+12
 1401 002a 9D42     		cmp	r5, r3
 1402 002c 0ED0     		beq	.L108
1420:ThirdParty/FreeRTOS/tasks.c ****                 {
 1403              		.loc 1 1420 22 is_stmt 1 view .LVU395
1420:ThirdParty/FreeRTOS/tasks.c ****                 {
 1404              		.loc 1 1420 24 is_stmt 0 view .LVU396
 1405 002e 1A4B     		ldr	r3, .L110+16
 1406 0030 9D42     		cmp	r5, r3
 1407 0032 26D0     		beq	.L104
1420:ThirdParty/FreeRTOS/tasks.c ****                 {
 1408              		.loc 1 1420 71 discriminator 1 view .LVU397
 1409 0034 DDB1     		cbz	r5, .L109
1433:ThirdParty/FreeRTOS/tasks.c ****             }
 1410              		.loc 1 1433 25 view .LVU398
 1411 0036 0120     		movs	r0, #1
 1412 0038 1CE0     		b	.L95
 1413              	.LVL102:
 1414              	.L107:
1354:ThirdParty/FreeRTOS/tasks.c **** 
 1415              		.loc 1 1354 9 is_stmt 1 discriminator 1 view .LVU399
 1416              	.LBB167:
 1417              	.LBI167:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1418              		.loc 2 194 34 view .LVU400
 1419              	.LBB168:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1420              		.loc 2 196 9 view .LVU401
 1421              		.loc 2 198 9 view .LVU402
 1422              		.syntax unified
 1423              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1424 003a 4FF05003 			mov r3, #80												
 1425 003e 83F31188 		msr basepri, r3											
 1426 0042 BFF36F8F 		isb														
 1427 0046 BFF34F8F 		dsb														
 1428              	
 1429              	@ 0 "" 2
 1430              		.thumb
 1431              		.syntax unified
 1432              	.L94:
 1433              	.LBE168:
 1434              	.LBE167:
1354:ThirdParty/FreeRTOS/tasks.c **** 
 1435              		.loc 1 1354 9 discriminator 3 view .LVU403
1354:ThirdParty/FreeRTOS/tasks.c **** 
 1436              		.loc 1 1354 9 discriminator 3 view .LVU404
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 130


 1437 004a FEE7     		b	.L94
 1438              	.LVL103:
 1439              	.L108:
1384:ThirdParty/FreeRTOS/tasks.c ****                     {
 1440              		.loc 1 1384 21 view .LVU405
1384:ThirdParty/FreeRTOS/tasks.c ****                     {
 1441              		.loc 1 1384 25 is_stmt 0 view .LVU406
 1442 004c A36A     		ldr	r3, [r4, #40]
1384:ThirdParty/FreeRTOS/tasks.c ****                     {
 1443              		.loc 1 1384 23 view .LVU407
 1444 004e 4BB1     		cbz	r3, .L102
1414:ThirdParty/FreeRTOS/tasks.c ****                     }
 1445              		.loc 1 1414 33 view .LVU408
 1446 0050 0220     		movs	r0, #2
 1447 0052 0FE0     		b	.L95
 1448              	.LVL104:
 1449              	.L98:
 1450              	.LBB169:
1399:ThirdParty/FreeRTOS/tasks.c ****                                 {
 1451              		.loc 1 1399 33 is_stmt 1 view .LVU409
1399:ThirdParty/FreeRTOS/tasks.c ****                                 {
 1452              		.loc 1 1399 57 is_stmt 0 view .LVU410
 1453 0054 E218     		adds	r2, r4, r3
 1454 0056 92F85420 		ldrb	r2, [r2, #84]	@ zero_extendqisi2
 1455 005a D2B2     		uxtb	r2, r2
1399:ThirdParty/FreeRTOS/tasks.c ****                                 {
 1456              		.loc 1 1399 35 view .LVU411
 1457 005c 012A     		cmp	r2, #1
 1458 005e 0ED0     		beq	.L103
1397:ThirdParty/FreeRTOS/tasks.c ****                             {
 1459              		.loc 1 1397 85 is_stmt 1 discriminator 2 view .LVU412
 1460 0060 0133     		adds	r3, r3, #1
 1461              	.LVL105:
1397:ThirdParty/FreeRTOS/tasks.c ****                             {
 1462              		.loc 1 1397 85 is_stmt 0 discriminator 2 view .LVU413
 1463 0062 00E0     		b	.L97
 1464              	.LVL106:
 1465              	.L102:
1397:ThirdParty/FreeRTOS/tasks.c ****                             {
 1466              		.loc 1 1397 36 view .LVU414
 1467 0064 0023     		movs	r3, #0
 1468              	.L97:
 1469              	.LVL107:
1397:ThirdParty/FreeRTOS/tasks.c ****                             {
 1470              		.loc 1 1397 43 is_stmt 1 discriminator 1 view .LVU415
 1471 0066 002B     		cmp	r3, #0
 1472 0068 F4DD     		ble	.L98
1395:ThirdParty/FreeRTOS/tasks.c **** 
 1473              		.loc 1 1395 37 is_stmt 0 view .LVU416
 1474 006a 0320     		movs	r0, #3
 1475 006c 02E0     		b	.L95
 1476              	.LVL108:
 1477              	.L109:
1395:ThirdParty/FreeRTOS/tasks.c **** 
 1478              		.loc 1 1395 37 view .LVU417
 1479              	.LBE169:
1425:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 131


 1480              		.loc 1 1425 29 view .LVU418
 1481 006e 0420     		movs	r0, #4
 1482 0070 00E0     		b	.L95
 1483              	.LVL109:
 1484              	.L99:
1359:ThirdParty/FreeRTOS/tasks.c ****         }
 1485              		.loc 1 1359 21 view .LVU419
 1486 0072 0020     		movs	r0, #0
 1487              	.LVL110:
 1488              	.L95:
1437:ThirdParty/FreeRTOS/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1489              		.loc 1 1437 9 is_stmt 1 view .LVU420
1438:ThirdParty/FreeRTOS/tasks.c **** 
 1490              		.loc 1 1438 5 is_stmt 0 view .LVU421
 1491 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1492              	.LVL111:
 1493              	.L100:
1375:ThirdParty/FreeRTOS/tasks.c ****             }
 1494              		.loc 1 1375 25 view .LVU422
 1495 0076 0220     		movs	r0, #2
 1496 0078 FCE7     		b	.L95
 1497              	.L101:
 1498 007a 0220     		movs	r0, #2
 1499 007c FAE7     		b	.L95
 1500              	.LVL112:
 1501              	.L103:
 1502              	.LBB170:
1401:ThirdParty/FreeRTOS/tasks.c ****                                     break;
 1503              		.loc 1 1401 45 view .LVU423
 1504 007e 0220     		movs	r0, #2
 1505 0080 F8E7     		b	.L95
 1506              	.LVL113:
 1507              	.L104:
1401:ThirdParty/FreeRTOS/tasks.c ****                                     break;
 1508              		.loc 1 1401 45 view .LVU424
 1509              	.LBE170:
1425:ThirdParty/FreeRTOS/tasks.c ****                 }
 1510              		.loc 1 1425 29 view .LVU425
 1511 0082 0420     		movs	r0, #4
 1512 0084 F6E7     		b	.L95
 1513              	.L111:
 1514 0086 00BF     		.align	2
 1515              	.L110:
 1516 0088 00000000 		.word	pxCurrentTCB
 1517 008c 00000000 		.word	pxDelayedTaskList
 1518 0090 00000000 		.word	pxOverflowDelayedTaskList
 1519 0094 00000000 		.word	xSuspendedTaskList
 1520 0098 00000000 		.word	xTasksWaitingTermination
 1521              		.cfi_endproc
 1522              	.LFE11:
 1524              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1525              		.align	1
 1526              		.global	uxTaskPriorityGet
 1527              		.syntax unified
 1528              		.thumb
 1529              		.thumb_func
 1531              	uxTaskPriorityGet:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 132


 1532              	.LVL114:
 1533              	.LFB12:
1446:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1534              		.loc 1 1446 5 is_stmt 1 view -0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 0
 1537              		@ frame_needed = 0, uses_anonymous_args = 0
1446:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1538              		.loc 1 1446 5 is_stmt 0 view .LVU427
 1539 0000 10B5     		push	{r4, lr}
 1540              	.LCFI13:
 1541              		.cfi_def_cfa_offset 8
 1542              		.cfi_offset 4, -8
 1543              		.cfi_offset 14, -4
 1544 0002 0446     		mov	r4, r0
1447:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
 1545              		.loc 1 1447 9 is_stmt 1 view .LVU428
1448:ThirdParty/FreeRTOS/tasks.c **** 
 1546              		.loc 1 1448 9 view .LVU429
1450:ThirdParty/FreeRTOS/tasks.c ****         {
 1547              		.loc 1 1450 9 view .LVU430
 1548 0004 FFF7FEFF 		bl	vPortEnterCritical
 1549              	.LVL115:
1454:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1550              		.loc 1 1454 13 view .LVU431
1454:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1551              		.loc 1 1454 21 is_stmt 0 view .LVU432
 1552 0008 24B1     		cbz	r4, .L115
 1553              	.LVL116:
 1554              	.L113:
1455:ThirdParty/FreeRTOS/tasks.c ****         }
 1555              		.loc 1 1455 13 is_stmt 1 view .LVU433
1455:ThirdParty/FreeRTOS/tasks.c ****         }
 1556              		.loc 1 1455 22 is_stmt 0 view .LVU434
 1557 000a E46A     		ldr	r4, [r4, #44]
 1558              	.LVL117:
1457:ThirdParty/FreeRTOS/tasks.c **** 
 1559              		.loc 1 1457 9 is_stmt 1 view .LVU435
 1560 000c FFF7FEFF 		bl	vPortExitCritical
 1561              	.LVL118:
1459:ThirdParty/FreeRTOS/tasks.c ****     }
 1562              		.loc 1 1459 9 view .LVU436
1460:ThirdParty/FreeRTOS/tasks.c **** 
 1563              		.loc 1 1460 5 is_stmt 0 view .LVU437
 1564 0010 2046     		mov	r0, r4
 1565 0012 10BD     		pop	{r4, pc}
 1566              	.LVL119:
 1567              	.L115:
1454:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1568              		.loc 1 1454 21 discriminator 1 view .LVU438
 1569 0014 014B     		ldr	r3, .L116
 1570 0016 1C68     		ldr	r4, [r3]
 1571              	.LVL120:
1454:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1572              		.loc 1 1454 21 discriminator 1 view .LVU439
 1573 0018 F7E7     		b	.L113
 1574              	.L117:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 133


 1575 001a 00BF     		.align	2
 1576              	.L116:
 1577 001c 00000000 		.word	pxCurrentTCB
 1578              		.cfi_endproc
 1579              	.LFE12:
 1581              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1582              		.align	1
 1583              		.global	uxTaskPriorityGetFromISR
 1584              		.syntax unified
 1585              		.thumb
 1586              		.thumb_func
 1588              	uxTaskPriorityGetFromISR:
 1589              	.LVL121:
 1590              	.LFB13:
1468:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1591              		.loc 1 1468 5 is_stmt 1 view -0
 1592              		.cfi_startproc
 1593              		@ args = 0, pretend = 0, frame = 0
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
1468:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1595              		.loc 1 1468 5 is_stmt 0 view .LVU441
 1596 0000 10B5     		push	{r4, lr}
 1597              	.LCFI14:
 1598              		.cfi_def_cfa_offset 8
 1599              		.cfi_offset 4, -8
 1600              		.cfi_offset 14, -4
 1601 0002 0446     		mov	r4, r0
1469:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn, uxSavedInterruptState;
 1602              		.loc 1 1469 9 is_stmt 1 view .LVU442
1470:ThirdParty/FreeRTOS/tasks.c **** 
 1603              		.loc 1 1470 9 view .LVU443
1488:ThirdParty/FreeRTOS/tasks.c **** 
 1604              		.loc 1 1488 9 view .LVU444
 1605 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1606              	.LVL122:
1490:ThirdParty/FreeRTOS/tasks.c ****         {
 1607              		.loc 1 1490 9 view .LVU445
 1608              	.LBB171:
 1609              	.LBI171:
 199:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 200:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %0, %1												\n"\
 201:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %0											\n"\
 202:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 203:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 204:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 205:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 206:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 207:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 208:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 209:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1610              		.loc 2 210 38 view .LVU446
 1611              	.LBB172:
 211:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1612              		.loc 2 212 9 view .LVU447
 213:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 134


 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1613              		.loc 2 214 9 view .LVU448
 1614              		.syntax unified
 1615              	@ 214 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1616 0008 EFF31183 			mrs r3, basepri											
 1617 000c 4FF05002 		mov r2, #80												
 1618 0010 82F31188 		msr basepri, r2											
 1619 0014 BFF36F8F 		isb														
 1620 0018 BFF34F8F 		dsb														
 1621              	
 1622              	@ 0 "" 2
 1623              	.LVL123:
 215:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 216:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mrs %0, basepri											\n"\
 217:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %1, %2												\n"\
 218:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %1											\n"\
 219:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 220:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 221:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 222:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 223:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 224:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 225:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * warnings. */
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return ulOriginalBASEPRI;
 1624              		.loc 2 226 9 view .LVU449
 1625              		.loc 2 226 9 is_stmt 0 view .LVU450
 1626              		.thumb
 1627              		.syntax unified
 1628              	.LBE172:
 1629              	.LBE171:
1494:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1630              		.loc 1 1494 13 is_stmt 1 view .LVU451
1494:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1631              		.loc 1 1494 21 is_stmt 0 view .LVU452
 1632 001c 1CB1     		cbz	r4, .L121
 1633              	.LVL124:
 1634              	.L119:
1495:ThirdParty/FreeRTOS/tasks.c ****         }
 1635              		.loc 1 1495 13 is_stmt 1 view .LVU453
1495:ThirdParty/FreeRTOS/tasks.c ****         }
 1636              		.loc 1 1495 22 is_stmt 0 view .LVU454
 1637 001e E06A     		ldr	r0, [r4, #44]
 1638              	.LVL125:
1497:ThirdParty/FreeRTOS/tasks.c **** 
 1639              		.loc 1 1497 9 is_stmt 1 view .LVU455
 1640              	.LBB173:
 1641              	.LBI173:
 227:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 228:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 229:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1642              		.loc 2 230 34 view .LVU456
 1643              	.LBB174:
 231:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 232:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1644              		.loc 2 232 9 view .LVU457
 1645              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 135


 1646              	@ 232 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1647 0020 83F31188 			msr basepri, r3	
 1648              	@ 0 "" 2
 1649              		.thumb
 1650              		.syntax unified
 1651              	.LBE174:
 1652              	.LBE173:
1499:ThirdParty/FreeRTOS/tasks.c ****     }
 1653              		.loc 1 1499 9 view .LVU458
1500:ThirdParty/FreeRTOS/tasks.c **** 
 1654              		.loc 1 1500 5 is_stmt 0 view .LVU459
 1655 0024 10BD     		pop	{r4, pc}
 1656              	.LVL126:
 1657              	.L121:
1494:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1658              		.loc 1 1494 21 discriminator 1 view .LVU460
 1659 0026 014A     		ldr	r2, .L122
 1660 0028 1468     		ldr	r4, [r2]
 1661              	.LVL127:
1494:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1662              		.loc 1 1494 21 discriminator 1 view .LVU461
 1663 002a F8E7     		b	.L119
 1664              	.L123:
 1665              		.align	2
 1666              	.L122:
 1667 002c 00000000 		.word	pxCurrentTCB
 1668              		.cfi_endproc
 1669              	.LFE13:
 1671              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1672              		.align	1
 1673              		.global	vTaskPrioritySet
 1674              		.syntax unified
 1675              		.thumb
 1676              		.thumb_func
 1678              	vTaskPrioritySet:
 1679              	.LVL128:
 1680              	.LFB14:
1509:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1681              		.loc 1 1509 5 is_stmt 1 view -0
 1682              		.cfi_startproc
 1683              		@ args = 0, pretend = 0, frame = 0
 1684              		@ frame_needed = 0, uses_anonymous_args = 0
1509:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1685              		.loc 1 1509 5 is_stmt 0 view .LVU463
 1686 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1687              	.LCFI15:
 1688              		.cfi_def_cfa_offset 24
 1689              		.cfi_offset 3, -24
 1690              		.cfi_offset 4, -20
 1691              		.cfi_offset 5, -16
 1692              		.cfi_offset 6, -12
 1693              		.cfi_offset 7, -8
 1694              		.cfi_offset 14, -4
1510:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1695              		.loc 1 1510 9 is_stmt 1 view .LVU464
1511:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 1696              		.loc 1 1511 9 view .LVU465
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 136


1512:ThirdParty/FreeRTOS/tasks.c **** 
 1697              		.loc 1 1512 9 view .LVU466
 1698              	.LVL129:
1514:ThirdParty/FreeRTOS/tasks.c **** 
 1699              		.loc 1 1514 9 view .LVU467
 1700 0002 0429     		cmp	r1, #4
 1701 0004 08D9     		bls	.L125
1514:ThirdParty/FreeRTOS/tasks.c **** 
 1702              		.loc 1 1514 9 discriminator 1 view .LVU468
 1703              	.LBB175:
 1704              	.LBI175:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1705              		.loc 2 194 34 view .LVU469
 1706              	.LBB176:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1707              		.loc 2 196 9 view .LVU470
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1708              		.loc 2 198 9 view .LVU471
 1709              		.syntax unified
 1710              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1711 0006 4FF05003 			mov r3, #80												
 1712 000a 83F31188 		msr basepri, r3											
 1713 000e BFF36F8F 		isb														
 1714 0012 BFF34F8F 		dsb														
 1715              	
 1716              	@ 0 "" 2
 1717              		.thumb
 1718              		.syntax unified
 1719              	.L126:
 1720              	.LBE176:
 1721              	.LBE175:
1514:ThirdParty/FreeRTOS/tasks.c **** 
 1722              		.loc 1 1514 9 discriminator 3 view .LVU472
1514:ThirdParty/FreeRTOS/tasks.c **** 
 1723              		.loc 1 1514 9 discriminator 3 view .LVU473
 1724 0016 FEE7     		b	.L126
 1725              	.L125:
 1726 0018 0446     		mov	r4, r0
 1727 001a 0D46     		mov	r5, r1
1514:ThirdParty/FreeRTOS/tasks.c **** 
 1728              		.loc 1 1514 61 discriminator 2 view .LVU474
1517:ThirdParty/FreeRTOS/tasks.c ****         {
 1729              		.loc 1 1517 9 view .LVU475
 1730              	.LVL130:
1523:ThirdParty/FreeRTOS/tasks.c ****         }
 1731              		.loc 1 1523 37 view .LVU476
1526:ThirdParty/FreeRTOS/tasks.c ****         {
 1732              		.loc 1 1526 9 view .LVU477
 1733 001c FFF7FEFF 		bl	vPortEnterCritical
 1734              	.LVL131:
1530:ThirdParty/FreeRTOS/tasks.c **** 
 1735              		.loc 1 1530 13 view .LVU478
1530:ThirdParty/FreeRTOS/tasks.c **** 
 1736              		.loc 1 1530 21 is_stmt 0 view .LVU479
 1737 0020 74B1     		cbz	r4, .L139
 1738              	.LVL132:
 1739              	.L127:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 137


1532:ThirdParty/FreeRTOS/tasks.c **** 
 1740              		.loc 1 1532 59 is_stmt 1 view .LVU480
1536:ThirdParty/FreeRTOS/tasks.c ****             }
 1741              		.loc 1 1536 17 view .LVU481
1536:ThirdParty/FreeRTOS/tasks.c ****             }
 1742              		.loc 1 1536 39 is_stmt 0 view .LVU482
 1743 0022 A36C     		ldr	r3, [r4, #72]
 1744              	.LVL133:
1544:ThirdParty/FreeRTOS/tasks.c ****             {
 1745              		.loc 1 1544 13 is_stmt 1 view .LVU483
1544:ThirdParty/FreeRTOS/tasks.c ****             {
 1746              		.loc 1 1544 15 is_stmt 0 view .LVU484
 1747 0024 9D42     		cmp	r5, r3
 1748 0026 30D0     		beq	.L128
1548:ThirdParty/FreeRTOS/tasks.c ****                 {
 1749              		.loc 1 1548 17 is_stmt 1 view .LVU485
1548:ThirdParty/FreeRTOS/tasks.c ****                 {
 1750              		.loc 1 1548 19 is_stmt 0 view .LVU486
 1751 0028 0DD9     		bls	.L129
1550:ThirdParty/FreeRTOS/tasks.c ****                     {
 1752              		.loc 1 1550 21 is_stmt 1 view .LVU487
1550:ThirdParty/FreeRTOS/tasks.c ****                     {
 1753              		.loc 1 1550 31 is_stmt 0 view .LVU488
 1754 002a 324A     		ldr	r2, .L142
 1755 002c 1268     		ldr	r2, [r2]
1550:ThirdParty/FreeRTOS/tasks.c ****                     {
 1756              		.loc 1 1550 23 view .LVU489
 1757 002e A242     		cmp	r2, r4
 1758 0030 2ED0     		beq	.L135
1555:ThirdParty/FreeRTOS/tasks.c ****                         {
 1759              		.loc 1 1555 25 is_stmt 1 view .LVU490
1555:ThirdParty/FreeRTOS/tasks.c ****                         {
 1760              		.loc 1 1555 58 is_stmt 0 view .LVU491
 1761 0032 304A     		ldr	r2, .L142
 1762 0034 1268     		ldr	r2, [r2]
 1763 0036 D26A     		ldr	r2, [r2, #44]
1555:ThirdParty/FreeRTOS/tasks.c ****                         {
 1764              		.loc 1 1555 27 view .LVU492
 1765 0038 AA42     		cmp	r2, r5
 1766 003a 2BD9     		bls	.L136
1512:ThirdParty/FreeRTOS/tasks.c **** 
 1767              		.loc 1 1512 20 view .LVU493
 1768 003c 0027     		movs	r7, #0
 1769 003e 07E0     		b	.L130
 1770              	.LVL134:
 1771              	.L139:
1530:ThirdParty/FreeRTOS/tasks.c **** 
 1772              		.loc 1 1530 21 discriminator 1 view .LVU494
 1773 0040 2C4B     		ldr	r3, .L142
 1774 0042 1C68     		ldr	r4, [r3]
 1775              	.LVL135:
1530:ThirdParty/FreeRTOS/tasks.c **** 
 1776              		.loc 1 1530 21 discriminator 1 view .LVU495
 1777 0044 EDE7     		b	.L127
 1778              	.LVL136:
 1779              	.L129:
1571:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 138


 1780              		.loc 1 1571 22 is_stmt 1 view .LVU496
1571:ThirdParty/FreeRTOS/tasks.c ****                 {
 1781              		.loc 1 1571 32 is_stmt 0 view .LVU497
 1782 0046 2B4A     		ldr	r2, .L142
 1783 0048 1268     		ldr	r2, [r2]
1571:ThirdParty/FreeRTOS/tasks.c ****                 {
 1784              		.loc 1 1571 24 view .LVU498
 1785 004a A242     		cmp	r2, r4
 1786 004c 24D0     		beq	.L137
1512:ThirdParty/FreeRTOS/tasks.c **** 
 1787              		.loc 1 1512 20 view .LVU499
 1788 004e 0027     		movs	r7, #0
 1789              	.L130:
 1790              	.LVL137:
1583:ThirdParty/FreeRTOS/tasks.c **** 
 1791              		.loc 1 1583 17 is_stmt 1 view .LVU500
1588:ThirdParty/FreeRTOS/tasks.c **** 
 1792              		.loc 1 1588 17 view .LVU501
1588:ThirdParty/FreeRTOS/tasks.c **** 
 1793              		.loc 1 1588 39 is_stmt 0 view .LVU502
 1794 0050 E66A     		ldr	r6, [r4, #44]
 1795              	.LVL138:
1594:ThirdParty/FreeRTOS/tasks.c ****                     {
 1796              		.loc 1 1594 21 is_stmt 1 view .LVU503
1594:ThirdParty/FreeRTOS/tasks.c ****                     {
 1797              		.loc 1 1594 23 is_stmt 0 view .LVU504
 1798 0052 B342     		cmp	r3, r6
 1799 0054 22D0     		beq	.L140
 1800              	.L131:
1600:ThirdParty/FreeRTOS/tasks.c ****                     }
 1801              		.loc 1 1600 49 is_stmt 1 view .LVU505
1604:ThirdParty/FreeRTOS/tasks.c ****                 }
 1802              		.loc 1 1604 21 view .LVU506
1604:ThirdParty/FreeRTOS/tasks.c ****                 }
 1803              		.loc 1 1604 43 is_stmt 0 view .LVU507
 1804 0056 A564     		str	r5, [r4, #72]
1614:ThirdParty/FreeRTOS/tasks.c ****                 {
 1805              		.loc 1 1614 17 is_stmt 1 view .LVU508
1614:ThirdParty/FreeRTOS/tasks.c ****                 {
 1806              		.loc 1 1614 23 is_stmt 0 view .LVU509
 1807 0058 A369     		ldr	r3, [r4, #24]
 1808              	.LVL139:
1614:ThirdParty/FreeRTOS/tasks.c ****                 {
 1809              		.loc 1 1614 19 view .LVU510
 1810 005a 002B     		cmp	r3, #0
 1811 005c 02DB     		blt	.L132
1616:ThirdParty/FreeRTOS/tasks.c ****                 }
 1812              		.loc 1 1616 21 is_stmt 1 view .LVU511
 1813 005e C5F10505 		rsb	r5, r5, #5
 1814              	.LVL140:
1616:ThirdParty/FreeRTOS/tasks.c ****                 }
 1815              		.loc 1 1616 21 is_stmt 0 view .LVU512
 1816 0062 A561     		str	r5, [r4, #24]
 1817              	.L132:
1620:ThirdParty/FreeRTOS/tasks.c ****                 }
 1818              		.loc 1 1620 45 is_stmt 1 view .LVU513
1627:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 139


 1819              		.loc 1 1627 17 view .LVU514
1627:ThirdParty/FreeRTOS/tasks.c ****                 {
 1820              		.loc 1 1627 21 is_stmt 0 view .LVU515
 1821 0064 6169     		ldr	r1, [r4, #20]
 1822 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1823 006a 234B     		ldr	r3, .L142+4
 1824 006c 03EB8203 		add	r3, r3, r2, lsl #2
1627:ThirdParty/FreeRTOS/tasks.c ****                 {
 1825              		.loc 1 1627 19 view .LVU516
 1826 0070 9942     		cmp	r1, r3
 1827 0072 15D0     		beq	.L141
 1828              	.LVL141:
 1829              	.L133:
1648:ThirdParty/FreeRTOS/tasks.c ****                 }
 1830              		.loc 1 1648 45 is_stmt 1 view .LVU517
1651:ThirdParty/FreeRTOS/tasks.c ****                 {
 1831              		.loc 1 1651 17 view .LVU518
1651:ThirdParty/FreeRTOS/tasks.c ****                 {
 1832              		.loc 1 1651 19 is_stmt 0 view .LVU519
 1833 0074 4FB1     		cbz	r7, .L128
1653:ThirdParty/FreeRTOS/tasks.c ****                 }
 1834              		.loc 1 1653 21 is_stmt 1 view .LVU520
 1835 0076 4FF0E023 		mov	r3, #-536813568
 1836 007a 4FF08052 		mov	r2, #268435456
 1837 007e C3F8042D 		str	r2, [r3, #3332]
1653:ThirdParty/FreeRTOS/tasks.c ****                 }
 1838              		.loc 1 1653 21 view .LVU521
 1839              		.syntax unified
 1840              	@ 1653 "ThirdParty/FreeRTOS/tasks.c" 1
 1841 0082 BFF34F8F 		dsb
 1842              	@ 0 "" 2
1653:ThirdParty/FreeRTOS/tasks.c ****                 }
 1843              		.loc 1 1653 21 view .LVU522
 1844              	@ 1653 "ThirdParty/FreeRTOS/tasks.c" 1
 1845 0086 BFF36F8F 		isb
 1846              	@ 0 "" 2
1653:ThirdParty/FreeRTOS/tasks.c ****                 }
 1847              		.loc 1 1653 52 view .LVU523
 1848              	.LVL142:
 1849              		.thumb
 1850              		.syntax unified
 1851              	.L128:
1657:ThirdParty/FreeRTOS/tasks.c ****                 }
 1852              		.loc 1 1657 45 view .LVU524
1662:ThirdParty/FreeRTOS/tasks.c ****             }
 1853              		.loc 1 1662 17 view .LVU525
1665:ThirdParty/FreeRTOS/tasks.c ****     }
 1854              		.loc 1 1665 9 view .LVU526
 1855 008a FFF7FEFF 		bl	vPortExitCritical
 1856              	.LVL143:
1666:ThirdParty/FreeRTOS/tasks.c **** 
 1857              		.loc 1 1666 5 is_stmt 0 view .LVU527
 1858 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1859              	.LVL144:
 1860              	.L135:
1512:ThirdParty/FreeRTOS/tasks.c **** 
 1861              		.loc 1 1512 20 view .LVU528
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 140


 1862 0090 0027     		movs	r7, #0
 1863 0092 DDE7     		b	.L130
 1864              	.L136:
1557:ThirdParty/FreeRTOS/tasks.c ****                         }
 1865              		.loc 1 1557 44 view .LVU529
 1866 0094 0127     		movs	r7, #1
 1867 0096 DBE7     		b	.L130
 1868              	.L137:
1576:ThirdParty/FreeRTOS/tasks.c ****                 }
 1869              		.loc 1 1576 36 view .LVU530
 1870 0098 0127     		movs	r7, #1
 1871 009a D9E7     		b	.L130
 1872              	.LVL145:
 1873              	.L140:
1596:ThirdParty/FreeRTOS/tasks.c ****                     }
 1874              		.loc 1 1596 25 is_stmt 1 view .LVU531
1596:ThirdParty/FreeRTOS/tasks.c ****                     }
 1875              		.loc 1 1596 43 is_stmt 0 view .LVU532
 1876 009c E562     		str	r5, [r4, #44]
 1877 009e DAE7     		b	.L131
 1878              	.LVL146:
 1879              	.L141:
1632:ThirdParty/FreeRTOS/tasks.c ****                     {
 1880              		.loc 1 1632 21 is_stmt 1 view .LVU533
1632:ThirdParty/FreeRTOS/tasks.c ****                     {
 1881              		.loc 1 1632 25 is_stmt 0 view .LVU534
 1882 00a0 251D     		adds	r5, r4, #4
 1883 00a2 2846     		mov	r0, r5
 1884 00a4 FFF7FEFF 		bl	uxListRemove
 1885              	.LVL147:
1632:ThirdParty/FreeRTOS/tasks.c ****                     {
 1886              		.loc 1 1632 23 discriminator 1 view .LVU535
 1887 00a8 30B9     		cbnz	r0, .L134
1637:ThirdParty/FreeRTOS/tasks.c ****                     }
 1888              		.loc 1 1637 25 is_stmt 1 view .LVU536
 1889 00aa 0122     		movs	r2, #1
 1890 00ac B240     		lsls	r2, r2, r6
 1891 00ae 1349     		ldr	r1, .L142+8
 1892 00b0 0B68     		ldr	r3, [r1]
 1893 00b2 23EA0203 		bic	r3, r3, r2
 1894 00b6 0B60     		str	r3, [r1]
 1895              	.L134:
1641:ThirdParty/FreeRTOS/tasks.c ****                     }
 1896              		.loc 1 1641 49 view .LVU537
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1897              		.loc 1 1644 21 view .LVU538
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1898              		.loc 1 1644 21 view .LVU539
 1899 00b8 E36A     		ldr	r3, [r4, #44]
 1900 00ba 0122     		movs	r2, #1
 1901 00bc 9A40     		lsls	r2, r2, r3
 1902 00be 0F49     		ldr	r1, .L142+8
 1903 00c0 0868     		ldr	r0, [r1]
 1904 00c2 0243     		orrs	r2, r2, r0
 1905 00c4 0A60     		str	r2, [r1]
 1906              	.LBB177:
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 141


 1907              		.loc 1 1644 21 view .LVU540
 1908 00c6 0C4A     		ldr	r2, .L142+4
 1909 00c8 03EB8303 		add	r3, r3, r3, lsl #2
 1910 00cc 02EB8303 		add	r3, r2, r3, lsl #2
 1911 00d0 5B68     		ldr	r3, [r3, #4]
 1912              	.LVL148:
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1913              		.loc 1 1644 21 view .LVU541
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1914              		.loc 1 1644 21 view .LVU542
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1915              		.loc 1 1644 21 view .LVU543
 1916 00d2 A360     		str	r3, [r4, #8]
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1917              		.loc 1 1644 21 view .LVU544
 1918 00d4 9968     		ldr	r1, [r3, #8]
 1919 00d6 E160     		str	r1, [r4, #12]
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1920              		.loc 1 1644 21 view .LVU545
 1921 00d8 4D60     		str	r5, [r1, #4]
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1922              		.loc 1 1644 21 view .LVU546
 1923 00da 9D60     		str	r5, [r3, #8]
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1924              		.loc 1 1644 21 view .LVU547
 1925 00dc E36A     		ldr	r3, [r4, #44]
 1926              	.LVL149:
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1927              		.loc 1 1644 21 is_stmt 0 view .LVU548
 1928 00de 03EB8301 		add	r1, r3, r3, lsl #2
 1929 00e2 8800     		lsls	r0, r1, #2
 1930 00e4 02EB8101 		add	r1, r2, r1, lsl #2
 1931 00e8 6161     		str	r1, [r4, #20]
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1932              		.loc 1 1644 21 is_stmt 1 view .LVU549
 1933 00ea 1158     		ldr	r1, [r2, r0]
 1934 00ec 0131     		adds	r1, r1, #1
 1935 00ee 1150     		str	r1, [r2, r0]
 1936              	.LBE177:
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1937              		.loc 1 1644 21 view .LVU550
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1938              		.loc 1 1644 51 view .LVU551
 1939 00f0 C0E7     		b	.L133
 1940              	.L143:
 1941 00f2 00BF     		.align	2
 1942              	.L142:
 1943 00f4 00000000 		.word	pxCurrentTCB
 1944 00f8 00000000 		.word	pxReadyTasksLists
 1945 00fc 00000000 		.word	uxTopReadyPriority
 1946              		.cfi_endproc
 1947              	.LFE14:
 1949              		.section	.text.vTaskResume,"ax",%progbits
 1950              		.align	1
 1951              		.global	vTaskResume
 1952              		.syntax unified
 1953              		.thumb
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 142


 1954              		.thumb_func
 1956              	vTaskResume:
 1957              	.LVL150:
 1958              	.LFB17:
1826:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1959              		.loc 1 1826 5 view -0
 1960              		.cfi_startproc
 1961              		@ args = 0, pretend = 0, frame = 0
 1962              		@ frame_needed = 0, uses_anonymous_args = 0
1826:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1963              		.loc 1 1826 5 is_stmt 0 view .LVU553
 1964 0000 38B5     		push	{r3, r4, r5, lr}
 1965              	.LCFI16:
 1966              		.cfi_def_cfa_offset 16
 1967              		.cfi_offset 3, -16
 1968              		.cfi_offset 4, -12
 1969              		.cfi_offset 5, -8
 1970              		.cfi_offset 14, -4
1827:ThirdParty/FreeRTOS/tasks.c **** 
 1971              		.loc 1 1827 9 is_stmt 1 view .LVU554
 1972              	.LVL151:
1830:ThirdParty/FreeRTOS/tasks.c **** 
 1973              		.loc 1 1830 9 view .LVU555
 1974 0002 68B1     		cbz	r0, .L150
 1975 0004 0446     		mov	r4, r0
1830:ThirdParty/FreeRTOS/tasks.c **** 
 1976              		.loc 1 1830 38 discriminator 2 view .LVU556
1834:ThirdParty/FreeRTOS/tasks.c ****         {
 1977              		.loc 1 1834 9 view .LVU557
1834:ThirdParty/FreeRTOS/tasks.c ****         {
 1978              		.loc 1 1834 21 is_stmt 0 view .LVU558
 1979 0006 234B     		ldr	r3, .L152
 1980 0008 1B68     		ldr	r3, [r3]
1834:ThirdParty/FreeRTOS/tasks.c ****         {
 1981              		.loc 1 1834 11 view .LVU559
 1982 000a 8342     		cmp	r3, r0
 1983 000c 07D0     		beq	.L144
1836:ThirdParty/FreeRTOS/tasks.c ****             {
 1984              		.loc 1 1836 13 is_stmt 1 view .LVU560
 1985 000e FFF7FEFF 		bl	vPortEnterCritical
 1986              	.LVL152:
1838:ThirdParty/FreeRTOS/tasks.c ****                 {
 1987              		.loc 1 1838 17 view .LVU561
1838:ThirdParty/FreeRTOS/tasks.c ****                 {
 1988              		.loc 1 1838 21 is_stmt 0 view .LVU562
 1989 0012 2046     		mov	r0, r4
 1990 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1991              	.LVL153:
1838:ThirdParty/FreeRTOS/tasks.c ****                 {
 1992              		.loc 1 1838 19 discriminator 1 view .LVU563
 1993 0018 58B9     		cbnz	r0, .L151
 1994              	.L148:
1862:ThirdParty/FreeRTOS/tasks.c ****                 }
 1995              		.loc 1 1862 45 is_stmt 1 view .LVU564
1865:ThirdParty/FreeRTOS/tasks.c ****         }
 1996              		.loc 1 1865 13 view .LVU565
 1997 001a FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 143


 1998              	.LVL154:
1869:ThirdParty/FreeRTOS/tasks.c ****         }
 1999              		.loc 1 1869 37 view .LVU566
 2000              	.L144:
1871:ThirdParty/FreeRTOS/tasks.c **** 
 2001              		.loc 1 1871 5 is_stmt 0 view .LVU567
 2002 001e 38BD     		pop	{r3, r4, r5, pc}
 2003              	.LVL155:
 2004              	.L150:
1830:ThirdParty/FreeRTOS/tasks.c **** 
 2005              		.loc 1 1830 9 is_stmt 1 discriminator 1 view .LVU568
 2006              	.LBB178:
 2007              	.LBI178:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2008              		.loc 2 194 34 view .LVU569
 2009              	.LBB179:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2010              		.loc 2 196 9 view .LVU570
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2011              		.loc 2 198 9 view .LVU571
 2012              		.syntax unified
 2013              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2014 0020 4FF05003 			mov r3, #80												
 2015 0024 83F31188 		msr basepri, r3											
 2016 0028 BFF36F8F 		isb														
 2017 002c BFF34F8F 		dsb														
 2018              	
 2019              	@ 0 "" 2
 2020              		.thumb
 2021              		.syntax unified
 2022              	.L146:
 2023              	.LBE179:
 2024              	.LBE178:
1830:ThirdParty/FreeRTOS/tasks.c **** 
 2025              		.loc 1 1830 9 discriminator 3 view .LVU572
1830:ThirdParty/FreeRTOS/tasks.c **** 
 2026              		.loc 1 1830 9 discriminator 3 view .LVU573
 2027 0030 FEE7     		b	.L146
 2028              	.LVL156:
 2029              	.L151:
1840:ThirdParty/FreeRTOS/tasks.c **** 
 2030              		.loc 1 1840 46 view .LVU574
1844:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2031              		.loc 1 1844 21 view .LVU575
1844:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2032              		.loc 1 1844 30 is_stmt 0 view .LVU576
 2033 0032 251D     		adds	r5, r4, #4
 2034 0034 2846     		mov	r0, r5
 2035 0036 FFF7FEFF 		bl	uxListRemove
 2036              	.LVL157:
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2037              		.loc 1 1845 21 is_stmt 1 view .LVU577
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2038              		.loc 1 1845 21 view .LVU578
 2039 003a E36A     		ldr	r3, [r4, #44]
 2040 003c 0122     		movs	r2, #1
 2041 003e 9A40     		lsls	r2, r2, r3
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 144


 2042 0040 1549     		ldr	r1, .L152+4
 2043 0042 0868     		ldr	r0, [r1]
 2044 0044 0243     		orrs	r2, r2, r0
 2045 0046 0A60     		str	r2, [r1]
 2046              	.LBB180:
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2047              		.loc 1 1845 21 view .LVU579
 2048 0048 144A     		ldr	r2, .L152+8
 2049 004a 03EB8303 		add	r3, r3, r3, lsl #2
 2050 004e 02EB8303 		add	r3, r2, r3, lsl #2
 2051 0052 5B68     		ldr	r3, [r3, #4]
 2052              	.LVL158:
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2053              		.loc 1 1845 21 view .LVU580
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2054              		.loc 1 1845 21 view .LVU581
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2055              		.loc 1 1845 21 view .LVU582
 2056 0054 A360     		str	r3, [r4, #8]
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2057              		.loc 1 1845 21 view .LVU583
 2058 0056 9968     		ldr	r1, [r3, #8]
 2059 0058 E160     		str	r1, [r4, #12]
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2060              		.loc 1 1845 21 view .LVU584
 2061 005a 4D60     		str	r5, [r1, #4]
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2062              		.loc 1 1845 21 view .LVU585
 2063 005c 9D60     		str	r5, [r3, #8]
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2064              		.loc 1 1845 21 view .LVU586
 2065 005e E36A     		ldr	r3, [r4, #44]
 2066              	.LVL159:
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2067              		.loc 1 1845 21 is_stmt 0 view .LVU587
 2068 0060 03EB8301 		add	r1, r3, r3, lsl #2
 2069 0064 8800     		lsls	r0, r1, #2
 2070 0066 02EB8101 		add	r1, r2, r1, lsl #2
 2071 006a 6161     		str	r1, [r4, #20]
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2072              		.loc 1 1845 21 is_stmt 1 view .LVU588
 2073 006c 1158     		ldr	r1, [r2, r0]
 2074 006e 0131     		adds	r1, r1, #1
 2075 0070 1150     		str	r1, [r2, r0]
 2076              	.LBE180:
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2077              		.loc 1 1845 21 view .LVU589
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2078              		.loc 1 1845 51 view .LVU590
1848:ThirdParty/FreeRTOS/tasks.c ****                     {
 2079              		.loc 1 1848 21 view .LVU591
1848:ThirdParty/FreeRTOS/tasks.c ****                     {
 2080              		.loc 1 1848 30 is_stmt 0 view .LVU592
 2081 0072 E26A     		ldr	r2, [r4, #44]
1848:ThirdParty/FreeRTOS/tasks.c ****                     {
 2082              		.loc 1 1848 58 view .LVU593
 2083 0074 074B     		ldr	r3, .L152
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 145


 2084 0076 1B68     		ldr	r3, [r3]
 2085 0078 DB6A     		ldr	r3, [r3, #44]
1848:ThirdParty/FreeRTOS/tasks.c ****                     {
 2086              		.loc 1 1848 23 view .LVU594
 2087 007a 9A42     		cmp	r2, r3
 2088 007c CDD3     		bcc	.L148
1853:ThirdParty/FreeRTOS/tasks.c ****                     }
 2089              		.loc 1 1853 25 is_stmt 1 view .LVU595
 2090 007e 4FF0E023 		mov	r3, #-536813568
 2091 0082 4FF08052 		mov	r2, #268435456
 2092 0086 C3F8042D 		str	r2, [r3, #3332]
1853:ThirdParty/FreeRTOS/tasks.c ****                     }
 2093              		.loc 1 1853 25 view .LVU596
 2094              		.syntax unified
 2095              	@ 1853 "ThirdParty/FreeRTOS/tasks.c" 1
 2096 008a BFF34F8F 		dsb
 2097              	@ 0 "" 2
1853:ThirdParty/FreeRTOS/tasks.c ****                     }
 2098              		.loc 1 1853 25 view .LVU597
 2099              	@ 1853 "ThirdParty/FreeRTOS/tasks.c" 1
 2100 008e BFF36F8F 		isb
 2101              	@ 0 "" 2
1853:ThirdParty/FreeRTOS/tasks.c ****                     }
 2102              		.loc 1 1853 56 view .LVU598
 2103              		.thumb
 2104              		.syntax unified
 2105 0092 C2E7     		b	.L148
 2106              	.L153:
 2107              		.align	2
 2108              	.L152:
 2109 0094 00000000 		.word	pxCurrentTCB
 2110 0098 00000000 		.word	uxTopReadyPriority
 2111 009c 00000000 		.word	pxReadyTasksLists
 2112              		.cfi_endproc
 2113              	.LFE17:
 2115              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2116              		.align	1
 2117              		.global	xTaskResumeFromISR
 2118              		.syntax unified
 2119              		.thumb
 2120              		.thumb_func
 2122              	xTaskResumeFromISR:
 2123              	.LVL160:
 2124              	.LFB18:
1880:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 2125              		.loc 1 1880 5 view -0
 2126              		.cfi_startproc
 2127              		@ args = 0, pretend = 0, frame = 0
 2128              		@ frame_needed = 0, uses_anonymous_args = 0
1880:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 2129              		.loc 1 1880 5 is_stmt 0 view .LVU600
 2130 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2131              	.LCFI17:
 2132              		.cfi_def_cfa_offset 24
 2133              		.cfi_offset 3, -24
 2134              		.cfi_offset 4, -20
 2135              		.cfi_offset 5, -16
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 146


 2136              		.cfi_offset 6, -12
 2137              		.cfi_offset 7, -8
 2138              		.cfi_offset 14, -4
1881:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 2139              		.loc 1 1881 9 is_stmt 1 view .LVU601
 2140              	.LVL161:
1882:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 2141              		.loc 1 1882 9 view .LVU602
1883:ThirdParty/FreeRTOS/tasks.c **** 
 2142              		.loc 1 1883 9 view .LVU603
1885:ThirdParty/FreeRTOS/tasks.c **** 
 2143              		.loc 1 1885 9 view .LVU604
 2144 0002 0028     		cmp	r0, #0
 2145 0004 43D0     		beq	.L162
 2146 0006 0446     		mov	r4, r0
1885:ThirdParty/FreeRTOS/tasks.c **** 
 2147              		.loc 1 1885 38 discriminator 2 view .LVU605
1903:ThirdParty/FreeRTOS/tasks.c **** 
 2148              		.loc 1 1903 9 view .LVU606
 2149 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2150              	.LVL162:
1905:ThirdParty/FreeRTOS/tasks.c ****         {
 2151              		.loc 1 1905 9 view .LVU607
 2152              	.LBB181:
 2153              	.LBI181:
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2154              		.loc 2 210 38 view .LVU608
 2155              	.LBB182:
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2156              		.loc 2 212 9 view .LVU609
 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2157              		.loc 2 214 9 view .LVU610
 2158              		.syntax unified
 2159              	@ 214 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2160 000c EFF31185 			mrs r5, basepri											
 2161 0010 4FF05003 		mov r3, #80												
 2162 0014 83F31188 		msr basepri, r3											
 2163 0018 BFF36F8F 		isb														
 2164 001c BFF34F8F 		dsb														
 2165              	
 2166              	@ 0 "" 2
 2167              	.LVL163:
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 2168              		.loc 2 226 9 view .LVU611
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 2169              		.loc 2 226 9 is_stmt 0 view .LVU612
 2170              		.thumb
 2171              		.syntax unified
 2172              	.LBE182:
 2173              	.LBE181:
1907:ThirdParty/FreeRTOS/tasks.c ****             {
 2174              		.loc 1 1907 13 is_stmt 1 view .LVU613
1907:ThirdParty/FreeRTOS/tasks.c ****             {
 2175              		.loc 1 1907 17 is_stmt 0 view .LVU614
 2176 0020 2046     		mov	r0, r4
 2177 0022 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2178              	.LVL164:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 147


1907:ThirdParty/FreeRTOS/tasks.c ****             {
 2179              		.loc 1 1907 15 discriminator 1 view .LVU615
 2180 0026 0646     		mov	r6, r0
 2181 0028 0028     		cmp	r0, #0
 2182 002a 2CD0     		beq	.L157
1909:ThirdParty/FreeRTOS/tasks.c **** 
 2183              		.loc 1 1909 51 is_stmt 1 view .LVU616
1912:ThirdParty/FreeRTOS/tasks.c ****                 {
 2184              		.loc 1 1912 17 view .LVU617
1912:ThirdParty/FreeRTOS/tasks.c ****                 {
 2185              		.loc 1 1912 42 is_stmt 0 view .LVU618
 2186 002c 214B     		ldr	r3, .L163
 2187 002e 1B68     		ldr	r3, [r3]
1912:ThirdParty/FreeRTOS/tasks.c ****                 {
 2188              		.loc 1 1912 19 view .LVU619
 2189 0030 002B     		cmp	r3, #0
 2190 0032 37D1     		bne	.L158
1916:ThirdParty/FreeRTOS/tasks.c ****                     {
 2191              		.loc 1 1916 21 is_stmt 1 view .LVU620
1916:ThirdParty/FreeRTOS/tasks.c ****                     {
 2192              		.loc 1 1916 30 is_stmt 0 view .LVU621
 2193 0034 E26A     		ldr	r2, [r4, #44]
1916:ThirdParty/FreeRTOS/tasks.c ****                     {
 2194              		.loc 1 1916 58 view .LVU622
 2195 0036 204B     		ldr	r3, .L163+4
 2196 0038 1B68     		ldr	r3, [r3]
 2197 003a DB6A     		ldr	r3, [r3, #44]
1916:ThirdParty/FreeRTOS/tasks.c ****                     {
 2198              		.loc 1 1916 23 view .LVU623
 2199 003c 9A42     		cmp	r2, r3
 2200 003e 2FD3     		bcc	.L160
1918:ThirdParty/FreeRTOS/tasks.c **** 
 2201              		.loc 1 1918 25 is_stmt 1 view .LVU624
 2202              	.LVL165:
1923:ThirdParty/FreeRTOS/tasks.c ****                     }
 2203              		.loc 1 1923 25 view .LVU625
1923:ThirdParty/FreeRTOS/tasks.c ****                     }
 2204              		.loc 1 1923 39 is_stmt 0 view .LVU626
 2205 0040 0126     		movs	r6, #1
 2206 0042 1E4B     		ldr	r3, .L163+8
 2207 0044 1E60     		str	r6, [r3]
 2208              	.LVL166:
 2209              	.L159:
1927:ThirdParty/FreeRTOS/tasks.c ****                     }
 2210              		.loc 1 1927 49 is_stmt 1 view .LVU627
1930:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2211              		.loc 1 1930 21 view .LVU628
1930:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2212              		.loc 1 1930 30 is_stmt 0 view .LVU629
 2213 0046 271D     		adds	r7, r4, #4
 2214 0048 3846     		mov	r0, r7
 2215 004a FFF7FEFF 		bl	uxListRemove
 2216              	.LVL167:
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2217              		.loc 1 1931 21 is_stmt 1 view .LVU630
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2218              		.loc 1 1931 21 view .LVU631
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 148


 2219 004e E36A     		ldr	r3, [r4, #44]
 2220 0050 0122     		movs	r2, #1
 2221 0052 9A40     		lsls	r2, r2, r3
 2222 0054 1A49     		ldr	r1, .L163+12
 2223 0056 0868     		ldr	r0, [r1]
 2224 0058 0243     		orrs	r2, r2, r0
 2225 005a 0A60     		str	r2, [r1]
 2226              	.LBB183:
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2227              		.loc 1 1931 21 view .LVU632
 2228 005c 194A     		ldr	r2, .L163+16
 2229 005e 03EB8303 		add	r3, r3, r3, lsl #2
 2230 0062 02EB8303 		add	r3, r2, r3, lsl #2
 2231 0066 5B68     		ldr	r3, [r3, #4]
 2232              	.LVL168:
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2233              		.loc 1 1931 21 view .LVU633
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2234              		.loc 1 1931 21 view .LVU634
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2235              		.loc 1 1931 21 view .LVU635
 2236 0068 A360     		str	r3, [r4, #8]
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2237              		.loc 1 1931 21 view .LVU636
 2238 006a 9968     		ldr	r1, [r3, #8]
 2239 006c E160     		str	r1, [r4, #12]
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2240              		.loc 1 1931 21 view .LVU637
 2241 006e 4F60     		str	r7, [r1, #4]
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2242              		.loc 1 1931 21 view .LVU638
 2243 0070 9F60     		str	r7, [r3, #8]
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2244              		.loc 1 1931 21 view .LVU639
 2245 0072 E36A     		ldr	r3, [r4, #44]
 2246              	.LVL169:
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2247              		.loc 1 1931 21 is_stmt 0 view .LVU640
 2248 0074 03EB8301 		add	r1, r3, r3, lsl #2
 2249 0078 8800     		lsls	r0, r1, #2
 2250 007a 02EB8101 		add	r1, r2, r1, lsl #2
 2251 007e 6161     		str	r1, [r4, #20]
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2252              		.loc 1 1931 21 is_stmt 1 view .LVU641
 2253 0080 1158     		ldr	r1, [r2, r0]
 2254 0082 0131     		adds	r1, r1, #1
 2255 0084 1150     		str	r1, [r2, r0]
 2256              	.LBE183:
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2257              		.loc 1 1931 21 view .LVU642
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2258              		.loc 1 1931 51 view .LVU643
 2259              	.LVL170:
 2260              	.L157:
1943:ThirdParty/FreeRTOS/tasks.c ****             }
 2261              		.loc 1 1943 41 view .LVU644
1946:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 149


 2262              		.loc 1 1946 9 view .LVU645
 2263              	.LBB184:
 2264              	.LBI184:
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2265              		.loc 2 230 34 view .LVU646
 2266              	.LBB185:
 2267              		.loc 2 232 9 view .LVU647
 2268              		.syntax unified
 2269              	@ 232 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2270 0086 85F31188 			msr basepri, r5	
 2271              	@ 0 "" 2
 2272              		.thumb
 2273              		.syntax unified
 2274              	.LBE185:
 2275              	.LBE184:
1948:ThirdParty/FreeRTOS/tasks.c ****     }
 2276              		.loc 1 1948 9 view .LVU648
1949:ThirdParty/FreeRTOS/tasks.c **** 
 2277              		.loc 1 1949 5 is_stmt 0 view .LVU649
 2278 008a 3046     		mov	r0, r6
 2279 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2280              	.LVL171:
 2281              	.L162:
1885:ThirdParty/FreeRTOS/tasks.c **** 
 2282              		.loc 1 1885 9 is_stmt 1 discriminator 1 view .LVU650
 2283              	.LBB186:
 2284              	.LBI186:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2285              		.loc 2 194 34 view .LVU651
 2286              	.LBB187:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2287              		.loc 2 196 9 view .LVU652
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2288              		.loc 2 198 9 view .LVU653
 2289              		.syntax unified
 2290              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2291 008e 4FF05003 			mov r3, #80												
 2292 0092 83F31188 		msr basepri, r3											
 2293 0096 BFF36F8F 		isb														
 2294 009a BFF34F8F 		dsb														
 2295              	
 2296              	@ 0 "" 2
 2297              		.thumb
 2298              		.syntax unified
 2299              	.L156:
 2300              	.LBE187:
 2301              	.LBE186:
1885:ThirdParty/FreeRTOS/tasks.c **** 
 2302              		.loc 1 1885 9 discriminator 3 view .LVU654
1885:ThirdParty/FreeRTOS/tasks.c **** 
 2303              		.loc 1 1885 9 discriminator 3 view .LVU655
 2304 009e FEE7     		b	.L156
 2305              	.LVL172:
 2306              	.L160:
1881:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 2307              		.loc 1 1881 20 is_stmt 0 view .LVU656
 2308 00a0 0026     		movs	r6, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 150


 2309 00a2 D0E7     		b	.L159
 2310              	.L158:
1938:ThirdParty/FreeRTOS/tasks.c ****                 }
 2311              		.loc 1 1938 21 is_stmt 1 view .LVU657
 2312 00a4 04F11801 		add	r1, r4, #24
 2313 00a8 0748     		ldr	r0, .L163+20
 2314 00aa FFF7FEFF 		bl	vListInsertEnd
 2315              	.LVL173:
1881:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 2316              		.loc 1 1881 20 is_stmt 0 view .LVU658
 2317 00ae 0026     		movs	r6, #0
 2318 00b0 E9E7     		b	.L157
 2319              	.L164:
 2320 00b2 00BF     		.align	2
 2321              	.L163:
 2322 00b4 00000000 		.word	uxSchedulerSuspended
 2323 00b8 00000000 		.word	pxCurrentTCB
 2324 00bc 00000000 		.word	xYieldPending
 2325 00c0 00000000 		.word	uxTopReadyPriority
 2326 00c4 00000000 		.word	pxReadyTasksLists
 2327 00c8 00000000 		.word	xPendingReadyList
 2328              		.cfi_endproc
 2329              	.LFE18:
 2331              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2332              		.align	2
 2333              	.LC0:
 2334 0000 49444C45 		.ascii	"IDLE\000"
 2334      00
 2335              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2336              		.align	1
 2337              		.global	vTaskStartScheduler
 2338              		.syntax unified
 2339              		.thumb
 2340              		.thumb_func
 2342              	vTaskStartScheduler:
 2343              	.LFB19:
1955:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 2344              		.loc 1 1955 1 is_stmt 1 view -0
 2345              		.cfi_startproc
 2346              		@ args = 0, pretend = 0, frame = 0
 2347              		@ frame_needed = 0, uses_anonymous_args = 0
 2348 0000 00B5     		push	{lr}
 2349              	.LCFI18:
 2350              		.cfi_def_cfa_offset 4
 2351              		.cfi_offset 14, -4
 2352 0002 83B0     		sub	sp, sp, #12
 2353              	.LCFI19:
 2354              		.cfi_def_cfa_offset 16
1956:ThirdParty/FreeRTOS/tasks.c **** 
 2355              		.loc 1 1956 5 view .LVU660
1988:ThirdParty/FreeRTOS/tasks.c ****                                configIDLE_TASK_NAME,
 2356              		.loc 1 1988 9 view .LVU661
1988:ThirdParty/FreeRTOS/tasks.c ****                                configIDLE_TASK_NAME,
 2357              		.loc 1 1988 19 is_stmt 0 view .LVU662
 2358 0004 1A4B     		ldr	r3, .L172
 2359 0006 0193     		str	r3, [sp, #4]
 2360 0008 0023     		movs	r3, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 151


 2361 000a 0093     		str	r3, [sp]
 2362 000c 8222     		movs	r2, #130
 2363 000e 1949     		ldr	r1, .L172+4
 2364 0010 1948     		ldr	r0, .L172+8
 2365 0012 FFF7FEFF 		bl	xTaskCreate
 2366              	.LVL174:
1999:ThirdParty/FreeRTOS/tasks.c ****         {
 2367              		.loc 1 1999 9 is_stmt 1 view .LVU663
1999:ThirdParty/FreeRTOS/tasks.c ****         {
 2368              		.loc 1 1999 11 is_stmt 0 view .LVU664
 2369 0016 0128     		cmp	r0, #1
 2370 0018 07D0     		beq	.L170
 2371              	.L166:
 2372              	.LVL175:
2066:ThirdParty/FreeRTOS/tasks.c ****     }
 2373              		.loc 1 2066 9 is_stmt 1 view .LVU665
 2374 001a B0F1FF3F 		cmp	r0, #-1
 2375 001e 1DD0     		beq	.L171
 2376              	.L167:
2066:ThirdParty/FreeRTOS/tasks.c ****     }
 2377              		.loc 1 2066 73 discriminator 2 view .LVU666
2071:ThirdParty/FreeRTOS/tasks.c **** 
 2378              		.loc 1 2071 5 view .LVU667
2075:ThirdParty/FreeRTOS/tasks.c **** }
 2379              		.loc 1 2075 5 view .LVU668
 2380 0020 164B     		ldr	r3, .L172+12
 2381 0022 1B68     		ldr	r3, [r3]
2076:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2382              		.loc 1 2076 1 is_stmt 0 view .LVU669
 2383 0024 03B0     		add	sp, sp, #12
 2384              	.LCFI20:
 2385              		.cfi_remember_state
 2386              		.cfi_def_cfa_offset 4
 2387              		@ sp needed
 2388 0026 5DF804FB 		ldr	pc, [sp], #4
 2389              	.LVL176:
 2390              	.L170:
 2391              	.LCFI21:
 2392              		.cfi_restore_state
2001:ThirdParty/FreeRTOS/tasks.c ****         }
 2393              		.loc 1 2001 13 is_stmt 1 view .LVU670
2001:ThirdParty/FreeRTOS/tasks.c ****         }
 2394              		.loc 1 2001 23 is_stmt 0 view .LVU671
 2395 002a FFF7FEFF 		bl	xTimerCreateTimerTask
 2396              	.LVL177:
2005:ThirdParty/FreeRTOS/tasks.c ****         }
 2397              		.loc 1 2005 37 is_stmt 1 view .LVU672
2010:ThirdParty/FreeRTOS/tasks.c ****     {
 2398              		.loc 1 2010 5 view .LVU673
2010:ThirdParty/FreeRTOS/tasks.c ****     {
 2399              		.loc 1 2010 7 is_stmt 0 view .LVU674
 2400 002e 0128     		cmp	r0, #1
 2401 0030 F3D1     		bne	.L166
2026:ThirdParty/FreeRTOS/tasks.c **** 
 2402              		.loc 1 2026 9 is_stmt 1 view .LVU675
 2403              	.LBB188:
 2404              	.LBI188:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 152


 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2405              		.loc 2 194 34 view .LVU676
 2406              	.LBB189:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2407              		.loc 2 196 9 view .LVU677
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2408              		.loc 2 198 9 view .LVU678
 2409              		.syntax unified
 2410              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2411 0032 4FF05003 			mov r3, #80												
 2412 0036 83F31188 		msr basepri, r3											
 2413 003a BFF36F8F 		isb														
 2414 003e BFF34F8F 		dsb														
 2415              	
 2416              	@ 0 "" 2
 2417              		.thumb
 2418              		.syntax unified
 2419              	.LBE189:
 2420              	.LBE188:
2036:ThirdParty/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
 2421              		.loc 1 2036 9 view .LVU679
2036:ThirdParty/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
 2422              		.loc 1 2036 30 is_stmt 0 view .LVU680
 2423 0042 0F4B     		ldr	r3, .L172+16
 2424 0044 4FF0FF32 		mov	r2, #-1
 2425 0048 1A60     		str	r2, [r3]
2037:ThirdParty/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2426              		.loc 1 2037 9 is_stmt 1 view .LVU681
2037:ThirdParty/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2427              		.loc 1 2037 27 is_stmt 0 view .LVU682
 2428 004a 0E4B     		ldr	r3, .L172+20
 2429 004c 0122     		movs	r2, #1
 2430 004e 1A60     		str	r2, [r3]
2038:ThirdParty/FreeRTOS/tasks.c **** 
 2431              		.loc 1 2038 9 is_stmt 1 view .LVU683
2038:ThirdParty/FreeRTOS/tasks.c **** 
 2432              		.loc 1 2038 20 is_stmt 0 view .LVU684
 2433 0050 0D4B     		ldr	r3, .L172+24
 2434 0052 0022     		movs	r2, #0
 2435 0054 1A60     		str	r2, [r3]
2046:ThirdParty/FreeRTOS/tasks.c **** 
 2436              		.loc 1 2046 49 is_stmt 1 view .LVU685
2048:ThirdParty/FreeRTOS/tasks.c **** 
 2437              		.loc 1 2048 32 view .LVU686
2052:ThirdParty/FreeRTOS/tasks.c **** 
 2438              		.loc 1 2052 9 view .LVU687
 2439 0056 FFF7FEFF 		bl	xPortStartScheduler
 2440              	.LVL178:
2052:ThirdParty/FreeRTOS/tasks.c **** 
 2441              		.loc 1 2052 9 is_stmt 0 view .LVU688
 2442 005a E1E7     		b	.L167
 2443              	.LVL179:
 2444              	.L171:
2066:ThirdParty/FreeRTOS/tasks.c ****     }
 2445              		.loc 1 2066 9 is_stmt 1 discriminator 1 view .LVU689
 2446              	.LBB190:
 2447              	.LBI190:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 153


 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2448              		.loc 2 194 34 view .LVU690
 2449              	.LBB191:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2450              		.loc 2 196 9 view .LVU691
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2451              		.loc 2 198 9 view .LVU692
 2452              		.syntax unified
 2453              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2454 005c 4FF05003 			mov r3, #80												
 2455 0060 83F31188 		msr basepri, r3											
 2456 0064 BFF36F8F 		isb														
 2457 0068 BFF34F8F 		dsb														
 2458              	
 2459              	@ 0 "" 2
 2460              		.thumb
 2461              		.syntax unified
 2462              	.L168:
 2463              	.LBE191:
 2464              	.LBE190:
2066:ThirdParty/FreeRTOS/tasks.c ****     }
 2465              		.loc 1 2066 9 discriminator 3 view .LVU693
2066:ThirdParty/FreeRTOS/tasks.c ****     }
 2466              		.loc 1 2066 9 discriminator 3 view .LVU694
 2467 006c FEE7     		b	.L168
 2468              	.L173:
 2469 006e 00BF     		.align	2
 2470              	.L172:
 2471 0070 00000000 		.word	xIdleTaskHandle
 2472 0074 00000000 		.word	.LC0
 2473 0078 00000000 		.word	prvIdleTask
 2474 007c 00000000 		.word	uxTopUsedPriority
 2475 0080 00000000 		.word	xNextTaskUnblockTime
 2476 0084 00000000 		.word	xSchedulerRunning
 2477 0088 00000000 		.word	xTickCount
 2478              		.cfi_endproc
 2479              	.LFE19:
 2481              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2482              		.align	1
 2483              		.global	vTaskEndScheduler
 2484              		.syntax unified
 2485              		.thumb
 2486              		.thumb_func
 2488              	vTaskEndScheduler:
 2489              	.LFB20:
2080:ThirdParty/FreeRTOS/tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
 2490              		.loc 1 2080 1 view -0
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 0
 2493              		@ frame_needed = 0, uses_anonymous_args = 0
 2494 0000 08B5     		push	{r3, lr}
 2495              	.LCFI22:
 2496              		.cfi_def_cfa_offset 8
 2497              		.cfi_offset 3, -8
 2498              		.cfi_offset 14, -4
2084:ThirdParty/FreeRTOS/tasks.c ****     xSchedulerRunning = pdFALSE;
 2499              		.loc 1 2084 5 view .LVU696
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 154


 2500              	.LBB192:
 2501              	.LBI192:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2502              		.loc 2 194 34 view .LVU697
 2503              	.LBB193:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2504              		.loc 2 196 9 view .LVU698
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2505              		.loc 2 198 9 view .LVU699
 2506              		.syntax unified
 2507              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2508 0002 4FF05003 			mov r3, #80												
 2509 0006 83F31188 		msr basepri, r3											
 2510 000a BFF36F8F 		isb														
 2511 000e BFF34F8F 		dsb														
 2512              	
 2513              	@ 0 "" 2
 2514              		.thumb
 2515              		.syntax unified
 2516              	.LBE193:
 2517              	.LBE192:
2085:ThirdParty/FreeRTOS/tasks.c ****     vPortEndScheduler();
 2518              		.loc 1 2085 5 view .LVU700
2085:ThirdParty/FreeRTOS/tasks.c ****     vPortEndScheduler();
 2519              		.loc 1 2085 23 is_stmt 0 view .LVU701
 2520 0012 034B     		ldr	r3, .L176
 2521 0014 0022     		movs	r2, #0
 2522 0016 1A60     		str	r2, [r3]
2086:ThirdParty/FreeRTOS/tasks.c **** }
 2523              		.loc 1 2086 5 is_stmt 1 view .LVU702
 2524 0018 FFF7FEFF 		bl	vPortEndScheduler
 2525              	.LVL180:
2087:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 2526              		.loc 1 2087 1 is_stmt 0 view .LVU703
 2527 001c 08BD     		pop	{r3, pc}
 2528              	.L177:
 2529 001e 00BF     		.align	2
 2530              	.L176:
 2531 0020 00000000 		.word	xSchedulerRunning
 2532              		.cfi_endproc
 2533              	.LFE20:
 2535              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2536              		.align	1
 2537              		.global	vTaskSuspendAll
 2538              		.syntax unified
 2539              		.thumb
 2540              		.thumb_func
 2542              	vTaskSuspendAll:
 2543              	.LFB21:
2091:ThirdParty/FreeRTOS/tasks.c ****     /* A critical section is not required as the variable is of type
 2544              		.loc 1 2091 1 is_stmt 1 view -0
 2545              		.cfi_startproc
 2546              		@ args = 0, pretend = 0, frame = 0
 2547              		@ frame_needed = 0, uses_anonymous_args = 0
 2548              		@ link register save eliminated.
2099:ThirdParty/FreeRTOS/tasks.c **** 
 2549              		.loc 1 2099 27 view .LVU705
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 155


2103:ThirdParty/FreeRTOS/tasks.c **** 
 2550              		.loc 1 2103 5 view .LVU706
 2551 0000 024A     		ldr	r2, .L179
 2552 0002 1368     		ldr	r3, [r2]
 2553 0004 0133     		adds	r3, r3, #1
 2554 0006 1360     		str	r3, [r2]
2107:ThirdParty/FreeRTOS/tasks.c **** }
 2555              		.loc 1 2107 5 view .LVU707
2108:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 2556              		.loc 1 2108 1 is_stmt 0 view .LVU708
 2557 0008 7047     		bx	lr
 2558              	.L180:
 2559 000a 00BF     		.align	2
 2560              	.L179:
 2561 000c 00000000 		.word	uxSchedulerSuspended
 2562              		.cfi_endproc
 2563              	.LFE21:
 2565              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2566              		.align	1
 2567              		.global	xTaskGetTickCount
 2568              		.syntax unified
 2569              		.thumb
 2570              		.thumb_func
 2572              	xTaskGetTickCount:
 2573              	.LFB23:
2287:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xTicks;
 2574              		.loc 1 2287 1 is_stmt 1 view -0
 2575              		.cfi_startproc
 2576              		@ args = 0, pretend = 0, frame = 0
 2577              		@ frame_needed = 0, uses_anonymous_args = 0
 2578              		@ link register save eliminated.
2288:ThirdParty/FreeRTOS/tasks.c **** 
 2579              		.loc 1 2288 5 view .LVU710
2291:ThirdParty/FreeRTOS/tasks.c ****     {
 2580              		.loc 1 2291 35 view .LVU711
2293:ThirdParty/FreeRTOS/tasks.c ****     }
 2581              		.loc 1 2293 9 view .LVU712
2293:ThirdParty/FreeRTOS/tasks.c ****     }
 2582              		.loc 1 2293 16 is_stmt 0 view .LVU713
 2583 0000 014B     		ldr	r3, .L182
 2584 0002 1868     		ldr	r0, [r3]
 2585              	.LVL181:
2295:ThirdParty/FreeRTOS/tasks.c **** 
 2586              		.loc 1 2295 34 is_stmt 1 view .LVU714
2297:ThirdParty/FreeRTOS/tasks.c **** }
 2587              		.loc 1 2297 5 view .LVU715
2298:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2588              		.loc 1 2298 1 is_stmt 0 view .LVU716
 2589 0004 7047     		bx	lr
 2590              	.L183:
 2591 0006 00BF     		.align	2
 2592              	.L182:
 2593 0008 00000000 		.word	xTickCount
 2594              		.cfi_endproc
 2595              	.LFE23:
 2597              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2598              		.align	1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 156


 2599              		.global	xTaskGetTickCountFromISR
 2600              		.syntax unified
 2601              		.thumb
 2602              		.thumb_func
 2604              	xTaskGetTickCountFromISR:
 2605              	.LFB24:
2302:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xReturn;
 2606              		.loc 1 2302 1 is_stmt 1 view -0
 2607              		.cfi_startproc
 2608              		@ args = 0, pretend = 0, frame = 0
 2609              		@ frame_needed = 0, uses_anonymous_args = 0
 2610 0000 08B5     		push	{r3, lr}
 2611              	.LCFI23:
 2612              		.cfi_def_cfa_offset 8
 2613              		.cfi_offset 3, -8
 2614              		.cfi_offset 14, -4
2303:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxSavedInterruptStatus;
 2615              		.loc 1 2303 5 view .LVU718
2304:ThirdParty/FreeRTOS/tasks.c **** 
 2616              		.loc 1 2304 5 view .LVU719
2320:ThirdParty/FreeRTOS/tasks.c **** 
 2617              		.loc 1 2320 5 view .LVU720
 2618 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2619              	.LVL182:
2322:ThirdParty/FreeRTOS/tasks.c ****     {
 2620              		.loc 1 2322 5 view .LVU721
2324:ThirdParty/FreeRTOS/tasks.c ****     }
 2621              		.loc 1 2324 9 view .LVU722
2324:ThirdParty/FreeRTOS/tasks.c ****     }
 2622              		.loc 1 2324 17 is_stmt 0 view .LVU723
 2623 0006 014B     		ldr	r3, .L186
 2624 0008 1868     		ldr	r0, [r3]
 2625              	.LVL183:
2326:ThirdParty/FreeRTOS/tasks.c **** 
 2626              		.loc 1 2326 5 is_stmt 1 view .LVU724
2328:ThirdParty/FreeRTOS/tasks.c **** }
 2627              		.loc 1 2328 5 view .LVU725
2329:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2628              		.loc 1 2329 1 is_stmt 0 view .LVU726
 2629 000a 08BD     		pop	{r3, pc}
 2630              	.L187:
 2631              		.align	2
 2632              	.L186:
 2633 000c 00000000 		.word	xTickCount
 2634              		.cfi_endproc
 2635              	.LFE24:
 2637              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2638              		.align	1
 2639              		.global	uxTaskGetNumberOfTasks
 2640              		.syntax unified
 2641              		.thumb
 2642              		.thumb_func
 2644              	uxTaskGetNumberOfTasks:
 2645              	.LFB25:
2333:ThirdParty/FreeRTOS/tasks.c ****     /* A critical section is not required because the variables are of type
 2646              		.loc 1 2333 1 is_stmt 1 view -0
 2647              		.cfi_startproc
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 157


 2648              		@ args = 0, pretend = 0, frame = 0
 2649              		@ frame_needed = 0, uses_anonymous_args = 0
 2650              		@ link register save eliminated.
2336:ThirdParty/FreeRTOS/tasks.c **** }
 2651              		.loc 1 2336 5 view .LVU728
2336:ThirdParty/FreeRTOS/tasks.c **** }
 2652              		.loc 1 2336 12 is_stmt 0 view .LVU729
 2653 0000 014B     		ldr	r3, .L189
 2654 0002 1868     		ldr	r0, [r3]
2337:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2655              		.loc 1 2337 1 view .LVU730
 2656 0004 7047     		bx	lr
 2657              	.L190:
 2658 0006 00BF     		.align	2
 2659              	.L189:
 2660 0008 00000000 		.word	uxCurrentNumberOfTasks
 2661              		.cfi_endproc
 2662              	.LFE25:
 2664              		.section	.text.pcTaskGetName,"ax",%progbits
 2665              		.align	1
 2666              		.global	pcTaskGetName
 2667              		.syntax unified
 2668              		.thumb
 2669              		.thumb_func
 2671              	pcTaskGetName:
 2672              	.LVL184:
 2673              	.LFB26:
2341:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
 2674              		.loc 1 2341 1 is_stmt 1 view -0
 2675              		.cfi_startproc
 2676              		@ args = 0, pretend = 0, frame = 0
 2677              		@ frame_needed = 0, uses_anonymous_args = 0
 2678              		@ link register save eliminated.
2342:ThirdParty/FreeRTOS/tasks.c **** 
 2679              		.loc 1 2342 5 view .LVU732
2346:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 2680              		.loc 1 2346 5 view .LVU733
2346:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 2681              		.loc 1 2346 13 is_stmt 0 view .LVU734
 2682 0000 0346     		mov	r3, r0
 2683 0002 10B1     		cbz	r0, .L194
 2684              	.LVL185:
 2685              	.L192:
2347:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2686              		.loc 1 2347 26 is_stmt 1 discriminator 2 view .LVU735
2348:ThirdParty/FreeRTOS/tasks.c **** }
 2687              		.loc 1 2348 5 view .LVU736
2349:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2688              		.loc 1 2349 1 is_stmt 0 view .LVU737
 2689 0004 03F13400 		add	r0, r3, #52
 2690 0008 7047     		bx	lr
 2691              	.LVL186:
 2692              	.L194:
2346:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 2693              		.loc 1 2346 13 discriminator 1 view .LVU738
 2694 000a 064B     		ldr	r3, .L195
 2695 000c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 158


 2696              	.LVL187:
2347:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2697              		.loc 1 2347 5 is_stmt 1 view .LVU739
 2698 000e 002B     		cmp	r3, #0
 2699 0010 F8D1     		bne	.L192
2347:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2700              		.loc 1 2347 5 discriminator 1 view .LVU740
 2701              	.LBB194:
 2702              	.LBI194:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2703              		.loc 2 194 34 view .LVU741
 2704              	.LBB195:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2705              		.loc 2 196 9 view .LVU742
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2706              		.loc 2 198 9 view .LVU743
 2707              		.syntax unified
 2708              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2709 0012 4FF05003 			mov r3, #80												
 2710 0016 83F31188 		msr basepri, r3											
 2711 001a BFF36F8F 		isb														
 2712 001e BFF34F8F 		dsb														
 2713              	
 2714              	@ 0 "" 2
 2715              	.LVL188:
 2716              		.thumb
 2717              		.syntax unified
 2718              	.L193:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2719              		.loc 2 198 9 is_stmt 0 view .LVU744
 2720              	.LBE195:
 2721              	.LBE194:
2347:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2722              		.loc 1 2347 5 is_stmt 1 discriminator 3 view .LVU745
2347:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2723              		.loc 1 2347 5 discriminator 3 view .LVU746
 2724 0022 FEE7     		b	.L193
 2725              	.L196:
 2726              		.align	2
 2727              	.L195:
 2728 0024 00000000 		.word	pxCurrentTCB
 2729              		.cfi_endproc
 2730              	.LFE26:
 2732              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2733              		.align	1
 2734              		.global	xTaskIncrementTick
 2735              		.syntax unified
 2736              		.thumb
 2737              		.thumb_func
 2739              	xTaskIncrementTick:
 2740              	.LFB29:
2721:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
 2741              		.loc 1 2721 1 view -0
 2742              		.cfi_startproc
 2743              		@ args = 0, pretend = 0, frame = 0
 2744              		@ frame_needed = 0, uses_anonymous_args = 0
 2745 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 159


 2746              	.LCFI24:
 2747              		.cfi_def_cfa_offset 24
 2748              		.cfi_offset 3, -24
 2749              		.cfi_offset 4, -20
 2750              		.cfi_offset 5, -16
 2751              		.cfi_offset 6, -12
 2752              		.cfi_offset 7, -8
 2753              		.cfi_offset 14, -4
2722:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xItemValue;
 2754              		.loc 1 2722 5 view .LVU748
2723:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
 2755              		.loc 1 2723 5 view .LVU749
2724:ThirdParty/FreeRTOS/tasks.c **** 
 2756              		.loc 1 2724 5 view .LVU750
 2757              	.LVL189:
2729:ThirdParty/FreeRTOS/tasks.c **** 
 2758              		.loc 1 2729 43 view .LVU751
2731:ThirdParty/FreeRTOS/tasks.c ****     {
 2759              		.loc 1 2731 5 view .LVU752
2731:ThirdParty/FreeRTOS/tasks.c ****     {
 2760              		.loc 1 2731 30 is_stmt 0 view .LVU753
 2761 0002 524B     		ldr	r3, .L221
 2762 0004 1B68     		ldr	r3, [r3]
2731:ThirdParty/FreeRTOS/tasks.c ****     {
 2763              		.loc 1 2731 7 view .LVU754
 2764 0006 002B     		cmp	r3, #0
 2765 0008 40F09980 		bne	.L198
 2766              	.LBB196:
2735:ThirdParty/FreeRTOS/tasks.c **** 
 2767              		.loc 1 2735 9 is_stmt 1 view .LVU755
2735:ThirdParty/FreeRTOS/tasks.c **** 
 2768              		.loc 1 2735 55 is_stmt 0 view .LVU756
 2769 000c 504B     		ldr	r3, .L221+4
 2770 000e 1C68     		ldr	r4, [r3]
2735:ThirdParty/FreeRTOS/tasks.c **** 
 2771              		.loc 1 2735 26 view .LVU757
 2772 0010 0134     		adds	r4, r4, #1
 2773              	.LVL190:
2739:ThirdParty/FreeRTOS/tasks.c **** 
 2774              		.loc 1 2739 9 is_stmt 1 view .LVU758
2739:ThirdParty/FreeRTOS/tasks.c **** 
 2775              		.loc 1 2739 20 is_stmt 0 view .LVU759
 2776 0012 1C60     		str	r4, [r3]
2741:ThirdParty/FreeRTOS/tasks.c ****         {
 2777              		.loc 1 2741 9 is_stmt 1 view .LVU760
2741:ThirdParty/FreeRTOS/tasks.c ****         {
 2778              		.loc 1 2741 11 is_stmt 0 view .LVU761
 2779 0014 C4B9     		cbnz	r4, .L199
 2780              	.LBB197:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2781              		.loc 1 2743 13 is_stmt 1 view .LVU762
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2782              		.loc 1 2743 13 view .LVU763
 2783 0016 4F4B     		ldr	r3, .L221+8
 2784 0018 1B68     		ldr	r3, [r3]
 2785 001a 1B68     		ldr	r3, [r3]
 2786 001c 43B1     		cbz	r3, .L200
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 160


2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2787              		.loc 1 2743 13 discriminator 1 view .LVU764
 2788              	.LBB198:
 2789              	.LBI198:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2790              		.loc 2 194 34 view .LVU765
 2791              	.LBB199:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2792              		.loc 2 196 9 view .LVU766
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2793              		.loc 2 198 9 view .LVU767
 2794              		.syntax unified
 2795              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2796 001e 4FF05003 			mov r3, #80												
 2797 0022 83F31188 		msr basepri, r3											
 2798 0026 BFF36F8F 		isb														
 2799 002a BFF34F8F 		dsb														
 2800              	
 2801              	@ 0 "" 2
 2802              		.thumb
 2803              		.syntax unified
 2804              	.L201:
 2805              	.LBE199:
 2806              	.LBE198:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2807              		.loc 1 2743 13 discriminator 3 view .LVU768
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2808              		.loc 1 2743 13 discriminator 3 view .LVU769
 2809 002e FEE7     		b	.L201
 2810              	.L200:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2811              		.loc 1 2743 13 discriminator 2 view .LVU770
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2812              		.loc 1 2743 13 discriminator 2 view .LVU771
 2813 0030 484A     		ldr	r2, .L221+8
 2814 0032 1168     		ldr	r1, [r2]
 2815              	.LVL191:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2816              		.loc 1 2743 13 discriminator 2 view .LVU772
 2817 0034 484B     		ldr	r3, .L221+12
 2818 0036 1868     		ldr	r0, [r3]
 2819 0038 1060     		str	r0, [r2]
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2820              		.loc 1 2743 13 discriminator 2 view .LVU773
 2821 003a 1960     		str	r1, [r3]
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2822              		.loc 1 2743 13 discriminator 2 view .LVU774
 2823 003c 474A     		ldr	r2, .L221+16
 2824 003e 1368     		ldr	r3, [r2]
 2825 0040 0133     		adds	r3, r3, #1
 2826 0042 1360     		str	r3, [r2]
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2827              		.loc 1 2743 13 discriminator 2 view .LVU775
 2828 0044 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2829              	.LVL192:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2830              		.loc 1 2743 13 is_stmt 0 discriminator 2 view .LVU776
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 161


 2831              	.LBE197:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2832              		.loc 1 2743 39 is_stmt 1 discriminator 1 view .LVU777
 2833              	.L199:
2747:ThirdParty/FreeRTOS/tasks.c ****         }
 2834              		.loc 1 2747 37 view .LVU778
2754:ThirdParty/FreeRTOS/tasks.c ****         {
 2835              		.loc 1 2754 9 view .LVU779
2754:ThirdParty/FreeRTOS/tasks.c ****         {
 2836              		.loc 1 2754 29 is_stmt 0 view .LVU780
 2837 0048 454B     		ldr	r3, .L221+20
 2838 004a 1B68     		ldr	r3, [r3]
2754:ThirdParty/FreeRTOS/tasks.c ****         {
 2839              		.loc 1 2754 11 view .LVU781
 2840 004c A342     		cmp	r3, r4
 2841 004e 11D9     		bls	.L213
 2842              	.LBE196:
2724:ThirdParty/FreeRTOS/tasks.c **** 
 2843              		.loc 1 2724 16 view .LVU782
 2844 0050 0020     		movs	r0, #0
 2845              	.LVL193:
 2846              	.L203:
 2847              	.LBB205:
2841:ThirdParty/FreeRTOS/tasks.c ****             {
 2848              		.loc 1 2841 13 is_stmt 1 view .LVU783
2841:ThirdParty/FreeRTOS/tasks.c ****             {
 2849              		.loc 1 2841 17 is_stmt 0 view .LVU784
 2850 0052 444B     		ldr	r3, .L221+24
 2851 0054 1B68     		ldr	r3, [r3]
 2852 0056 DB6A     		ldr	r3, [r3, #44]
 2853 0058 03EB8303 		add	r3, r3, r3, lsl #2
 2854 005c 9A00     		lsls	r2, r3, #2
 2855 005e 424B     		ldr	r3, .L221+28
 2856 0060 9B58     		ldr	r3, [r3, r2]
2841:ThirdParty/FreeRTOS/tasks.c ****             {
 2857              		.loc 1 2841 15 view .LVU785
 2858 0062 012B     		cmp	r3, #1
 2859 0064 00D9     		bls	.L211
2843:ThirdParty/FreeRTOS/tasks.c ****             }
 2860              		.loc 1 2843 33 view .LVU786
 2861 0066 0120     		movs	r0, #1
 2862              	.LVL194:
 2863              	.L211:
2847:ThirdParty/FreeRTOS/tasks.c ****             }
 2864              		.loc 1 2847 41 is_stmt 1 view .LVU787
2869:ThirdParty/FreeRTOS/tasks.c ****             {
 2865              		.loc 1 2869 13 view .LVU788
2869:ThirdParty/FreeRTOS/tasks.c ****             {
 2866              		.loc 1 2869 31 is_stmt 0 view .LVU789
 2867 0068 404B     		ldr	r3, .L221+32
 2868 006a 1B68     		ldr	r3, [r3]
2869:ThirdParty/FreeRTOS/tasks.c ****             {
 2869              		.loc 1 2869 15 view .LVU790
 2870 006c 002B     		cmp	r3, #0
 2871 006e 6BD0     		beq	.L197
2871:ThirdParty/FreeRTOS/tasks.c ****             }
 2872              		.loc 1 2871 33 view .LVU791
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 162


 2873 0070 0120     		movs	r0, #1
 2874              	.LVL195:
2871:ThirdParty/FreeRTOS/tasks.c ****             }
 2875              		.loc 1 2871 33 view .LVU792
 2876              	.LBE205:
2893:ThirdParty/FreeRTOS/tasks.c **** }
 2877              		.loc 1 2893 5 is_stmt 1 view .LVU793
2893:ThirdParty/FreeRTOS/tasks.c **** }
 2878              		.loc 1 2893 12 is_stmt 0 view .LVU794
 2879 0072 69E0     		b	.L197
 2880              	.LVL196:
 2881              	.L213:
2724:ThirdParty/FreeRTOS/tasks.c **** 
 2882              		.loc 1 2724 16 view .LVU795
 2883 0074 0020     		movs	r0, #0
 2884 0076 37E0     		b	.L202
 2885              	.LVL197:
 2886              	.L218:
 2887              	.LBB206:
2765:ThirdParty/FreeRTOS/tasks.c ****                     break;
 2888              		.loc 1 2765 21 is_stmt 1 view .LVU796
2765:ThirdParty/FreeRTOS/tasks.c ****                     break;
 2889              		.loc 1 2765 42 is_stmt 0 view .LVU797
 2890 0078 394B     		ldr	r3, .L221+20
 2891 007a 4FF0FF32 		mov	r2, #-1
 2892 007e 1A60     		str	r2, [r3]
2766:ThirdParty/FreeRTOS/tasks.c ****                 }
 2893              		.loc 1 2766 21 is_stmt 1 view .LVU798
 2894 0080 E7E7     		b	.L203
 2895              	.LVL198:
 2896              	.L219:
2784:ThirdParty/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
 2897              		.loc 1 2784 25 view .LVU799
2784:ThirdParty/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
 2898              		.loc 1 2784 46 is_stmt 0 view .LVU800
 2899 0082 374B     		ldr	r3, .L221+20
 2900              	.LVL199:
2784:ThirdParty/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
 2901              		.loc 1 2784 46 view .LVU801
 2902 0084 1A60     		str	r2, [r3]
2785:ThirdParty/FreeRTOS/tasks.c ****                     }
 2903              		.loc 1 2785 25 is_stmt 1 view .LVU802
 2904 0086 E4E7     		b	.L203
 2905              	.LVL200:
 2906              	.L220:
 2907              	.LBB200:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 2908              		.loc 1 2793 21 discriminator 1 view .LVU803
 2909 0088 D968     		ldr	r1, [r3, #12]
 2910 008a 5160     		str	r1, [r2, #4]
 2911 008c 42E0     		b	.L206
 2912              	.LVL201:
 2913              	.L208:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 2914              		.loc 1 2793 21 is_stmt 0 discriminator 1 view .LVU804
 2915              	.LBE200:
 2916              	.LBB201:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 163


2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 2917              		.loc 1 2799 25 is_stmt 1 discriminator 3 view .LVU805
 2918 008e 0021     		movs	r1, #0
 2919 0090 9962     		str	r1, [r3, #40]
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 2920              		.loc 1 2799 25 discriminator 3 view .LVU806
 2921 0092 1168     		ldr	r1, [r2]
 2922 0094 0139     		subs	r1, r1, #1
 2923 0096 1160     		str	r1, [r2]
 2924              	.LBE201:
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 2925              		.loc 1 2799 70 discriminator 3 view .LVU807
 2926              	.LVL202:
 2927              	.L207:
2803:ThirdParty/FreeRTOS/tasks.c ****                     }
 2928              		.loc 1 2803 49 view .LVU808
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2929              		.loc 1 2808 21 view .LVU809
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2930              		.loc 1 2808 21 view .LVU810
 2931 0098 DA6A     		ldr	r2, [r3, #44]
 2932 009a 0121     		movs	r1, #1
 2933 009c 9140     		lsls	r1, r1, r2
 2934 009e 344E     		ldr	r6, .L221+36
 2935 00a0 3768     		ldr	r7, [r6]
 2936 00a2 3943     		orrs	r1, r1, r7
 2937 00a4 3160     		str	r1, [r6]
 2938              	.LBB202:
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2939              		.loc 1 2808 21 view .LVU811
 2940 00a6 3049     		ldr	r1, .L221+28
 2941 00a8 02EB8202 		add	r2, r2, r2, lsl #2
 2942 00ac 4FEA820C 		lsl	ip, r2, #2
 2943 00b0 8C44     		add	ip, ip, r1
 2944 00b2 DCF80420 		ldr	r2, [ip, #4]
 2945              	.LVL203:
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2946              		.loc 1 2808 21 view .LVU812
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2947              		.loc 1 2808 21 view .LVU813
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2948              		.loc 1 2808 21 view .LVU814
 2949 00b6 9A60     		str	r2, [r3, #8]
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2950              		.loc 1 2808 21 view .LVU815
 2951 00b8 9668     		ldr	r6, [r2, #8]
 2952 00ba DE60     		str	r6, [r3, #12]
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2953              		.loc 1 2808 21 view .LVU816
 2954 00bc 7560     		str	r5, [r6, #4]
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2955              		.loc 1 2808 21 view .LVU817
 2956 00be 9560     		str	r5, [r2, #8]
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2957              		.loc 1 2808 21 view .LVU818
 2958 00c0 DA6A     		ldr	r2, [r3, #44]
 2959              	.LVL204:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 164


2808:ThirdParty/FreeRTOS/tasks.c **** 
 2960              		.loc 1 2808 21 is_stmt 0 view .LVU819
 2961 00c2 02EB820C 		add	ip, r2, r2, lsl #2
 2962 00c6 4FEA8C05 		lsl	r5, ip, #2
 2963 00ca 6E18     		adds	r6, r5, r1
 2964 00cc 5E61     		str	r6, [r3, #20]
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2965              		.loc 1 2808 21 is_stmt 1 view .LVU820
 2966 00ce 4D59     		ldr	r5, [r1, r5]
 2967 00d0 0135     		adds	r5, r5, #1
 2968 00d2 4FEA8C0C 		lsl	ip, ip, #2
 2969 00d6 41F80C50 		str	r5, [r1, ip]
 2970              	.LBE202:
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2971              		.loc 1 2808 21 view .LVU821
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2972              		.loc 1 2808 51 view .LVU822
2822:ThirdParty/FreeRTOS/tasks.c ****                         {
 2973              		.loc 1 2822 25 view .LVU823
2822:ThirdParty/FreeRTOS/tasks.c ****                         {
 2974              		.loc 1 2822 34 is_stmt 0 view .LVU824
 2975 00da DA6A     		ldr	r2, [r3, #44]
2822:ThirdParty/FreeRTOS/tasks.c ****                         {
 2976              		.loc 1 2822 61 view .LVU825
 2977 00dc 214B     		ldr	r3, .L221+24
 2978              	.LVL205:
2822:ThirdParty/FreeRTOS/tasks.c ****                         {
 2979              		.loc 1 2822 61 view .LVU826
 2980 00de 1B68     		ldr	r3, [r3]
 2981 00e0 DB6A     		ldr	r3, [r3, #44]
2822:ThirdParty/FreeRTOS/tasks.c ****                         {
 2982              		.loc 1 2822 27 view .LVU827
 2983 00e2 9A42     		cmp	r2, r3
 2984 00e4 00D9     		bls	.L202
2824:ThirdParty/FreeRTOS/tasks.c ****                         }
 2985              		.loc 1 2824 45 view .LVU828
 2986 00e6 0120     		movs	r0, #1
 2987              	.LVL206:
 2988              	.L202:
2756:ThirdParty/FreeRTOS/tasks.c ****             {
 2989              		.loc 1 2756 13 is_stmt 1 view .LVU829
2758:ThirdParty/FreeRTOS/tasks.c ****                 {
 2990              		.loc 1 2758 17 view .LVU830
2758:ThirdParty/FreeRTOS/tasks.c ****                 {
 2991              		.loc 1 2758 21 is_stmt 0 view .LVU831
 2992 00e8 1A4B     		ldr	r3, .L221+8
 2993 00ea 1B68     		ldr	r3, [r3]
 2994 00ec 1B68     		ldr	r3, [r3]
2758:ThirdParty/FreeRTOS/tasks.c ****                 {
 2995              		.loc 1 2758 19 view .LVU832
 2996 00ee 002B     		cmp	r3, #0
 2997 00f0 C2D0     		beq	.L218
2774:ThirdParty/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2998              		.loc 1 2774 21 is_stmt 1 view .LVU833
2774:ThirdParty/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2999              		.loc 1 2774 29 is_stmt 0 view .LVU834
 3000 00f2 184B     		ldr	r3, .L221+8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 165


 3001 00f4 1B68     		ldr	r3, [r3]
 3002 00f6 DB68     		ldr	r3, [r3, #12]
2774:ThirdParty/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 3003              		.loc 1 2774 27 view .LVU835
 3004 00f8 DB68     		ldr	r3, [r3, #12]
 3005              	.LVL207:
2775:ThirdParty/FreeRTOS/tasks.c **** 
 3006              		.loc 1 2775 21 is_stmt 1 view .LVU836
2775:ThirdParty/FreeRTOS/tasks.c **** 
 3007              		.loc 1 2775 32 is_stmt 0 view .LVU837
 3008 00fa 5A68     		ldr	r2, [r3, #4]
 3009              	.LVL208:
2777:ThirdParty/FreeRTOS/tasks.c ****                     {
 3010              		.loc 1 2777 21 is_stmt 1 view .LVU838
2777:ThirdParty/FreeRTOS/tasks.c ****                     {
 3011              		.loc 1 2777 23 is_stmt 0 view .LVU839
 3012 00fc 9442     		cmp	r4, r2
 3013 00fe C0D3     		bcc	.L219
2789:ThirdParty/FreeRTOS/tasks.c ****                     }
 3014              		.loc 1 2789 49 is_stmt 1 view .LVU840
 3015              	.LBB203:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3016              		.loc 1 2793 21 view .LVU841
 3017 0100 5A69     		ldr	r2, [r3, #20]
 3018              	.LVL209:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3019              		.loc 1 2793 21 view .LVU842
 3020 0102 9D68     		ldr	r5, [r3, #8]
 3021 0104 D968     		ldr	r1, [r3, #12]
 3022 0106 A960     		str	r1, [r5, #8]
 3023              	.LVL210:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3024              		.loc 1 2793 21 view .LVU843
 3025 0108 9D68     		ldr	r5, [r3, #8]
 3026 010a 4D60     		str	r5, [r1, #4]
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3027              		.loc 1 2793 21 view .LVU844
 3028 010c 5168     		ldr	r1, [r2, #4]
 3029 010e 1D1D     		adds	r5, r3, #4
 3030 0110 A942     		cmp	r1, r5
 3031 0112 B9D0     		beq	.L220
 3032              	.L206:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3033              		.loc 1 2793 21 discriminator 3 view .LVU845
 3034 0114 0021     		movs	r1, #0
 3035 0116 5961     		str	r1, [r3, #20]
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3036              		.loc 1 2793 21 discriminator 3 view .LVU846
 3037 0118 1168     		ldr	r1, [r2]
 3038 011a 0139     		subs	r1, r1, #1
 3039 011c 1160     		str	r1, [r2]
 3040              	.LBE203:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3041              		.loc 1 2793 66 discriminator 3 view .LVU847
2797:ThirdParty/FreeRTOS/tasks.c ****                     {
 3042              		.loc 1 2797 21 view .LVU848
2797:ThirdParty/FreeRTOS/tasks.c ****                     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 166


 3043              		.loc 1 2797 25 is_stmt 0 view .LVU849
 3044 011e 9A6A     		ldr	r2, [r3, #40]
 3045              	.LVL211:
2797:ThirdParty/FreeRTOS/tasks.c ****                     {
 3046              		.loc 1 2797 23 view .LVU850
 3047 0120 002A     		cmp	r2, #0
 3048 0122 B9D0     		beq	.L207
 3049              	.LBB204:
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 3050              		.loc 1 2799 25 is_stmt 1 view .LVU851
 3051              	.LVL212:
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 3052              		.loc 1 2799 25 view .LVU852
 3053 0124 DE69     		ldr	r6, [r3, #28]
 3054 0126 196A     		ldr	r1, [r3, #32]
 3055 0128 B160     		str	r1, [r6, #8]
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 3056              		.loc 1 2799 25 view .LVU853
 3057 012a DE69     		ldr	r6, [r3, #28]
 3058 012c 4E60     		str	r6, [r1, #4]
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 3059              		.loc 1 2799 25 view .LVU854
 3060 012e 5668     		ldr	r6, [r2, #4]
 3061 0130 03F11801 		add	r1, r3, #24
 3062 0134 8E42     		cmp	r6, r1
 3063 0136 AAD1     		bne	.L208
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 3064              		.loc 1 2799 25 discriminator 1 view .LVU855
 3065 0138 196A     		ldr	r1, [r3, #32]
 3066 013a 5160     		str	r1, [r2, #4]
 3067 013c A7E7     		b	.L208
 3068              	.LVL213:
 3069              	.L198:
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 3070              		.loc 1 2799 25 is_stmt 0 discriminator 1 view .LVU856
 3071              	.LBE204:
 3072              	.LBE206:
2882:ThirdParty/FreeRTOS/tasks.c **** 
 3073              		.loc 1 2882 9 is_stmt 1 view .LVU857
 3074 013e 0D4A     		ldr	r2, .L221+40
 3075 0140 1368     		ldr	r3, [r2]
 3076 0142 0133     		adds	r3, r3, #1
 3077 0144 1360     		str	r3, [r2]
2724:ThirdParty/FreeRTOS/tasks.c **** 
 3078              		.loc 1 2724 16 is_stmt 0 view .LVU858
 3079 0146 0020     		movs	r0, #0
 3080              	.LVL214:
 3081              	.L197:
2894:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3082              		.loc 1 2894 1 view .LVU859
 3083 0148 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3084              	.L222:
 3085 014a 00BF     		.align	2
 3086              	.L221:
 3087 014c 00000000 		.word	uxSchedulerSuspended
 3088 0150 00000000 		.word	xTickCount
 3089 0154 00000000 		.word	pxDelayedTaskList
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 167


 3090 0158 00000000 		.word	pxOverflowDelayedTaskList
 3091 015c 00000000 		.word	xNumOfOverflows
 3092 0160 00000000 		.word	xNextTaskUnblockTime
 3093 0164 00000000 		.word	pxCurrentTCB
 3094 0168 00000000 		.word	pxReadyTasksLists
 3095 016c 00000000 		.word	xYieldPending
 3096 0170 00000000 		.word	uxTopReadyPriority
 3097 0174 00000000 		.word	xPendedTicks
 3098              		.cfi_endproc
 3099              	.LFE29:
 3101              		.section	.text.xTaskResumeAll,"ax",%progbits
 3102              		.align	1
 3103              		.global	xTaskResumeAll
 3104              		.syntax unified
 3105              		.thumb
 3106              		.thumb_func
 3108              	xTaskResumeAll:
 3109              	.LFB22:
2175:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB = NULL;
 3110              		.loc 1 2175 1 is_stmt 1 view -0
 3111              		.cfi_startproc
 3112              		@ args = 0, pretend = 0, frame = 0
 3113              		@ frame_needed = 0, uses_anonymous_args = 0
 3114 0000 38B5     		push	{r3, r4, r5, lr}
 3115              	.LCFI25:
 3116              		.cfi_def_cfa_offset 16
 3117              		.cfi_offset 3, -16
 3118              		.cfi_offset 4, -12
 3119              		.cfi_offset 5, -8
 3120              		.cfi_offset 14, -4
2176:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
 3121              		.loc 1 2176 5 view .LVU861
 3122              	.LVL215:
2177:ThirdParty/FreeRTOS/tasks.c **** 
 3123              		.loc 1 2177 5 view .LVU862
2181:ThirdParty/FreeRTOS/tasks.c **** 
 3124              		.loc 1 2181 5 view .LVU863
 3125 0002 4A4B     		ldr	r3, .L243
 3126 0004 1B68     		ldr	r3, [r3]
 3127 0006 43B9     		cbnz	r3, .L224
2181:ThirdParty/FreeRTOS/tasks.c **** 
 3128              		.loc 1 2181 5 discriminator 1 view .LVU864
 3129              	.LBB207:
 3130              	.LBI207:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3131              		.loc 2 194 34 view .LVU865
 3132              	.LBB208:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3133              		.loc 2 196 9 view .LVU866
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3134              		.loc 2 198 9 view .LVU867
 3135              		.syntax unified
 3136              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3137 0008 4FF05003 			mov r3, #80												
 3138 000c 83F31188 		msr basepri, r3											
 3139 0010 BFF36F8F 		isb														
 3140 0014 BFF34F8F 		dsb														
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 168


 3141              	
 3142              	@ 0 "" 2
 3143              		.thumb
 3144              		.syntax unified
 3145              	.L225:
 3146              	.LBE208:
 3147              	.LBE207:
2181:ThirdParty/FreeRTOS/tasks.c **** 
 3148              		.loc 1 2181 5 discriminator 3 view .LVU868
2181:ThirdParty/FreeRTOS/tasks.c **** 
 3149              		.loc 1 2181 5 discriminator 3 view .LVU869
 3150 0018 FEE7     		b	.L225
 3151              	.L224:
2181:ThirdParty/FreeRTOS/tasks.c **** 
 3152              		.loc 1 2181 41 discriminator 2 view .LVU870
2188:ThirdParty/FreeRTOS/tasks.c ****     {
 3153              		.loc 1 2188 5 view .LVU871
 3154 001a FFF7FEFF 		bl	vPortEnterCritical
 3155              	.LVL216:
2190:ThirdParty/FreeRTOS/tasks.c **** 
 3156              		.loc 1 2190 9 view .LVU872
 3157 001e 434B     		ldr	r3, .L243
 3158 0020 1A68     		ldr	r2, [r3]
 3159 0022 013A     		subs	r2, r2, #1
 3160 0024 1A60     		str	r2, [r3]
2192:ThirdParty/FreeRTOS/tasks.c ****         {
 3161              		.loc 1 2192 9 view .LVU873
2192:ThirdParty/FreeRTOS/tasks.c ****         {
 3162              		.loc 1 2192 34 is_stmt 0 view .LVU874
 3163 0026 1B68     		ldr	r3, [r3]
2192:ThirdParty/FreeRTOS/tasks.c ****         {
 3164              		.loc 1 2192 11 view .LVU875
 3165 0028 002B     		cmp	r3, #0
 3166 002a 7AD1     		bne	.L236
2194:ThirdParty/FreeRTOS/tasks.c ****             {
 3167              		.loc 1 2194 13 is_stmt 1 view .LVU876
2194:ThirdParty/FreeRTOS/tasks.c ****             {
 3168              		.loc 1 2194 40 is_stmt 0 view .LVU877
 3169 002c 404B     		ldr	r3, .L243+4
 3170 002e 1B68     		ldr	r3, [r3]
2194:ThirdParty/FreeRTOS/tasks.c ****             {
 3171              		.loc 1 2194 15 view .LVU878
 3172 0030 3BB9     		cbnz	r3, .L237
2177:ThirdParty/FreeRTOS/tasks.c **** 
 3173              		.loc 1 2177 16 view .LVU879
 3174 0032 0024     		movs	r4, #0
 3175 0034 76E0     		b	.L226
 3176              	.LVL217:
 3177              	.L240:
 3178              	.LBB209:
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3179              		.loc 1 2201 21 is_stmt 1 discriminator 1 view .LVU880
 3180 0036 196A     		ldr	r1, [r3, #32]
 3181 0038 5160     		str	r1, [r2, #4]
 3182 003a 15E0     		b	.L228
 3183              	.LVL218:
 3184              	.L241:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 169


2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3185              		.loc 1 2201 21 is_stmt 0 discriminator 1 view .LVU881
 3186              	.LBE209:
 3187              	.LBB210:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3188              		.loc 1 2203 21 is_stmt 1 discriminator 1 view .LVU882
 3189 003c D968     		ldr	r1, [r3, #12]
 3190 003e 5160     		str	r1, [r2, #4]
 3191 0040 21E0     		b	.L229
 3192              	.LVL219:
 3193              	.L237:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3194              		.loc 1 2203 21 is_stmt 0 discriminator 1 view .LVU883
 3195              	.LBE210:
2176:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
 3196              		.loc 1 2176 13 view .LVU884
 3197 0042 0023     		movs	r3, #0
 3198              	.LVL220:
 3199              	.L227:
2214:ThirdParty/FreeRTOS/tasks.c ****                     }
 3200              		.loc 1 2214 49 is_stmt 1 view .LVU885
2198:ThirdParty/FreeRTOS/tasks.c ****                 {
 3201              		.loc 1 2198 64 view .LVU886
2198:ThirdParty/FreeRTOS/tasks.c ****                 {
 3202              		.loc 1 2198 24 is_stmt 0 view .LVU887
 3203 0044 3B4A     		ldr	r2, .L243+8
 3204 0046 1268     		ldr	r2, [r2]
2198:ThirdParty/FreeRTOS/tasks.c ****                 {
 3205              		.loc 1 2198 64 view .LVU888
 3206 0048 002A     		cmp	r2, #0
 3207 004a 47D0     		beq	.L239
2200:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3208              		.loc 1 2200 21 is_stmt 1 view .LVU889
2200:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3209              		.loc 1 2200 29 is_stmt 0 view .LVU890
 3210 004c 394B     		ldr	r3, .L243+8
 3211              	.LVL221:
2200:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3212              		.loc 1 2200 29 view .LVU891
 3213 004e DB68     		ldr	r3, [r3, #12]
2200:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3214              		.loc 1 2200 27 view .LVU892
 3215 0050 DB68     		ldr	r3, [r3, #12]
 3216              	.LVL222:
 3217              	.LBB211:
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3218              		.loc 1 2201 21 is_stmt 1 view .LVU893
 3219 0052 9A6A     		ldr	r2, [r3, #40]
 3220              	.LVL223:
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3221              		.loc 1 2201 21 view .LVU894
 3222 0054 D869     		ldr	r0, [r3, #28]
 3223 0056 196A     		ldr	r1, [r3, #32]
 3224 0058 8160     		str	r1, [r0, #8]
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3225              		.loc 1 2201 21 view .LVU895
 3226 005a D869     		ldr	r0, [r3, #28]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 170


 3227 005c 4860     		str	r0, [r1, #4]
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3228              		.loc 1 2201 21 view .LVU896
 3229 005e 5068     		ldr	r0, [r2, #4]
 3230 0060 03F11801 		add	r1, r3, #24
 3231 0064 8842     		cmp	r0, r1
 3232 0066 E6D0     		beq	.L240
 3233              	.L228:
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3234              		.loc 1 2201 21 discriminator 3 view .LVU897
 3235 0068 0021     		movs	r1, #0
 3236 006a 9962     		str	r1, [r3, #40]
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3237              		.loc 1 2201 21 discriminator 3 view .LVU898
 3238 006c 1168     		ldr	r1, [r2]
 3239 006e 0139     		subs	r1, r1, #1
 3240 0070 1160     		str	r1, [r2]
 3241              	.LBE211:
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3242              		.loc 1 2201 66 discriminator 3 view .LVU899
2202:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 3243              		.loc 1 2202 21 view .LVU900
 3244              	.LBB212:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3245              		.loc 1 2203 21 view .LVU901
 3246 0072 5A69     		ldr	r2, [r3, #20]
 3247              	.LVL224:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3248              		.loc 1 2203 21 view .LVU902
 3249 0074 9868     		ldr	r0, [r3, #8]
 3250 0076 D968     		ldr	r1, [r3, #12]
 3251 0078 8160     		str	r1, [r0, #8]
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3252              		.loc 1 2203 21 view .LVU903
 3253 007a 9868     		ldr	r0, [r3, #8]
 3254 007c 4860     		str	r0, [r1, #4]
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3255              		.loc 1 2203 21 view .LVU904
 3256 007e 5168     		ldr	r1, [r2, #4]
 3257 0080 181D     		adds	r0, r3, #4
 3258 0082 8142     		cmp	r1, r0
 3259 0084 DAD0     		beq	.L241
 3260              	.L229:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3261              		.loc 1 2203 21 discriminator 3 view .LVU905
 3262 0086 0021     		movs	r1, #0
 3263 0088 5961     		str	r1, [r3, #20]
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3264              		.loc 1 2203 21 discriminator 3 view .LVU906
 3265 008a 1168     		ldr	r1, [r2]
 3266 008c 0139     		subs	r1, r1, #1
 3267 008e 1160     		str	r1, [r2]
 3268              	.LBE212:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3269              		.loc 1 2203 66 discriminator 3 view .LVU907
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3270              		.loc 1 2204 21 view .LVU908
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 171


2204:ThirdParty/FreeRTOS/tasks.c **** 
 3271              		.loc 1 2204 21 view .LVU909
 3272 0090 DA6A     		ldr	r2, [r3, #44]
 3273              	.LVL225:
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3274              		.loc 1 2204 21 is_stmt 0 view .LVU910
 3275 0092 0121     		movs	r1, #1
 3276 0094 9140     		lsls	r1, r1, r2
 3277 0096 284C     		ldr	r4, .L243+12
 3278 0098 2568     		ldr	r5, [r4]
 3279 009a 2943     		orrs	r1, r1, r5
 3280 009c 2160     		str	r1, [r4]
 3281              	.LBB213:
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3282              		.loc 1 2204 21 is_stmt 1 view .LVU911
 3283 009e 2749     		ldr	r1, .L243+16
 3284 00a0 02EB8202 		add	r2, r2, r2, lsl #2
 3285 00a4 01EB8202 		add	r2, r1, r2, lsl #2
 3286 00a8 5268     		ldr	r2, [r2, #4]
 3287              	.LVL226:
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3288              		.loc 1 2204 21 view .LVU912
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3289              		.loc 1 2204 21 view .LVU913
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3290              		.loc 1 2204 21 view .LVU914
 3291 00aa 9A60     		str	r2, [r3, #8]
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3292              		.loc 1 2204 21 view .LVU915
 3293 00ac 9468     		ldr	r4, [r2, #8]
 3294 00ae DC60     		str	r4, [r3, #12]
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3295              		.loc 1 2204 21 view .LVU916
 3296 00b0 6060     		str	r0, [r4, #4]
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3297              		.loc 1 2204 21 view .LVU917
 3298 00b2 9060     		str	r0, [r2, #8]
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3299              		.loc 1 2204 21 view .LVU918
 3300 00b4 DA6A     		ldr	r2, [r3, #44]
 3301              	.LVL227:
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3302              		.loc 1 2204 21 is_stmt 0 view .LVU919
 3303 00b6 02EB8200 		add	r0, r2, r2, lsl #2
 3304 00ba 8400     		lsls	r4, r0, #2
 3305 00bc 01EB8000 		add	r0, r1, r0, lsl #2
 3306 00c0 5861     		str	r0, [r3, #20]
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3307              		.loc 1 2204 21 is_stmt 1 view .LVU920
 3308 00c2 0859     		ldr	r0, [r1, r4]
 3309 00c4 0130     		adds	r0, r0, #1
 3310 00c6 0851     		str	r0, [r1, r4]
 3311              	.LBE213:
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3312              		.loc 1 2204 21 view .LVU921
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3313              		.loc 1 2204 51 view .LVU922
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 172


2208:ThirdParty/FreeRTOS/tasks.c ****                     {
 3314              		.loc 1 2208 21 view .LVU923
2208:ThirdParty/FreeRTOS/tasks.c ****                     {
 3315              		.loc 1 2208 30 is_stmt 0 view .LVU924
 3316 00c8 D96A     		ldr	r1, [r3, #44]
2208:ThirdParty/FreeRTOS/tasks.c ****                     {
 3317              		.loc 1 2208 58 view .LVU925
 3318 00ca 1D4A     		ldr	r2, .L243+20
 3319 00cc 1268     		ldr	r2, [r2]
 3320 00ce D26A     		ldr	r2, [r2, #44]
2208:ThirdParty/FreeRTOS/tasks.c ****                     {
 3321              		.loc 1 2208 23 view .LVU926
 3322 00d0 9142     		cmp	r1, r2
 3323 00d2 B7D3     		bcc	.L227
2210:ThirdParty/FreeRTOS/tasks.c ****                     }
 3324              		.loc 1 2210 25 is_stmt 1 view .LVU927
2210:ThirdParty/FreeRTOS/tasks.c ****                     }
 3325              		.loc 1 2210 39 is_stmt 0 view .LVU928
 3326 00d4 1B4A     		ldr	r2, .L243+24
 3327 00d6 0121     		movs	r1, #1
 3328 00d8 1160     		str	r1, [r2]
 3329 00da B3E7     		b	.L227
 3330              	.LVL228:
 3331              	.L239:
2218:ThirdParty/FreeRTOS/tasks.c ****                 {
 3332              		.loc 1 2218 17 is_stmt 1 view .LVU929
2218:ThirdParty/FreeRTOS/tasks.c ****                 {
 3333              		.loc 1 2218 19 is_stmt 0 view .LVU930
 3334 00dc 0BB1     		cbz	r3, .L232
2226:ThirdParty/FreeRTOS/tasks.c ****                 }
 3335              		.loc 1 2226 21 is_stmt 1 view .LVU931
 3336 00de FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3337              	.LVL229:
 3338              	.L232:
 3339              	.LBB214:
2234:ThirdParty/FreeRTOS/tasks.c **** 
 3340              		.loc 1 2234 21 view .LVU932
2234:ThirdParty/FreeRTOS/tasks.c **** 
 3341              		.loc 1 2234 32 is_stmt 0 view .LVU933
 3342 00e2 194B     		ldr	r3, .L243+28
 3343 00e4 1C68     		ldr	r4, [r3]
 3344              	.LVL230:
2236:ThirdParty/FreeRTOS/tasks.c ****                     {
 3345              		.loc 1 2236 21 is_stmt 1 view .LVU934
2236:ThirdParty/FreeRTOS/tasks.c ****                     {
 3346              		.loc 1 2236 23 is_stmt 0 view .LVU935
 3347 00e6 84B9     		cbnz	r4, .L235
 3348              	.L233:
2256:ThirdParty/FreeRTOS/tasks.c ****                     }
 3349              		.loc 1 2256 49 is_stmt 1 view .LVU936
 3350              	.LBE214:
2260:ThirdParty/FreeRTOS/tasks.c ****                 {
 3351              		.loc 1 2260 17 view .LVU937
2260:ThirdParty/FreeRTOS/tasks.c ****                 {
 3352              		.loc 1 2260 35 is_stmt 0 view .LVU938
 3353 00e8 164B     		ldr	r3, .L243+24
 3354 00ea 1C68     		ldr	r4, [r3]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 173


 3355              	.LVL231:
2260:ThirdParty/FreeRTOS/tasks.c ****                 {
 3356              		.loc 1 2260 19 view .LVU939
 3357 00ec D4B1     		cbz	r4, .L226
2264:ThirdParty/FreeRTOS/tasks.c ****                     }
 3358              		.loc 1 2264 25 is_stmt 1 view .LVU940
 3359              	.LVL232:
2267:ThirdParty/FreeRTOS/tasks.c ****                 }
 3360              		.loc 1 2267 21 view .LVU941
 3361 00ee 4FF0E023 		mov	r3, #-536813568
 3362 00f2 4FF08052 		mov	r2, #268435456
 3363 00f6 C3F8042D 		str	r2, [r3, #3332]
2267:ThirdParty/FreeRTOS/tasks.c ****                 }
 3364              		.loc 1 2267 21 view .LVU942
 3365              		.syntax unified
 3366              	@ 2267 "ThirdParty/FreeRTOS/tasks.c" 1
 3367 00fa BFF34F8F 		dsb
 3368              	@ 0 "" 2
2267:ThirdParty/FreeRTOS/tasks.c ****                 }
 3369              		.loc 1 2267 21 view .LVU943
 3370              	@ 2267 "ThirdParty/FreeRTOS/tasks.c" 1
 3371 00fe BFF36F8F 		isb
 3372              	@ 0 "" 2
2267:ThirdParty/FreeRTOS/tasks.c ****                 }
 3373              		.loc 1 2267 52 view .LVU944
2264:ThirdParty/FreeRTOS/tasks.c ****                     }
 3374              		.loc 1 2264 41 is_stmt 0 view .LVU945
 3375              		.thumb
 3376              		.syntax unified
 3377 0102 0124     		movs	r4, #1
 3378 0104 0EE0     		b	.L226
 3379              	.LVL233:
 3380              	.L234:
 3381              	.LBB215:
2246:ThirdParty/FreeRTOS/tasks.c ****                             }
 3382              		.loc 1 2246 57 is_stmt 1 view .LVU946
2249:ThirdParty/FreeRTOS/tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
 3383              		.loc 1 2249 29 view .LVU947
2250:ThirdParty/FreeRTOS/tasks.c **** 
 3384              		.loc 1 2250 48 view .LVU948
 3385 0106 013C     		subs	r4, r4, #1
 3386              	.LVL234:
2250:ThirdParty/FreeRTOS/tasks.c **** 
 3387              		.loc 1 2250 48 is_stmt 0 view .LVU949
 3388 0108 07D0     		beq	.L242
 3389              	.L235:
2238:ThirdParty/FreeRTOS/tasks.c ****                         {
 3390              		.loc 1 2238 25 is_stmt 1 view .LVU950
2240:ThirdParty/FreeRTOS/tasks.c ****                             {
 3391              		.loc 1 2240 29 view .LVU951
2240:ThirdParty/FreeRTOS/tasks.c ****                             {
 3392              		.loc 1 2240 33 is_stmt 0 view .LVU952
 3393 010a FFF7FEFF 		bl	xTaskIncrementTick
 3394              	.LVL235:
2240:ThirdParty/FreeRTOS/tasks.c ****                             {
 3395              		.loc 1 2240 31 discriminator 1 view .LVU953
 3396 010e 0028     		cmp	r0, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 174


 3397 0110 F9D0     		beq	.L234
2242:ThirdParty/FreeRTOS/tasks.c ****                             }
 3398              		.loc 1 2242 33 is_stmt 1 view .LVU954
2242:ThirdParty/FreeRTOS/tasks.c ****                             }
 3399              		.loc 1 2242 47 is_stmt 0 view .LVU955
 3400 0112 0C4B     		ldr	r3, .L243+24
 3401 0114 0122     		movs	r2, #1
 3402 0116 1A60     		str	r2, [r3]
 3403 0118 F5E7     		b	.L234
 3404              	.L242:
2252:ThirdParty/FreeRTOS/tasks.c ****                     }
 3405              		.loc 1 2252 25 is_stmt 1 view .LVU956
2252:ThirdParty/FreeRTOS/tasks.c ****                     }
 3406              		.loc 1 2252 38 is_stmt 0 view .LVU957
 3407 011a 0B4B     		ldr	r3, .L243+28
 3408 011c 0022     		movs	r2, #0
 3409 011e 1A60     		str	r2, [r3]
 3410 0120 E2E7     		b	.L233
 3411              	.LVL236:
 3412              	.L236:
2252:ThirdParty/FreeRTOS/tasks.c ****                     }
 3413              		.loc 1 2252 38 view .LVU958
 3414              	.LBE215:
2177:ThirdParty/FreeRTOS/tasks.c **** 
 3415              		.loc 1 2177 16 view .LVU959
 3416 0122 0024     		movs	r4, #0
 3417              	.LVL237:
 3418              	.L226:
2277:ThirdParty/FreeRTOS/tasks.c ****         }
 3419              		.loc 1 2277 37 is_stmt 1 view .LVU960
2280:ThirdParty/FreeRTOS/tasks.c **** 
 3420              		.loc 1 2280 5 view .LVU961
 3421 0124 FFF7FEFF 		bl	vPortExitCritical
 3422              	.LVL238:
2282:ThirdParty/FreeRTOS/tasks.c **** }
 3423              		.loc 1 2282 5 view .LVU962
2283:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3424              		.loc 1 2283 1 is_stmt 0 view .LVU963
 3425 0128 2046     		mov	r0, r4
 3426 012a 38BD     		pop	{r3, r4, r5, pc}
 3427              	.LVL239:
 3428              	.L244:
2283:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3429              		.loc 1 2283 1 view .LVU964
 3430              		.align	2
 3431              	.L243:
 3432 012c 00000000 		.word	uxSchedulerSuspended
 3433 0130 00000000 		.word	uxCurrentNumberOfTasks
 3434 0134 00000000 		.word	xPendingReadyList
 3435 0138 00000000 		.word	uxTopReadyPriority
 3436 013c 00000000 		.word	pxReadyTasksLists
 3437 0140 00000000 		.word	pxCurrentTCB
 3438 0144 00000000 		.word	xYieldPending
 3439 0148 00000000 		.word	xPendedTicks
 3440              		.cfi_endproc
 3441              	.LFE22:
 3443              		.section	.text.xTaskDelayUntil,"ax",%progbits
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 175


 3444              		.align	1
 3445              		.global	xTaskDelayUntil
 3446              		.syntax unified
 3447              		.thumb
 3448              		.thumb_func
 3450              	xTaskDelayUntil:
 3451              	.LVL240:
 3452              	.LFB9:
1216:ThirdParty/FreeRTOS/tasks.c ****         TickType_t xTimeToWake;
 3453              		.loc 1 1216 5 is_stmt 1 view -0
 3454              		.cfi_startproc
 3455              		@ args = 0, pretend = 0, frame = 0
 3456              		@ frame_needed = 0, uses_anonymous_args = 0
1216:ThirdParty/FreeRTOS/tasks.c ****         TickType_t xTimeToWake;
 3457              		.loc 1 1216 5 is_stmt 0 view .LVU966
 3458 0000 38B5     		push	{r3, r4, r5, lr}
 3459              	.LCFI26:
 3460              		.cfi_def_cfa_offset 16
 3461              		.cfi_offset 3, -16
 3462              		.cfi_offset 4, -12
 3463              		.cfi_offset 5, -8
 3464              		.cfi_offset 14, -4
1217:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
 3465              		.loc 1 1217 9 is_stmt 1 view .LVU967
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3466              		.loc 1 1218 9 view .LVU968
 3467              	.LVL241:
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3468              		.loc 1 1220 9 view .LVU969
 3469 0002 58B1     		cbz	r0, .L261
 3470 0004 0C46     		mov	r4, r1
 3471 0006 0546     		mov	r5, r0
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3472              		.loc 1 1220 43 discriminator 2 view .LVU970
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3473              		.loc 1 1221 9 view .LVU971
 3474 0008 89B9     		cbnz	r1, .L248
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3475              		.loc 1 1221 9 discriminator 1 view .LVU972
 3476              	.LBB216:
 3477              	.LBI216:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3478              		.loc 2 194 34 view .LVU973
 3479              	.LBB217:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3480              		.loc 2 196 9 view .LVU974
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3481              		.loc 2 198 9 view .LVU975
 3482              		.syntax unified
 3483              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3484 000a 4FF05003 			mov r3, #80												
 3485 000e 83F31188 		msr basepri, r3											
 3486 0012 BFF36F8F 		isb														
 3487 0016 BFF34F8F 		dsb														
 3488              	
 3489              	@ 0 "" 2
 3490              		.thumb
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 176


 3491              		.syntax unified
 3492              	.L249:
 3493              	.LBE217:
 3494              	.LBE216:
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3495              		.loc 1 1221 9 discriminator 3 view .LVU976
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3496              		.loc 1 1221 9 discriminator 3 view .LVU977
 3497 001a FEE7     		b	.L249
 3498              	.L261:
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3499              		.loc 1 1220 9 discriminator 1 view .LVU978
 3500              	.LBB218:
 3501              	.LBI218:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3502              		.loc 2 194 34 view .LVU979
 3503              	.LBB219:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3504              		.loc 2 196 9 view .LVU980
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3505              		.loc 2 198 9 view .LVU981
 3506              		.syntax unified
 3507              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3508 001c 4FF05003 			mov r3, #80												
 3509 0020 83F31188 		msr basepri, r3											
 3510 0024 BFF36F8F 		isb														
 3511 0028 BFF34F8F 		dsb														
 3512              	
 3513              	@ 0 "" 2
 3514              		.thumb
 3515              		.syntax unified
 3516              	.L247:
 3517              	.LBE219:
 3518              	.LBE218:
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3519              		.loc 1 1220 9 discriminator 3 view .LVU982
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3520              		.loc 1 1220 9 discriminator 3 view .LVU983
 3521 002c FEE7     		b	.L247
 3522              	.L248:
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3523              		.loc 1 1221 48 discriminator 2 view .LVU984
1222:ThirdParty/FreeRTOS/tasks.c **** 
 3524              		.loc 1 1222 9 view .LVU985
 3525 002e 1E4B     		ldr	r3, .L262
 3526 0030 1B68     		ldr	r3, [r3]
 3527 0032 43B1     		cbz	r3, .L250
1222:ThirdParty/FreeRTOS/tasks.c **** 
 3528              		.loc 1 1222 9 discriminator 1 view .LVU986
 3529              	.LBB220:
 3530              	.LBI220:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3531              		.loc 2 194 34 view .LVU987
 3532              	.LBB221:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3533              		.loc 2 196 9 view .LVU988
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 177


 3534              		.loc 2 198 9 view .LVU989
 3535              		.syntax unified
 3536              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3537 0034 4FF05003 			mov r3, #80												
 3538 0038 83F31188 		msr basepri, r3											
 3539 003c BFF36F8F 		isb														
 3540 0040 BFF34F8F 		dsb														
 3541              	
 3542              	@ 0 "" 2
 3543              		.thumb
 3544              		.syntax unified
 3545              	.L251:
 3546              	.LBE221:
 3547              	.LBE220:
1222:ThirdParty/FreeRTOS/tasks.c **** 
 3548              		.loc 1 1222 9 discriminator 3 view .LVU990
1222:ThirdParty/FreeRTOS/tasks.c **** 
 3549              		.loc 1 1222 9 discriminator 3 view .LVU991
 3550 0044 FEE7     		b	.L251
 3551              	.L250:
1222:ThirdParty/FreeRTOS/tasks.c **** 
 3552              		.loc 1 1222 50 discriminator 2 view .LVU992
1224:ThirdParty/FreeRTOS/tasks.c ****         {
 3553              		.loc 1 1224 9 view .LVU993
 3554 0046 FFF7FEFF 		bl	vTaskSuspendAll
 3555              	.LVL242:
 3556              	.LBB222:
1228:ThirdParty/FreeRTOS/tasks.c **** 
 3557              		.loc 1 1228 13 view .LVU994
1228:ThirdParty/FreeRTOS/tasks.c **** 
 3558              		.loc 1 1228 30 is_stmt 0 view .LVU995
 3559 004a 184B     		ldr	r3, .L262+4
 3560 004c 1868     		ldr	r0, [r3]
 3561              	.LVL243:
1231:ThirdParty/FreeRTOS/tasks.c **** 
 3562              		.loc 1 1231 13 is_stmt 1 view .LVU996
1231:ThirdParty/FreeRTOS/tasks.c **** 
 3563              		.loc 1 1231 27 is_stmt 0 view .LVU997
 3564 004e 2B68     		ldr	r3, [r5]
1231:ThirdParty/FreeRTOS/tasks.c **** 
 3565              		.loc 1 1231 25 view .LVU998
 3566 0050 1C44     		add	r4, r4, r3
 3567              	.LVL244:
1233:ThirdParty/FreeRTOS/tasks.c ****             {
 3568              		.loc 1 1233 13 is_stmt 1 view .LVU999
1233:ThirdParty/FreeRTOS/tasks.c ****             {
 3569              		.loc 1 1233 15 is_stmt 0 view .LVU1000
 3570 0052 8342     		cmp	r3, r0
 3571 0054 0BD9     		bls	.L252
1240:ThirdParty/FreeRTOS/tasks.c ****                 {
 3572              		.loc 1 1240 17 is_stmt 1 view .LVU1001
1240:ThirdParty/FreeRTOS/tasks.c ****                 {
 3573              		.loc 1 1240 19 is_stmt 0 view .LVU1002
 3574 0056 A342     		cmp	r3, r4
 3575 0058 02D8     		bhi	.L253
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3576              		.loc 1 1265 13 is_stmt 1 view .LVU1003
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 178


1265:ThirdParty/FreeRTOS/tasks.c **** 
 3577              		.loc 1 1265 33 is_stmt 0 view .LVU1004
 3578 005a 2C60     		str	r4, [r5]
1267:ThirdParty/FreeRTOS/tasks.c ****             {
 3579              		.loc 1 1267 13 is_stmt 1 view .LVU1005
 3580              	.LBE222:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3581              		.loc 1 1218 37 is_stmt 0 view .LVU1006
 3582 005c 0024     		movs	r4, #0
 3583              	.LVL245:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3584              		.loc 1 1218 37 view .LVU1007
 3585 005e 10E0     		b	.L254
 3586              	.LVL246:
 3587              	.L253:
 3588              	.LBB223:
1240:ThirdParty/FreeRTOS/tasks.c ****                 {
 3589              		.loc 1 1240 59 discriminator 1 view .LVU1008
 3590 0060 A042     		cmp	r0, r4
 3591 0062 02D3     		bcc	.L255
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3592              		.loc 1 1265 13 is_stmt 1 view .LVU1009
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3593              		.loc 1 1265 33 is_stmt 0 view .LVU1010
 3594 0064 2C60     		str	r4, [r5]
1267:ThirdParty/FreeRTOS/tasks.c ****             {
 3595              		.loc 1 1267 13 is_stmt 1 view .LVU1011
 3596              	.LBE223:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3597              		.loc 1 1218 37 is_stmt 0 view .LVU1012
 3598 0066 0024     		movs	r4, #0
 3599              	.LVL247:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3600              		.loc 1 1218 37 view .LVU1013
 3601 0068 0BE0     		b	.L254
 3602              	.LVL248:
 3603              	.L255:
 3604              	.LBB224:
1242:ThirdParty/FreeRTOS/tasks.c ****                 }
 3605              		.loc 1 1242 21 is_stmt 1 view .LVU1014
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3606              		.loc 1 1265 13 view .LVU1015
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3607              		.loc 1 1265 33 is_stmt 0 view .LVU1016
 3608 006a 2C60     		str	r4, [r5]
1267:ThirdParty/FreeRTOS/tasks.c ****             {
 3609              		.loc 1 1267 13 is_stmt 1 view .LVU1017
 3610 006c 04E0     		b	.L256
 3611              	.LVL249:
 3612              	.L252:
1254:ThirdParty/FreeRTOS/tasks.c ****                 {
 3613              		.loc 1 1254 17 view .LVU1018
1254:ThirdParty/FreeRTOS/tasks.c ****                 {
 3614              		.loc 1 1254 19 is_stmt 0 view .LVU1019
 3615 006e A342     		cmp	r3, r4
 3616 0070 01D8     		bhi	.L257
1254:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 179


 3617              		.loc 1 1254 59 discriminator 1 view .LVU1020
 3618 0072 A042     		cmp	r0, r4
 3619 0074 14D2     		bcs	.L258
 3620              	.L257:
1256:ThirdParty/FreeRTOS/tasks.c ****                 }
 3621              		.loc 1 1256 21 is_stmt 1 view .LVU1021
 3622              	.LVL250:
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3623              		.loc 1 1265 13 view .LVU1022
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3624              		.loc 1 1265 33 is_stmt 0 view .LVU1023
 3625 0076 2C60     		str	r4, [r5]
1267:ThirdParty/FreeRTOS/tasks.c ****             {
 3626              		.loc 1 1267 13 is_stmt 1 view .LVU1024
 3627              	.L256:
1269:ThirdParty/FreeRTOS/tasks.c **** 
 3628              		.loc 1 1269 53 view .LVU1025
1273:ThirdParty/FreeRTOS/tasks.c ****             }
 3629              		.loc 1 1273 17 view .LVU1026
 3630 0078 0021     		movs	r1, #0
 3631 007a 201A     		subs	r0, r4, r0
 3632              	.LVL251:
1273:ThirdParty/FreeRTOS/tasks.c ****             }
 3633              		.loc 1 1273 17 is_stmt 0 view .LVU1027
 3634 007c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3635              	.LVL252:
 3636 0080 0124     		movs	r4, #1
 3637              	.LVL253:
 3638              	.L254:
1277:ThirdParty/FreeRTOS/tasks.c ****             }
 3639              		.loc 1 1277 41 is_stmt 1 view .LVU1028
 3640              	.LBE224:
1280:ThirdParty/FreeRTOS/tasks.c **** 
 3641              		.loc 1 1280 9 view .LVU1029
1280:ThirdParty/FreeRTOS/tasks.c **** 
 3642              		.loc 1 1280 27 is_stmt 0 view .LVU1030
 3643 0082 FFF7FEFF 		bl	xTaskResumeAll
 3644              	.LVL254:
1284:ThirdParty/FreeRTOS/tasks.c ****         {
 3645              		.loc 1 1284 9 is_stmt 1 view .LVU1031
1284:ThirdParty/FreeRTOS/tasks.c ****         {
 3646              		.loc 1 1284 11 is_stmt 0 view .LVU1032
 3647 0086 48B9     		cbnz	r0, .L245
1286:ThirdParty/FreeRTOS/tasks.c ****         }
 3648              		.loc 1 1286 13 is_stmt 1 view .LVU1033
 3649 0088 4FF0E023 		mov	r3, #-536813568
 3650 008c 4FF08052 		mov	r2, #268435456
 3651 0090 C3F8042D 		str	r2, [r3, #3332]
1286:ThirdParty/FreeRTOS/tasks.c ****         }
 3652              		.loc 1 1286 13 view .LVU1034
 3653              		.syntax unified
 3654              	@ 1286 "ThirdParty/FreeRTOS/tasks.c" 1
 3655 0094 BFF34F8F 		dsb
 3656              	@ 0 "" 2
1286:ThirdParty/FreeRTOS/tasks.c ****         }
 3657              		.loc 1 1286 13 view .LVU1035
 3658              	@ 1286 "ThirdParty/FreeRTOS/tasks.c" 1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 180


 3659 0098 BFF36F8F 		isb
 3660              	@ 0 "" 2
1286:ThirdParty/FreeRTOS/tasks.c ****         }
 3661              		.loc 1 1286 35 view .LVU1036
1290:ThirdParty/FreeRTOS/tasks.c ****         }
 3662              		.loc 1 1290 37 view .LVU1037
1293:ThirdParty/FreeRTOS/tasks.c ****     }
 3663              		.loc 1 1293 9 view .LVU1038
 3664              		.thumb
 3665              		.syntax unified
 3666              	.L245:
1294:ThirdParty/FreeRTOS/tasks.c **** 
 3667              		.loc 1 1294 5 is_stmt 0 view .LVU1039
 3668 009c 2046     		mov	r0, r4
 3669              	.LVL255:
1294:ThirdParty/FreeRTOS/tasks.c **** 
 3670              		.loc 1 1294 5 view .LVU1040
 3671 009e 38BD     		pop	{r3, r4, r5, pc}
 3672              	.LVL256:
 3673              	.L258:
 3674              	.LBB225:
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3675              		.loc 1 1265 13 is_stmt 1 view .LVU1041
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3676              		.loc 1 1265 33 is_stmt 0 view .LVU1042
 3677 00a0 2C60     		str	r4, [r5]
1267:ThirdParty/FreeRTOS/tasks.c ****             {
 3678              		.loc 1 1267 13 is_stmt 1 view .LVU1043
 3679              	.LBE225:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3680              		.loc 1 1218 37 is_stmt 0 view .LVU1044
 3681 00a2 0024     		movs	r4, #0
 3682              	.LVL257:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3683              		.loc 1 1218 37 view .LVU1045
 3684 00a4 EDE7     		b	.L254
 3685              	.L263:
 3686 00a6 00BF     		.align	2
 3687              	.L262:
 3688 00a8 00000000 		.word	uxSchedulerSuspended
 3689 00ac 00000000 		.word	xTickCount
 3690              		.cfi_endproc
 3691              	.LFE9:
 3693              		.section	.text.vTaskDelay,"ax",%progbits
 3694              		.align	1
 3695              		.global	vTaskDelay
 3696              		.syntax unified
 3697              		.thumb
 3698              		.thumb_func
 3700              	vTaskDelay:
 3701              	.LVL258:
 3702              	.LFB10:
1302:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 3703              		.loc 1 1302 5 is_stmt 1 view -0
 3704              		.cfi_startproc
 3705              		@ args = 0, pretend = 0, frame = 0
 3706              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 181


1302:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 3707              		.loc 1 1302 5 is_stmt 0 view .LVU1047
 3708 0000 10B5     		push	{r4, lr}
 3709              	.LCFI27:
 3710              		.cfi_def_cfa_offset 8
 3711              		.cfi_offset 4, -8
 3712              		.cfi_offset 14, -4
1303:ThirdParty/FreeRTOS/tasks.c **** 
 3713              		.loc 1 1303 9 is_stmt 1 view .LVU1048
 3714              	.LVL259:
1306:ThirdParty/FreeRTOS/tasks.c ****         {
 3715              		.loc 1 1306 9 view .LVU1049
1306:ThirdParty/FreeRTOS/tasks.c ****         {
 3716              		.loc 1 1306 11 is_stmt 0 view .LVU1050
 3717 0002 A8B1     		cbz	r0, .L265
 3718 0004 0446     		mov	r4, r0
1308:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3719              		.loc 1 1308 13 is_stmt 1 view .LVU1051
 3720 0006 104B     		ldr	r3, .L270
 3721 0008 1B68     		ldr	r3, [r3]
 3722 000a 43B1     		cbz	r3, .L266
1308:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3723              		.loc 1 1308 13 discriminator 1 view .LVU1052
 3724              	.LBB226:
 3725              	.LBI226:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3726              		.loc 2 194 34 view .LVU1053
 3727              	.LBB227:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3728              		.loc 2 196 9 view .LVU1054
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3729              		.loc 2 198 9 view .LVU1055
 3730              		.syntax unified
 3731              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3732 000c 4FF05003 			mov r3, #80												
 3733 0010 83F31188 		msr basepri, r3											
 3734 0014 BFF36F8F 		isb														
 3735 0018 BFF34F8F 		dsb														
 3736              	
 3737              	@ 0 "" 2
 3738              		.thumb
 3739              		.syntax unified
 3740              	.L267:
 3741              	.LBE227:
 3742              	.LBE226:
1308:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3743              		.loc 1 1308 13 discriminator 3 view .LVU1056
1308:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3744              		.loc 1 1308 13 discriminator 3 view .LVU1057
 3745 001c FEE7     		b	.L267
 3746              	.L266:
1308:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3747              		.loc 1 1308 54 discriminator 2 view .LVU1058
1309:ThirdParty/FreeRTOS/tasks.c ****             {
 3748              		.loc 1 1309 13 view .LVU1059
 3749 001e FFF7FEFF 		bl	vTaskSuspendAll
 3750              	.LVL260:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 182


1311:ThirdParty/FreeRTOS/tasks.c **** 
 3751              		.loc 1 1311 34 view .LVU1060
1320:ThirdParty/FreeRTOS/tasks.c ****             }
 3752              		.loc 1 1320 17 view .LVU1061
 3753 0022 0021     		movs	r1, #0
 3754 0024 2046     		mov	r0, r4
 3755 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3756              	.LVL261:
1322:ThirdParty/FreeRTOS/tasks.c ****         }
 3757              		.loc 1 1322 13 view .LVU1062
1322:ThirdParty/FreeRTOS/tasks.c ****         }
 3758              		.loc 1 1322 31 is_stmt 0 view .LVU1063
 3759 002a FFF7FEFF 		bl	xTaskResumeAll
 3760              	.LVL262:
1326:ThirdParty/FreeRTOS/tasks.c ****         }
 3761              		.loc 1 1326 37 is_stmt 1 view .LVU1064
1331:ThirdParty/FreeRTOS/tasks.c ****         {
 3762              		.loc 1 1331 9 view .LVU1065
1331:ThirdParty/FreeRTOS/tasks.c ****         {
 3763              		.loc 1 1331 11 is_stmt 0 view .LVU1066
 3764 002e 48B9     		cbnz	r0, .L264
 3765              	.LVL263:
 3766              	.L265:
1333:ThirdParty/FreeRTOS/tasks.c ****         }
 3767              		.loc 1 1333 13 is_stmt 1 view .LVU1067
 3768 0030 4FF0E023 		mov	r3, #-536813568
 3769 0034 4FF08052 		mov	r2, #268435456
 3770 0038 C3F8042D 		str	r2, [r3, #3332]
1333:ThirdParty/FreeRTOS/tasks.c ****         }
 3771              		.loc 1 1333 13 view .LVU1068
 3772              		.syntax unified
 3773              	@ 1333 "ThirdParty/FreeRTOS/tasks.c" 1
 3774 003c BFF34F8F 		dsb
 3775              	@ 0 "" 2
1333:ThirdParty/FreeRTOS/tasks.c ****         }
 3776              		.loc 1 1333 13 view .LVU1069
 3777              	@ 1333 "ThirdParty/FreeRTOS/tasks.c" 1
 3778 0040 BFF36F8F 		isb
 3779              	@ 0 "" 2
1333:ThirdParty/FreeRTOS/tasks.c ****         }
 3780              		.loc 1 1333 35 view .LVU1070
1337:ThirdParty/FreeRTOS/tasks.c ****         }
 3781              		.loc 1 1337 37 view .LVU1071
 3782              		.thumb
 3783              		.syntax unified
 3784              	.L264:
1339:ThirdParty/FreeRTOS/tasks.c **** 
 3785              		.loc 1 1339 5 is_stmt 0 view .LVU1072
 3786 0044 10BD     		pop	{r4, pc}
 3787              	.L271:
 3788 0046 00BF     		.align	2
 3789              	.L270:
 3790 0048 00000000 		.word	uxSchedulerSuspended
 3791              		.cfi_endproc
 3792              	.LFE10:
 3794              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3795              		.align	1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 183


 3796              		.global	xTaskCatchUpTicks
 3797              		.syntax unified
 3798              		.thumb
 3799              		.thumb_func
 3801              	xTaskCatchUpTicks:
 3802              	.LVL264:
 3803              	.LFB28:
2617:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
 3804              		.loc 1 2617 1 is_stmt 1 view -0
 3805              		.cfi_startproc
 3806              		@ args = 0, pretend = 0, frame = 0
 3807              		@ frame_needed = 0, uses_anonymous_args = 0
2618:ThirdParty/FreeRTOS/tasks.c **** 
 3808              		.loc 1 2618 5 view .LVU1074
2622:ThirdParty/FreeRTOS/tasks.c **** 
 3809              		.loc 1 2622 5 view .LVU1075
 3810 0000 0D4B     		ldr	r3, .L277
 3811 0002 1B68     		ldr	r3, [r3]
 3812 0004 43B1     		cbz	r3, .L273
2622:ThirdParty/FreeRTOS/tasks.c **** 
 3813              		.loc 1 2622 5 discriminator 1 view .LVU1076
 3814              	.LBB228:
 3815              	.LBI228:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3816              		.loc 2 194 34 view .LVU1077
 3817              	.LBB229:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3818              		.loc 2 196 9 view .LVU1078
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3819              		.loc 2 198 9 view .LVU1079
 3820              		.syntax unified
 3821              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3822 0006 4FF05003 			mov r3, #80												
 3823 000a 83F31188 		msr basepri, r3											
 3824 000e BFF36F8F 		isb														
 3825 0012 BFF34F8F 		dsb														
 3826              	
 3827              	@ 0 "" 2
 3828              		.thumb
 3829              		.syntax unified
 3830              	.L274:
 3831              	.LBE229:
 3832              	.LBE228:
2622:ThirdParty/FreeRTOS/tasks.c **** 
 3833              		.loc 1 2622 5 discriminator 3 view .LVU1080
2622:ThirdParty/FreeRTOS/tasks.c **** 
 3834              		.loc 1 2622 5 discriminator 3 view .LVU1081
 3835 0016 FEE7     		b	.L274
 3836              	.L273:
2617:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
 3837              		.loc 1 2617 1 is_stmt 0 view .LVU1082
 3838 0018 10B5     		push	{r4, lr}
 3839              	.LCFI28:
 3840              		.cfi_def_cfa_offset 8
 3841              		.cfi_offset 4, -8
 3842              		.cfi_offset 14, -4
 3843 001a 0446     		mov	r4, r0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 184


2622:ThirdParty/FreeRTOS/tasks.c **** 
 3844              		.loc 1 2622 46 is_stmt 1 discriminator 2 view .LVU1083
2626:ThirdParty/FreeRTOS/tasks.c **** 
 3845              		.loc 1 2626 5 view .LVU1084
 3846 001c FFF7FEFF 		bl	vTaskSuspendAll
 3847              	.LVL265:
2629:ThirdParty/FreeRTOS/tasks.c ****     {
 3848              		.loc 1 2629 5 view .LVU1085
 3849 0020 FFF7FEFF 		bl	vPortEnterCritical
 3850              	.LVL266:
2631:ThirdParty/FreeRTOS/tasks.c ****     }
 3851              		.loc 1 2631 9 view .LVU1086
2631:ThirdParty/FreeRTOS/tasks.c ****     }
 3852              		.loc 1 2631 22 is_stmt 0 view .LVU1087
 3853 0024 054A     		ldr	r2, .L277+4
 3854 0026 1368     		ldr	r3, [r2]
 3855 0028 2344     		add	r3, r3, r4
 3856 002a 1360     		str	r3, [r2]
2633:ThirdParty/FreeRTOS/tasks.c ****     xYieldOccurred = xTaskResumeAll();
 3857              		.loc 1 2633 5 is_stmt 1 view .LVU1088
 3858 002c FFF7FEFF 		bl	vPortExitCritical
 3859              	.LVL267:
2634:ThirdParty/FreeRTOS/tasks.c **** 
 3860              		.loc 1 2634 5 view .LVU1089
2634:ThirdParty/FreeRTOS/tasks.c **** 
 3861              		.loc 1 2634 22 is_stmt 0 view .LVU1090
 3862 0030 FFF7FEFF 		bl	xTaskResumeAll
 3863              	.LVL268:
2636:ThirdParty/FreeRTOS/tasks.c **** }
 3864              		.loc 1 2636 5 is_stmt 1 view .LVU1091
2637:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 3865              		.loc 1 2637 1 is_stmt 0 view .LVU1092
 3866 0034 10BD     		pop	{r4, pc}
 3867              	.LVL269:
 3868              	.L278:
2637:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 3869              		.loc 1 2637 1 view .LVU1093
 3870 0036 00BF     		.align	2
 3871              	.L277:
 3872 0038 00000000 		.word	uxSchedulerSuspended
 3873 003c 00000000 		.word	xPendedTicks
 3874              		.cfi_endproc
 3875              	.LFE28:
 3877              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3878              		.align	1
 3879              		.global	vTaskSwitchContext
 3880              		.syntax unified
 3881              		.thumb
 3882              		.thumb_func
 3884              	vTaskSwitchContext:
 3885              	.LFB30:
3010:ThirdParty/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3886              		.loc 1 3010 1 is_stmt 1 view -0
 3887              		.cfi_startproc
 3888              		@ args = 0, pretend = 0, frame = 0
 3889              		@ frame_needed = 0, uses_anonymous_args = 0
 3890              		@ link register save eliminated.
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 185


3011:ThirdParty/FreeRTOS/tasks.c ****     {
 3891              		.loc 1 3011 5 view .LVU1095
3011:ThirdParty/FreeRTOS/tasks.c ****     {
 3892              		.loc 1 3011 30 is_stmt 0 view .LVU1096
 3893 0000 204B     		ldr	r3, .L286
 3894 0002 1B68     		ldr	r3, [r3]
3011:ThirdParty/FreeRTOS/tasks.c ****     {
 3895              		.loc 1 3011 7 view .LVU1097
 3896 0004 1BB1     		cbz	r3, .L280
3015:ThirdParty/FreeRTOS/tasks.c ****     }
 3897              		.loc 1 3015 9 is_stmt 1 view .LVU1098
3015:ThirdParty/FreeRTOS/tasks.c ****     }
 3898              		.loc 1 3015 23 is_stmt 0 view .LVU1099
 3899 0006 204B     		ldr	r3, .L286+4
 3900 0008 0122     		movs	r2, #1
 3901 000a 1A60     		str	r2, [r3]
 3902 000c 7047     		bx	lr
 3903              	.L280:
3019:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
 3904              		.loc 1 3019 9 is_stmt 1 view .LVU1100
3019:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
 3905              		.loc 1 3019 23 is_stmt 0 view .LVU1101
 3906 000e 1E4B     		ldr	r3, .L286+4
 3907 0010 0022     		movs	r2, #0
 3908 0012 1A60     		str	r2, [r3]
3020:ThirdParty/FreeRTOS/tasks.c **** 
 3909              		.loc 1 3020 33 is_stmt 1 view .LVU1102
3051:ThirdParty/FreeRTOS/tasks.c **** 
 3910              		.loc 1 3051 39 view .LVU1103
 3911              	.LBB230:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3912              		.loc 1 3062 9 view .LVU1104
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3913              		.loc 1 3062 9 view .LVU1105
 3914 0014 1D4B     		ldr	r3, .L286+8
 3915 0016 1B68     		ldr	r3, [r3]
 3916              	.LVL270:
 3917              	.LBB231:
 3918              	.LBI231:
 132:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 3919              		.loc 2 132 66 view .LVU1106
 3920              	.LBB232:
 134:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3921              		.loc 2 134 13 view .LVU1107
 136:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3922              		.loc 2 136 13 view .LVU1108
 3923              		.syntax unified
 3924              	@ 136 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3925 0018 B3FA83F3 		clz r3, r3
 3926              	@ 0 "" 2
 3927              	.LVL271:
 136:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3928              		.loc 2 136 13 is_stmt 0 view .LVU1109
 3929              		.thumb
 3930              		.syntax unified
 3931 001c DBB2     		uxtb	r3, r3
 3932              	.LVL272:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 186


 138:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 3933              		.loc 2 138 13 is_stmt 1 view .LVU1110
 138:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 3934              		.loc 2 138 13 is_stmt 0 view .LVU1111
 3935              	.LBE232:
 3936              	.LBE231:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3937              		.loc 1 3062 9 discriminator 1 view .LVU1112
 3938 001e C3F11F03 		rsb	r3, r3, #31
 3939              	.LVL273:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3940              		.loc 1 3062 9 is_stmt 1 discriminator 1 view .LVU1113
 3941 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3942 0026 8A00     		lsls	r2, r1, #2
 3943 0028 1949     		ldr	r1, .L286+12
 3944 002a 8A58     		ldr	r2, [r1, r2]
 3945 002c 42B9     		cbnz	r2, .L282
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3946              		.loc 1 3062 9 discriminator 1 view .LVU1114
 3947              	.LBB233:
 3948              	.LBI233:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3949              		.loc 2 194 34 view .LVU1115
 3950              	.LBB234:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3951              		.loc 2 196 9 view .LVU1116
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3952              		.loc 2 198 9 view .LVU1117
 3953              		.syntax unified
 3954              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3955 002e 4FF05003 			mov r3, #80												
 3956 0032 83F31188 		msr basepri, r3											
 3957 0036 BFF36F8F 		isb														
 3958 003a BFF34F8F 		dsb														
 3959              	
 3960              	@ 0 "" 2
 3961              	.LVL274:
 3962              		.thumb
 3963              		.syntax unified
 3964              	.L283:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3965              		.loc 2 198 9 is_stmt 0 view .LVU1118
 3966              	.LBE234:
 3967              	.LBE233:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3968              		.loc 1 3062 9 is_stmt 1 discriminator 3 view .LVU1119
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3969              		.loc 1 3062 9 discriminator 3 view .LVU1120
 3970 003e FEE7     		b	.L283
 3971              	.LVL275:
 3972              	.L282:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3973              		.loc 1 3062 9 discriminator 2 view .LVU1121
 3974              	.LBB235:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3975              		.loc 1 3062 9 discriminator 2 view .LVU1122
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 187


 3976              		.loc 1 3062 9 discriminator 2 view .LVU1123
 3977 0040 1348     		ldr	r0, .L286+12
 3978 0042 03EB8301 		add	r1, r3, r3, lsl #2
 3979 0046 8A00     		lsls	r2, r1, #2
 3980 0048 0244     		add	r2, r2, r0
 3981 004a 5168     		ldr	r1, [r2, #4]
 3982 004c 4968     		ldr	r1, [r1, #4]
 3983 004e 5160     		str	r1, [r2, #4]
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3984              		.loc 1 3062 9 discriminator 2 view .LVU1124
 3985 0050 03EB830C 		add	ip, r3, r3, lsl #2
 3986 0054 4FEA8C02 		lsl	r2, ip, #2
 3987 0058 0832     		adds	r2, r2, #8
 3988 005a 0244     		add	r2, r2, r0
 3989 005c 9142     		cmp	r1, r2
 3990 005e 09D0     		beq	.L285
 3991              	.L284:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3992              		.loc 1 3062 9 discriminator 6 view .LVU1125
 3993 0060 03EB8303 		add	r3, r3, r3, lsl #2
 3994              	.LVL276:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3995              		.loc 1 3062 9 is_stmt 0 discriminator 6 view .LVU1126
 3996 0064 9A00     		lsls	r2, r3, #2
 3997 0066 0A4B     		ldr	r3, .L286+12
 3998 0068 1344     		add	r3, r3, r2
 3999 006a 5B68     		ldr	r3, [r3, #4]
 4000 006c DA68     		ldr	r2, [r3, #12]
 4001 006e 094B     		ldr	r3, .L286+16
 4002 0070 1A60     		str	r2, [r3]
 4003              	.LBE235:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4004              		.loc 1 3062 9 is_stmt 1 discriminator 7 view .LVU1127
 4005              	.LBE230:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4006              		.loc 1 3062 43 discriminator 7 view .LVU1128
3063:ThirdParty/FreeRTOS/tasks.c **** 
 4007              		.loc 1 3063 32 view .LVU1129
3080:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4008              		.loc 1 3080 1 is_stmt 0 view .LVU1130
 4009 0072 7047     		bx	lr
 4010              	.LVL277:
 4011              	.L285:
 4012              	.LBB237:
 4013              	.LBB236:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4014              		.loc 1 3062 9 is_stmt 1 discriminator 4 view .LVU1131
 4015 0074 4868     		ldr	r0, [r1, #4]
 4016 0076 6246     		mov	r2, ip
 4017 0078 9100     		lsls	r1, r2, #2
 4018 007a 054A     		ldr	r2, .L286+12
 4019 007c 0A44     		add	r2, r2, r1
 4020 007e 5060     		str	r0, [r2, #4]
 4021 0080 EEE7     		b	.L284
 4022              	.L287:
 4023 0082 00BF     		.align	2
 4024              	.L286:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 188


 4025 0084 00000000 		.word	uxSchedulerSuspended
 4026 0088 00000000 		.word	xYieldPending
 4027 008c 00000000 		.word	uxTopReadyPriority
 4028 0090 00000000 		.word	pxReadyTasksLists
 4029 0094 00000000 		.word	pxCurrentTCB
 4030              	.LBE236:
 4031              	.LBE237:
 4032              		.cfi_endproc
 4033              	.LFE30:
 4035              		.section	.text.vTaskSuspend,"ax",%progbits
 4036              		.align	1
 4037              		.global	vTaskSuspend
 4038              		.syntax unified
 4039              		.thumb
 4040              		.thumb_func
 4042              	vTaskSuspend:
 4043              	.LVL278:
 4044              	.LFB15:
1674:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 4045              		.loc 1 1674 5 view -0
 4046              		.cfi_startproc
 4047              		@ args = 0, pretend = 0, frame = 0
 4048              		@ frame_needed = 0, uses_anonymous_args = 0
1674:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 4049              		.loc 1 1674 5 is_stmt 0 view .LVU1133
 4050 0000 38B5     		push	{r3, r4, r5, lr}
 4051              	.LCFI29:
 4052              		.cfi_def_cfa_offset 16
 4053              		.cfi_offset 3, -16
 4054              		.cfi_offset 4, -12
 4055              		.cfi_offset 5, -8
 4056              		.cfi_offset 14, -4
 4057 0002 0446     		mov	r4, r0
1675:ThirdParty/FreeRTOS/tasks.c **** 
 4058              		.loc 1 1675 9 is_stmt 1 view .LVU1134
1677:ThirdParty/FreeRTOS/tasks.c ****         {
 4059              		.loc 1 1677 9 view .LVU1135
 4060 0004 FFF7FEFF 		bl	vPortEnterCritical
 4061              	.LVL279:
1681:ThirdParty/FreeRTOS/tasks.c **** 
 4062              		.loc 1 1681 13 view .LVU1136
1681:ThirdParty/FreeRTOS/tasks.c **** 
 4063              		.loc 1 1681 21 is_stmt 0 view .LVU1137
 4064 0008 54B3     		cbz	r4, .L302
 4065              	.LVL280:
 4066              	.L289:
1683:ThirdParty/FreeRTOS/tasks.c **** 
 4067              		.loc 1 1683 39 is_stmt 1 view .LVU1138
1687:ThirdParty/FreeRTOS/tasks.c ****             {
 4068              		.loc 1 1687 13 view .LVU1139
1687:ThirdParty/FreeRTOS/tasks.c ****             {
 4069              		.loc 1 1687 17 is_stmt 0 view .LVU1140
 4070 000a 251D     		adds	r5, r4, #4
 4071 000c 2846     		mov	r0, r5
 4072 000e FFF7FEFF 		bl	uxListRemove
 4073              	.LVL281:
1687:ThirdParty/FreeRTOS/tasks.c ****             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 189


 4074              		.loc 1 1687 15 discriminator 1 view .LVU1141
 4075 0012 70B9     		cbnz	r0, .L290
1689:ThirdParty/FreeRTOS/tasks.c ****             }
 4076              		.loc 1 1689 17 is_stmt 1 view .LVU1142
 4077 0014 E26A     		ldr	r2, [r4, #44]
 4078 0016 02EB8203 		add	r3, r2, r2, lsl #2
 4079 001a 9B00     		lsls	r3, r3, #2
 4080 001c 2F49     		ldr	r1, .L306
 4081 001e CB58     		ldr	r3, [r1, r3]
 4082 0020 3BB9     		cbnz	r3, .L290
1689:ThirdParty/FreeRTOS/tasks.c ****             }
 4083              		.loc 1 1689 17 discriminator 1 view .LVU1143
 4084 0022 0123     		movs	r3, #1
 4085 0024 03FA02F2 		lsl	r2, r3, r2
 4086 0028 2D49     		ldr	r1, .L306+4
 4087 002a 0B68     		ldr	r3, [r1]
 4088 002c 23EA0203 		bic	r3, r3, r2
 4089 0030 0B60     		str	r3, [r1]
 4090              	.L290:
1693:ThirdParty/FreeRTOS/tasks.c ****             }
 4091              		.loc 1 1693 41 view .LVU1144
1697:ThirdParty/FreeRTOS/tasks.c ****             {
 4092              		.loc 1 1697 13 view .LVU1145
1697:ThirdParty/FreeRTOS/tasks.c ****             {
 4093              		.loc 1 1697 17 is_stmt 0 view .LVU1146
 4094 0032 A36A     		ldr	r3, [r4, #40]
1697:ThirdParty/FreeRTOS/tasks.c ****             {
 4095              		.loc 1 1697 15 view .LVU1147
 4096 0034 1BB1     		cbz	r3, .L291
1699:ThirdParty/FreeRTOS/tasks.c ****             }
 4097              		.loc 1 1699 17 is_stmt 1 view .LVU1148
1699:ThirdParty/FreeRTOS/tasks.c ****             }
 4098              		.loc 1 1699 26 is_stmt 0 view .LVU1149
 4099 0036 04F11800 		add	r0, r4, #24
 4100 003a FFF7FEFF 		bl	uxListRemove
 4101              	.LVL282:
 4102              	.L291:
1703:ThirdParty/FreeRTOS/tasks.c ****             }
 4103              		.loc 1 1703 41 is_stmt 1 view .LVU1150
1706:ThirdParty/FreeRTOS/tasks.c **** 
 4104              		.loc 1 1706 13 view .LVU1151
 4105 003e 2946     		mov	r1, r5
 4106 0040 2848     		ldr	r0, .L306+8
 4107 0042 FFF7FEFF 		bl	vListInsertEnd
 4108              	.LVL283:
 4109              	.LBB238:
1710:ThirdParty/FreeRTOS/tasks.c **** 
 4110              		.loc 1 1710 17 view .LVU1152
1712:ThirdParty/FreeRTOS/tasks.c ****                 {
 4111              		.loc 1 1712 17 view .LVU1153
1712:ThirdParty/FreeRTOS/tasks.c ****                 {
 4112              		.loc 1 1712 24 is_stmt 0 view .LVU1154
 4113 0046 0023     		movs	r3, #0
 4114              	.LVL284:
 4115              	.L292:
1712:ThirdParty/FreeRTOS/tasks.c ****                 {
 4116              		.loc 1 1712 31 is_stmt 1 discriminator 1 view .LVU1155
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 190


 4117 0048 002B     		cmp	r3, #0
 4118 004a 0CDD     		ble	.L294
 4119              	.LBE238:
1724:ThirdParty/FreeRTOS/tasks.c **** 
 4120              		.loc 1 1724 9 view .LVU1156
 4121 004c FFF7FEFF 		bl	vPortExitCritical
 4122              	.LVL285:
1726:ThirdParty/FreeRTOS/tasks.c ****         {
 4123              		.loc 1 1726 9 view .LVU1157
1726:ThirdParty/FreeRTOS/tasks.c ****         {
 4124              		.loc 1 1726 31 is_stmt 0 view .LVU1158
 4125 0050 254B     		ldr	r3, .L306+12
 4126 0052 1B68     		ldr	r3, [r3]
1726:ThirdParty/FreeRTOS/tasks.c ****         {
 4127              		.loc 1 1726 11 view .LVU1159
 4128 0054 A3B9     		cbnz	r3, .L303
 4129              	.L295:
1738:ThirdParty/FreeRTOS/tasks.c ****         }
 4130              		.loc 1 1738 37 is_stmt 1 view .LVU1160
1741:ThirdParty/FreeRTOS/tasks.c ****         {
 4131              		.loc 1 1741 9 view .LVU1161
1741:ThirdParty/FreeRTOS/tasks.c ****         {
 4132              		.loc 1 1741 19 is_stmt 0 view .LVU1162
 4133 0056 254B     		ldr	r3, .L306+16
 4134 0058 1B68     		ldr	r3, [r3]
1741:ThirdParty/FreeRTOS/tasks.c ****         {
 4135              		.loc 1 1741 11 view .LVU1163
 4136 005a A342     		cmp	r3, r4
 4137 005c 17D0     		beq	.L304
 4138              	.L288:
1772:ThirdParty/FreeRTOS/tasks.c **** 
 4139              		.loc 1 1772 5 view .LVU1164
 4140 005e 38BD     		pop	{r3, r4, r5, pc}
 4141              	.LVL286:
 4142              	.L302:
1681:ThirdParty/FreeRTOS/tasks.c **** 
 4143              		.loc 1 1681 21 discriminator 1 view .LVU1165
 4144 0060 224B     		ldr	r3, .L306+16
 4145 0062 1C68     		ldr	r4, [r3]
 4146              	.LVL287:
1681:ThirdParty/FreeRTOS/tasks.c **** 
 4147              		.loc 1 1681 21 discriminator 1 view .LVU1166
 4148 0064 D1E7     		b	.L289
 4149              	.LVL288:
 4150              	.L294:
 4151              	.LBB239:
1714:ThirdParty/FreeRTOS/tasks.c ****                     {
 4152              		.loc 1 1714 21 is_stmt 1 view .LVU1167
1714:ThirdParty/FreeRTOS/tasks.c ****                     {
 4153              		.loc 1 1714 45 is_stmt 0 view .LVU1168
 4154 0066 E218     		adds	r2, r4, r3
 4155 0068 92F85420 		ldrb	r2, [r2, #84]	@ zero_extendqisi2
 4156 006c D2B2     		uxtb	r2, r2
1714:ThirdParty/FreeRTOS/tasks.c ****                     {
 4157              		.loc 1 1714 23 view .LVU1169
 4158 006e 012A     		cmp	r2, #1
 4159 0070 01D0     		beq	.L305
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 191


 4160              	.L293:
1712:ThirdParty/FreeRTOS/tasks.c ****                 {
 4161              		.loc 1 1712 73 is_stmt 1 discriminator 2 view .LVU1170
 4162 0072 0133     		adds	r3, r3, #1
 4163              	.LVL289:
1712:ThirdParty/FreeRTOS/tasks.c ****                 {
 4164              		.loc 1 1712 73 is_stmt 0 discriminator 2 view .LVU1171
 4165 0074 E8E7     		b	.L292
 4166              	.L305:
1718:ThirdParty/FreeRTOS/tasks.c ****                     }
 4167              		.loc 1 1718 25 is_stmt 1 view .LVU1172
1718:ThirdParty/FreeRTOS/tasks.c ****                     }
 4168              		.loc 1 1718 51 is_stmt 0 view .LVU1173
 4169 0076 E218     		adds	r2, r4, r3
 4170 0078 0021     		movs	r1, #0
 4171 007a 82F85410 		strb	r1, [r2, #84]
 4172 007e F8E7     		b	.L293
 4173              	.LVL290:
 4174              	.L303:
1718:ThirdParty/FreeRTOS/tasks.c ****                     }
 4175              		.loc 1 1718 51 view .LVU1174
 4176              	.LBE239:
1730:ThirdParty/FreeRTOS/tasks.c ****             {
 4177              		.loc 1 1730 13 is_stmt 1 view .LVU1175
 4178 0080 FFF7FEFF 		bl	vPortEnterCritical
 4179              	.LVL291:
1732:ThirdParty/FreeRTOS/tasks.c ****             }
 4180              		.loc 1 1732 17 view .LVU1176
 4181 0084 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 4182              	.LVL292:
1734:ThirdParty/FreeRTOS/tasks.c ****         }
 4183              		.loc 1 1734 13 view .LVU1177
 4184 0088 FFF7FEFF 		bl	vPortExitCritical
 4185              	.LVL293:
 4186 008c E3E7     		b	.L295
 4187              	.L304:
1743:ThirdParty/FreeRTOS/tasks.c ****             {
 4188              		.loc 1 1743 13 view .LVU1178
1743:ThirdParty/FreeRTOS/tasks.c ****             {
 4189              		.loc 1 1743 35 is_stmt 0 view .LVU1179
 4190 008e 164B     		ldr	r3, .L306+12
 4191 0090 1B68     		ldr	r3, [r3]
1743:ThirdParty/FreeRTOS/tasks.c ****             {
 4192              		.loc 1 1743 15 view .LVU1180
 4193 0092 B3B1     		cbz	r3, .L297
1746:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4194              		.loc 1 1746 17 is_stmt 1 view .LVU1181
 4195 0094 164B     		ldr	r3, .L306+20
 4196 0096 1B68     		ldr	r3, [r3]
 4197 0098 43B1     		cbz	r3, .L298
1746:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4198              		.loc 1 1746 17 discriminator 1 view .LVU1182
 4199              	.LBB240:
 4200              	.LBI240:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4201              		.loc 2 194 34 view .LVU1183
 4202              	.LBB241:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 192


 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4203              		.loc 2 196 9 view .LVU1184
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4204              		.loc 2 198 9 view .LVU1185
 4205              		.syntax unified
 4206              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4207 009a 4FF05003 			mov r3, #80												
 4208 009e 83F31188 		msr basepri, r3											
 4209 00a2 BFF36F8F 		isb														
 4210 00a6 BFF34F8F 		dsb														
 4211              	
 4212              	@ 0 "" 2
 4213              		.thumb
 4214              		.syntax unified
 4215              	.L299:
 4216              	.LBE241:
 4217              	.LBE240:
1746:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4218              		.loc 1 1746 17 discriminator 3 view .LVU1186
1746:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4219              		.loc 1 1746 17 discriminator 3 view .LVU1187
 4220 00aa FEE7     		b	.L299
 4221              	.L298:
1746:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4222              		.loc 1 1746 58 discriminator 2 view .LVU1188
1747:ThirdParty/FreeRTOS/tasks.c ****             }
 4223              		.loc 1 1747 17 view .LVU1189
 4224 00ac 4FF0E023 		mov	r3, #-536813568
 4225 00b0 4FF08052 		mov	r2, #268435456
 4226 00b4 C3F8042D 		str	r2, [r3, #3332]
1747:ThirdParty/FreeRTOS/tasks.c ****             }
 4227              		.loc 1 1747 17 view .LVU1190
 4228              		.syntax unified
 4229              	@ 1747 "ThirdParty/FreeRTOS/tasks.c" 1
 4230 00b8 BFF34F8F 		dsb
 4231              	@ 0 "" 2
1747:ThirdParty/FreeRTOS/tasks.c ****             }
 4232              		.loc 1 1747 17 view .LVU1191
 4233              	@ 1747 "ThirdParty/FreeRTOS/tasks.c" 1
 4234 00bc BFF36F8F 		isb
 4235              	@ 0 "" 2
1747:ThirdParty/FreeRTOS/tasks.c ****             }
 4236              		.loc 1 1747 39 view .LVU1192
 4237              		.thumb
 4238              		.syntax unified
 4239 00c0 CDE7     		b	.L288
 4240              	.L297:
1754:ThirdParty/FreeRTOS/tasks.c ****                 {
 4241              		.loc 1 1754 17 view .LVU1193
1754:ThirdParty/FreeRTOS/tasks.c ****                 {
 4242              		.loc 1 1754 21 is_stmt 0 view .LVU1194
 4243 00c2 084B     		ldr	r3, .L306+8
 4244 00c4 1A68     		ldr	r2, [r3]
1754:ThirdParty/FreeRTOS/tasks.c ****                 {
 4245              		.loc 1 1754 68 view .LVU1195
 4246 00c6 0B4B     		ldr	r3, .L306+24
 4247 00c8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 193


1754:ThirdParty/FreeRTOS/tasks.c ****                 {
 4248              		.loc 1 1754 19 view .LVU1196
 4249 00ca 9A42     		cmp	r2, r3
 4250 00cc 03D1     		bne	.L300
1760:ThirdParty/FreeRTOS/tasks.c ****                 }
 4251              		.loc 1 1760 21 is_stmt 1 view .LVU1197
1760:ThirdParty/FreeRTOS/tasks.c ****                 }
 4252              		.loc 1 1760 34 is_stmt 0 view .LVU1198
 4253 00ce 074B     		ldr	r3, .L306+16
 4254 00d0 0022     		movs	r2, #0
 4255 00d2 1A60     		str	r2, [r3]
 4256 00d4 C3E7     		b	.L288
 4257              	.L300:
1764:ThirdParty/FreeRTOS/tasks.c ****                 }
 4258              		.loc 1 1764 21 is_stmt 1 view .LVU1199
 4259 00d6 FFF7FEFF 		bl	vTaskSwitchContext
 4260              	.LVL294:
1770:ThirdParty/FreeRTOS/tasks.c ****         }
 4261              		.loc 1 1770 37 view .LVU1200
1772:ThirdParty/FreeRTOS/tasks.c **** 
 4262              		.loc 1 1772 5 is_stmt 0 view .LVU1201
 4263 00da C0E7     		b	.L288
 4264              	.L307:
 4265              		.align	2
 4266              	.L306:
 4267 00dc 00000000 		.word	pxReadyTasksLists
 4268 00e0 00000000 		.word	uxTopReadyPriority
 4269 00e4 00000000 		.word	xSuspendedTaskList
 4270 00e8 00000000 		.word	xSchedulerRunning
 4271 00ec 00000000 		.word	pxCurrentTCB
 4272 00f0 00000000 		.word	uxSchedulerSuspended
 4273 00f4 00000000 		.word	uxCurrentNumberOfTasks
 4274              		.cfi_endproc
 4275              	.LFE15:
 4277              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 4278              		.align	1
 4279              		.global	vTaskPlaceOnEventList
 4280              		.syntax unified
 4281              		.thumb
 4282              		.thumb_func
 4284              	vTaskPlaceOnEventList:
 4285              	.LVL295:
 4286              	.LFB31:
3085:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4287              		.loc 1 3085 1 is_stmt 1 view -0
 4288              		.cfi_startproc
 4289              		@ args = 0, pretend = 0, frame = 0
 4290              		@ frame_needed = 0, uses_anonymous_args = 0
3086:ThirdParty/FreeRTOS/tasks.c **** 
 4291              		.loc 1 3086 5 view .LVU1203
 4292 0000 58B1     		cbz	r0, .L313
3085:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4293              		.loc 1 3085 1 is_stmt 0 view .LVU1204
 4294 0002 10B5     		push	{r4, lr}
 4295              	.LCFI30:
 4296              		.cfi_def_cfa_offset 8
 4297              		.cfi_offset 4, -8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 194


 4298              		.cfi_offset 14, -4
 4299 0004 0C46     		mov	r4, r1
3086:ThirdParty/FreeRTOS/tasks.c **** 
 4300              		.loc 1 3086 32 is_stmt 1 discriminator 2 view .LVU1205
3102:ThirdParty/FreeRTOS/tasks.c **** 
 4301              		.loc 1 3102 5 view .LVU1206
3102:ThirdParty/FreeRTOS/tasks.c **** 
 4302              		.loc 1 3102 46 is_stmt 0 view .LVU1207
 4303 0006 094A     		ldr	r2, .L314
 4304 0008 1168     		ldr	r1, [r2]
 4305              	.LVL296:
3102:ThirdParty/FreeRTOS/tasks.c **** 
 4306              		.loc 1 3102 5 view .LVU1208
 4307 000a 1831     		adds	r1, r1, #24
 4308 000c FFF7FEFF 		bl	vListInsert
 4309              	.LVL297:
3104:ThirdParty/FreeRTOS/tasks.c **** }
 4310              		.loc 1 3104 5 is_stmt 1 view .LVU1209
 4311 0010 0121     		movs	r1, #1
 4312 0012 2046     		mov	r0, r4
 4313 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4314              	.LVL298:
3105:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4315              		.loc 1 3105 1 is_stmt 0 view .LVU1210
 4316 0018 10BD     		pop	{r4, pc}
 4317              	.LVL299:
 4318              	.L313:
 4319              	.LCFI31:
 4320              		.cfi_def_cfa_offset 0
 4321              		.cfi_restore 4
 4322              		.cfi_restore 14
3086:ThirdParty/FreeRTOS/tasks.c **** 
 4323              		.loc 1 3086 5 is_stmt 1 discriminator 1 view .LVU1211
 4324              	.LBB242:
 4325              	.LBI242:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4326              		.loc 2 194 34 view .LVU1212
 4327              	.LBB243:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4328              		.loc 2 196 9 view .LVU1213
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4329              		.loc 2 198 9 view .LVU1214
 4330              		.syntax unified
 4331              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4332 001a 4FF05003 			mov r3, #80												
 4333 001e 83F31188 		msr basepri, r3											
 4334 0022 BFF36F8F 		isb														
 4335 0026 BFF34F8F 		dsb														
 4336              	
 4337              	@ 0 "" 2
 4338              		.thumb
 4339              		.syntax unified
 4340              	.L310:
 4341              	.LBE243:
 4342              	.LBE242:
3086:ThirdParty/FreeRTOS/tasks.c **** 
 4343              		.loc 1 3086 5 discriminator 3 view .LVU1215
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 195


3086:ThirdParty/FreeRTOS/tasks.c **** 
 4344              		.loc 1 3086 5 discriminator 3 view .LVU1216
 4345 002a FEE7     		b	.L310
 4346              	.L315:
 4347              		.align	2
 4348              	.L314:
 4349 002c 00000000 		.word	pxCurrentTCB
 4350              		.cfi_endproc
 4351              	.LFE31:
 4353              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 4354              		.align	1
 4355              		.global	vTaskPlaceOnUnorderedEventList
 4356              		.syntax unified
 4357              		.thumb
 4358              		.thumb_func
 4360              	vTaskPlaceOnUnorderedEventList:
 4361              	.LVL300:
 4362              	.LFB32:
3111:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4363              		.loc 1 3111 1 view -0
 4364              		.cfi_startproc
 4365              		@ args = 0, pretend = 0, frame = 0
 4366              		@ frame_needed = 0, uses_anonymous_args = 0
3111:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4367              		.loc 1 3111 1 is_stmt 0 view .LVU1218
 4368 0000 38B5     		push	{r3, r4, r5, lr}
 4369              	.LCFI32:
 4370              		.cfi_def_cfa_offset 16
 4371              		.cfi_offset 3, -16
 4372              		.cfi_offset 4, -12
 4373              		.cfi_offset 5, -8
 4374              		.cfi_offset 14, -4
3112:ThirdParty/FreeRTOS/tasks.c **** 
 4375              		.loc 1 3112 5 is_stmt 1 view .LVU1219
 4376 0002 60B1     		cbz	r0, .L322
 4377 0004 0346     		mov	r3, r0
3112:ThirdParty/FreeRTOS/tasks.c **** 
 4378              		.loc 1 3112 32 discriminator 2 view .LVU1220
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4379              		.loc 1 3116 5 view .LVU1221
 4380 0006 1848     		ldr	r0, .L323
 4381              	.LVL301:
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4382              		.loc 1 3116 5 is_stmt 0 view .LVU1222
 4383 0008 0068     		ldr	r0, [r0]
 4384 000a 88B9     		cbnz	r0, .L319
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4385              		.loc 1 3116 5 is_stmt 1 discriminator 1 view .LVU1223
 4386              	.LBB244:
 4387              	.LBI244:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4388              		.loc 2 194 34 view .LVU1224
 4389              	.LBB245:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4390              		.loc 2 196 9 view .LVU1225
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4391              		.loc 2 198 9 view .LVU1226
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 196


 4392              		.syntax unified
 4393              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4394 000c 4FF05003 			mov r3, #80												
 4395 0010 83F31188 		msr basepri, r3											
 4396 0014 BFF36F8F 		isb														
 4397 0018 BFF34F8F 		dsb														
 4398              	
 4399              	@ 0 "" 2
 4400              	.LVL302:
 4401              		.thumb
 4402              		.syntax unified
 4403              	.L320:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4404              		.loc 2 198 9 is_stmt 0 view .LVU1227
 4405              	.LBE245:
 4406              	.LBE244:
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4407              		.loc 1 3116 5 is_stmt 1 discriminator 3 view .LVU1228
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4408              		.loc 1 3116 5 discriminator 3 view .LVU1229
 4409 001c FEE7     		b	.L320
 4410              	.LVL303:
 4411              	.L322:
3112:ThirdParty/FreeRTOS/tasks.c **** 
 4412              		.loc 1 3112 5 discriminator 1 view .LVU1230
 4413              	.LBB246:
 4414              	.LBI246:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4415              		.loc 2 194 34 view .LVU1231
 4416              	.LBB247:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4417              		.loc 2 196 9 view .LVU1232
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4418              		.loc 2 198 9 view .LVU1233
 4419              		.syntax unified
 4420              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4421 001e 4FF05003 			mov r3, #80												
 4422 0022 83F31188 		msr basepri, r3											
 4423 0026 BFF36F8F 		isb														
 4424 002a BFF34F8F 		dsb														
 4425              	
 4426              	@ 0 "" 2
 4427              		.thumb
 4428              		.syntax unified
 4429              	.L318:
 4430              	.LBE247:
 4431              	.LBE246:
3112:ThirdParty/FreeRTOS/tasks.c **** 
 4432              		.loc 1 3112 5 discriminator 3 view .LVU1234
3112:ThirdParty/FreeRTOS/tasks.c **** 
 4433              		.loc 1 3112 5 discriminator 3 view .LVU1235
 4434 002e FEE7     		b	.L318
 4435              	.LVL304:
 4436              	.L319:
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4437              		.loc 1 3116 46 discriminator 2 view .LVU1236
3121:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 197


 4438              		.loc 1 3121 5 view .LVU1237
 4439 0030 0E48     		ldr	r0, .L323+4
 4440 0032 0468     		ldr	r4, [r0]
 4441 0034 41F00041 		orr	r1, r1, #-2147483648
 4442              	.LVL305:
3121:ThirdParty/FreeRTOS/tasks.c **** 
 4443              		.loc 1 3121 5 is_stmt 0 view .LVU1238
 4444 0038 A161     		str	r1, [r4, #24]
 4445              	.LBB248:
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4446              		.loc 1 3128 5 is_stmt 1 view .LVU1239
 4447 003a 5968     		ldr	r1, [r3, #4]
 4448              	.LVL306:
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4449              		.loc 1 3128 5 view .LVU1240
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4450              		.loc 1 3128 5 view .LVU1241
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4451              		.loc 1 3128 5 view .LVU1242
 4452 003c 0468     		ldr	r4, [r0]
 4453 003e E161     		str	r1, [r4, #28]
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4454              		.loc 1 3128 5 view .LVU1243
 4455 0040 0568     		ldr	r5, [r0]
 4456 0042 8C68     		ldr	r4, [r1, #8]
 4457 0044 2C62     		str	r4, [r5, #32]
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4458              		.loc 1 3128 5 view .LVU1244
 4459 0046 0568     		ldr	r5, [r0]
 4460 0048 1835     		adds	r5, r5, #24
 4461 004a 6560     		str	r5, [r4, #4]
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4462              		.loc 1 3128 5 view .LVU1245
 4463 004c 0468     		ldr	r4, [r0]
 4464 004e 1834     		adds	r4, r4, #24
 4465 0050 8C60     		str	r4, [r1, #8]
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4466              		.loc 1 3128 5 view .LVU1246
 4467 0052 0168     		ldr	r1, [r0]
 4468              	.LVL307:
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4469              		.loc 1 3128 5 is_stmt 0 view .LVU1247
 4470 0054 8B62     		str	r3, [r1, #40]
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4471              		.loc 1 3128 5 is_stmt 1 view .LVU1248
 4472 0056 1968     		ldr	r1, [r3]
 4473 0058 0131     		adds	r1, r1, #1
 4474 005a 1960     		str	r1, [r3]
 4475              	.LBE248:
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4476              		.loc 1 3128 69 view .LVU1249
3130:ThirdParty/FreeRTOS/tasks.c **** }
 4477              		.loc 1 3130 5 view .LVU1250
 4478 005c 0121     		movs	r1, #1
 4479 005e 1046     		mov	r0, r2
 4480 0060 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4481              	.LVL308:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 198


3131:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4482              		.loc 1 3131 1 is_stmt 0 view .LVU1251
 4483 0064 38BD     		pop	{r3, r4, r5, pc}
 4484              	.L324:
 4485 0066 00BF     		.align	2
 4486              	.L323:
 4487 0068 00000000 		.word	uxSchedulerSuspended
 4488 006c 00000000 		.word	pxCurrentTCB
 4489              		.cfi_endproc
 4490              	.LFE32:
 4492              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 4493              		.align	1
 4494              		.global	vTaskPlaceOnEventListRestricted
 4495              		.syntax unified
 4496              		.thumb
 4497              		.thumb_func
 4499              	vTaskPlaceOnEventListRestricted:
 4500              	.LVL309:
 4501              	.LFB33:
3139:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxEventList );
 4502              		.loc 1 3139 5 is_stmt 1 view -0
 4503              		.cfi_startproc
 4504              		@ args = 0, pretend = 0, frame = 0
 4505              		@ frame_needed = 0, uses_anonymous_args = 0
3139:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxEventList );
 4506              		.loc 1 3139 5 is_stmt 0 view .LVU1253
 4507 0000 38B5     		push	{r3, r4, r5, lr}
 4508              	.LCFI33:
 4509              		.cfi_def_cfa_offset 16
 4510              		.cfi_offset 3, -16
 4511              		.cfi_offset 4, -12
 4512              		.cfi_offset 5, -8
 4513              		.cfi_offset 14, -4
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4514              		.loc 1 3140 9 is_stmt 1 view .LVU1254
 4515 0002 D8B1     		cbz	r0, .L331
 4516 0004 8C46     		mov	ip, r1
 4517 0006 1146     		mov	r1, r2
 4518              	.LVL310:
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4519              		.loc 1 3140 9 is_stmt 0 view .LVU1255
 4520 0008 0546     		mov	r5, r0
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4521              		.loc 1 3140 36 is_stmt 1 discriminator 2 view .LVU1256
 4522              	.LBB249:
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4523              		.loc 1 3152 9 view .LVU1257
 4524 000a 4268     		ldr	r2, [r0, #4]
 4525              	.LVL311:
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4526              		.loc 1 3152 9 view .LVU1258
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4527              		.loc 1 3152 9 view .LVU1259
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4528              		.loc 1 3152 9 view .LVU1260
 4529 000c 104B     		ldr	r3, .L332
 4530 000e 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 199


 4531              	.LVL312:
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4532              		.loc 1 3152 9 is_stmt 0 view .LVU1261
 4533 0010 C261     		str	r2, [r0, #28]
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4534              		.loc 1 3152 9 is_stmt 1 view .LVU1262
 4535 0012 1868     		ldr	r0, [r3]
 4536 0014 9468     		ldr	r4, [r2, #8]
 4537 0016 0462     		str	r4, [r0, #32]
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4538              		.loc 1 3152 9 view .LVU1263
 4539 0018 1868     		ldr	r0, [r3]
 4540 001a 1830     		adds	r0, r0, #24
 4541 001c 6060     		str	r0, [r4, #4]
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4542              		.loc 1 3152 9 view .LVU1264
 4543 001e 1868     		ldr	r0, [r3]
 4544 0020 1830     		adds	r0, r0, #24
 4545 0022 9060     		str	r0, [r2, #8]
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4546              		.loc 1 3152 9 view .LVU1265
 4547 0024 1B68     		ldr	r3, [r3]
 4548 0026 9D62     		str	r5, [r3, #40]
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4549              		.loc 1 3152 9 view .LVU1266
 4550 0028 2B68     		ldr	r3, [r5]
 4551 002a 0133     		adds	r3, r3, #1
 4552 002c 2B60     		str	r3, [r5]
 4553              	.LBE249:
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4554              		.loc 1 3152 73 view .LVU1267
3157:ThirdParty/FreeRTOS/tasks.c ****         {
 4555              		.loc 1 3157 9 view .LVU1268
3157:ThirdParty/FreeRTOS/tasks.c ****         {
 4556              		.loc 1 3157 11 is_stmt 0 view .LVU1269
 4557 002e 09B1     		cbz	r1, .L328
3159:ThirdParty/FreeRTOS/tasks.c ****         }
 4558              		.loc 1 3159 26 view .LVU1270
 4559 0030 4FF0FF3C 		mov	ip, #-1
 4560              	.LVL313:
 4561              	.L328:
3162:ThirdParty/FreeRTOS/tasks.c ****         prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 4562              		.loc 1 3162 63 is_stmt 1 view .LVU1271
3163:ThirdParty/FreeRTOS/tasks.c ****     }
 4563              		.loc 1 3163 9 view .LVU1272
 4564 0034 6046     		mov	r0, ip
 4565 0036 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4566              	.LVL314:
3164:ThirdParty/FreeRTOS/tasks.c **** 
 4567              		.loc 1 3164 5 is_stmt 0 view .LVU1273
 4568 003a 38BD     		pop	{r3, r4, r5, pc}
 4569              	.LVL315:
 4570              	.L331:
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4571              		.loc 1 3140 9 is_stmt 1 discriminator 1 view .LVU1274
 4572              	.LBB250:
 4573              	.LBI250:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 200


 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4574              		.loc 2 194 34 view .LVU1275
 4575              	.LBB251:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4576              		.loc 2 196 9 view .LVU1276
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4577              		.loc 2 198 9 view .LVU1277
 4578              		.syntax unified
 4579              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4580 003c 4FF05003 			mov r3, #80												
 4581 0040 83F31188 		msr basepri, r3											
 4582 0044 BFF36F8F 		isb														
 4583 0048 BFF34F8F 		dsb														
 4584              	
 4585              	@ 0 "" 2
 4586              		.thumb
 4587              		.syntax unified
 4588              	.L327:
 4589              	.LBE251:
 4590              	.LBE250:
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4591              		.loc 1 3140 9 discriminator 3 view .LVU1278
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4592              		.loc 1 3140 9 discriminator 3 view .LVU1279
 4593 004c FEE7     		b	.L327
 4594              	.L333:
 4595 004e 00BF     		.align	2
 4596              	.L332:
 4597 0050 00000000 		.word	pxCurrentTCB
 4598              		.cfi_endproc
 4599              	.LFE33:
 4601              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 4602              		.align	1
 4603              		.global	xTaskRemoveFromEventList
 4604              		.syntax unified
 4605              		.thumb
 4606              		.thumb_func
 4608              	xTaskRemoveFromEventList:
 4609              	.LVL316:
 4610              	.LFB34:
3170:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4611              		.loc 1 3170 1 view -0
 4612              		.cfi_startproc
 4613              		@ args = 0, pretend = 0, frame = 0
 4614              		@ frame_needed = 0, uses_anonymous_args = 0
 4615              		@ link register save eliminated.
3171:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 4616              		.loc 1 3171 5 view .LVU1281
3172:ThirdParty/FreeRTOS/tasks.c **** 
 4617              		.loc 1 3172 5 view .LVU1282
3187:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4618              		.loc 1 3187 5 view .LVU1283
3187:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4619              		.loc 1 3187 22 is_stmt 0 view .LVU1284
 4620 0000 C368     		ldr	r3, [r0, #12]
3187:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4621              		.loc 1 3187 20 view .LVU1285
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 201


 4622 0002 DB68     		ldr	r3, [r3, #12]
 4623              	.LVL317:
3188:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4624              		.loc 1 3188 5 is_stmt 1 view .LVU1286
 4625 0004 002B     		cmp	r3, #0
 4626 0006 4AD0     		beq	.L345
3170:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4627              		.loc 1 3170 1 is_stmt 0 view .LVU1287
 4628 0008 30B4     		push	{r4, r5}
 4629              	.LCFI34:
 4630              		.cfi_def_cfa_offset 8
 4631              		.cfi_offset 4, -8
 4632              		.cfi_offset 5, -4
3188:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4633              		.loc 1 3188 35 is_stmt 1 discriminator 2 view .LVU1288
 4634              	.LBB252:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4635              		.loc 1 3189 5 view .LVU1289
 4636 000a 9A6A     		ldr	r2, [r3, #40]
 4637              	.LVL318:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4638              		.loc 1 3189 5 view .LVU1290
 4639 000c D869     		ldr	r0, [r3, #28]
 4640              	.LVL319:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4641              		.loc 1 3189 5 is_stmt 0 view .LVU1291
 4642 000e 196A     		ldr	r1, [r3, #32]
 4643 0010 8160     		str	r1, [r0, #8]
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4644              		.loc 1 3189 5 is_stmt 1 view .LVU1292
 4645 0012 D869     		ldr	r0, [r3, #28]
 4646 0014 4860     		str	r0, [r1, #4]
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4647              		.loc 1 3189 5 view .LVU1293
 4648 0016 5168     		ldr	r1, [r2, #4]
 4649 0018 03F11800 		add	r0, r3, #24
 4650 001c 8142     		cmp	r1, r0
 4651 001e 47D0     		beq	.L346
 4652              	.L337:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4653              		.loc 1 3189 5 discriminator 3 view .LVU1294
 4654 0020 0021     		movs	r1, #0
 4655 0022 9962     		str	r1, [r3, #40]
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4656              		.loc 1 3189 5 discriminator 3 view .LVU1295
 4657 0024 1168     		ldr	r1, [r2]
 4658 0026 0139     		subs	r1, r1, #1
 4659 0028 1160     		str	r1, [r2]
 4660              	.LBE252:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4661              		.loc 1 3189 59 discriminator 3 view .LVU1296
3191:ThirdParty/FreeRTOS/tasks.c ****     {
 4662              		.loc 1 3191 5 view .LVU1297
3191:ThirdParty/FreeRTOS/tasks.c ****     {
 4663              		.loc 1 3191 30 is_stmt 0 view .LVU1298
 4664 002a 2B4A     		ldr	r2, .L348
 4665              	.LVL320:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 202


3191:ThirdParty/FreeRTOS/tasks.c ****     {
 4666              		.loc 1 3191 30 view .LVU1299
 4667 002c 1268     		ldr	r2, [r2]
3191:ThirdParty/FreeRTOS/tasks.c ****     {
 4668              		.loc 1 3191 7 view .LVU1300
 4669 002e 002A     		cmp	r2, #0
 4670 0030 44D1     		bne	.L338
 4671              	.LBB253:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4672              		.loc 1 3193 9 is_stmt 1 view .LVU1301
 4673 0032 5A69     		ldr	r2, [r3, #20]
 4674              	.LVL321:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4675              		.loc 1 3193 9 view .LVU1302
 4676 0034 9868     		ldr	r0, [r3, #8]
 4677 0036 D968     		ldr	r1, [r3, #12]
 4678 0038 8160     		str	r1, [r0, #8]
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4679              		.loc 1 3193 9 view .LVU1303
 4680 003a 9868     		ldr	r0, [r3, #8]
 4681 003c 4860     		str	r0, [r1, #4]
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4682              		.loc 1 3193 9 view .LVU1304
 4683 003e 5168     		ldr	r1, [r2, #4]
 4684 0040 181D     		adds	r0, r3, #4
 4685 0042 8142     		cmp	r1, r0
 4686 0044 37D0     		beq	.L347
 4687              	.L339:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4688              		.loc 1 3193 9 discriminator 3 view .LVU1305
 4689 0046 0021     		movs	r1, #0
 4690 0048 5961     		str	r1, [r3, #20]
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4691              		.loc 1 3193 9 discriminator 3 view .LVU1306
 4692 004a 1168     		ldr	r1, [r2]
 4693 004c 0139     		subs	r1, r1, #1
 4694 004e 1160     		str	r1, [r2]
 4695              	.LBE253:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4696              		.loc 1 3193 63 discriminator 3 view .LVU1307
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4697              		.loc 1 3194 9 view .LVU1308
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4698              		.loc 1 3194 9 view .LVU1309
 4699 0050 DA6A     		ldr	r2, [r3, #44]
 4700              	.LVL322:
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4701              		.loc 1 3194 9 is_stmt 0 view .LVU1310
 4702 0052 0121     		movs	r1, #1
 4703 0054 9140     		lsls	r1, r1, r2
 4704 0056 214C     		ldr	r4, .L348+4
 4705 0058 2568     		ldr	r5, [r4]
 4706 005a 2943     		orrs	r1, r1, r5
 4707 005c 2160     		str	r1, [r4]
 4708              	.LBB254:
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4709              		.loc 1 3194 9 is_stmt 1 view .LVU1311
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 203


 4710 005e 2049     		ldr	r1, .L348+8
 4711 0060 02EB8202 		add	r2, r2, r2, lsl #2
 4712 0064 01EB8202 		add	r2, r1, r2, lsl #2
 4713 0068 5268     		ldr	r2, [r2, #4]
 4714              	.LVL323:
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4715              		.loc 1 3194 9 view .LVU1312
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4716              		.loc 1 3194 9 view .LVU1313
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4717              		.loc 1 3194 9 view .LVU1314
 4718 006a 9A60     		str	r2, [r3, #8]
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4719              		.loc 1 3194 9 view .LVU1315
 4720 006c 9468     		ldr	r4, [r2, #8]
 4721 006e DC60     		str	r4, [r3, #12]
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4722              		.loc 1 3194 9 view .LVU1316
 4723 0070 6060     		str	r0, [r4, #4]
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4724              		.loc 1 3194 9 view .LVU1317
 4725 0072 9060     		str	r0, [r2, #8]
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4726              		.loc 1 3194 9 view .LVU1318
 4727 0074 DA6A     		ldr	r2, [r3, #44]
 4728              	.LVL324:
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4729              		.loc 1 3194 9 is_stmt 0 view .LVU1319
 4730 0076 02EB8200 		add	r0, r2, r2, lsl #2
 4731 007a 8400     		lsls	r4, r0, #2
 4732 007c 01EB8000 		add	r0, r1, r0, lsl #2
 4733 0080 5861     		str	r0, [r3, #20]
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4734              		.loc 1 3194 9 is_stmt 1 view .LVU1320
 4735 0082 0859     		ldr	r0, [r1, r4]
 4736 0084 0130     		adds	r0, r0, #1
 4737 0086 0851     		str	r0, [r1, r4]
 4738              	.LBE254:
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4739              		.loc 1 3194 9 view .LVU1321
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4740              		.loc 1 3194 48 view .LVU1322
 4741              	.LVL325:
 4742              	.L340:
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4743              		.loc 1 3214 86 discriminator 1 view .LVU1323
3217:ThirdParty/FreeRTOS/tasks.c ****     {
 4744              		.loc 1 3217 5 view .LVU1324
3217:ThirdParty/FreeRTOS/tasks.c ****     {
 4745              		.loc 1 3217 23 is_stmt 0 view .LVU1325
 4746 0088 DA6A     		ldr	r2, [r3, #44]
3217:ThirdParty/FreeRTOS/tasks.c ****     {
 4747              		.loc 1 3217 50 view .LVU1326
 4748 008a 164B     		ldr	r3, .L348+12
 4749              	.LVL326:
3217:ThirdParty/FreeRTOS/tasks.c ****     {
 4750              		.loc 1 3217 50 view .LVU1327
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 204


 4751 008c 1B68     		ldr	r3, [r3]
 4752 008e DB6A     		ldr	r3, [r3, #44]
3217:ThirdParty/FreeRTOS/tasks.c ****     {
 4753              		.loc 1 3217 7 view .LVU1328
 4754 0090 9A42     		cmp	r2, r3
 4755 0092 1FD9     		bls	.L342
3222:ThirdParty/FreeRTOS/tasks.c **** 
 4756              		.loc 1 3222 9 is_stmt 1 view .LVU1329
 4757              	.LVL327:
3226:ThirdParty/FreeRTOS/tasks.c ****     }
 4758              		.loc 1 3226 9 view .LVU1330
3226:ThirdParty/FreeRTOS/tasks.c ****     }
 4759              		.loc 1 3226 23 is_stmt 0 view .LVU1331
 4760 0094 0120     		movs	r0, #1
 4761 0096 144B     		ldr	r3, .L348+16
 4762 0098 1860     		str	r0, [r3]
 4763              	.LVL328:
 4764              	.L334:
3234:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4765              		.loc 1 3234 1 view .LVU1332
 4766 009a 30BC     		pop	{r4, r5}
 4767              	.LCFI35:
 4768              		.cfi_restore 5
 4769              		.cfi_restore 4
 4770              		.cfi_def_cfa_offset 0
 4771 009c 7047     		bx	lr
 4772              	.LVL329:
 4773              	.L345:
3188:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4774              		.loc 1 3188 5 is_stmt 1 discriminator 1 view .LVU1333
 4775              	.LBB255:
 4776              	.LBI255:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4777              		.loc 2 194 34 view .LVU1334
 4778              	.LBB256:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4779              		.loc 2 196 9 view .LVU1335
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4780              		.loc 2 198 9 view .LVU1336
 4781              		.syntax unified
 4782              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4783 009e 4FF05003 			mov r3, #80												
 4784 00a2 83F31188 		msr basepri, r3											
 4785 00a6 BFF36F8F 		isb														
 4786 00aa BFF34F8F 		dsb														
 4787              	
 4788              	@ 0 "" 2
 4789              	.LVL330:
 4790              		.thumb
 4791              		.syntax unified
 4792              	.L336:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4793              		.loc 2 198 9 is_stmt 0 view .LVU1337
 4794              	.LBE256:
 4795              	.LBE255:
3188:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4796              		.loc 1 3188 5 is_stmt 1 discriminator 3 view .LVU1338
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 205


3188:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4797              		.loc 1 3188 5 discriminator 3 view .LVU1339
 4798 00ae FEE7     		b	.L336
 4799              	.LVL331:
 4800              	.L346:
 4801              	.LCFI36:
 4802              		.cfi_def_cfa_offset 8
 4803              		.cfi_offset 4, -8
 4804              		.cfi_offset 5, -4
 4805              	.LBB257:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4806              		.loc 1 3189 5 discriminator 1 view .LVU1340
 4807 00b0 196A     		ldr	r1, [r3, #32]
 4808 00b2 5160     		str	r1, [r2, #4]
 4809 00b4 B4E7     		b	.L337
 4810              	.LVL332:
 4811              	.L347:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4812              		.loc 1 3189 5 is_stmt 0 discriminator 1 view .LVU1341
 4813              	.LBE257:
 4814              	.LBB258:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4815              		.loc 1 3193 9 is_stmt 1 discriminator 1 view .LVU1342
 4816 00b6 D968     		ldr	r1, [r3, #12]
 4817 00b8 5160     		str	r1, [r2, #4]
 4818 00ba C4E7     		b	.L339
 4819              	.LVL333:
 4820              	.L338:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4821              		.loc 1 3193 9 is_stmt 0 discriminator 1 view .LVU1343
 4822              	.LBE258:
 4823              	.LBB259:
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4824              		.loc 1 3214 9 is_stmt 1 view .LVU1344
 4825 00bc 0B4A     		ldr	r2, .L348+20
 4826 00be 5168     		ldr	r1, [r2, #4]
 4827              	.LVL334:
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4828              		.loc 1 3214 9 view .LVU1345
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4829              		.loc 1 3214 9 view .LVU1346
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4830              		.loc 1 3214 9 view .LVU1347
 4831 00c0 D961     		str	r1, [r3, #28]
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4832              		.loc 1 3214 9 view .LVU1348
 4833 00c2 8C68     		ldr	r4, [r1, #8]
 4834 00c4 1C62     		str	r4, [r3, #32]
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4835              		.loc 1 3214 9 view .LVU1349
 4836 00c6 6060     		str	r0, [r4, #4]
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4837              		.loc 1 3214 9 view .LVU1350
 4838 00c8 8860     		str	r0, [r1, #8]
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4839              		.loc 1 3214 9 view .LVU1351
 4840 00ca 9A62     		str	r2, [r3, #40]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 206


3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4841              		.loc 1 3214 9 view .LVU1352
 4842 00cc 1168     		ldr	r1, [r2]
 4843              	.LVL335:
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4844              		.loc 1 3214 9 is_stmt 0 view .LVU1353
 4845 00ce 0131     		adds	r1, r1, #1
 4846 00d0 1160     		str	r1, [r2]
 4847 00d2 D9E7     		b	.L340
 4848              	.LVL336:
 4849              	.L342:
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4850              		.loc 1 3214 9 view .LVU1354
 4851              	.LBE259:
3230:ThirdParty/FreeRTOS/tasks.c ****     }
 4852              		.loc 1 3230 17 view .LVU1355
 4853 00d4 0020     		movs	r0, #0
 4854              	.LVL337:
3233:ThirdParty/FreeRTOS/tasks.c **** }
 4855              		.loc 1 3233 5 is_stmt 1 view .LVU1356
3233:ThirdParty/FreeRTOS/tasks.c **** }
 4856              		.loc 1 3233 12 is_stmt 0 view .LVU1357
 4857 00d6 E0E7     		b	.L334
 4858              	.L349:
 4859              		.align	2
 4860              	.L348:
 4861 00d8 00000000 		.word	uxSchedulerSuspended
 4862 00dc 00000000 		.word	uxTopReadyPriority
 4863 00e0 00000000 		.word	pxReadyTasksLists
 4864 00e4 00000000 		.word	pxCurrentTCB
 4865 00e8 00000000 		.word	xYieldPending
 4866 00ec 00000000 		.word	xPendingReadyList
 4867              		.cfi_endproc
 4868              	.LFE34:
 4870              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 4871              		.align	1
 4872              		.global	vTaskRemoveFromUnorderedEventList
 4873              		.syntax unified
 4874              		.thumb
 4875              		.thumb_func
 4877              	vTaskRemoveFromUnorderedEventList:
 4878              	.LVL338:
 4879              	.LFB35:
3239:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4880              		.loc 1 3239 1 is_stmt 1 view -0
 4881              		.cfi_startproc
 4882              		@ args = 0, pretend = 0, frame = 0
 4883              		@ frame_needed = 0, uses_anonymous_args = 0
 4884              		@ link register save eliminated.
3240:ThirdParty/FreeRTOS/tasks.c **** 
 4885              		.loc 1 3240 5 view .LVU1359
3244:ThirdParty/FreeRTOS/tasks.c **** 
 4886              		.loc 1 3244 5 view .LVU1360
 4887 0000 324B     		ldr	r3, .L363
 4888 0002 1B68     		ldr	r3, [r3]
 4889 0004 43B9     		cbnz	r3, .L351
3244:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 207


 4890              		.loc 1 3244 5 discriminator 1 view .LVU1361
 4891              	.LBB260:
 4892              	.LBI260:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4893              		.loc 2 194 34 view .LVU1362
 4894              	.LBB261:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4895              		.loc 2 196 9 view .LVU1363
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4896              		.loc 2 198 9 view .LVU1364
 4897              		.syntax unified
 4898              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4899 0006 4FF05003 			mov r3, #80												
 4900 000a 83F31188 		msr basepri, r3											
 4901 000e BFF36F8F 		isb														
 4902 0012 BFF34F8F 		dsb														
 4903              	
 4904              	@ 0 "" 2
 4905              		.thumb
 4906              		.syntax unified
 4907              	.L352:
 4908              	.LBE261:
 4909              	.LBE260:
3244:ThirdParty/FreeRTOS/tasks.c **** 
 4910              		.loc 1 3244 5 discriminator 3 view .LVU1365
3244:ThirdParty/FreeRTOS/tasks.c **** 
 4911              		.loc 1 3244 5 discriminator 3 view .LVU1366
 4912 0016 FEE7     		b	.L352
 4913              	.L351:
3244:ThirdParty/FreeRTOS/tasks.c **** 
 4914              		.loc 1 3244 52 discriminator 2 view .LVU1367
3247:ThirdParty/FreeRTOS/tasks.c **** 
 4915              		.loc 1 3247 5 view .LVU1368
 4916 0018 41F00041 		orr	r1, r1, #-2147483648
 4917              	.LVL339:
3247:ThirdParty/FreeRTOS/tasks.c **** 
 4918              		.loc 1 3247 5 is_stmt 0 view .LVU1369
 4919 001c 0160     		str	r1, [r0]
3251:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4920              		.loc 1 3251 5 is_stmt 1 view .LVU1370
3251:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4921              		.loc 1 3251 20 is_stmt 0 view .LVU1371
 4922 001e C268     		ldr	r2, [r0, #12]
 4923              	.LVL340:
3252:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 4924              		.loc 1 3252 5 is_stmt 1 view .LVU1372
 4925 0020 002A     		cmp	r2, #0
 4926 0022 44D0     		beq	.L360
3239:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4927              		.loc 1 3239 1 is_stmt 0 view .LVU1373
 4928 0024 30B4     		push	{r4, r5}
 4929              	.LCFI37:
 4930              		.cfi_def_cfa_offset 8
 4931              		.cfi_offset 4, -8
 4932              		.cfi_offset 5, -4
3252:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 4933              		.loc 1 3252 35 is_stmt 1 discriminator 2 view .LVU1374
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 208


 4934              	.LBB262:
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4935              		.loc 1 3253 5 view .LVU1375
 4936 0026 0369     		ldr	r3, [r0, #16]
 4937              	.LVL341:
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4938              		.loc 1 3253 5 view .LVU1376
 4939 0028 4468     		ldr	r4, [r0, #4]
 4940 002a 8168     		ldr	r1, [r0, #8]
 4941 002c A160     		str	r1, [r4, #8]
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4942              		.loc 1 3253 5 view .LVU1377
 4943 002e 4468     		ldr	r4, [r0, #4]
 4944 0030 4C60     		str	r4, [r1, #4]
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4945              		.loc 1 3253 5 view .LVU1378
 4946 0032 5968     		ldr	r1, [r3, #4]
 4947 0034 8142     		cmp	r1, r0
 4948 0036 43D0     		beq	.L361
 4949              	.L355:
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4950              		.loc 1 3253 5 discriminator 3 view .LVU1379
 4951 0038 0021     		movs	r1, #0
 4952 003a 0161     		str	r1, [r0, #16]
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4953              		.loc 1 3253 5 discriminator 3 view .LVU1380
 4954 003c 1968     		ldr	r1, [r3]
 4955 003e 0139     		subs	r1, r1, #1
 4956 0040 1960     		str	r1, [r3]
 4957              	.LBE262:
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4958              		.loc 1 3253 39 discriminator 3 view .LVU1381
 4959              	.LBB263:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4960              		.loc 1 3272 5 view .LVU1382
 4961 0042 5369     		ldr	r3, [r2, #20]
 4962              	.LVL342:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4963              		.loc 1 3272 5 view .LVU1383
 4964 0044 9068     		ldr	r0, [r2, #8]
 4965              	.LVL343:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4966              		.loc 1 3272 5 is_stmt 0 view .LVU1384
 4967 0046 D168     		ldr	r1, [r2, #12]
 4968 0048 8160     		str	r1, [r0, #8]
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4969              		.loc 1 3272 5 is_stmt 1 view .LVU1385
 4970 004a 9068     		ldr	r0, [r2, #8]
 4971 004c 4860     		str	r0, [r1, #4]
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4972              		.loc 1 3272 5 view .LVU1386
 4973 004e 5968     		ldr	r1, [r3, #4]
 4974 0050 101D     		adds	r0, r2, #4
 4975 0052 8142     		cmp	r1, r0
 4976 0054 37D0     		beq	.L362
 4977              	.L356:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 209


 4978              		.loc 1 3272 5 discriminator 3 view .LVU1387
 4979 0056 0021     		movs	r1, #0
 4980 0058 5161     		str	r1, [r2, #20]
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4981              		.loc 1 3272 5 discriminator 3 view .LVU1388
 4982 005a 1968     		ldr	r1, [r3]
 4983 005c 0139     		subs	r1, r1, #1
 4984 005e 1960     		str	r1, [r3]
 4985              	.LBE263:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 4986              		.loc 1 3272 59 discriminator 3 view .LVU1389
3273:ThirdParty/FreeRTOS/tasks.c **** 
 4987              		.loc 1 3273 5 view .LVU1390
3273:ThirdParty/FreeRTOS/tasks.c **** 
 4988              		.loc 1 3273 5 view .LVU1391
 4989 0060 D36A     		ldr	r3, [r2, #44]
 4990              	.LVL344:
3273:ThirdParty/FreeRTOS/tasks.c **** 
 4991              		.loc 1 3273 5 is_stmt 0 view .LVU1392
 4992 0062 0121     		movs	r1, #1
 4993 0064 9940     		lsls	r1, r1, r3
 4994 0066 1A4C     		ldr	r4, .L363+4
 4995 0068 2568     		ldr	r5, [r4]
 4996 006a 2943     		orrs	r1, r1, r5
 4997 006c 2160     		str	r1, [r4]
 4998              	.LBB264:
3273:ThirdParty/FreeRTOS/tasks.c **** 
 4999              		.loc 1 3273 5 is_stmt 1 view .LVU1393
 5000 006e 1949     		ldr	r1, .L363+8
 5001 0070 03EB8303 		add	r3, r3, r3, lsl #2
 5002 0074 01EB8303 		add	r3, r1, r3, lsl #2
 5003 0078 5B68     		ldr	r3, [r3, #4]
 5004              	.LVL345:
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5005              		.loc 1 3273 5 view .LVU1394
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5006              		.loc 1 3273 5 view .LVU1395
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5007              		.loc 1 3273 5 view .LVU1396
 5008 007a 9360     		str	r3, [r2, #8]
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5009              		.loc 1 3273 5 view .LVU1397
 5010 007c 9C68     		ldr	r4, [r3, #8]
 5011 007e D460     		str	r4, [r2, #12]
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5012              		.loc 1 3273 5 view .LVU1398
 5013 0080 6060     		str	r0, [r4, #4]
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5014              		.loc 1 3273 5 view .LVU1399
 5015 0082 9860     		str	r0, [r3, #8]
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5016              		.loc 1 3273 5 view .LVU1400
 5017 0084 D36A     		ldr	r3, [r2, #44]
 5018              	.LVL346:
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5019              		.loc 1 3273 5 is_stmt 0 view .LVU1401
 5020 0086 03EB8300 		add	r0, r3, r3, lsl #2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 210


 5021 008a 8400     		lsls	r4, r0, #2
 5022 008c 01EB8000 		add	r0, r1, r0, lsl #2
 5023 0090 5061     		str	r0, [r2, #20]
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5024              		.loc 1 3273 5 is_stmt 1 view .LVU1402
 5025 0092 0859     		ldr	r0, [r1, r4]
 5026 0094 0130     		adds	r0, r0, #1
 5027 0096 0851     		str	r0, [r1, r4]
 5028              	.LBE264:
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5029              		.loc 1 3273 5 view .LVU1403
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5030              		.loc 1 3273 44 view .LVU1404
3275:ThirdParty/FreeRTOS/tasks.c ****     {
 5031              		.loc 1 3275 5 view .LVU1405
3275:ThirdParty/FreeRTOS/tasks.c ****     {
 5032              		.loc 1 3275 23 is_stmt 0 view .LVU1406
 5033 0098 D26A     		ldr	r2, [r2, #44]
 5034              	.LVL347:
3275:ThirdParty/FreeRTOS/tasks.c ****     {
 5035              		.loc 1 3275 50 view .LVU1407
 5036 009a 0F4B     		ldr	r3, .L363+12
 5037 009c 1B68     		ldr	r3, [r3]
 5038 009e DB6A     		ldr	r3, [r3, #44]
3275:ThirdParty/FreeRTOS/tasks.c ****     {
 5039              		.loc 1 3275 7 view .LVU1408
 5040 00a0 9A42     		cmp	r2, r3
 5041 00a2 02D9     		bls	.L350
3281:ThirdParty/FreeRTOS/tasks.c ****     }
 5042              		.loc 1 3281 9 is_stmt 1 view .LVU1409
3281:ThirdParty/FreeRTOS/tasks.c ****     }
 5043              		.loc 1 3281 23 is_stmt 0 view .LVU1410
 5044 00a4 0D4B     		ldr	r3, .L363+16
 5045 00a6 0122     		movs	r2, #1
 5046 00a8 1A60     		str	r2, [r3]
 5047              	.L350:
3283:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5048              		.loc 1 3283 1 view .LVU1411
 5049 00aa 30BC     		pop	{r4, r5}
 5050              	.LCFI38:
 5051              		.cfi_restore 5
 5052              		.cfi_restore 4
 5053              		.cfi_def_cfa_offset 0
 5054 00ac 7047     		bx	lr
 5055              	.LVL348:
 5056              	.L360:
3252:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 5057              		.loc 1 3252 5 is_stmt 1 discriminator 1 view .LVU1412
 5058              	.LBB265:
 5059              	.LBI265:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5060              		.loc 2 194 34 view .LVU1413
 5061              	.LBB266:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5062              		.loc 2 196 9 view .LVU1414
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5063              		.loc 2 198 9 view .LVU1415
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 211


 5064              		.syntax unified
 5065              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5066 00ae 4FF05003 			mov r3, #80												
 5067 00b2 83F31188 		msr basepri, r3											
 5068 00b6 BFF36F8F 		isb														
 5069 00ba BFF34F8F 		dsb														
 5070              	
 5071              	@ 0 "" 2
 5072              		.thumb
 5073              		.syntax unified
 5074              	.L354:
 5075              	.LBE266:
 5076              	.LBE265:
3252:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 5077              		.loc 1 3252 5 discriminator 3 view .LVU1416
3252:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 5078              		.loc 1 3252 5 discriminator 3 view .LVU1417
 5079 00be FEE7     		b	.L354
 5080              	.LVL349:
 5081              	.L361:
 5082              	.LCFI39:
 5083              		.cfi_def_cfa_offset 8
 5084              		.cfi_offset 4, -8
 5085              		.cfi_offset 5, -4
 5086              	.LBB267:
3253:ThirdParty/FreeRTOS/tasks.c **** 
 5087              		.loc 1 3253 5 discriminator 1 view .LVU1418
 5088 00c0 8168     		ldr	r1, [r0, #8]
 5089 00c2 5960     		str	r1, [r3, #4]
 5090 00c4 B8E7     		b	.L355
 5091              	.LVL350:
 5092              	.L362:
3253:ThirdParty/FreeRTOS/tasks.c **** 
 5093              		.loc 1 3253 5 is_stmt 0 discriminator 1 view .LVU1419
 5094              	.LBE267:
 5095              	.LBB268:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 5096              		.loc 1 3272 5 is_stmt 1 discriminator 1 view .LVU1420
 5097 00c6 D168     		ldr	r1, [r2, #12]
 5098 00c8 5960     		str	r1, [r3, #4]
 5099 00ca C4E7     		b	.L356
 5100              	.L364:
 5101              		.align	2
 5102              	.L363:
 5103 00cc 00000000 		.word	uxSchedulerSuspended
 5104 00d0 00000000 		.word	uxTopReadyPriority
 5105 00d4 00000000 		.word	pxReadyTasksLists
 5106 00d8 00000000 		.word	pxCurrentTCB
 5107 00dc 00000000 		.word	xYieldPending
 5108              	.LBE268:
 5109              		.cfi_endproc
 5110              	.LFE35:
 5112              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 5113              		.align	1
 5114              		.global	vTaskSetTimeOutState
 5115              		.syntax unified
 5116              		.thumb
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 212


 5117              		.thumb_func
 5119              	vTaskSetTimeOutState:
 5120              	.LVL351:
 5121              	.LFB36:
3287:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
 5122              		.loc 1 3287 1 view -0
 5123              		.cfi_startproc
 5124              		@ args = 0, pretend = 0, frame = 0
 5125              		@ frame_needed = 0, uses_anonymous_args = 0
3288:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5126              		.loc 1 3288 5 view .LVU1422
 5127 0000 60B1     		cbz	r0, .L370
3287:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
 5128              		.loc 1 3287 1 is_stmt 0 view .LVU1423
 5129 0002 10B5     		push	{r4, lr}
 5130              	.LCFI40:
 5131              		.cfi_def_cfa_offset 8
 5132              		.cfi_offset 4, -8
 5133              		.cfi_offset 14, -4
 5134 0004 0446     		mov	r4, r0
3288:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5135              		.loc 1 3288 30 is_stmt 1 discriminator 2 view .LVU1424
3289:ThirdParty/FreeRTOS/tasks.c ****     {
 5136              		.loc 1 3289 5 view .LVU1425
 5137 0006 FFF7FEFF 		bl	vPortEnterCritical
 5138              	.LVL352:
3291:ThirdParty/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
 5139              		.loc 1 3291 9 view .LVU1426
3291:ThirdParty/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
 5140              		.loc 1 3291 35 is_stmt 0 view .LVU1427
 5141 000a 094B     		ldr	r3, .L371
 5142 000c 1B68     		ldr	r3, [r3]
 5143 000e 2360     		str	r3, [r4]
3292:ThirdParty/FreeRTOS/tasks.c ****     }
 5144              		.loc 1 3292 9 is_stmt 1 view .LVU1428
3292:ThirdParty/FreeRTOS/tasks.c ****     }
 5145              		.loc 1 3292 36 is_stmt 0 view .LVU1429
 5146 0010 084B     		ldr	r3, .L371+4
 5147 0012 1B68     		ldr	r3, [r3]
 5148 0014 6360     		str	r3, [r4, #4]
3294:ThirdParty/FreeRTOS/tasks.c **** }
 5149              		.loc 1 3294 5 is_stmt 1 view .LVU1430
 5150 0016 FFF7FEFF 		bl	vPortExitCritical
 5151              	.LVL353:
3295:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5152              		.loc 1 3295 1 is_stmt 0 view .LVU1431
 5153 001a 10BD     		pop	{r4, pc}
 5154              	.LVL354:
 5155              	.L370:
 5156              	.LCFI41:
 5157              		.cfi_def_cfa_offset 0
 5158              		.cfi_restore 4
 5159              		.cfi_restore 14
3288:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5160              		.loc 1 3288 5 is_stmt 1 discriminator 1 view .LVU1432
 5161              	.LBB269:
 5162              	.LBI269:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 213


 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5163              		.loc 2 194 34 view .LVU1433
 5164              	.LBB270:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5165              		.loc 2 196 9 view .LVU1434
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5166              		.loc 2 198 9 view .LVU1435
 5167              		.syntax unified
 5168              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5169 001c 4FF05003 			mov r3, #80												
 5170 0020 83F31188 		msr basepri, r3											
 5171 0024 BFF36F8F 		isb														
 5172 0028 BFF34F8F 		dsb														
 5173              	
 5174              	@ 0 "" 2
 5175              		.thumb
 5176              		.syntax unified
 5177              	.L367:
 5178              	.LBE270:
 5179              	.LBE269:
3288:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5180              		.loc 1 3288 5 discriminator 3 view .LVU1436
3288:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5181              		.loc 1 3288 5 discriminator 3 view .LVU1437
 5182 002c FEE7     		b	.L367
 5183              	.L372:
 5184 002e 00BF     		.align	2
 5185              	.L371:
 5186 0030 00000000 		.word	xNumOfOverflows
 5187 0034 00000000 		.word	xTickCount
 5188              		.cfi_endproc
 5189              	.LFE36:
 5191              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 5192              		.align	1
 5193              		.global	vTaskInternalSetTimeOutState
 5194              		.syntax unified
 5195              		.thumb
 5196              		.thumb_func
 5198              	vTaskInternalSetTimeOutState:
 5199              	.LVL355:
 5200              	.LFB37:
3299:ThirdParty/FreeRTOS/tasks.c ****     /* For internal use only as it does not use a critical section. */
 5201              		.loc 1 3299 1 view -0
 5202              		.cfi_startproc
 5203              		@ args = 0, pretend = 0, frame = 0
 5204              		@ frame_needed = 0, uses_anonymous_args = 0
 5205              		@ link register save eliminated.
3301:ThirdParty/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 5206              		.loc 1 3301 5 view .LVU1439
3301:ThirdParty/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 5207              		.loc 1 3301 31 is_stmt 0 view .LVU1440
 5208 0000 034B     		ldr	r3, .L374
 5209 0002 1B68     		ldr	r3, [r3]
 5210 0004 0360     		str	r3, [r0]
3302:ThirdParty/FreeRTOS/tasks.c **** }
 5211              		.loc 1 3302 5 is_stmt 1 view .LVU1441
3302:ThirdParty/FreeRTOS/tasks.c **** }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 214


 5212              		.loc 1 3302 32 is_stmt 0 view .LVU1442
 5213 0006 034B     		ldr	r3, .L374+4
 5214 0008 1B68     		ldr	r3, [r3]
 5215 000a 4360     		str	r3, [r0, #4]
3303:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5216              		.loc 1 3303 1 view .LVU1443
 5217 000c 7047     		bx	lr
 5218              	.L375:
 5219 000e 00BF     		.align	2
 5220              	.L374:
 5221 0010 00000000 		.word	xNumOfOverflows
 5222 0014 00000000 		.word	xTickCount
 5223              		.cfi_endproc
 5224              	.LFE37:
 5226              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 5227              		.align	1
 5228              		.global	xTaskCheckForTimeOut
 5229              		.syntax unified
 5230              		.thumb
 5231              		.thumb_func
 5233              	xTaskCheckForTimeOut:
 5234              	.LVL356:
 5235              	.LFB38:
3308:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 5236              		.loc 1 3308 1 is_stmt 1 view -0
 5237              		.cfi_startproc
 5238              		@ args = 0, pretend = 0, frame = 0
 5239              		@ frame_needed = 0, uses_anonymous_args = 0
3308:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 5240              		.loc 1 3308 1 is_stmt 0 view .LVU1445
 5241 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5242              	.LCFI42:
 5243              		.cfi_def_cfa_offset 24
 5244              		.cfi_offset 3, -24
 5245              		.cfi_offset 4, -20
 5246              		.cfi_offset 5, -16
 5247              		.cfi_offset 6, -12
 5248              		.cfi_offset 7, -8
 5249              		.cfi_offset 14, -4
3309:ThirdParty/FreeRTOS/tasks.c **** 
 5250              		.loc 1 3309 5 is_stmt 1 view .LVU1446
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5251              		.loc 1 3311 5 view .LVU1447
 5252 0002 B8B1     		cbz	r0, .L386
 5253 0004 0C46     		mov	r4, r1
 5254 0006 0546     		mov	r5, r0
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5255              		.loc 1 3311 30 discriminator 2 view .LVU1448
3312:ThirdParty/FreeRTOS/tasks.c **** 
 5256              		.loc 1 3312 5 view .LVU1449
 5257 0008 E9B1     		cbz	r1, .L387
3312:ThirdParty/FreeRTOS/tasks.c **** 
 5258              		.loc 1 3312 34 discriminator 2 view .LVU1450
3314:ThirdParty/FreeRTOS/tasks.c ****     {
 5259              		.loc 1 3314 5 view .LVU1451
 5260 000a FFF7FEFF 		bl	vPortEnterCritical
 5261              	.LVL357:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 215


 5262              	.LBB271:
3317:ThirdParty/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 5263              		.loc 1 3317 9 view .LVU1452
3317:ThirdParty/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 5264              		.loc 1 3317 26 is_stmt 0 view .LVU1453
 5265 000e 1C4B     		ldr	r3, .L389
 5266 0010 1968     		ldr	r1, [r3]
 5267              	.LVL358:
3318:ThirdParty/FreeRTOS/tasks.c **** 
 5268              		.loc 1 3318 9 is_stmt 1 view .LVU1454
3318:ThirdParty/FreeRTOS/tasks.c **** 
 5269              		.loc 1 3318 68 is_stmt 0 view .LVU1455
 5270 0012 6B68     		ldr	r3, [r5, #4]
3318:ThirdParty/FreeRTOS/tasks.c **** 
 5271              		.loc 1 3318 26 view .LVU1456
 5272 0014 C81A     		subs	r0, r1, r3
 5273              	.LVL359:
3332:ThirdParty/FreeRTOS/tasks.c ****             {
 5274              		.loc 1 3332 13 is_stmt 1 view .LVU1457
3332:ThirdParty/FreeRTOS/tasks.c ****             {
 5275              		.loc 1 3332 17 is_stmt 0 view .LVU1458
 5276 0016 2268     		ldr	r2, [r4]
3332:ThirdParty/FreeRTOS/tasks.c ****             {
 5277              		.loc 1 3332 15 view .LVU1459
 5278 0018 B2F1FF3F 		cmp	r2, #-1
 5279 001c 2AD0     		beq	.L384
3342:ThirdParty/FreeRTOS/tasks.c ****         {
 5280              		.loc 1 3342 9 is_stmt 1 view .LVU1460
3342:ThirdParty/FreeRTOS/tasks.c ****         {
 5281              		.loc 1 3342 31 is_stmt 0 view .LVU1461
 5282 001e 194E     		ldr	r6, .L389+4
 5283 0020 3668     		ldr	r6, [r6]
3342:ThirdParty/FreeRTOS/tasks.c ****         {
 5284              		.loc 1 3342 11 view .LVU1462
 5285 0022 2F68     		ldr	r7, [r5]
 5286 0024 B742     		cmp	r7, r6
 5287 0026 17D0     		beq	.L382
3342:ThirdParty/FreeRTOS/tasks.c ****         {
 5288              		.loc 1 3342 62 discriminator 1 view .LVU1463
 5289 0028 8B42     		cmp	r3, r1
 5290 002a 15D8     		bhi	.L382
3349:ThirdParty/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 5291              		.loc 1 3349 13 is_stmt 1 view .LVU1464
 5292              	.LVL360:
3350:ThirdParty/FreeRTOS/tasks.c ****         }
 5293              		.loc 1 3350 13 view .LVU1465
3350:ThirdParty/FreeRTOS/tasks.c ****         }
 5294              		.loc 1 3350 28 is_stmt 0 view .LVU1466
 5295 002c 0023     		movs	r3, #0
 5296 002e 2360     		str	r3, [r4]
3349:ThirdParty/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 5297              		.loc 1 3349 21 view .LVU1467
 5298 0030 0124     		movs	r4, #1
 5299              	.LVL361:
3350:ThirdParty/FreeRTOS/tasks.c ****         }
 5300              		.loc 1 3350 28 view .LVU1468
 5301 0032 20E0     		b	.L381
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 216


 5302              	.LVL362:
 5303              	.L386:
3350:ThirdParty/FreeRTOS/tasks.c ****         }
 5304              		.loc 1 3350 28 view .LVU1469
 5305              	.LBE271:
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5306              		.loc 1 3311 5 is_stmt 1 discriminator 1 view .LVU1470
 5307              	.LBB272:
 5308              	.LBI272:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5309              		.loc 2 194 34 view .LVU1471
 5310              	.LBB273:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5311              		.loc 2 196 9 view .LVU1472
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5312              		.loc 2 198 9 view .LVU1473
 5313              		.syntax unified
 5314              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5315 0034 4FF05003 			mov r3, #80												
 5316 0038 83F31188 		msr basepri, r3											
 5317 003c BFF36F8F 		isb														
 5318 0040 BFF34F8F 		dsb														
 5319              	
 5320              	@ 0 "" 2
 5321              		.thumb
 5322              		.syntax unified
 5323              	.L378:
 5324              	.LBE273:
 5325              	.LBE272:
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5326              		.loc 1 3311 5 discriminator 3 view .LVU1474
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5327              		.loc 1 3311 5 discriminator 3 view .LVU1475
 5328 0044 FEE7     		b	.L378
 5329              	.L387:
3312:ThirdParty/FreeRTOS/tasks.c **** 
 5330              		.loc 1 3312 5 discriminator 1 view .LVU1476
 5331              	.LBB274:
 5332              	.LBI274:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5333              		.loc 2 194 34 view .LVU1477
 5334              	.LBB275:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5335              		.loc 2 196 9 view .LVU1478
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5336              		.loc 2 198 9 view .LVU1479
 5337              		.syntax unified
 5338              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5339 0046 4FF05003 			mov r3, #80												
 5340 004a 83F31188 		msr basepri, r3											
 5341 004e BFF36F8F 		isb														
 5342 0052 BFF34F8F 		dsb														
 5343              	
 5344              	@ 0 "" 2
 5345              		.thumb
 5346              		.syntax unified
 5347              	.L380:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 217


 5348              	.LBE275:
 5349              	.LBE274:
3312:ThirdParty/FreeRTOS/tasks.c **** 
 5350              		.loc 1 3312 5 discriminator 3 view .LVU1480
3312:ThirdParty/FreeRTOS/tasks.c **** 
 5351              		.loc 1 3312 5 discriminator 3 view .LVU1481
 5352 0056 FEE7     		b	.L380
 5353              	.LVL363:
 5354              	.L382:
 5355              	.LBB276:
3352:ThirdParty/FreeRTOS/tasks.c ****         {
 5356              		.loc 1 3352 14 view .LVU1482
3352:ThirdParty/FreeRTOS/tasks.c ****         {
 5357              		.loc 1 3352 16 is_stmt 0 view .LVU1483
 5358 0058 8242     		cmp	r2, r0
 5359 005a 03D8     		bhi	.L388
3361:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
 5360              		.loc 1 3361 13 is_stmt 1 view .LVU1484
3361:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
 5361              		.loc 1 3361 28 is_stmt 0 view .LVU1485
 5362 005c 0023     		movs	r3, #0
 5363 005e 2360     		str	r3, [r4]
3362:ThirdParty/FreeRTOS/tasks.c ****         }
 5364              		.loc 1 3362 13 is_stmt 1 view .LVU1486
 5365              	.LVL364:
3362:ThirdParty/FreeRTOS/tasks.c ****         }
 5366              		.loc 1 3362 21 is_stmt 0 view .LVU1487
 5367 0060 0124     		movs	r4, #1
 5368              	.LVL365:
3362:ThirdParty/FreeRTOS/tasks.c ****         }
 5369              		.loc 1 3362 21 view .LVU1488
 5370 0062 08E0     		b	.L381
 5371              	.LVL366:
 5372              	.L388:
3355:ThirdParty/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 5373              		.loc 1 3355 13 is_stmt 1 view .LVU1489
3355:ThirdParty/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 5374              		.loc 1 3355 28 is_stmt 0 view .LVU1490
 5375 0064 5B1A     		subs	r3, r3, r1
 5376 0066 1344     		add	r3, r3, r2
 5377 0068 2360     		str	r3, [r4]
3356:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdFALSE;
 5378              		.loc 1 3356 13 is_stmt 1 view .LVU1491
 5379 006a 2846     		mov	r0, r5
 5380              	.LVL367:
3356:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdFALSE;
 5381              		.loc 1 3356 13 is_stmt 0 view .LVU1492
 5382 006c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 5383              	.LVL368:
3357:ThirdParty/FreeRTOS/tasks.c ****         }
 5384              		.loc 1 3357 13 is_stmt 1 view .LVU1493
3357:ThirdParty/FreeRTOS/tasks.c ****         }
 5385              		.loc 1 3357 21 is_stmt 0 view .LVU1494
 5386 0070 0024     		movs	r4, #0
 5387              	.LVL369:
3357:ThirdParty/FreeRTOS/tasks.c ****         }
 5388              		.loc 1 3357 21 view .LVU1495
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 218


 5389 0072 00E0     		b	.L381
 5390              	.LVL370:
 5391              	.L384:
3337:ThirdParty/FreeRTOS/tasks.c ****             }
 5392              		.loc 1 3337 25 view .LVU1496
 5393 0074 0024     		movs	r4, #0
 5394              	.LVL371:
 5395              	.L381:
3337:ThirdParty/FreeRTOS/tasks.c ****             }
 5396              		.loc 1 3337 25 view .LVU1497
 5397              	.LBE276:
3365:ThirdParty/FreeRTOS/tasks.c **** 
 5398              		.loc 1 3365 5 is_stmt 1 view .LVU1498
 5399 0076 FFF7FEFF 		bl	vPortExitCritical
 5400              	.LVL372:
3367:ThirdParty/FreeRTOS/tasks.c **** }
 5401              		.loc 1 3367 5 view .LVU1499
3368:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5402              		.loc 1 3368 1 is_stmt 0 view .LVU1500
 5403 007a 2046     		mov	r0, r4
 5404 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5405              	.LVL373:
 5406              	.L390:
3368:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5407              		.loc 1 3368 1 view .LVU1501
 5408 007e 00BF     		.align	2
 5409              	.L389:
 5410 0080 00000000 		.word	xTickCount
 5411 0084 00000000 		.word	xNumOfOverflows
 5412              		.cfi_endproc
 5413              	.LFE38:
 5415              		.section	.text.vTaskMissedYield,"ax",%progbits
 5416              		.align	1
 5417              		.global	vTaskMissedYield
 5418              		.syntax unified
 5419              		.thumb
 5420              		.thumb_func
 5422              	vTaskMissedYield:
 5423              	.LFB39:
3372:ThirdParty/FreeRTOS/tasks.c ****     xYieldPending = pdTRUE;
 5424              		.loc 1 3372 1 is_stmt 1 view -0
 5425              		.cfi_startproc
 5426              		@ args = 0, pretend = 0, frame = 0
 5427              		@ frame_needed = 0, uses_anonymous_args = 0
 5428              		@ link register save eliminated.
3373:ThirdParty/FreeRTOS/tasks.c **** }
 5429              		.loc 1 3373 5 view .LVU1503
3373:ThirdParty/FreeRTOS/tasks.c **** }
 5430              		.loc 1 3373 19 is_stmt 0 view .LVU1504
 5431 0000 014B     		ldr	r3, .L392
 5432 0002 0122     		movs	r2, #1
 5433 0004 1A60     		str	r2, [r3]
3374:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5434              		.loc 1 3374 1 view .LVU1505
 5435 0006 7047     		bx	lr
 5436              	.L393:
 5437              		.align	2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 219


 5438              	.L392:
 5439 0008 00000000 		.word	xYieldPending
 5440              		.cfi_endproc
 5441              	.LFE39:
 5443              		.section	.text.uxTaskGetTaskNumber,"ax",%progbits
 5444              		.align	1
 5445              		.global	uxTaskGetTaskNumber
 5446              		.syntax unified
 5447              		.thumb
 5448              		.thumb_func
 5450              	uxTaskGetTaskNumber:
 5451              	.LVL374:
 5452              	.LFB40:
3380:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
 5453              		.loc 1 3380 5 is_stmt 1 view -0
 5454              		.cfi_startproc
 5455              		@ args = 0, pretend = 0, frame = 0
 5456              		@ frame_needed = 0, uses_anonymous_args = 0
 5457              		@ link register save eliminated.
3381:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 5458              		.loc 1 3381 9 view .LVU1507
3382:ThirdParty/FreeRTOS/tasks.c **** 
 5459              		.loc 1 3382 9 view .LVU1508
3384:ThirdParty/FreeRTOS/tasks.c ****         {
 5460              		.loc 1 3384 9 view .LVU1509
3384:ThirdParty/FreeRTOS/tasks.c ****         {
 5461              		.loc 1 3384 11 is_stmt 0 view .LVU1510
 5462 0000 08B1     		cbz	r0, .L396
3386:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxTaskNumber;
 5463              		.loc 1 3386 13 is_stmt 1 view .LVU1511
 5464              	.LVL375:
3387:ThirdParty/FreeRTOS/tasks.c ****         }
 5465              		.loc 1 3387 13 view .LVU1512
3387:ThirdParty/FreeRTOS/tasks.c ****         }
 5466              		.loc 1 3387 22 is_stmt 0 view .LVU1513
 5467 0002 406C     		ldr	r0, [r0, #68]
 5468              	.LVL376:
3387:ThirdParty/FreeRTOS/tasks.c ****         }
 5469              		.loc 1 3387 22 view .LVU1514
 5470 0004 7047     		bx	lr
 5471              	.LVL377:
 5472              	.L396:
3391:ThirdParty/FreeRTOS/tasks.c ****         }
 5473              		.loc 1 3391 22 view .LVU1515
 5474 0006 0020     		movs	r0, #0
 5475              	.LVL378:
3394:ThirdParty/FreeRTOS/tasks.c ****     }
 5476              		.loc 1 3394 9 is_stmt 1 view .LVU1516
3395:ThirdParty/FreeRTOS/tasks.c **** 
 5477              		.loc 1 3395 5 is_stmt 0 view .LVU1517
 5478 0008 7047     		bx	lr
 5479              		.cfi_endproc
 5480              	.LFE40:
 5482              		.section	.text.vTaskSetTaskNumber,"ax",%progbits
 5483              		.align	1
 5484              		.global	vTaskSetTaskNumber
 5485              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 220


 5486              		.thumb
 5487              		.thumb_func
 5489              	vTaskSetTaskNumber:
 5490              	.LVL379:
 5491              	.LFB41:
3404:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 5492              		.loc 1 3404 5 is_stmt 1 view -0
 5493              		.cfi_startproc
 5494              		@ args = 0, pretend = 0, frame = 0
 5495              		@ frame_needed = 0, uses_anonymous_args = 0
 5496              		@ link register save eliminated.
3405:ThirdParty/FreeRTOS/tasks.c **** 
 5497              		.loc 1 3405 9 view .LVU1519
3407:ThirdParty/FreeRTOS/tasks.c ****         {
 5498              		.loc 1 3407 9 view .LVU1520
3407:ThirdParty/FreeRTOS/tasks.c ****         {
 5499              		.loc 1 3407 11 is_stmt 0 view .LVU1521
 5500 0000 00B1     		cbz	r0, .L397
3409:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->uxTaskNumber = uxHandle;
 5501              		.loc 1 3409 13 is_stmt 1 view .LVU1522
 5502              	.LVL380:
3410:ThirdParty/FreeRTOS/tasks.c ****         }
 5503              		.loc 1 3410 13 view .LVU1523
3410:ThirdParty/FreeRTOS/tasks.c ****         }
 5504              		.loc 1 3410 33 is_stmt 0 view .LVU1524
 5505 0002 4164     		str	r1, [r0, #68]
 5506              	.LVL381:
 5507              	.L397:
3412:ThirdParty/FreeRTOS/tasks.c **** 
 5508              		.loc 1 3412 5 view .LVU1525
 5509 0004 7047     		bx	lr
 5510              		.cfi_endproc
 5511              	.LFE41:
 5513              		.section	.text.vTaskGetInfo,"ax",%progbits
 5514              		.align	1
 5515              		.global	vTaskGetInfo
 5516              		.syntax unified
 5517              		.thumb
 5518              		.thumb_func
 5520              	vTaskGetInfo:
 5521              	.LVL382:
 5522              	.LFB45:
3723:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 5523              		.loc 1 3723 5 is_stmt 1 view -0
 5524              		.cfi_startproc
 5525              		@ args = 0, pretend = 0, frame = 0
 5526              		@ frame_needed = 0, uses_anonymous_args = 0
3723:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 5527              		.loc 1 3723 5 is_stmt 0 view .LVU1527
 5528 0000 70B5     		push	{r4, r5, r6, lr}
 5529              	.LCFI43:
 5530              		.cfi_def_cfa_offset 16
 5531              		.cfi_offset 4, -16
 5532              		.cfi_offset 5, -12
 5533              		.cfi_offset 6, -8
 5534              		.cfi_offset 14, -4
 5535 0002 0C46     		mov	r4, r1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 221


 5536 0004 1646     		mov	r6, r2
3724:ThirdParty/FreeRTOS/tasks.c **** 
 5537              		.loc 1 3724 9 is_stmt 1 view .LVU1528
3727:ThirdParty/FreeRTOS/tasks.c **** 
 5538              		.loc 1 3727 9 view .LVU1529
3727:ThirdParty/FreeRTOS/tasks.c **** 
 5539              		.loc 1 3727 17 is_stmt 0 view .LVU1530
 5540 0006 0546     		mov	r5, r0
 5541 0008 D0B1     		cbz	r0, .L408
 5542              	.LVL383:
 5543              	.L400:
3729:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
 5544              		.loc 1 3729 9 is_stmt 1 view .LVU1531
3729:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
 5545              		.loc 1 3729 31 is_stmt 0 view .LVU1532
 5546 000a 2560     		str	r5, [r4]
3730:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 5547              		.loc 1 3730 9 is_stmt 1 view .LVU1533
3730:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 5548              		.loc 1 3730 53 is_stmt 0 view .LVU1534
 5549 000c 05F13402 		add	r2, r5, #52
3730:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 5550              		.loc 1 3730 34 view .LVU1535
 5551 0010 6260     		str	r2, [r4, #4]
3731:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
 5552              		.loc 1 3731 9 is_stmt 1 view .LVU1536
3731:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
 5553              		.loc 1 3731 48 is_stmt 0 view .LVU1537
 5554 0012 EA6A     		ldr	r2, [r5, #44]
3731:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
 5555              		.loc 1 3731 41 view .LVU1538
 5556 0014 2261     		str	r2, [r4, #16]
3732:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 5557              		.loc 1 3732 9 is_stmt 1 view .LVU1539
3732:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 5558              		.loc 1 3732 42 is_stmt 0 view .LVU1540
 5559 0016 2A6B     		ldr	r2, [r5, #48]
3732:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 5560              		.loc 1 3732 35 view .LVU1541
 5561 0018 E261     		str	r2, [r4, #28]
3737:ThirdParty/FreeRTOS/tasks.c **** 
 5562              		.loc 1 3737 9 is_stmt 1 view .LVU1542
3737:ThirdParty/FreeRTOS/tasks.c **** 
 5563              		.loc 1 3737 42 is_stmt 0 view .LVU1543
 5564 001a 2A6C     		ldr	r2, [r5, #64]
3737:ThirdParty/FreeRTOS/tasks.c **** 
 5565              		.loc 1 3737 35 view .LVU1544
 5566 001c A260     		str	r2, [r4, #8]
3741:ThirdParty/FreeRTOS/tasks.c ****         }
 5567              		.loc 1 3741 13 is_stmt 1 view .LVU1545
3741:ThirdParty/FreeRTOS/tasks.c ****         }
 5568              		.loc 1 3741 49 is_stmt 0 view .LVU1546
 5569 001e AA6C     		ldr	r2, [r5, #72]
3741:ThirdParty/FreeRTOS/tasks.c ****         }
 5570              		.loc 1 3741 42 view .LVU1547
 5571 0020 6261     		str	r2, [r4, #20]
3755:ThirdParty/FreeRTOS/tasks.c ****         }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 222


 5572              		.loc 1 3755 13 is_stmt 1 view .LVU1548
3755:ThirdParty/FreeRTOS/tasks.c ****         }
 5573              		.loc 1 3755 44 is_stmt 0 view .LVU1549
 5574 0022 0022     		movs	r2, #0
 5575 0024 A261     		str	r2, [r4, #24]
3762:ThirdParty/FreeRTOS/tasks.c ****         {
 5576              		.loc 1 3762 9 is_stmt 1 view .LVU1550
3762:ThirdParty/FreeRTOS/tasks.c ****         {
 5577              		.loc 1 3762 11 is_stmt 0 view .LVU1551
 5578 0026 052B     		cmp	r3, #5
 5579 0028 19D0     		beq	.L401
3764:ThirdParty/FreeRTOS/tasks.c ****             {
 5580              		.loc 1 3764 13 is_stmt 1 view .LVU1552
3764:ThirdParty/FreeRTOS/tasks.c ****             {
 5581              		.loc 1 3764 23 is_stmt 0 view .LVU1553
 5582 002a 124A     		ldr	r2, .L412
 5583 002c 1268     		ldr	r2, [r2]
3764:ThirdParty/FreeRTOS/tasks.c ****             {
 5584              		.loc 1 3764 15 view .LVU1554
 5585 002e AA42     		cmp	r2, r5
 5586 0030 09D0     		beq	.L409
3770:ThirdParty/FreeRTOS/tasks.c **** 
 5587              		.loc 1 3770 17 is_stmt 1 view .LVU1555
3770:ThirdParty/FreeRTOS/tasks.c **** 
 5588              		.loc 1 3770 45 is_stmt 0 view .LVU1556
 5589 0032 2373     		strb	r3, [r4, #12]
3777:ThirdParty/FreeRTOS/tasks.c ****                     {
 5590              		.loc 1 3777 21 is_stmt 1 view .LVU1557
3777:ThirdParty/FreeRTOS/tasks.c ****                     {
 5591              		.loc 1 3777 23 is_stmt 0 view .LVU1558
 5592 0034 032B     		cmp	r3, #3
 5593 0036 09D0     		beq	.L410
 5594              	.LVL384:
 5595              	.L403:
3799:ThirdParty/FreeRTOS/tasks.c ****         {
 5596              		.loc 1 3799 9 is_stmt 1 view .LVU1559
3799:ThirdParty/FreeRTOS/tasks.c ****         {
 5597              		.loc 1 3799 11 is_stmt 0 view .LVU1560
 5598 0038 B6B9     		cbnz	r6, .L411
3813:ThirdParty/FreeRTOS/tasks.c ****         }
 5599              		.loc 1 3813 13 is_stmt 1 view .LVU1561
3813:ThirdParty/FreeRTOS/tasks.c ****         }
 5600              		.loc 1 3813 48 is_stmt 0 view .LVU1562
 5601 003a 0023     		movs	r3, #0
 5602 003c 2384     		strh	r3, [r4, #32]	@ movhi
 5603              	.L399:
3815:ThirdParty/FreeRTOS/tasks.c **** 
 5604              		.loc 1 3815 5 view .LVU1563
 5605 003e 70BD     		pop	{r4, r5, r6, pc}
 5606              	.LVL385:
 5607              	.L408:
3727:ThirdParty/FreeRTOS/tasks.c **** 
 5608              		.loc 1 3727 17 discriminator 1 view .LVU1564
 5609 0040 0C4A     		ldr	r2, .L412
 5610              	.LVL386:
3727:ThirdParty/FreeRTOS/tasks.c **** 
 5611              		.loc 1 3727 17 discriminator 1 view .LVU1565
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 223


 5612 0042 1568     		ldr	r5, [r2]
 5613              	.LVL387:
3727:ThirdParty/FreeRTOS/tasks.c **** 
 5614              		.loc 1 3727 17 discriminator 1 view .LVU1566
 5615 0044 E1E7     		b	.L400
 5616              	.LVL388:
 5617              	.L409:
3766:ThirdParty/FreeRTOS/tasks.c ****             }
 5618              		.loc 1 3766 17 is_stmt 1 view .LVU1567
3766:ThirdParty/FreeRTOS/tasks.c ****             }
 5619              		.loc 1 3766 45 is_stmt 0 view .LVU1568
 5620 0046 0023     		movs	r3, #0
 5621              	.LVL389:
3766:ThirdParty/FreeRTOS/tasks.c ****             }
 5622              		.loc 1 3766 45 view .LVU1569
 5623 0048 2373     		strb	r3, [r4, #12]
 5624 004a F5E7     		b	.L403
 5625              	.LVL390:
 5626              	.L410:
3779:ThirdParty/FreeRTOS/tasks.c ****                         {
 5627              		.loc 1 3779 25 is_stmt 1 view .LVU1570
 5628 004c FFF7FEFF 		bl	vTaskSuspendAll
 5629              	.LVL391:
3781:ThirdParty/FreeRTOS/tasks.c ****                             {
 5630              		.loc 1 3781 29 view .LVU1571
3781:ThirdParty/FreeRTOS/tasks.c ****                             {
 5631              		.loc 1 3781 33 is_stmt 0 view .LVU1572
 5632 0050 AB6A     		ldr	r3, [r5, #40]
3781:ThirdParty/FreeRTOS/tasks.c ****                             {
 5633              		.loc 1 3781 31 view .LVU1573
 5634 0052 0BB1     		cbz	r3, .L404
3783:ThirdParty/FreeRTOS/tasks.c ****                             }
 5635              		.loc 1 3783 33 is_stmt 1 view .LVU1574
3783:ThirdParty/FreeRTOS/tasks.c ****                             }
 5636              		.loc 1 3783 61 is_stmt 0 view .LVU1575
 5637 0054 0223     		movs	r3, #2
 5638 0056 2373     		strb	r3, [r4, #12]
 5639              	.L404:
3786:ThirdParty/FreeRTOS/tasks.c ****                     }
 5640              		.loc 1 3786 25 is_stmt 1 view .LVU1576
3786:ThirdParty/FreeRTOS/tasks.c ****                     }
 5641              		.loc 1 3786 34 is_stmt 0 view .LVU1577
 5642 0058 FFF7FEFF 		bl	xTaskResumeAll
 5643              	.LVL392:
 5644 005c ECE7     		b	.L403
 5645              	.LVL393:
 5646              	.L401:
3794:ThirdParty/FreeRTOS/tasks.c ****         }
 5647              		.loc 1 3794 13 is_stmt 1 view .LVU1578
3794:ThirdParty/FreeRTOS/tasks.c ****         }
 5648              		.loc 1 3794 43 is_stmt 0 view .LVU1579
 5649 005e 2846     		mov	r0, r5
 5650 0060 FFF7FEFF 		bl	eTaskGetState
 5651              	.LVL394:
3794:ThirdParty/FreeRTOS/tasks.c ****         }
 5652              		.loc 1 3794 41 discriminator 1 view .LVU1580
 5653 0064 2073     		strb	r0, [r4, #12]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 224


 5654 0066 E7E7     		b	.L403
 5655              	.L411:
3807:ThirdParty/FreeRTOS/tasks.c ****             }
 5656              		.loc 1 3807 17 is_stmt 1 view .LVU1581
3807:ThirdParty/FreeRTOS/tasks.c ****             }
 5657              		.loc 1 3807 54 is_stmt 0 view .LVU1582
 5658 0068 286B     		ldr	r0, [r5, #48]
 5659 006a FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 5660              	.LVL395:
3807:ThirdParty/FreeRTOS/tasks.c ****             }
 5661              		.loc 1 3807 52 discriminator 1 view .LVU1583
 5662 006e 2084     		strh	r0, [r4, #32]	@ movhi
 5663 0070 E5E7     		b	.L399
 5664              	.L413:
 5665 0072 00BF     		.align	2
 5666              	.L412:
 5667 0074 00000000 		.word	pxCurrentTCB
 5668              		.cfi_endproc
 5669              	.LFE45:
 5671              		.section	.text.prvListTasksWithinSingleList,"ax",%progbits
 5672              		.align	1
 5673              		.syntax unified
 5674              		.thumb
 5675              		.thumb_func
 5677              	prvListTasksWithinSingleList:
 5678              	.LVL396:
 5679              	.LFB46:
3825:ThirdParty/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB;
 5680              		.loc 1 3825 5 is_stmt 1 view -0
 5681              		.cfi_startproc
 5682              		@ args = 0, pretend = 0, frame = 0
 5683              		@ frame_needed = 0, uses_anonymous_args = 0
3825:ThirdParty/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB;
 5684              		.loc 1 3825 5 is_stmt 0 view .LVU1585
 5685 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 5686              	.LCFI44:
 5687              		.cfi_def_cfa_offset 32
 5688              		.cfi_offset 4, -32
 5689              		.cfi_offset 5, -28
 5690              		.cfi_offset 6, -24
 5691              		.cfi_offset 7, -20
 5692              		.cfi_offset 8, -16
 5693              		.cfi_offset 9, -12
 5694              		.cfi_offset 10, -8
 5695              		.cfi_offset 14, -4
3826:ThirdParty/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxFirstTCB;
 5696              		.loc 1 3826 29 is_stmt 1 view .LVU1586
3827:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0;
 5697              		.loc 1 3827 29 view .LVU1587
3828:ThirdParty/FreeRTOS/tasks.c **** 
 5698              		.loc 1 3828 9 view .LVU1588
 5699              	.LVL397:
3830:ThirdParty/FreeRTOS/tasks.c ****         {
 5700              		.loc 1 3830 9 view .LVU1589
3830:ThirdParty/FreeRTOS/tasks.c ****         {
 5701              		.loc 1 3830 13 is_stmt 0 view .LVU1590
 5702 0004 0C68     		ldr	r4, [r1]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 225


3830:ThirdParty/FreeRTOS/tasks.c ****         {
 5703              		.loc 1 3830 11 view .LVU1591
 5704 0006 3CB3     		cbz	r4, .L414
 5705 0008 0746     		mov	r7, r0
 5706 000a 0D46     		mov	r5, r1
 5707 000c 9046     		mov	r8, r2
 5708              	.LBB277:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5709              		.loc 1 3832 13 is_stmt 1 view .LVU1592
 5710              	.LVL398:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5711              		.loc 1 3832 13 view .LVU1593
 5712 000e 4B68     		ldr	r3, [r1, #4]
 5713 0010 5B68     		ldr	r3, [r3, #4]
 5714 0012 4B60     		str	r3, [r1, #4]
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5715              		.loc 1 3832 13 view .LVU1594
 5716 0014 01F10809 		add	r9, r1, #8
 5717 0018 4B45     		cmp	r3, r9
 5718 001a 04D0     		beq	.L420
 5719              	.L416:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5720              		.loc 1 3832 13 discriminator 3 view .LVU1595
 5721 001c 6B68     		ldr	r3, [r5, #4]
 5722 001e D3F80CA0 		ldr	r10, [r3, #12]
 5723              	.LVL399:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5724              		.loc 1 3832 13 is_stmt 0 discriminator 3 view .LVU1596
 5725              	.LBE277:
3828:ThirdParty/FreeRTOS/tasks.c **** 
 5726              		.loc 1 3828 21 view .LVU1597
 5727 0022 0024     		movs	r4, #0
 5728 0024 10E0     		b	.L418
 5729              	.LVL400:
 5730              	.L420:
 5731              	.LBB278:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5732              		.loc 1 3832 13 is_stmt 1 discriminator 1 view .LVU1598
 5733 0026 5B68     		ldr	r3, [r3, #4]
 5734 0028 4B60     		str	r3, [r1, #4]
 5735 002a F7E7     		b	.L416
 5736              	.LVL401:
 5737              	.L417:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5738              		.loc 1 3832 13 is_stmt 0 discriminator 1 view .LVU1599
 5739              	.LBE278:
 5740              	.LBB279:
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5741              		.loc 1 3840 17 is_stmt 1 discriminator 3 view .LVU1600
 5742 002c 6B68     		ldr	r3, [r5, #4]
 5743 002e DE68     		ldr	r6, [r3, #12]
 5744              	.LVL402:
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5745              		.loc 1 3840 17 is_stmt 0 discriminator 3 view .LVU1601
 5746              	.LBE279:
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5747              		.loc 1 3840 65 is_stmt 1 discriminator 3 view .LVU1602
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 226


3841:ThirdParty/FreeRTOS/tasks.c ****                 uxTask++;
 5748              		.loc 1 3841 17 view .LVU1603
3841:ThirdParty/FreeRTOS/tasks.c ****                 uxTask++;
 5749              		.loc 1 3841 79 is_stmt 0 view .LVU1604
 5750 0030 04EBC401 		add	r1, r4, r4, lsl #3
3841:ThirdParty/FreeRTOS/tasks.c ****                 uxTask++;
 5751              		.loc 1 3841 17 view .LVU1605
 5752 0034 4346     		mov	r3, r8
 5753 0036 0122     		movs	r2, #1
 5754 0038 07EB8101 		add	r1, r7, r1, lsl #2
 5755 003c 3046     		mov	r0, r6
 5756 003e FFF7FEFF 		bl	vTaskGetInfo
 5757              	.LVL403:
3842:ThirdParty/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
 5758              		.loc 1 3842 17 is_stmt 1 view .LVU1606
3842:ThirdParty/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
 5759              		.loc 1 3842 23 is_stmt 0 view .LVU1607
 5760 0042 0134     		adds	r4, r4, #1
 5761              	.LVL404:
3843:ThirdParty/FreeRTOS/tasks.c ****         }
 5762              		.loc 1 3843 32 is_stmt 1 view .LVU1608
 5763 0044 B245     		cmp	r10, r6
 5764 0046 07D0     		beq	.L414
 5765              	.LVL405:
 5766              	.L418:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5767              		.loc 1 3832 62 discriminator 4 view .LVU1609
3838:ThirdParty/FreeRTOS/tasks.c ****             {
 5768              		.loc 1 3838 13 view .LVU1610
 5769              	.LBB280:
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5770              		.loc 1 3840 17 view .LVU1611
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5771              		.loc 1 3840 17 view .LVU1612
 5772 0048 6B68     		ldr	r3, [r5, #4]
 5773 004a 5968     		ldr	r1, [r3, #4]
 5774 004c 6960     		str	r1, [r5, #4]
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5775              		.loc 1 3840 17 view .LVU1613
 5776 004e 8945     		cmp	r9, r1
 5777 0050 ECD1     		bne	.L417
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5778              		.loc 1 3840 17 discriminator 1 view .LVU1614
 5779 0052 4B68     		ldr	r3, [r1, #4]
 5780 0054 6B60     		str	r3, [r5, #4]
 5781 0056 E9E7     		b	.L417
 5782              	.LVL406:
 5783              	.L414:
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5784              		.loc 1 3840 17 is_stmt 0 discriminator 1 view .LVU1615
 5785              	.LBE280:
3851:ThirdParty/FreeRTOS/tasks.c **** 
 5786              		.loc 1 3851 5 view .LVU1616
 5787 0058 2046     		mov	r0, r4
 5788 005a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5789              		.cfi_endproc
 5790              	.LFE46:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 227


 5792              		.section	.text.uxTaskGetSystemState,"ax",%progbits
 5793              		.align	1
 5794              		.global	uxTaskGetSystemState
 5795              		.syntax unified
 5796              		.thumb
 5797              		.thumb_func
 5799              	uxTaskGetSystemState:
 5800              	.LVL407:
 5801              	.LFB27:
2492:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 5802              		.loc 1 2492 5 is_stmt 1 view -0
 5803              		.cfi_startproc
 5804              		@ args = 0, pretend = 0, frame = 0
 5805              		@ frame_needed = 0, uses_anonymous_args = 0
2492:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 5806              		.loc 1 2492 5 is_stmt 0 view .LVU1618
 5807 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5808              	.LCFI45:
 5809              		.cfi_def_cfa_offset 24
 5810              		.cfi_offset 3, -24
 5811              		.cfi_offset 4, -20
 5812              		.cfi_offset 5, -16
 5813              		.cfi_offset 6, -12
 5814              		.cfi_offset 7, -8
 5815              		.cfi_offset 14, -4
 5816 0002 0646     		mov	r6, r0
 5817 0004 0C46     		mov	r4, r1
 5818 0006 1746     		mov	r7, r2
2493:ThirdParty/FreeRTOS/tasks.c **** 
 5819              		.loc 1 2493 9 is_stmt 1 view .LVU1619
 5820              	.LVL408:
2495:ThirdParty/FreeRTOS/tasks.c ****         {
 5821              		.loc 1 2495 9 view .LVU1620
 5822 0008 FFF7FEFF 		bl	vTaskSuspendAll
 5823              	.LVL409:
2498:ThirdParty/FreeRTOS/tasks.c ****             {
 5824              		.loc 1 2498 13 view .LVU1621
2498:ThirdParty/FreeRTOS/tasks.c ****             {
 5825              		.loc 1 2498 29 is_stmt 0 view .LVU1622
 5826 000c 224B     		ldr	r3, .L426
 5827 000e 1B68     		ldr	r3, [r3]
2498:ThirdParty/FreeRTOS/tasks.c ****             {
 5828              		.loc 1 2498 15 view .LVU1623
 5829 0010 A342     		cmp	r3, r4
 5830 0012 3BD8     		bhi	.L424
2493:ThirdParty/FreeRTOS/tasks.c **** 
 5831              		.loc 1 2493 33 view .LVU1624
 5832 0014 0525     		movs	r5, #5
2493:ThirdParty/FreeRTOS/tasks.c **** 
 5833              		.loc 1 2493 21 view .LVU1625
 5834 0016 0024     		movs	r4, #0
 5835              	.LVL410:
 5836              	.L423:
2502:ThirdParty/FreeRTOS/tasks.c ****                 {
 5837              		.loc 1 2502 17 is_stmt 1 view .LVU1626
2504:ThirdParty/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
 5838              		.loc 1 2504 21 view .LVU1627
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 228


2504:ThirdParty/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
 5839              		.loc 1 2504 28 is_stmt 0 view .LVU1628
 5840 0018 013D     		subs	r5, r5, #1
 5841              	.LVL411:
2505:ThirdParty/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 5842              		.loc 1 2505 21 is_stmt 1 view .LVU1629
2505:ThirdParty/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 5843              		.loc 1 2505 81 is_stmt 0 view .LVU1630
 5844 001a 04EBC400 		add	r0, r4, r4, lsl #3
2505:ThirdParty/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 5845              		.loc 1 2505 31 view .LVU1631
 5846 001e 05EB8501 		add	r1, r5, r5, lsl #2
 5847 0022 0122     		movs	r2, #1
 5848 0024 1D4B     		ldr	r3, .L426+4
 5849 0026 03EB8101 		add	r1, r3, r1, lsl #2
 5850 002a 06EB8000 		add	r0, r6, r0, lsl #2
 5851 002e FFF7FEFF 		bl	prvListTasksWithinSingleList
 5852              	.LVL412:
2505:ThirdParty/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 5853              		.loc 1 2505 28 discriminator 1 view .LVU1632
 5854 0032 0444     		add	r4, r4, r0
 5855              	.LVL413:
2506:ThirdParty/FreeRTOS/tasks.c **** 
 5856              		.loc 1 2506 34 is_stmt 1 discriminator 1 view .LVU1633
 5857 0034 002D     		cmp	r5, #0
 5858 0036 EFD1     		bne	.L423
2510:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 5859              		.loc 1 2510 17 view .LVU1634
2510:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 5860              		.loc 1 2510 77 is_stmt 0 view .LVU1635
 5861 0038 04EBC400 		add	r0, r4, r4, lsl #3
2510:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 5862              		.loc 1 2510 27 view .LVU1636
 5863 003c 184B     		ldr	r3, .L426+8
 5864 003e 1968     		ldr	r1, [r3]
 5865 0040 0222     		movs	r2, #2
 5866 0042 06EB8000 		add	r0, r6, r0, lsl #2
 5867 0046 FFF7FEFF 		bl	prvListTasksWithinSingleList
 5868              	.LVL414:
2510:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 5869              		.loc 1 2510 24 discriminator 1 view .LVU1637
 5870 004a 0444     		add	r4, r4, r0
 5871              	.LVL415:
2511:ThirdParty/FreeRTOS/tasks.c **** 
 5872              		.loc 1 2511 17 is_stmt 1 view .LVU1638
2511:ThirdParty/FreeRTOS/tasks.c **** 
 5873              		.loc 1 2511 77 is_stmt 0 view .LVU1639
 5874 004c 04EBC400 		add	r0, r4, r4, lsl #3
2511:ThirdParty/FreeRTOS/tasks.c **** 
 5875              		.loc 1 2511 27 view .LVU1640
 5876 0050 144B     		ldr	r3, .L426+12
 5877 0052 1968     		ldr	r1, [r3]
 5878 0054 0222     		movs	r2, #2
 5879 0056 06EB8000 		add	r0, r6, r0, lsl #2
 5880 005a FFF7FEFF 		bl	prvListTasksWithinSingleList
 5881              	.LVL416:
2511:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 229


 5882              		.loc 1 2511 24 discriminator 1 view .LVU1641
 5883 005e 0444     		add	r4, r4, r0
 5884              	.LVL417:
2517:ThirdParty/FreeRTOS/tasks.c ****                 }
 5885              		.loc 1 2517 21 is_stmt 1 view .LVU1642
2517:ThirdParty/FreeRTOS/tasks.c ****                 }
 5886              		.loc 1 2517 81 is_stmt 0 view .LVU1643
 5887 0060 04EBC400 		add	r0, r4, r4, lsl #3
2517:ThirdParty/FreeRTOS/tasks.c ****                 }
 5888              		.loc 1 2517 31 view .LVU1644
 5889 0064 0422     		movs	r2, #4
 5890 0066 1049     		ldr	r1, .L426+16
 5891 0068 06EB8000 		add	r0, r6, r0, lsl #2
 5892 006c FFF7FEFF 		bl	prvListTasksWithinSingleList
 5893              	.LVL418:
2517:ThirdParty/FreeRTOS/tasks.c ****                 }
 5894              		.loc 1 2517 28 discriminator 1 view .LVU1645
 5895 0070 0444     		add	r4, r4, r0
 5896              	.LVL419:
2525:ThirdParty/FreeRTOS/tasks.c ****                 }
 5897              		.loc 1 2525 21 is_stmt 1 view .LVU1646
2525:ThirdParty/FreeRTOS/tasks.c ****                 }
 5898              		.loc 1 2525 81 is_stmt 0 view .LVU1647
 5899 0072 04EBC400 		add	r0, r4, r4, lsl #3
2525:ThirdParty/FreeRTOS/tasks.c ****                 }
 5900              		.loc 1 2525 31 view .LVU1648
 5901 0076 0322     		movs	r2, #3
 5902 0078 0C49     		ldr	r1, .L426+20
 5903 007a 06EB8000 		add	r0, r6, r0, lsl #2
 5904 007e FFF7FEFF 		bl	prvListTasksWithinSingleList
 5905              	.LVL420:
2525:ThirdParty/FreeRTOS/tasks.c ****                 }
 5906              		.loc 1 2525 28 discriminator 1 view .LVU1649
 5907 0082 0444     		add	r4, r4, r0
 5908              	.LVL421:
2542:ThirdParty/FreeRTOS/tasks.c ****                     {
 5909              		.loc 1 2542 21 is_stmt 1 view .LVU1650
2542:ThirdParty/FreeRTOS/tasks.c ****                     {
 5910              		.loc 1 2542 23 is_stmt 0 view .LVU1651
 5911 0084 1FB1     		cbz	r7, .L422
2544:ThirdParty/FreeRTOS/tasks.c ****                     }
 5912              		.loc 1 2544 25 is_stmt 1 view .LVU1652
2544:ThirdParty/FreeRTOS/tasks.c ****                     }
 5913              		.loc 1 2544 42 is_stmt 0 view .LVU1653
 5914 0086 0023     		movs	r3, #0
 5915 0088 3B60     		str	r3, [r7]
 5916 008a 00E0     		b	.L422
 5917              	.LVL422:
 5918              	.L424:
2493:ThirdParty/FreeRTOS/tasks.c **** 
 5919              		.loc 1 2493 21 view .LVU1654
 5920 008c 0024     		movs	r4, #0
 5921              	.LVL423:
 5922              	.L422:
2551:ThirdParty/FreeRTOS/tasks.c ****             }
 5923              		.loc 1 2551 41 is_stmt 1 view .LVU1655
2554:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 230


 5924              		.loc 1 2554 9 view .LVU1656
2554:ThirdParty/FreeRTOS/tasks.c **** 
 5925              		.loc 1 2554 18 is_stmt 0 view .LVU1657
 5926 008e FFF7FEFF 		bl	xTaskResumeAll
 5927              	.LVL424:
2556:ThirdParty/FreeRTOS/tasks.c ****     }
 5928              		.loc 1 2556 9 is_stmt 1 view .LVU1658
2557:ThirdParty/FreeRTOS/tasks.c **** 
 5929              		.loc 1 2557 5 is_stmt 0 view .LVU1659
 5930 0092 2046     		mov	r0, r4
 5931 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5932              	.LVL425:
 5933              	.L427:
2557:ThirdParty/FreeRTOS/tasks.c **** 
 5934              		.loc 1 2557 5 view .LVU1660
 5935 0096 00BF     		.align	2
 5936              	.L426:
 5937 0098 00000000 		.word	uxCurrentNumberOfTasks
 5938 009c 00000000 		.word	pxReadyTasksLists
 5939 00a0 00000000 		.word	pxDelayedTaskList
 5940 00a4 00000000 		.word	pxOverflowDelayedTaskList
 5941 00a8 00000000 		.word	xTasksWaitingTermination
 5942 00ac 00000000 		.word	xSuspendedTaskList
 5943              		.cfi_endproc
 5944              	.LFE27:
 5946              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 5947              		.align	1
 5948              		.global	xTaskGetCurrentTaskHandle
 5949              		.syntax unified
 5950              		.thumb
 5951              		.thumb_func
 5953              	xTaskGetCurrentTaskHandle:
 5954              	.LFB50:
4023:ThirdParty/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
 5955              		.loc 1 4023 5 is_stmt 1 view -0
 5956              		.cfi_startproc
 5957              		@ args = 0, pretend = 0, frame = 0
 5958              		@ frame_needed = 0, uses_anonymous_args = 0
 5959              		@ link register save eliminated.
4024:ThirdParty/FreeRTOS/tasks.c **** 
 5960              		.loc 1 4024 9 view .LVU1662
4029:ThirdParty/FreeRTOS/tasks.c **** 
 5961              		.loc 1 4029 9 view .LVU1663
4029:ThirdParty/FreeRTOS/tasks.c **** 
 5962              		.loc 1 4029 17 is_stmt 0 view .LVU1664
 5963 0000 014B     		ldr	r3, .L429
 5964 0002 1868     		ldr	r0, [r3]
 5965              	.LVL426:
4031:ThirdParty/FreeRTOS/tasks.c ****     }
 5966              		.loc 1 4031 9 is_stmt 1 view .LVU1665
4032:ThirdParty/FreeRTOS/tasks.c **** 
 5967              		.loc 1 4032 5 is_stmt 0 view .LVU1666
 5968 0004 7047     		bx	lr
 5969              	.L430:
 5970 0006 00BF     		.align	2
 5971              	.L429:
 5972 0008 00000000 		.word	pxCurrentTCB
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 231


 5973              		.cfi_endproc
 5974              	.LFE50:
 5976              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 5977              		.align	1
 5978              		.global	xTaskGetSchedulerState
 5979              		.syntax unified
 5980              		.thumb
 5981              		.thumb_func
 5983              	xTaskGetSchedulerState:
 5984              	.LFB51:
4040:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 5985              		.loc 1 4040 5 is_stmt 1 view -0
 5986              		.cfi_startproc
 5987              		@ args = 0, pretend = 0, frame = 0
 5988              		@ frame_needed = 0, uses_anonymous_args = 0
 5989              		@ link register save eliminated.
4041:ThirdParty/FreeRTOS/tasks.c **** 
 5990              		.loc 1 4041 9 view .LVU1668
4043:ThirdParty/FreeRTOS/tasks.c ****         {
 5991              		.loc 1 4043 9 view .LVU1669
4043:ThirdParty/FreeRTOS/tasks.c ****         {
 5992              		.loc 1 4043 31 is_stmt 0 view .LVU1670
 5993 0000 054B     		ldr	r3, .L436
 5994 0002 1B68     		ldr	r3, [r3]
4043:ThirdParty/FreeRTOS/tasks.c ****         {
 5995              		.loc 1 4043 11 view .LVU1671
 5996 0004 33B1     		cbz	r3, .L433
4049:ThirdParty/FreeRTOS/tasks.c ****             {
 5997              		.loc 1 4049 13 is_stmt 1 view .LVU1672
4049:ThirdParty/FreeRTOS/tasks.c ****             {
 5998              		.loc 1 4049 38 is_stmt 0 view .LVU1673
 5999 0006 054B     		ldr	r3, .L436+4
 6000 0008 1B68     		ldr	r3, [r3]
4049:ThirdParty/FreeRTOS/tasks.c ****             {
 6001              		.loc 1 4049 15 view .LVU1674
 6002 000a 0BB1     		cbz	r3, .L435
4055:ThirdParty/FreeRTOS/tasks.c ****             }
 6003              		.loc 1 4055 25 view .LVU1675
 6004 000c 0020     		movs	r0, #0
 6005              	.LVL427:
4059:ThirdParty/FreeRTOS/tasks.c ****     }
 6006              		.loc 1 4059 9 is_stmt 1 view .LVU1676
4060:ThirdParty/FreeRTOS/tasks.c **** 
 6007              		.loc 1 4060 5 is_stmt 0 view .LVU1677
 6008 000e 7047     		bx	lr
 6009              	.LVL428:
 6010              	.L435:
4051:ThirdParty/FreeRTOS/tasks.c ****             }
 6011              		.loc 1 4051 25 view .LVU1678
 6012 0010 0220     		movs	r0, #2
 6013 0012 7047     		bx	lr
 6014              	.L433:
4045:ThirdParty/FreeRTOS/tasks.c ****         }
 6015              		.loc 1 4045 21 view .LVU1679
 6016 0014 0120     		movs	r0, #1
 6017 0016 7047     		bx	lr
 6018              	.L437:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 232


 6019              		.align	2
 6020              	.L436:
 6021 0018 00000000 		.word	xSchedulerRunning
 6022 001c 00000000 		.word	uxSchedulerSuspended
 6023              		.cfi_endproc
 6024              	.LFE51:
 6026              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 6027              		.align	1
 6028              		.global	xTaskPriorityInherit
 6029              		.syntax unified
 6030              		.thumb
 6031              		.thumb_func
 6033              	xTaskPriorityInherit:
 6034              	.LVL429:
 6035              	.LFB52:
4068:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 6036              		.loc 1 4068 5 is_stmt 1 view -0
 6037              		.cfi_startproc
 6038              		@ args = 0, pretend = 0, frame = 0
 6039              		@ frame_needed = 0, uses_anonymous_args = 0
4069:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
 6040              		.loc 1 4069 9 view .LVU1681
4070:ThirdParty/FreeRTOS/tasks.c **** 
 6041              		.loc 1 4070 9 view .LVU1682
4075:ThirdParty/FreeRTOS/tasks.c ****         {
 6042              		.loc 1 4075 9 view .LVU1683
4075:ThirdParty/FreeRTOS/tasks.c ****         {
 6043              		.loc 1 4075 11 is_stmt 0 view .LVU1684
 6044 0000 0028     		cmp	r0, #0
 6045 0002 54D0     		beq	.L444
4068:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 6046              		.loc 1 4068 5 view .LVU1685
 6047 0004 70B5     		push	{r4, r5, r6, lr}
 6048              	.LCFI46:
 6049              		.cfi_def_cfa_offset 16
 6050              		.cfi_offset 4, -16
 6051              		.cfi_offset 5, -12
 6052              		.cfi_offset 6, -8
 6053              		.cfi_offset 14, -4
 6054 0006 0446     		mov	r4, r0
4080:ThirdParty/FreeRTOS/tasks.c ****             {
 6055              		.loc 1 4080 13 is_stmt 1 view .LVU1686
4080:ThirdParty/FreeRTOS/tasks.c ****             {
 6056              		.loc 1 4080 33 is_stmt 0 view .LVU1687
 6057 0008 C36A     		ldr	r3, [r0, #44]
4080:ThirdParty/FreeRTOS/tasks.c ****             {
 6058              		.loc 1 4080 60 view .LVU1688
 6059 000a 2B4A     		ldr	r2, .L451
 6060 000c 1268     		ldr	r2, [r2]
 6061 000e D26A     		ldr	r2, [r2, #44]
4080:ThirdParty/FreeRTOS/tasks.c ****             {
 6062              		.loc 1 4080 15 view .LVU1689
 6063 0010 9342     		cmp	r3, r2
 6064 0012 44D2     		bcs	.L440
4085:ThirdParty/FreeRTOS/tasks.c ****                 {
 6065              		.loc 1 4085 17 is_stmt 1 view .LVU1690
4085:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 233


 6066              		.loc 1 4085 23 is_stmt 0 view .LVU1691
 6067 0014 8269     		ldr	r2, [r0, #24]
4085:ThirdParty/FreeRTOS/tasks.c ****                 {
 6068              		.loc 1 4085 19 view .LVU1692
 6069 0016 002A     		cmp	r2, #0
 6070 0018 05DB     		blt	.L441
4087:ThirdParty/FreeRTOS/tasks.c ****                 }
 6071              		.loc 1 4087 21 is_stmt 1 view .LVU1693
 6072 001a 274A     		ldr	r2, .L451
 6073 001c 1268     		ldr	r2, [r2]
 6074 001e D26A     		ldr	r2, [r2, #44]
 6075 0020 C2F10502 		rsb	r2, r2, #5
 6076 0024 8261     		str	r2, [r0, #24]
 6077              	.L441:
4091:ThirdParty/FreeRTOS/tasks.c ****                 }
 6078              		.loc 1 4091 45 view .LVU1694
4096:ThirdParty/FreeRTOS/tasks.c ****                 {
 6079              		.loc 1 4096 17 view .LVU1695
4096:ThirdParty/FreeRTOS/tasks.c ****                 {
 6080              		.loc 1 4096 21 is_stmt 0 view .LVU1696
 6081 0026 6169     		ldr	r1, [r4, #20]
 6082 0028 03EB8303 		add	r3, r3, r3, lsl #2
 6083 002c 234A     		ldr	r2, .L451+4
 6084 002e 02EB8303 		add	r3, r2, r3, lsl #2
4096:ThirdParty/FreeRTOS/tasks.c ****                 {
 6085              		.loc 1 4096 19 view .LVU1697
 6086 0032 9942     		cmp	r1, r3
 6087 0034 05D0     		beq	.L450
4117:ThirdParty/FreeRTOS/tasks.c ****                 }
 6088              		.loc 1 4117 21 is_stmt 1 view .LVU1698
4117:ThirdParty/FreeRTOS/tasks.c ****                 }
 6089              		.loc 1 4117 64 is_stmt 0 view .LVU1699
 6090 0036 204B     		ldr	r3, .L451
 6091 0038 1B68     		ldr	r3, [r3]
 6092 003a DB6A     		ldr	r3, [r3, #44]
4117:ThirdParty/FreeRTOS/tasks.c ****                 }
 6093              		.loc 1 4117 50 view .LVU1700
 6094 003c E362     		str	r3, [r4, #44]
4123:ThirdParty/FreeRTOS/tasks.c ****             }
 6095              		.loc 1 4123 25 view .LVU1701
 6096 003e 0120     		movs	r0, #1
 6097              	.LVL430:
 6098              	.L438:
4150:ThirdParty/FreeRTOS/tasks.c **** 
 6099              		.loc 1 4150 5 view .LVU1702
 6100 0040 70BD     		pop	{r4, r5, r6, pc}
 6101              	.LVL431:
 6102              	.L450:
4098:ThirdParty/FreeRTOS/tasks.c ****                     {
 6103              		.loc 1 4098 21 is_stmt 1 view .LVU1703
4098:ThirdParty/FreeRTOS/tasks.c ****                     {
 6104              		.loc 1 4098 25 is_stmt 0 view .LVU1704
 6105 0042 251D     		adds	r5, r4, #4
 6106 0044 2846     		mov	r0, r5
 6107              	.LVL432:
4098:ThirdParty/FreeRTOS/tasks.c ****                     {
 6108              		.loc 1 4098 25 view .LVU1705
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 234


 6109 0046 FFF7FEFF 		bl	uxListRemove
 6110              	.LVL433:
4098:ThirdParty/FreeRTOS/tasks.c ****                     {
 6111              		.loc 1 4098 23 discriminator 1 view .LVU1706
 6112 004a 38B9     		cbnz	r0, .L443
4103:ThirdParty/FreeRTOS/tasks.c ****                     }
 6113              		.loc 1 4103 25 is_stmt 1 view .LVU1707
 6114 004c E36A     		ldr	r3, [r4, #44]
 6115 004e 0122     		movs	r2, #1
 6116 0050 9A40     		lsls	r2, r2, r3
 6117 0052 1B49     		ldr	r1, .L451+8
 6118 0054 0B68     		ldr	r3, [r1]
 6119 0056 23EA0203 		bic	r3, r3, r2
 6120 005a 0B60     		str	r3, [r1]
 6121              	.L443:
4107:ThirdParty/FreeRTOS/tasks.c ****                     }
 6122              		.loc 1 4107 49 view .LVU1708
4111:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 6123              		.loc 1 4111 21 view .LVU1709
4111:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 6124              		.loc 1 4111 64 is_stmt 0 view .LVU1710
 6125 005c 164B     		ldr	r3, .L451
 6126 005e 1B68     		ldr	r3, [r3]
 6127 0060 DB6A     		ldr	r3, [r3, #44]
4111:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 6128              		.loc 1 4111 50 view .LVU1711
 6129 0062 E362     		str	r3, [r4, #44]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6130              		.loc 1 4112 21 is_stmt 1 view .LVU1712
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6131              		.loc 1 4112 21 view .LVU1713
 6132 0064 0120     		movs	r0, #1
 6133 0066 00FA03F2 		lsl	r2, r0, r3
 6134 006a 1549     		ldr	r1, .L451+8
 6135 006c 0E68     		ldr	r6, [r1]
 6136 006e 3243     		orrs	r2, r2, r6
 6137 0070 0A60     		str	r2, [r1]
 6138              	.LBB281:
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6139              		.loc 1 4112 21 view .LVU1714
 6140 0072 124A     		ldr	r2, .L451+4
 6141 0074 03EB8303 		add	r3, r3, r3, lsl #2
 6142 0078 02EB8303 		add	r3, r2, r3, lsl #2
 6143 007c 5B68     		ldr	r3, [r3, #4]
 6144              	.LVL434:
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6145              		.loc 1 4112 21 view .LVU1715
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6146              		.loc 1 4112 21 view .LVU1716
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6147              		.loc 1 4112 21 view .LVU1717
 6148 007e A360     		str	r3, [r4, #8]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6149              		.loc 1 4112 21 view .LVU1718
 6150 0080 9968     		ldr	r1, [r3, #8]
 6151 0082 E160     		str	r1, [r4, #12]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 235


 6152              		.loc 1 4112 21 view .LVU1719
 6153 0084 4D60     		str	r5, [r1, #4]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6154              		.loc 1 4112 21 view .LVU1720
 6155 0086 9D60     		str	r5, [r3, #8]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6156              		.loc 1 4112 21 view .LVU1721
 6157 0088 E36A     		ldr	r3, [r4, #44]
 6158              	.LVL435:
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6159              		.loc 1 4112 21 is_stmt 0 view .LVU1722
 6160 008a 03EB8301 		add	r1, r3, r3, lsl #2
 6161 008e 8D00     		lsls	r5, r1, #2
 6162 0090 02EB8101 		add	r1, r2, r1, lsl #2
 6163 0094 6161     		str	r1, [r4, #20]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6164              		.loc 1 4112 21 is_stmt 1 view .LVU1723
 6165 0096 5159     		ldr	r1, [r2, r5]
 6166 0098 0144     		add	r1, r1, r0
 6167 009a 5151     		str	r1, [r2, r5]
 6168              	.LBE281:
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6169              		.loc 1 4112 21 view .LVU1724
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6170              		.loc 1 4112 62 view .LVU1725
 6171 009c D0E7     		b	.L438
 6172              	.LVL436:
 6173              	.L440:
4127:ThirdParty/FreeRTOS/tasks.c ****                 {
 6174              		.loc 1 4127 17 view .LVU1726
4127:ThirdParty/FreeRTOS/tasks.c ****                 {
 6175              		.loc 1 4127 37 is_stmt 0 view .LVU1727
 6176 009e 826C     		ldr	r2, [r0, #72]
4127:ThirdParty/FreeRTOS/tasks.c ****                 {
 6177              		.loc 1 4127 68 view .LVU1728
 6178 00a0 054B     		ldr	r3, .L451
 6179 00a2 1B68     		ldr	r3, [r3]
 6180 00a4 DB6A     		ldr	r3, [r3, #44]
4127:ThirdParty/FreeRTOS/tasks.c ****                 {
 6181              		.loc 1 4127 19 view .LVU1729
 6182 00a6 9A42     		cmp	r2, r3
 6183 00a8 03D3     		bcc	.L445
4070:ThirdParty/FreeRTOS/tasks.c **** 
 6184              		.loc 1 4070 20 view .LVU1730
 6185 00aa 0020     		movs	r0, #0
 6186              	.LVL437:
4070:ThirdParty/FreeRTOS/tasks.c **** 
 6187              		.loc 1 4070 20 view .LVU1731
 6188 00ac C8E7     		b	.L438
 6189              	.LVL438:
 6190              	.L444:
 6191              	.LCFI47:
 6192              		.cfi_def_cfa_offset 0
 6193              		.cfi_restore 4
 6194              		.cfi_restore 5
 6195              		.cfi_restore 6
 6196              		.cfi_restore 14
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 236


4070:ThirdParty/FreeRTOS/tasks.c **** 
 6197              		.loc 1 4070 20 view .LVU1732
 6198 00ae 0020     		movs	r0, #0
 6199              	.LVL439:
4150:ThirdParty/FreeRTOS/tasks.c **** 
 6200              		.loc 1 4150 5 view .LVU1733
 6201 00b0 7047     		bx	lr
 6202              	.LVL440:
 6203              	.L445:
 6204              	.LCFI48:
 6205              		.cfi_def_cfa_offset 16
 6206              		.cfi_offset 4, -16
 6207              		.cfi_offset 5, -12
 6208              		.cfi_offset 6, -8
 6209              		.cfi_offset 14, -4
4136:ThirdParty/FreeRTOS/tasks.c ****                 }
 6210              		.loc 1 4136 29 view .LVU1734
 6211 00b2 0120     		movs	r0, #1
 6212              	.LVL441:
4146:ThirdParty/FreeRTOS/tasks.c ****         }
 6213              		.loc 1 4146 37 is_stmt 1 view .LVU1735
4149:ThirdParty/FreeRTOS/tasks.c ****     }
 6214              		.loc 1 4149 9 view .LVU1736
4149:ThirdParty/FreeRTOS/tasks.c ****     }
 6215              		.loc 1 4149 16 is_stmt 0 view .LVU1737
 6216 00b4 C4E7     		b	.L438
 6217              	.L452:
 6218 00b6 00BF     		.align	2
 6219              	.L451:
 6220 00b8 00000000 		.word	pxCurrentTCB
 6221 00bc 00000000 		.word	pxReadyTasksLists
 6222 00c0 00000000 		.word	uxTopReadyPriority
 6223              		.cfi_endproc
 6224              	.LFE52:
 6226              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 6227              		.align	1
 6228              		.global	xTaskPriorityDisinherit
 6229              		.syntax unified
 6230              		.thumb
 6231              		.thumb_func
 6233              	xTaskPriorityDisinherit:
 6234              	.LVL442:
 6235              	.LFB53:
4158:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 6236              		.loc 1 4158 5 is_stmt 1 view -0
 6237              		.cfi_startproc
 6238              		@ args = 0, pretend = 0, frame = 0
 6239              		@ frame_needed = 0, uses_anonymous_args = 0
4159:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
 6240              		.loc 1 4159 9 view .LVU1739
4160:ThirdParty/FreeRTOS/tasks.c **** 
 6241              		.loc 1 4160 9 view .LVU1740
4162:ThirdParty/FreeRTOS/tasks.c ****         {
 6242              		.loc 1 4162 9 view .LVU1741
4162:ThirdParty/FreeRTOS/tasks.c ****         {
 6243              		.loc 1 4162 11 is_stmt 0 view .LVU1742
 6244 0000 0028     		cmp	r0, #0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 237


 6245 0002 51D0     		beq	.L460
4158:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 6246              		.loc 1 4158 5 view .LVU1743
 6247 0004 70B5     		push	{r4, r5, r6, lr}
 6248              	.LCFI49:
 6249              		.cfi_def_cfa_offset 16
 6250              		.cfi_offset 4, -16
 6251              		.cfi_offset 5, -12
 6252              		.cfi_offset 6, -8
 6253              		.cfi_offset 14, -4
 6254 0006 0446     		mov	r4, r0
4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 6255              		.loc 1 4168 13 is_stmt 1 view .LVU1744
 6256 0008 294B     		ldr	r3, .L468
 6257 000a 1B68     		ldr	r3, [r3]
 6258 000c 8342     		cmp	r3, r0
 6259 000e 08D0     		beq	.L455
4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 6260              		.loc 1 4168 13 discriminator 1 view .LVU1745
 6261              	.LBB282:
 6262              	.LBI282:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6263              		.loc 2 194 34 view .LVU1746
 6264              	.LBB283:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6265              		.loc 2 196 9 view .LVU1747
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6266              		.loc 2 198 9 view .LVU1748
 6267              		.syntax unified
 6268              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6269 0010 4FF05003 			mov r3, #80												
 6270 0014 83F31188 		msr basepri, r3											
 6271 0018 BFF36F8F 		isb														
 6272 001c BFF34F8F 		dsb														
 6273              	
 6274              	@ 0 "" 2
 6275              		.thumb
 6276              		.syntax unified
 6277              	.L456:
 6278              	.LBE283:
 6279              	.LBE282:
4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 6280              		.loc 1 4168 13 discriminator 3 view .LVU1749
4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 6281              		.loc 1 4168 13 discriminator 3 view .LVU1750
 6282 0020 FEE7     		b	.L456
 6283              	.L455:
4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 6284              		.loc 1 4168 50 discriminator 2 view .LVU1751
4169:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 6285              		.loc 1 4169 13 view .LVU1752
 6286 0022 C36C     		ldr	r3, [r0, #76]
 6287 0024 43B9     		cbnz	r3, .L457
4169:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 6288              		.loc 1 4169 13 discriminator 1 view .LVU1753
 6289              	.LBB284:
 6290              	.LBI284:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 238


 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6291              		.loc 2 194 34 view .LVU1754
 6292              	.LBB285:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6293              		.loc 2 196 9 view .LVU1755
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6294              		.loc 2 198 9 view .LVU1756
 6295              		.syntax unified
 6296              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6297 0026 4FF05003 			mov r3, #80												
 6298 002a 83F31188 		msr basepri, r3											
 6299 002e BFF36F8F 		isb														
 6300 0032 BFF34F8F 		dsb														
 6301              	
 6302              	@ 0 "" 2
 6303              		.thumb
 6304              		.syntax unified
 6305              	.L458:
 6306              	.LBE285:
 6307              	.LBE284:
4169:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 6308              		.loc 1 4169 13 discriminator 3 view .LVU1757
4169:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 6309              		.loc 1 4169 13 discriminator 3 view .LVU1758
 6310 0036 FEE7     		b	.L458
 6311              	.L457:
4169:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 6312              		.loc 1 4169 49 discriminator 2 view .LVU1759
4170:ThirdParty/FreeRTOS/tasks.c **** 
 6313              		.loc 1 4170 13 view .LVU1760
4170:ThirdParty/FreeRTOS/tasks.c **** 
 6314              		.loc 1 4170 37 is_stmt 0 view .LVU1761
 6315 0038 013B     		subs	r3, r3, #1
 6316 003a C364     		str	r3, [r0, #76]
4174:ThirdParty/FreeRTOS/tasks.c ****             {
 6317              		.loc 1 4174 13 is_stmt 1 view .LVU1762
4174:ThirdParty/FreeRTOS/tasks.c ****             {
 6318              		.loc 1 4174 22 is_stmt 0 view .LVU1763
 6319 003c C16A     		ldr	r1, [r0, #44]
4174:ThirdParty/FreeRTOS/tasks.c ****             {
 6320              		.loc 1 4174 43 view .LVU1764
 6321 003e 826C     		ldr	r2, [r0, #72]
4174:ThirdParty/FreeRTOS/tasks.c ****             {
 6322              		.loc 1 4174 15 view .LVU1765
 6323 0040 9142     		cmp	r1, r2
 6324 0042 33D0     		beq	.L461
4177:ThirdParty/FreeRTOS/tasks.c ****                 {
 6325              		.loc 1 4177 17 is_stmt 1 view .LVU1766
4177:ThirdParty/FreeRTOS/tasks.c ****                 {
 6326              		.loc 1 4177 19 is_stmt 0 view .LVU1767
 6327 0044 0BB1     		cbz	r3, .L467
4160:ThirdParty/FreeRTOS/tasks.c **** 
 6328              		.loc 1 4160 20 view .LVU1768
 6329 0046 0020     		movs	r0, #0
 6330              	.LVL443:
4226:ThirdParty/FreeRTOS/tasks.c ****         }
 6331              		.loc 1 4226 37 is_stmt 1 view .LVU1769
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 239


4229:ThirdParty/FreeRTOS/tasks.c ****     }
 6332              		.loc 1 4229 9 view .LVU1770
 6333              	.L453:
4230:ThirdParty/FreeRTOS/tasks.c **** 
 6334              		.loc 1 4230 5 is_stmt 0 view .LVU1771
 6335 0048 70BD     		pop	{r4, r5, r6, pc}
 6336              	.LVL444:
 6337              	.L467:
4184:ThirdParty/FreeRTOS/tasks.c ****                     {
 6338              		.loc 1 4184 21 is_stmt 1 view .LVU1772
4184:ThirdParty/FreeRTOS/tasks.c ****                     {
 6339              		.loc 1 4184 25 is_stmt 0 view .LVU1773
 6340 004a 051D     		adds	r5, r0, #4
 6341 004c 2846     		mov	r0, r5
 6342              	.LVL445:
4184:ThirdParty/FreeRTOS/tasks.c ****                     {
 6343              		.loc 1 4184 25 view .LVU1774
 6344 004e FFF7FEFF 		bl	uxListRemove
 6345              	.LVL446:
4184:ThirdParty/FreeRTOS/tasks.c ****                     {
 6346              		.loc 1 4184 23 discriminator 1 view .LVU1775
 6347 0052 38B9     		cbnz	r0, .L459
4186:ThirdParty/FreeRTOS/tasks.c ****                     }
 6348              		.loc 1 4186 25 is_stmt 1 view .LVU1776
 6349 0054 E36A     		ldr	r3, [r4, #44]
 6350 0056 0122     		movs	r2, #1
 6351 0058 9A40     		lsls	r2, r2, r3
 6352 005a 1649     		ldr	r1, .L468+4
 6353 005c 0B68     		ldr	r3, [r1]
 6354 005e 23EA0203 		bic	r3, r3, r2
 6355 0062 0B60     		str	r3, [r1]
 6356              	.L459:
4190:ThirdParty/FreeRTOS/tasks.c ****                     }
 6357              		.loc 1 4190 49 view .LVU1777
4195:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = pxTCB->uxBasePriority;
 6358              		.loc 1 4195 82 view .LVU1778
4196:ThirdParty/FreeRTOS/tasks.c **** 
 6359              		.loc 1 4196 21 view .LVU1779
4196:ThirdParty/FreeRTOS/tasks.c **** 
 6360              		.loc 1 4196 46 is_stmt 0 view .LVU1780
 6361 0064 A36C     		ldr	r3, [r4, #72]
4196:ThirdParty/FreeRTOS/tasks.c **** 
 6362              		.loc 1 4196 39 view .LVU1781
 6363 0066 E362     		str	r3, [r4, #44]
4201:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6364              		.loc 1 4201 21 is_stmt 1 view .LVU1782
 6365 0068 C3F10502 		rsb	r2, r3, #5
 6366 006c A261     		str	r2, [r4, #24]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6367              		.loc 1 4202 21 view .LVU1783
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6368              		.loc 1 4202 21 view .LVU1784
 6369 006e 0120     		movs	r0, #1
 6370 0070 00FA03F2 		lsl	r2, r0, r3
 6371 0074 0F49     		ldr	r1, .L468+4
 6372 0076 0E68     		ldr	r6, [r1]
 6373 0078 3243     		orrs	r2, r2, r6
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 240


 6374 007a 0A60     		str	r2, [r1]
 6375              	.LBB286:
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6376              		.loc 1 4202 21 view .LVU1785
 6377 007c 0E4A     		ldr	r2, .L468+8
 6378 007e 03EB8303 		add	r3, r3, r3, lsl #2
 6379 0082 02EB8303 		add	r3, r2, r3, lsl #2
 6380 0086 5B68     		ldr	r3, [r3, #4]
 6381              	.LVL447:
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6382              		.loc 1 4202 21 view .LVU1786
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6383              		.loc 1 4202 21 view .LVU1787
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6384              		.loc 1 4202 21 view .LVU1788
 6385 0088 A360     		str	r3, [r4, #8]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6386              		.loc 1 4202 21 view .LVU1789
 6387 008a 9968     		ldr	r1, [r3, #8]
 6388 008c E160     		str	r1, [r4, #12]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6389              		.loc 1 4202 21 view .LVU1790
 6390 008e 4D60     		str	r5, [r1, #4]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6391              		.loc 1 4202 21 view .LVU1791
 6392 0090 9D60     		str	r5, [r3, #8]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6393              		.loc 1 4202 21 view .LVU1792
 6394 0092 E36A     		ldr	r3, [r4, #44]
 6395              	.LVL448:
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6396              		.loc 1 4202 21 is_stmt 0 view .LVU1793
 6397 0094 03EB8301 		add	r1, r3, r3, lsl #2
 6398 0098 8D00     		lsls	r5, r1, #2
 6399 009a 02EB8101 		add	r1, r2, r1, lsl #2
 6400 009e 6161     		str	r1, [r4, #20]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6401              		.loc 1 4202 21 is_stmt 1 view .LVU1794
 6402 00a0 5159     		ldr	r1, [r2, r5]
 6403 00a2 0144     		add	r1, r1, r0
 6404 00a4 5151     		str	r1, [r2, r5]
 6405              	.LBE286:
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6406              		.loc 1 4202 21 view .LVU1795
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6407              		.loc 1 4202 51 view .LVU1796
4212:ThirdParty/FreeRTOS/tasks.c ****                 }
 6408              		.loc 1 4212 21 view .LVU1797
 6409              	.LVL449:
4212:ThirdParty/FreeRTOS/tasks.c ****                 }
 6410              		.loc 1 4212 21 is_stmt 0 view .LVU1798
 6411 00a6 CFE7     		b	.L453
 6412              	.LVL450:
 6413              	.L460:
 6414              	.LCFI50:
 6415              		.cfi_def_cfa_offset 0
 6416              		.cfi_restore 4
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 241


 6417              		.cfi_restore 5
 6418              		.cfi_restore 6
 6419              		.cfi_restore 14
4160:ThirdParty/FreeRTOS/tasks.c **** 
 6420              		.loc 1 4160 20 view .LVU1799
 6421 00a8 0020     		movs	r0, #0
 6422              	.LVL451:
4230:ThirdParty/FreeRTOS/tasks.c **** 
 6423              		.loc 1 4230 5 view .LVU1800
 6424 00aa 7047     		bx	lr
 6425              	.LVL452:
 6426              	.L461:
 6427              	.LCFI51:
 6428              		.cfi_def_cfa_offset 16
 6429              		.cfi_offset 4, -16
 6430              		.cfi_offset 5, -12
 6431              		.cfi_offset 6, -8
 6432              		.cfi_offset 14, -4
4160:ThirdParty/FreeRTOS/tasks.c **** 
 6433              		.loc 1 4160 20 view .LVU1801
 6434 00ac 0020     		movs	r0, #0
 6435              	.LVL453:
4160:ThirdParty/FreeRTOS/tasks.c **** 
 6436              		.loc 1 4160 20 view .LVU1802
 6437 00ae CBE7     		b	.L453
 6438              	.L469:
 6439              		.align	2
 6440              	.L468:
 6441 00b0 00000000 		.word	pxCurrentTCB
 6442 00b4 00000000 		.word	uxTopReadyPriority
 6443 00b8 00000000 		.word	pxReadyTasksLists
 6444              		.cfi_endproc
 6445              	.LFE53:
 6447              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 6448              		.align	1
 6449              		.global	vTaskPriorityDisinheritAfterTimeout
 6450              		.syntax unified
 6451              		.thumb
 6452              		.thumb_func
 6454              	vTaskPriorityDisinheritAfterTimeout:
 6455              	.LVL454:
 6456              	.LFB54:
4239:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 6457              		.loc 1 4239 5 is_stmt 1 view -0
 6458              		.cfi_startproc
 6459              		@ args = 0, pretend = 0, frame = 0
 6460              		@ frame_needed = 0, uses_anonymous_args = 0
4240:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 6461              		.loc 1 4240 9 view .LVU1804
4241:ThirdParty/FreeRTOS/tasks.c ****         const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 6462              		.loc 1 4241 9 view .LVU1805
4242:ThirdParty/FreeRTOS/tasks.c **** 
 6463              		.loc 1 4242 9 view .LVU1806
4244:ThirdParty/FreeRTOS/tasks.c ****         {
 6464              		.loc 1 4244 9 view .LVU1807
4244:ThirdParty/FreeRTOS/tasks.c ****         {
 6465              		.loc 1 4244 11 is_stmt 0 view .LVU1808
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 242


 6466 0000 0028     		cmp	r0, #0
 6467 0002 5CD0     		beq	.L480
4239:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 6468              		.loc 1 4239 5 view .LVU1809
 6469 0004 38B5     		push	{r3, r4, r5, lr}
 6470              	.LCFI52:
 6471              		.cfi_def_cfa_offset 16
 6472              		.cfi_offset 3, -16
 6473              		.cfi_offset 4, -12
 6474              		.cfi_offset 5, -8
 6475              		.cfi_offset 14, -4
 6476 0006 0446     		mov	r4, r0
4248:ThirdParty/FreeRTOS/tasks.c **** 
 6477              		.loc 1 4248 13 is_stmt 1 view .LVU1810
 6478 0008 C36C     		ldr	r3, [r0, #76]
 6479 000a 43B9     		cbnz	r3, .L472
4248:ThirdParty/FreeRTOS/tasks.c **** 
 6480              		.loc 1 4248 13 discriminator 1 view .LVU1811
 6481              	.LBB287:
 6482              	.LBI287:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6483              		.loc 2 194 34 view .LVU1812
 6484              	.LBB288:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6485              		.loc 2 196 9 view .LVU1813
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6486              		.loc 2 198 9 view .LVU1814
 6487              		.syntax unified
 6488              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6489 000c 4FF05003 			mov r3, #80												
 6490 0010 83F31188 		msr basepri, r3											
 6491 0014 BFF36F8F 		isb														
 6492 0018 BFF34F8F 		dsb														
 6493              	
 6494              	@ 0 "" 2
 6495              		.thumb
 6496              		.syntax unified
 6497              	.L473:
 6498              	.LBE288:
 6499              	.LBE287:
4248:ThirdParty/FreeRTOS/tasks.c **** 
 6500              		.loc 1 4248 13 discriminator 3 view .LVU1815
4248:ThirdParty/FreeRTOS/tasks.c **** 
 6501              		.loc 1 4248 13 discriminator 3 view .LVU1816
 6502 001c FEE7     		b	.L473
 6503              	.L472:
4248:ThirdParty/FreeRTOS/tasks.c **** 
 6504              		.loc 1 4248 49 discriminator 2 view .LVU1817
4254:ThirdParty/FreeRTOS/tasks.c ****             {
 6505              		.loc 1 4254 13 view .LVU1818
4254:ThirdParty/FreeRTOS/tasks.c ****             {
 6506              		.loc 1 4254 22 is_stmt 0 view .LVU1819
 6507 001e 826C     		ldr	r2, [r0, #72]
4254:ThirdParty/FreeRTOS/tasks.c ****             {
 6508              		.loc 1 4254 15 view .LVU1820
 6509 0020 8A42     		cmp	r2, r1
 6510 0022 00D2     		bcs	.L474
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 243


4256:ThirdParty/FreeRTOS/tasks.c ****             }
 6511              		.loc 1 4256 33 view .LVU1821
 6512 0024 0A46     		mov	r2, r1
 6513              	.L474:
 6514              	.LVL455:
4264:ThirdParty/FreeRTOS/tasks.c ****             {
 6515              		.loc 1 4264 13 is_stmt 1 view .LVU1822
4264:ThirdParty/FreeRTOS/tasks.c ****             {
 6516              		.loc 1 4264 22 is_stmt 0 view .LVU1823
 6517 0026 E16A     		ldr	r1, [r4, #44]
 6518              	.LVL456:
4264:ThirdParty/FreeRTOS/tasks.c ****             {
 6519              		.loc 1 4264 15 view .LVU1824
 6520 0028 9142     		cmp	r1, r2
 6521 002a 01D0     		beq	.L470
4270:ThirdParty/FreeRTOS/tasks.c ****                 {
 6522              		.loc 1 4270 17 is_stmt 1 view .LVU1825
4270:ThirdParty/FreeRTOS/tasks.c ****                 {
 6523              		.loc 1 4270 19 is_stmt 0 view .LVU1826
 6524 002c 012B     		cmp	r3, #1
 6525 002e 00D0     		beq	.L483
 6526              	.LVL457:
 6527              	.L470:
4336:ThirdParty/FreeRTOS/tasks.c **** 
 6528              		.loc 1 4336 5 view .LVU1827
 6529 0030 38BD     		pop	{r3, r4, r5, pc}
 6530              	.LVL458:
 6531              	.L483:
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6532              		.loc 1 4275 21 is_stmt 1 view .LVU1828
 6533 0032 234B     		ldr	r3, .L485
 6534 0034 1B68     		ldr	r3, [r3]
 6535 0036 A342     		cmp	r3, r4
 6536 0038 38D0     		beq	.L484
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6537              		.loc 1 4275 58 discriminator 2 view .LVU1829
4280:ThirdParty/FreeRTOS/tasks.c ****                     uxPriorityUsedOnEntry = pxTCB->uxPriority;
 6538              		.loc 1 4280 76 view .LVU1830
4281:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxPriorityToUse;
 6539              		.loc 1 4281 21 view .LVU1831
 6540              	.LVL459:
4282:ThirdParty/FreeRTOS/tasks.c **** 
 6541              		.loc 1 4282 21 view .LVU1832
4282:ThirdParty/FreeRTOS/tasks.c **** 
 6542              		.loc 1 4282 39 is_stmt 0 view .LVU1833
 6543 003a E262     		str	r2, [r4, #44]
4286:ThirdParty/FreeRTOS/tasks.c ****                     {
 6544              		.loc 1 4286 21 is_stmt 1 view .LVU1834
4286:ThirdParty/FreeRTOS/tasks.c ****                     {
 6545              		.loc 1 4286 27 is_stmt 0 view .LVU1835
 6546 003c A369     		ldr	r3, [r4, #24]
4286:ThirdParty/FreeRTOS/tasks.c ****                     {
 6547              		.loc 1 4286 23 view .LVU1836
 6548 003e 002B     		cmp	r3, #0
 6549 0040 02DB     		blt	.L477
4288:ThirdParty/FreeRTOS/tasks.c ****                     }
 6550              		.loc 1 4288 25 is_stmt 1 view .LVU1837
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 244


 6551 0042 C2F10502 		rsb	r2, r2, #5
 6552              	.LVL460:
4288:ThirdParty/FreeRTOS/tasks.c ****                     }
 6553              		.loc 1 4288 25 is_stmt 0 view .LVU1838
 6554 0046 A261     		str	r2, [r4, #24]
 6555              	.L477:
4292:ThirdParty/FreeRTOS/tasks.c ****                     }
 6556              		.loc 1 4292 49 is_stmt 1 view .LVU1839
4301:ThirdParty/FreeRTOS/tasks.c ****                     {
 6557              		.loc 1 4301 21 view .LVU1840
4301:ThirdParty/FreeRTOS/tasks.c ****                     {
 6558              		.loc 1 4301 25 is_stmt 0 view .LVU1841
 6559 0048 6269     		ldr	r2, [r4, #20]
 6560 004a 01EB8101 		add	r1, r1, r1, lsl #2
 6561              	.LVL461:
4301:ThirdParty/FreeRTOS/tasks.c ****                     {
 6562              		.loc 1 4301 25 view .LVU1842
 6563 004e 1D4B     		ldr	r3, .L485+4
 6564 0050 03EB8103 		add	r3, r3, r1, lsl #2
4301:ThirdParty/FreeRTOS/tasks.c ****                     {
 6565              		.loc 1 4301 23 view .LVU1843
 6566 0054 9A42     		cmp	r2, r3
 6567 0056 EBD1     		bne	.L470
4303:ThirdParty/FreeRTOS/tasks.c ****                         {
 6568              		.loc 1 4303 25 is_stmt 1 view .LVU1844
4303:ThirdParty/FreeRTOS/tasks.c ****                         {
 6569              		.loc 1 4303 29 is_stmt 0 view .LVU1845
 6570 0058 251D     		adds	r5, r4, #4
 6571 005a 2846     		mov	r0, r5
 6572              	.LVL462:
4303:ThirdParty/FreeRTOS/tasks.c ****                         {
 6573              		.loc 1 4303 29 view .LVU1846
 6574 005c FFF7FEFF 		bl	uxListRemove
 6575              	.LVL463:
4303:ThirdParty/FreeRTOS/tasks.c ****                         {
 6576              		.loc 1 4303 27 discriminator 1 view .LVU1847
 6577 0060 38B9     		cbnz	r0, .L478
4308:ThirdParty/FreeRTOS/tasks.c ****                         }
 6578              		.loc 1 4308 29 is_stmt 1 view .LVU1848
 6579 0062 E36A     		ldr	r3, [r4, #44]
 6580 0064 0122     		movs	r2, #1
 6581 0066 9A40     		lsls	r2, r2, r3
 6582 0068 1749     		ldr	r1, .L485+8
 6583 006a 0B68     		ldr	r3, [r1]
 6584 006c 23EA0203 		bic	r3, r3, r2
 6585 0070 0B60     		str	r3, [r1]
 6586              	.L478:
4312:ThirdParty/FreeRTOS/tasks.c ****                         }
 6587              		.loc 1 4312 53 view .LVU1849
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6588              		.loc 1 4315 25 view .LVU1850
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6589              		.loc 1 4315 25 view .LVU1851
 6590 0072 E36A     		ldr	r3, [r4, #44]
 6591 0074 0122     		movs	r2, #1
 6592 0076 9A40     		lsls	r2, r2, r3
 6593 0078 1349     		ldr	r1, .L485+8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 245


 6594 007a 0868     		ldr	r0, [r1]
 6595 007c 0243     		orrs	r2, r2, r0
 6596 007e 0A60     		str	r2, [r1]
 6597              	.LBB289:
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6598              		.loc 1 4315 25 view .LVU1852
 6599 0080 104A     		ldr	r2, .L485+4
 6600 0082 03EB8303 		add	r3, r3, r3, lsl #2
 6601 0086 02EB8303 		add	r3, r2, r3, lsl #2
 6602 008a 5B68     		ldr	r3, [r3, #4]
 6603              	.LVL464:
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6604              		.loc 1 4315 25 view .LVU1853
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6605              		.loc 1 4315 25 view .LVU1854
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6606              		.loc 1 4315 25 view .LVU1855
 6607 008c A360     		str	r3, [r4, #8]
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6608              		.loc 1 4315 25 view .LVU1856
 6609 008e 9968     		ldr	r1, [r3, #8]
 6610 0090 E160     		str	r1, [r4, #12]
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6611              		.loc 1 4315 25 view .LVU1857
 6612 0092 4D60     		str	r5, [r1, #4]
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6613              		.loc 1 4315 25 view .LVU1858
 6614 0094 9D60     		str	r5, [r3, #8]
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6615              		.loc 1 4315 25 view .LVU1859
 6616 0096 E36A     		ldr	r3, [r4, #44]
 6617              	.LVL465:
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6618              		.loc 1 4315 25 is_stmt 0 view .LVU1860
 6619 0098 03EB8301 		add	r1, r3, r3, lsl #2
 6620 009c 8800     		lsls	r0, r1, #2
 6621 009e 02EB8101 		add	r1, r2, r1, lsl #2
 6622 00a2 6161     		str	r1, [r4, #20]
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6623              		.loc 1 4315 25 is_stmt 1 view .LVU1861
 6624 00a4 1158     		ldr	r1, [r2, r0]
 6625 00a6 0131     		adds	r1, r1, #1
 6626 00a8 1150     		str	r1, [r2, r0]
 6627              	.LBE289:
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6628              		.loc 1 4315 25 view .LVU1862
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6629              		.loc 1 4315 55 view .LVU1863
4334:ThirdParty/FreeRTOS/tasks.c ****         }
 6630              		.loc 1 4334 37 view .LVU1864
4336:ThirdParty/FreeRTOS/tasks.c **** 
 6631              		.loc 1 4336 5 is_stmt 0 view .LVU1865
 6632 00aa C1E7     		b	.L470
 6633              	.LVL466:
 6634              	.L484:
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6635              		.loc 1 4275 21 is_stmt 1 discriminator 1 view .LVU1866
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 246


 6636              	.LBB290:
 6637              	.LBI290:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6638              		.loc 2 194 34 view .LVU1867
 6639              	.LBB291:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6640              		.loc 2 196 9 view .LVU1868
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6641              		.loc 2 198 9 view .LVU1869
 6642              		.syntax unified
 6643              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6644 00ac 4FF05003 			mov r3, #80												
 6645 00b0 83F31188 		msr basepri, r3											
 6646 00b4 BFF36F8F 		isb														
 6647 00b8 BFF34F8F 		dsb														
 6648              	
 6649              	@ 0 "" 2
 6650              		.thumb
 6651              		.syntax unified
 6652              	.L476:
 6653              	.LBE291:
 6654              	.LBE290:
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6655              		.loc 1 4275 21 discriminator 3 view .LVU1870
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6656              		.loc 1 4275 21 discriminator 3 view .LVU1871
 6657 00bc FEE7     		b	.L476
 6658              	.LVL467:
 6659              	.L480:
 6660              	.LCFI53:
 6661              		.cfi_def_cfa_offset 0
 6662              		.cfi_restore 3
 6663              		.cfi_restore 4
 6664              		.cfi_restore 5
 6665              		.cfi_restore 14
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6666              		.loc 1 4275 21 is_stmt 0 discriminator 3 view .LVU1872
 6667 00be 7047     		bx	lr
 6668              	.L486:
 6669              		.align	2
 6670              	.L485:
 6671 00c0 00000000 		.word	pxCurrentTCB
 6672 00c4 00000000 		.word	pxReadyTasksLists
 6673 00c8 00000000 		.word	uxTopReadyPriority
 6674              		.cfi_endproc
 6675              	.LFE54:
 6677              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 6678              		.align	1
 6679              		.global	uxTaskResetEventItemValue
 6680              		.syntax unified
 6681              		.thumb
 6682              		.thumb_func
 6684              	uxTaskResetEventItemValue:
 6685              	.LFB55:
4659:ThirdParty/FreeRTOS/tasks.c ****     TickType_t uxReturn;
 6686              		.loc 1 4659 1 is_stmt 1 view -0
 6687              		.cfi_startproc
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 247


 6688              		@ args = 0, pretend = 0, frame = 0
 6689              		@ frame_needed = 0, uses_anonymous_args = 0
 6690              		@ link register save eliminated.
4660:ThirdParty/FreeRTOS/tasks.c **** 
 6691              		.loc 1 4660 5 view .LVU1874
4662:ThirdParty/FreeRTOS/tasks.c **** 
 6692              		.loc 1 4662 5 view .LVU1875
4662:ThirdParty/FreeRTOS/tasks.c **** 
 6693              		.loc 1 4662 16 is_stmt 0 view .LVU1876
 6694 0000 044A     		ldr	r2, .L488
 6695 0002 1368     		ldr	r3, [r2]
4662:ThirdParty/FreeRTOS/tasks.c **** 
 6696              		.loc 1 4662 14 view .LVU1877
 6697 0004 9869     		ldr	r0, [r3, #24]
 6698              	.LVL468:
4666:ThirdParty/FreeRTOS/tasks.c **** 
 6699              		.loc 1 4666 5 is_stmt 1 view .LVU1878
 6700 0006 1368     		ldr	r3, [r2]
 6701 0008 DB6A     		ldr	r3, [r3, #44]
 6702 000a 1268     		ldr	r2, [r2]
 6703 000c C3F10503 		rsb	r3, r3, #5
 6704 0010 9361     		str	r3, [r2, #24]
4668:ThirdParty/FreeRTOS/tasks.c **** }
 6705              		.loc 1 4668 5 view .LVU1879
4669:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 6706              		.loc 1 4669 1 is_stmt 0 view .LVU1880
 6707 0012 7047     		bx	lr
 6708              	.L489:
 6709              		.align	2
 6710              	.L488:
 6711 0014 00000000 		.word	pxCurrentTCB
 6712              		.cfi_endproc
 6713              	.LFE55:
 6715              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 6716              		.align	1
 6717              		.global	pvTaskIncrementMutexHeldCount
 6718              		.syntax unified
 6719              		.thumb
 6720              		.thumb_func
 6722              	pvTaskIncrementMutexHeldCount:
 6723              	.LFB56:
4675:ThirdParty/FreeRTOS/tasks.c ****         /* If xSemaphoreCreateMutex() is called before any tasks have been created
 6724              		.loc 1 4675 5 is_stmt 1 view -0
 6725              		.cfi_startproc
 6726              		@ args = 0, pretend = 0, frame = 0
 6727              		@ frame_needed = 0, uses_anonymous_args = 0
 6728              		@ link register save eliminated.
4678:ThirdParty/FreeRTOS/tasks.c ****         {
 6729              		.loc 1 4678 9 view .LVU1882
4678:ThirdParty/FreeRTOS/tasks.c ****         {
 6730              		.loc 1 4678 26 is_stmt 0 view .LVU1883
 6731 0000 054B     		ldr	r3, .L492
 6732 0002 1B68     		ldr	r3, [r3]
4678:ThirdParty/FreeRTOS/tasks.c ****         {
 6733              		.loc 1 4678 11 view .LVU1884
 6734 0004 23B1     		cbz	r3, .L491
4680:ThirdParty/FreeRTOS/tasks.c ****         }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 248


 6735              		.loc 1 4680 13 is_stmt 1 view .LVU1885
4680:ThirdParty/FreeRTOS/tasks.c ****         }
 6736              		.loc 1 4680 27 is_stmt 0 view .LVU1886
 6737 0006 044B     		ldr	r3, .L492
 6738 0008 1A68     		ldr	r2, [r3]
 6739 000a D36C     		ldr	r3, [r2, #76]
4680:ThirdParty/FreeRTOS/tasks.c ****         }
 6740              		.loc 1 4680 44 view .LVU1887
 6741 000c 0133     		adds	r3, r3, #1
 6742 000e D364     		str	r3, [r2, #76]
 6743              	.L491:
4683:ThirdParty/FreeRTOS/tasks.c ****     }
 6744              		.loc 1 4683 9 is_stmt 1 view .LVU1888
4683:ThirdParty/FreeRTOS/tasks.c ****     }
 6745              		.loc 1 4683 16 is_stmt 0 view .LVU1889
 6746 0010 014B     		ldr	r3, .L492
 6747 0012 1868     		ldr	r0, [r3]
4684:ThirdParty/FreeRTOS/tasks.c **** 
 6748              		.loc 1 4684 5 view .LVU1890
 6749 0014 7047     		bx	lr
 6750              	.L493:
 6751 0016 00BF     		.align	2
 6752              	.L492:
 6753 0018 00000000 		.word	pxCurrentTCB
 6754              		.cfi_endproc
 6755              	.LFE56:
 6757              		.section	.text.ulTaskGenericNotifyTake,"ax",%progbits
 6758              		.align	1
 6759              		.global	ulTaskGenericNotifyTake
 6760              		.syntax unified
 6761              		.thumb
 6762              		.thumb_func
 6764              	ulTaskGenericNotifyTake:
 6765              	.LVL469:
 6766              	.LFB57:
4694:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 6767              		.loc 1 4694 5 is_stmt 1 view -0
 6768              		.cfi_startproc
 6769              		@ args = 0, pretend = 0, frame = 0
 6770              		@ frame_needed = 0, uses_anonymous_args = 0
4695:ThirdParty/FreeRTOS/tasks.c **** 
 6771              		.loc 1 4695 9 view .LVU1892
4697:ThirdParty/FreeRTOS/tasks.c **** 
 6772              		.loc 1 4697 9 view .LVU1893
 6773 0000 40B1     		cbz	r0, .L495
4697:ThirdParty/FreeRTOS/tasks.c **** 
 6774              		.loc 1 4697 9 discriminator 1 view .LVU1894
 6775              	.LBB292:
 6776              	.LBI292:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6777              		.loc 2 194 34 view .LVU1895
 6778              	.LBB293:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6779              		.loc 2 196 9 view .LVU1896
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6780              		.loc 2 198 9 view .LVU1897
 6781              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 249


 6782              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6783 0002 4FF05003 			mov r3, #80												
 6784 0006 83F31188 		msr basepri, r3											
 6785 000a BFF36F8F 		isb														
 6786 000e BFF34F8F 		dsb														
 6787              	
 6788              	@ 0 "" 2
 6789              		.thumb
 6790              		.syntax unified
 6791              	.L496:
 6792              	.LBE293:
 6793              	.LBE292:
4697:ThirdParty/FreeRTOS/tasks.c **** 
 6794              		.loc 1 4697 9 discriminator 3 view .LVU1898
4697:ThirdParty/FreeRTOS/tasks.c **** 
 6795              		.loc 1 4697 9 discriminator 3 view .LVU1899
 6796 0012 FEE7     		b	.L496
 6797              	.L495:
4694:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 6798              		.loc 1 4694 5 is_stmt 0 view .LVU1900
 6799 0014 70B5     		push	{r4, r5, r6, lr}
 6800              	.LCFI54:
 6801              		.cfi_def_cfa_offset 16
 6802              		.cfi_offset 4, -16
 6803              		.cfi_offset 5, -12
 6804              		.cfi_offset 6, -8
 6805              		.cfi_offset 14, -4
 6806 0016 0D46     		mov	r5, r1
 6807 0018 1446     		mov	r4, r2
 6808 001a 0646     		mov	r6, r0
4697:ThirdParty/FreeRTOS/tasks.c **** 
 6809              		.loc 1 4697 78 is_stmt 1 discriminator 2 view .LVU1901
4699:ThirdParty/FreeRTOS/tasks.c ****         {
 6810              		.loc 1 4699 9 view .LVU1902
 6811 001c FFF7FEFF 		bl	vPortEnterCritical
 6812              	.LVL470:
4702:ThirdParty/FreeRTOS/tasks.c ****             {
 6813              		.loc 1 4702 13 view .LVU1903
4702:ThirdParty/FreeRTOS/tasks.c ****             {
 6814              		.loc 1 4702 29 is_stmt 0 view .LVU1904
 6815 0020 204B     		ldr	r3, .L503
 6816 0022 1B68     		ldr	r3, [r3]
4702:ThirdParty/FreeRTOS/tasks.c ****             {
 6817              		.loc 1 4702 46 view .LVU1905
 6818 0024 06F11402 		add	r2, r6, #20
 6819 0028 53F82230 		ldr	r3, [r3, r2, lsl #2]
4702:ThirdParty/FreeRTOS/tasks.c ****             {
 6820              		.loc 1 4702 15 view .LVU1906
 6821 002c 33B9     		cbnz	r3, .L497
4705:ThirdParty/FreeRTOS/tasks.c **** 
 6822              		.loc 1 4705 17 is_stmt 1 view .LVU1907
4705:ThirdParty/FreeRTOS/tasks.c **** 
 6823              		.loc 1 4705 29 is_stmt 0 view .LVU1908
 6824 002e 1D4B     		ldr	r3, .L503
 6825 0030 1B68     		ldr	r3, [r3]
4705:ThirdParty/FreeRTOS/tasks.c **** 
 6826              		.loc 1 4705 62 view .LVU1909
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 250


 6827 0032 3344     		add	r3, r3, r6
 6828 0034 0122     		movs	r2, #1
 6829 0036 83F85420 		strb	r2, [r3, #84]
4707:ThirdParty/FreeRTOS/tasks.c ****                 {
 6830              		.loc 1 4707 17 is_stmt 1 view .LVU1910
4707:ThirdParty/FreeRTOS/tasks.c ****                 {
 6831              		.loc 1 4707 19 is_stmt 0 view .LVU1911
 6832 003a E4B9     		cbnz	r4, .L502
 6833              	.L497:
4725:ThirdParty/FreeRTOS/tasks.c ****             }
 6834              		.loc 1 4725 41 is_stmt 1 view .LVU1912
4728:ThirdParty/FreeRTOS/tasks.c **** 
 6835              		.loc 1 4728 9 view .LVU1913
 6836 003c FFF7FEFF 		bl	vPortExitCritical
 6837              	.LVL471:
4730:ThirdParty/FreeRTOS/tasks.c ****         {
 6838              		.loc 1 4730 9 view .LVU1914
 6839 0040 FFF7FEFF 		bl	vPortEnterCritical
 6840              	.LVL472:
4732:ThirdParty/FreeRTOS/tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
 6841              		.loc 1 4732 51 view .LVU1915
4733:ThirdParty/FreeRTOS/tasks.c **** 
 6842              		.loc 1 4733 13 view .LVU1916
4733:ThirdParty/FreeRTOS/tasks.c **** 
 6843              		.loc 1 4733 36 is_stmt 0 view .LVU1917
 6844 0044 174B     		ldr	r3, .L503
 6845 0046 1B68     		ldr	r3, [r3]
4733:ThirdParty/FreeRTOS/tasks.c **** 
 6846              		.loc 1 4733 22 view .LVU1918
 6847 0048 06F11402 		add	r2, r6, #20
 6848 004c 53F82240 		ldr	r4, [r3, r2, lsl #2]
 6849              	.LVL473:
4735:ThirdParty/FreeRTOS/tasks.c ****             {
 6850              		.loc 1 4735 13 is_stmt 1 view .LVU1919
4735:ThirdParty/FreeRTOS/tasks.c ****             {
 6851              		.loc 1 4735 15 is_stmt 0 view .LVU1920
 6852 0050 3CB1     		cbz	r4, .L498
4737:ThirdParty/FreeRTOS/tasks.c ****                 {
 6853              		.loc 1 4737 17 is_stmt 1 view .LVU1921
4737:ThirdParty/FreeRTOS/tasks.c ****                 {
 6854              		.loc 1 4737 19 is_stmt 0 view .LVU1922
 6855 0052 FDB1     		cbz	r5, .L499
4739:ThirdParty/FreeRTOS/tasks.c ****                 }
 6856              		.loc 1 4739 21 is_stmt 1 view .LVU1923
4739:ThirdParty/FreeRTOS/tasks.c ****                 }
 6857              		.loc 1 4739 33 is_stmt 0 view .LVU1924
 6858 0054 134B     		ldr	r3, .L503
 6859 0056 1A68     		ldr	r2, [r3]
4739:ThirdParty/FreeRTOS/tasks.c ****                 }
 6860              		.loc 1 4739 68 view .LVU1925
 6861 0058 06F11403 		add	r3, r6, #20
 6862 005c 0021     		movs	r1, #0
 6863 005e 42F82310 		str	r1, [r2, r3, lsl #2]
 6864              	.L498:
4748:ThirdParty/FreeRTOS/tasks.c ****             }
 6865              		.loc 1 4748 41 is_stmt 1 view .LVU1926
4751:ThirdParty/FreeRTOS/tasks.c ****         }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 251


 6866              		.loc 1 4751 13 view .LVU1927
4751:ThirdParty/FreeRTOS/tasks.c ****         }
 6867              		.loc 1 4751 25 is_stmt 0 view .LVU1928
 6868 0062 104B     		ldr	r3, .L503
 6869 0064 1B68     		ldr	r3, [r3]
4751:ThirdParty/FreeRTOS/tasks.c ****         }
 6870              		.loc 1 4751 58 view .LVU1929
 6871 0066 3344     		add	r3, r3, r6
 6872 0068 0022     		movs	r2, #0
 6873 006a 83F85420 		strb	r2, [r3, #84]
4753:ThirdParty/FreeRTOS/tasks.c **** 
 6874              		.loc 1 4753 9 is_stmt 1 view .LVU1930
 6875 006e FFF7FEFF 		bl	vPortExitCritical
 6876              	.LVL474:
4755:ThirdParty/FreeRTOS/tasks.c ****     }
 6877              		.loc 1 4755 9 view .LVU1931
4756:ThirdParty/FreeRTOS/tasks.c **** 
 6878              		.loc 1 4756 5 is_stmt 0 view .LVU1932
 6879 0072 2046     		mov	r0, r4
 6880 0074 70BD     		pop	{r4, r5, r6, pc}
 6881              	.LVL475:
 6882              	.L502:
4709:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
 6883              		.loc 1 4709 21 is_stmt 1 view .LVU1933
 6884 0076 1146     		mov	r1, r2
 6885 0078 2046     		mov	r0, r4
 6886 007a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 6887              	.LVL476:
4710:ThirdParty/FreeRTOS/tasks.c **** 
 6888              		.loc 1 4710 65 view .LVU1934
4716:ThirdParty/FreeRTOS/tasks.c ****                 }
 6889              		.loc 1 4716 21 view .LVU1935
 6890 007e 4FF0E023 		mov	r3, #-536813568
 6891 0082 4FF08052 		mov	r2, #268435456
 6892 0086 C3F8042D 		str	r2, [r3, #3332]
4716:ThirdParty/FreeRTOS/tasks.c ****                 }
 6893              		.loc 1 4716 21 view .LVU1936
 6894              		.syntax unified
 6895              	@ 4716 "ThirdParty/FreeRTOS/tasks.c" 1
 6896 008a BFF34F8F 		dsb
 6897              	@ 0 "" 2
4716:ThirdParty/FreeRTOS/tasks.c ****                 }
 6898              		.loc 1 4716 21 view .LVU1937
 6899              	@ 4716 "ThirdParty/FreeRTOS/tasks.c" 1
 6900 008e BFF36F8F 		isb
 6901              	@ 0 "" 2
4716:ThirdParty/FreeRTOS/tasks.c ****                 }
 6902              		.loc 1 4716 43 view .LVU1938
 6903              		.thumb
 6904              		.syntax unified
 6905 0092 D3E7     		b	.L497
 6906              	.LVL477:
 6907              	.L499:
4743:ThirdParty/FreeRTOS/tasks.c ****                 }
 6908              		.loc 1 4743 21 view .LVU1939
4743:ThirdParty/FreeRTOS/tasks.c ****                 }
 6909              		.loc 1 4743 33 is_stmt 0 view .LVU1940
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 252


 6910 0094 034B     		ldr	r3, .L503
 6911 0096 1A68     		ldr	r2, [r3]
4743:ThirdParty/FreeRTOS/tasks.c ****                 }
 6912              		.loc 1 4743 79 view .LVU1941
 6913 0098 631E     		subs	r3, r4, #1
4743:ThirdParty/FreeRTOS/tasks.c ****                 }
 6914              		.loc 1 4743 68 view .LVU1942
 6915 009a 06F11401 		add	r1, r6, #20
 6916 009e 42F82130 		str	r3, [r2, r1, lsl #2]
 6917 00a2 DEE7     		b	.L498
 6918              	.L504:
 6919              		.align	2
 6920              	.L503:
 6921 00a4 00000000 		.word	pxCurrentTCB
 6922              		.cfi_endproc
 6923              	.LFE57:
 6925              		.section	.text.xTaskGenericNotifyWait,"ax",%progbits
 6926              		.align	1
 6927              		.global	xTaskGenericNotifyWait
 6928              		.syntax unified
 6929              		.thumb
 6930              		.thumb_func
 6932              	xTaskGenericNotifyWait:
 6933              	.LVL478:
 6934              	.LFB58:
4768:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 6935              		.loc 1 4768 5 is_stmt 1 view -0
 6936              		.cfi_startproc
 6937              		@ args = 4, pretend = 0, frame = 0
 6938              		@ frame_needed = 0, uses_anonymous_args = 0
4768:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 6939              		.loc 1 4768 5 is_stmt 0 view .LVU1944
 6940 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6941              	.LCFI55:
 6942              		.cfi_def_cfa_offset 24
 6943              		.cfi_offset 3, -24
 6944              		.cfi_offset 4, -20
 6945              		.cfi_offset 5, -16
 6946              		.cfi_offset 6, -12
 6947              		.cfi_offset 7, -8
 6948              		.cfi_offset 14, -4
4769:ThirdParty/FreeRTOS/tasks.c **** 
 6949              		.loc 1 4769 9 is_stmt 1 view .LVU1945
4771:ThirdParty/FreeRTOS/tasks.c **** 
 6950              		.loc 1 4771 9 view .LVU1946
 6951 0002 40B1     		cbz	r0, .L506
4771:ThirdParty/FreeRTOS/tasks.c **** 
 6952              		.loc 1 4771 9 discriminator 1 view .LVU1947
 6953              	.LBB294:
 6954              	.LBI294:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6955              		.loc 2 194 34 view .LVU1948
 6956              	.LBB295:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6957              		.loc 2 196 9 view .LVU1949
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6958              		.loc 2 198 9 view .LVU1950
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 253


 6959              		.syntax unified
 6960              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6961 0004 4FF05003 			mov r3, #80												
 6962 0008 83F31188 		msr basepri, r3											
 6963 000c BFF36F8F 		isb														
 6964 0010 BFF34F8F 		dsb														
 6965              	
 6966              	@ 0 "" 2
 6967              	.LVL479:
 6968              		.thumb
 6969              		.syntax unified
 6970              	.L507:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6971              		.loc 2 198 9 is_stmt 0 view .LVU1951
 6972              	.LBE295:
 6973              	.LBE294:
4771:ThirdParty/FreeRTOS/tasks.c **** 
 6974              		.loc 1 4771 9 is_stmt 1 discriminator 3 view .LVU1952
4771:ThirdParty/FreeRTOS/tasks.c **** 
 6975              		.loc 1 4771 9 discriminator 3 view .LVU1953
 6976 0014 FEE7     		b	.L507
 6977              	.LVL480:
 6978              	.L506:
4771:ThirdParty/FreeRTOS/tasks.c **** 
 6979              		.loc 1 4771 9 is_stmt 0 discriminator 3 view .LVU1954
 6980 0016 0D46     		mov	r5, r1
 6981 0018 1646     		mov	r6, r2
 6982 001a 1C46     		mov	r4, r3
 6983 001c 0746     		mov	r7, r0
4771:ThirdParty/FreeRTOS/tasks.c **** 
 6984              		.loc 1 4771 78 is_stmt 1 discriminator 2 view .LVU1955
4773:ThirdParty/FreeRTOS/tasks.c ****         {
 6985              		.loc 1 4773 9 view .LVU1956
 6986 001e FFF7FEFF 		bl	vPortEnterCritical
 6987              	.LVL481:
4776:ThirdParty/FreeRTOS/tasks.c ****             {
 6988              		.loc 1 4776 13 view .LVU1957
4776:ThirdParty/FreeRTOS/tasks.c ****             {
 6989              		.loc 1 4776 29 is_stmt 0 view .LVU1958
 6990 0022 294B     		ldr	r3, .L515
 6991 0024 1B68     		ldr	r3, [r3]
4776:ThirdParty/FreeRTOS/tasks.c ****             {
 6992              		.loc 1 4776 44 view .LVU1959
 6993 0026 3B44     		add	r3, r3, r7
 6994 0028 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 6995 002c DBB2     		uxtb	r3, r3
4776:ThirdParty/FreeRTOS/tasks.c ****             {
 6996              		.loc 1 4776 15 view .LVU1960
 6997 002e 022B     		cmp	r3, #2
 6998 0030 10D0     		beq	.L508
4781:ThirdParty/FreeRTOS/tasks.c **** 
 6999              		.loc 1 4781 17 is_stmt 1 view .LVU1961
4781:ThirdParty/FreeRTOS/tasks.c **** 
 7000              		.loc 1 4781 29 is_stmt 0 view .LVU1962
 7001 0032 254A     		ldr	r2, .L515
 7002 0034 1168     		ldr	r1, [r2]
4781:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 254


 7003              		.loc 1 4781 46 view .LVU1963
 7004 0036 07F11400 		add	r0, r7, #20
 7005 003a 51F82030 		ldr	r3, [r1, r0, lsl #2]
4781:ThirdParty/FreeRTOS/tasks.c **** 
 7006              		.loc 1 4781 64 view .LVU1964
 7007 003e 23EA0503 		bic	r3, r3, r5
 7008 0042 41F82030 		str	r3, [r1, r0, lsl #2]
4784:ThirdParty/FreeRTOS/tasks.c **** 
 7009              		.loc 1 4784 17 is_stmt 1 view .LVU1965
4784:ThirdParty/FreeRTOS/tasks.c **** 
 7010              		.loc 1 4784 29 is_stmt 0 view .LVU1966
 7011 0046 1368     		ldr	r3, [r2]
4784:ThirdParty/FreeRTOS/tasks.c **** 
 7012              		.loc 1 4784 62 view .LVU1967
 7013 0048 3B44     		add	r3, r3, r7
 7014 004a 0122     		movs	r2, #1
 7015 004c 83F85420 		strb	r2, [r3, #84]
4786:ThirdParty/FreeRTOS/tasks.c ****                 {
 7016              		.loc 1 4786 17 is_stmt 1 view .LVU1968
4786:ThirdParty/FreeRTOS/tasks.c ****                 {
 7017              		.loc 1 4786 19 is_stmt 0 view .LVU1969
 7018 0050 069B     		ldr	r3, [sp, #24]
 7019 0052 F3B9     		cbnz	r3, .L513
 7020              	.LVL482:
 7021              	.L508:
4804:ThirdParty/FreeRTOS/tasks.c ****             }
 7022              		.loc 1 4804 41 is_stmt 1 view .LVU1970
4807:ThirdParty/FreeRTOS/tasks.c **** 
 7023              		.loc 1 4807 9 view .LVU1971
 7024 0054 FFF7FEFF 		bl	vPortExitCritical
 7025              	.LVL483:
4809:ThirdParty/FreeRTOS/tasks.c ****         {
 7026              		.loc 1 4809 9 view .LVU1972
 7027 0058 FFF7FEFF 		bl	vPortEnterCritical
 7028              	.LVL484:
4811:ThirdParty/FreeRTOS/tasks.c **** 
 7029              		.loc 1 4811 51 view .LVU1973
4813:ThirdParty/FreeRTOS/tasks.c ****             {
 7030              		.loc 1 4813 13 view .LVU1974
4813:ThirdParty/FreeRTOS/tasks.c ****             {
 7031              		.loc 1 4813 15 is_stmt 0 view .LVU1975
 7032 005c 34B1     		cbz	r4, .L509
4817:ThirdParty/FreeRTOS/tasks.c ****             }
 7033              		.loc 1 4817 17 is_stmt 1 view .LVU1976
4817:ThirdParty/FreeRTOS/tasks.c ****             }
 7034              		.loc 1 4817 53 is_stmt 0 view .LVU1977
 7035 005e 1A4B     		ldr	r3, .L515
 7036 0060 1B68     		ldr	r3, [r3]
4817:ThirdParty/FreeRTOS/tasks.c ****             }
 7037              		.loc 1 4817 70 view .LVU1978
 7038 0062 07F11402 		add	r2, r7, #20
 7039 0066 53F82230 		ldr	r3, [r3, r2, lsl #2]
4817:ThirdParty/FreeRTOS/tasks.c ****             }
 7040              		.loc 1 4817 39 view .LVU1979
 7041 006a 2360     		str	r3, [r4]
 7042              	.L509:
4824:ThirdParty/FreeRTOS/tasks.c ****             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 255


 7043              		.loc 1 4824 13 is_stmt 1 view .LVU1980
4824:ThirdParty/FreeRTOS/tasks.c ****             {
 7044              		.loc 1 4824 29 is_stmt 0 view .LVU1981
 7045 006c 164B     		ldr	r3, .L515
 7046 006e 1B68     		ldr	r3, [r3]
4824:ThirdParty/FreeRTOS/tasks.c ****             {
 7047              		.loc 1 4824 44 view .LVU1982
 7048 0070 3B44     		add	r3, r3, r7
 7049 0072 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 7050 0076 DBB2     		uxtb	r3, r3
4824:ThirdParty/FreeRTOS/tasks.c ****             {
 7051              		.loc 1 4824 15 view .LVU1983
 7052 0078 022B     		cmp	r3, #2
 7053 007a 19D0     		beq	.L514
4827:ThirdParty/FreeRTOS/tasks.c ****             }
 7054              		.loc 1 4827 25 view .LVU1984
 7055 007c 0024     		movs	r4, #0
 7056              	.LVL485:
 7057              	.L510:
4837:ThirdParty/FreeRTOS/tasks.c ****         }
 7058              		.loc 1 4837 13 is_stmt 1 view .LVU1985
4837:ThirdParty/FreeRTOS/tasks.c ****         }
 7059              		.loc 1 4837 25 is_stmt 0 view .LVU1986
 7060 007e 124B     		ldr	r3, .L515
 7061 0080 1B68     		ldr	r3, [r3]
4837:ThirdParty/FreeRTOS/tasks.c ****         }
 7062              		.loc 1 4837 58 view .LVU1987
 7063 0082 3B44     		add	r3, r3, r7
 7064 0084 0022     		movs	r2, #0
 7065 0086 83F85420 		strb	r2, [r3, #84]
4839:ThirdParty/FreeRTOS/tasks.c **** 
 7066              		.loc 1 4839 9 is_stmt 1 view .LVU1988
 7067 008a FFF7FEFF 		bl	vPortExitCritical
 7068              	.LVL486:
4841:ThirdParty/FreeRTOS/tasks.c ****     }
 7069              		.loc 1 4841 9 view .LVU1989
4842:ThirdParty/FreeRTOS/tasks.c **** 
 7070              		.loc 1 4842 5 is_stmt 0 view .LVU1990
 7071 008e 2046     		mov	r0, r4
 7072 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7073              	.LVL487:
 7074              	.L513:
4788:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
 7075              		.loc 1 4788 21 is_stmt 1 view .LVU1991
 7076 0092 1146     		mov	r1, r2
 7077 0094 1846     		mov	r0, r3
 7078 0096 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 7079              	.LVL488:
4789:ThirdParty/FreeRTOS/tasks.c **** 
 7080              		.loc 1 4789 65 view .LVU1992
4795:ThirdParty/FreeRTOS/tasks.c ****                 }
 7081              		.loc 1 4795 21 view .LVU1993
 7082 009a 4FF0E023 		mov	r3, #-536813568
 7083 009e 4FF08052 		mov	r2, #268435456
 7084 00a2 C3F8042D 		str	r2, [r3, #3332]
 7085              	.LVL489:
4795:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 256


 7086              		.loc 1 4795 21 view .LVU1994
 7087              		.syntax unified
 7088              	@ 4795 "ThirdParty/FreeRTOS/tasks.c" 1
 7089 00a6 BFF34F8F 		dsb
 7090              	@ 0 "" 2
4795:ThirdParty/FreeRTOS/tasks.c ****                 }
 7091              		.loc 1 4795 21 view .LVU1995
 7092              	@ 4795 "ThirdParty/FreeRTOS/tasks.c" 1
 7093 00aa BFF36F8F 		isb
 7094              	@ 0 "" 2
4795:ThirdParty/FreeRTOS/tasks.c ****                 }
 7095              		.loc 1 4795 43 view .LVU1996
 7096              		.thumb
 7097              		.syntax unified
 7098 00ae D1E7     		b	.L508
 7099              	.L514:
4833:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 7100              		.loc 1 4833 17 view .LVU1997
4833:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 7101              		.loc 1 4833 29 is_stmt 0 view .LVU1998
 7102 00b0 054B     		ldr	r3, .L515
 7103 00b2 1A68     		ldr	r2, [r3]
4833:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 7104              		.loc 1 4833 46 view .LVU1999
 7105 00b4 07F11401 		add	r1, r7, #20
 7106 00b8 52F82130 		ldr	r3, [r2, r1, lsl #2]
4833:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 7107              		.loc 1 4833 64 view .LVU2000
 7108 00bc 23EA0603 		bic	r3, r3, r6
 7109 00c0 42F82130 		str	r3, [r2, r1, lsl #2]
4834:ThirdParty/FreeRTOS/tasks.c ****             }
 7110              		.loc 1 4834 17 is_stmt 1 view .LVU2001
 7111              	.LVL490:
4834:ThirdParty/FreeRTOS/tasks.c ****             }
 7112              		.loc 1 4834 25 is_stmt 0 view .LVU2002
 7113 00c4 0124     		movs	r4, #1
 7114              	.LVL491:
4834:ThirdParty/FreeRTOS/tasks.c ****             }
 7115              		.loc 1 4834 25 view .LVU2003
 7116 00c6 DAE7     		b	.L510
 7117              	.L516:
 7118              		.align	2
 7119              	.L515:
 7120 00c8 00000000 		.word	pxCurrentTCB
 7121              		.cfi_endproc
 7122              	.LFE58:
 7124              		.section	.text.xTaskGenericNotify,"ax",%progbits
 7125              		.align	1
 7126              		.global	xTaskGenericNotify
 7127              		.syntax unified
 7128              		.thumb
 7129              		.thumb_func
 7131              	xTaskGenericNotify:
 7132              	.LVL492:
 7133              	.LFB59:
4854:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7134              		.loc 1 4854 5 is_stmt 1 view -0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 257


 7135              		.cfi_startproc
 7136              		@ args = 4, pretend = 0, frame = 0
 7137              		@ frame_needed = 0, uses_anonymous_args = 0
4854:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7138              		.loc 1 4854 5 is_stmt 0 view .LVU2005
 7139 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7140              	.LCFI56:
 7141              		.cfi_def_cfa_offset 24
 7142              		.cfi_offset 3, -24
 7143              		.cfi_offset 4, -20
 7144              		.cfi_offset 5, -16
 7145              		.cfi_offset 6, -12
 7146              		.cfi_offset 7, -8
 7147              		.cfi_offset 14, -4
4855:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
 7148              		.loc 1 4855 9 is_stmt 1 view .LVU2006
4856:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 7149              		.loc 1 4856 9 view .LVU2007
 7150              	.LVL493:
4857:ThirdParty/FreeRTOS/tasks.c **** 
 7151              		.loc 1 4857 9 view .LVU2008
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7152              		.loc 1 4859 9 view .LVU2009
 7153 0002 41B1     		cbz	r1, .L518
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7154              		.loc 1 4859 9 discriminator 1 view .LVU2010
 7155              	.LBB296:
 7156              	.LBI296:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7157              		.loc 2 194 34 view .LVU2011
 7158              	.LBB297:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7159              		.loc 2 196 9 view .LVU2012
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7160              		.loc 2 198 9 view .LVU2013
 7161              		.syntax unified
 7162              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7163 0004 4FF05003 			mov r3, #80												
 7164 0008 83F31188 		msr basepri, r3											
 7165 000c BFF36F8F 		isb														
 7166 0010 BFF34F8F 		dsb														
 7167              	
 7168              	@ 0 "" 2
 7169              	.LVL494:
 7170              		.thumb
 7171              		.syntax unified
 7172              	.L519:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7173              		.loc 2 198 9 is_stmt 0 view .LVU2014
 7174              	.LBE297:
 7175              	.LBE296:
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7176              		.loc 1 4859 9 is_stmt 1 discriminator 3 view .LVU2015
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7177              		.loc 1 4859 9 discriminator 3 view .LVU2016
 7178 0014 FEE7     		b	.L519
 7179              	.LVL495:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 258


 7180              	.L518:
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7181              		.loc 1 4859 9 is_stmt 0 discriminator 3 view .LVU2017
 7182 0016 0446     		mov	r4, r0
 7183 0018 1746     		mov	r7, r2
 7184 001a 1E46     		mov	r6, r3
 7185 001c 0D46     		mov	r5, r1
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7186              		.loc 1 4859 80 is_stmt 1 discriminator 2 view .LVU2018
4860:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 7187              		.loc 1 4860 9 view .LVU2019
 7188 001e B8B1     		cbz	r0, .L540
4860:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 7189              		.loc 1 4860 38 discriminator 2 view .LVU2020
4861:ThirdParty/FreeRTOS/tasks.c **** 
 7190              		.loc 1 4861 9 view .LVU2021
 7191              	.LVL496:
4863:ThirdParty/FreeRTOS/tasks.c ****         {
 7192              		.loc 1 4863 9 view .LVU2022
 7193 0020 FFF7FEFF 		bl	vPortEnterCritical
 7194              	.LVL497:
4865:ThirdParty/FreeRTOS/tasks.c ****             {
 7195              		.loc 1 4865 13 view .LVU2023
4865:ThirdParty/FreeRTOS/tasks.c ****             {
 7196              		.loc 1 4865 15 is_stmt 0 view .LVU2024
 7197 0024 069B     		ldr	r3, [sp, #24]
 7198 0026 2BB1     		cbz	r3, .L522
4867:ThirdParty/FreeRTOS/tasks.c ****             }
 7199              		.loc 1 4867 17 is_stmt 1 view .LVU2025
4867:ThirdParty/FreeRTOS/tasks.c ****             }
 7200              		.loc 1 4867 71 is_stmt 0 view .LVU2026
 7201 0028 05F11403 		add	r3, r5, #20
 7202 002c 54F82330 		ldr	r3, [r4, r3, lsl #2]
4867:ThirdParty/FreeRTOS/tasks.c ****             }
 7203              		.loc 1 4867 47 view .LVU2027
 7204 0030 069A     		ldr	r2, [sp, #24]
 7205 0032 1360     		str	r3, [r2]
 7206              	.L522:
4870:ThirdParty/FreeRTOS/tasks.c **** 
 7207              		.loc 1 4870 13 is_stmt 1 view .LVU2028
4870:ThirdParty/FreeRTOS/tasks.c **** 
 7208              		.loc 1 4870 35 is_stmt 0 view .LVU2029
 7209 0034 6219     		adds	r2, r4, r5
 7210 0036 92F85430 		ldrb	r3, [r2, #84]	@ zero_extendqisi2
 7211 003a DBB2     		uxtb	r3, r3
 7212              	.LVL498:
4872:ThirdParty/FreeRTOS/tasks.c **** 
 7213              		.loc 1 4872 13 is_stmt 1 view .LVU2030
4872:ThirdParty/FreeRTOS/tasks.c **** 
 7214              		.loc 1 4872 53 is_stmt 0 view .LVU2031
 7215 003c 0221     		movs	r1, #2
 7216 003e 82F85410 		strb	r1, [r2, #84]
4874:ThirdParty/FreeRTOS/tasks.c ****             {
 7217              		.loc 1 4874 13 is_stmt 1 view .LVU2032
 7218 0042 042E     		cmp	r6, #4
 7219 0044 2BD8     		bhi	.L523
 7220 0046 DFE806F0 		tbb	[pc, r6]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 259


 7221              	.L525:
 7222 004a 12       		.byte	(.L529-.L525)/2
 7223 004b 0C       		.byte	(.L528-.L525)/2
 7224 004c 19       		.byte	(.L527-.L525)/2
 7225 004d 20       		.byte	(.L526-.L525)/2
 7226 004e 24       		.byte	(.L524-.L525)/2
 7227              	.LVL499:
 7228 004f 00       		.p2align 1
 7229              	.L540:
4860:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 7230              		.loc 1 4860 9 discriminator 1 view .LVU2033
 7231              	.LBB298:
 7232              	.LBI298:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7233              		.loc 2 194 34 view .LVU2034
 7234              	.LBB299:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7235              		.loc 2 196 9 view .LVU2035
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7236              		.loc 2 198 9 view .LVU2036
 7237              		.syntax unified
 7238              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7239 0050 4FF05003 			mov r3, #80												
 7240 0054 83F31188 		msr basepri, r3											
 7241 0058 BFF36F8F 		isb														
 7242 005c BFF34F8F 		dsb														
 7243              	
 7244              	@ 0 "" 2
 7245              	.LVL500:
 7246              		.thumb
 7247              		.syntax unified
 7248              	.L521:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7249              		.loc 2 198 9 is_stmt 0 view .LVU2037
 7250              	.LBE299:
 7251              	.LBE298:
4860:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 7252              		.loc 1 4860 9 is_stmt 1 discriminator 3 view .LVU2038
4860:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 7253              		.loc 1 4860 9 discriminator 3 view .LVU2039
 7254 0060 FEE7     		b	.L521
 7255              	.LVL501:
 7256              	.L528:
4877:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7257              		.loc 1 4877 21 view .LVU2040
4877:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7258              		.loc 1 4877 43 is_stmt 0 view .LVU2041
 7259 0062 1435     		adds	r5, r5, #20
 7260              	.LVL502:
4877:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7261              		.loc 1 4877 43 view .LVU2042
 7262 0064 54F82520 		ldr	r2, [r4, r5, lsl #2]
4877:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7263              		.loc 1 4877 63 view .LVU2043
 7264 0068 3A43     		orrs	r2, r2, r7
 7265 006a 44F82520 		str	r2, [r4, r5, lsl #2]
4878:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 260


 7266              		.loc 1 4878 21 is_stmt 1 view .LVU2044
 7267              	.LVL503:
 7268              	.L529:
4918:ThirdParty/FreeRTOS/tasks.c **** 
 7269              		.loc 1 4918 48 view .LVU2045
4922:ThirdParty/FreeRTOS/tasks.c ****             {
 7270              		.loc 1 4922 13 view .LVU2046
4922:ThirdParty/FreeRTOS/tasks.c ****             {
 7271              		.loc 1 4922 15 is_stmt 0 view .LVU2047
 7272 006e 012B     		cmp	r3, #1
 7273 0070 22D0     		beq	.L541
 7274 0072 0124     		movs	r4, #1
 7275              	.LVL504:
 7276              	.L530:
4959:ThirdParty/FreeRTOS/tasks.c ****             }
 7277              		.loc 1 4959 41 is_stmt 1 view .LVU2048
4962:ThirdParty/FreeRTOS/tasks.c **** 
 7278              		.loc 1 4962 9 view .LVU2049
 7279 0074 FFF7FEFF 		bl	vPortExitCritical
 7280              	.LVL505:
4964:ThirdParty/FreeRTOS/tasks.c ****     }
 7281              		.loc 1 4964 9 view .LVU2050
4965:ThirdParty/FreeRTOS/tasks.c **** 
 7282              		.loc 1 4965 5 is_stmt 0 view .LVU2051
 7283 0078 2046     		mov	r0, r4
 7284 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7285              	.LVL506:
 7286              	.L527:
4881:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7287              		.loc 1 4881 21 is_stmt 1 view .LVU2052
4881:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7288              		.loc 1 4881 45 is_stmt 0 view .LVU2053
 7289 007c 1435     		adds	r5, r5, #20
 7290              	.LVL507:
4881:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7291              		.loc 1 4881 45 view .LVU2054
 7292 007e 54F82520 		ldr	r2, [r4, r5, lsl #2]
4881:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7293              		.loc 1 4881 66 view .LVU2055
 7294 0082 0132     		adds	r2, r2, #1
 7295 0084 44F82520 		str	r2, [r4, r5, lsl #2]
4882:ThirdParty/FreeRTOS/tasks.c **** 
 7296              		.loc 1 4882 21 is_stmt 1 view .LVU2056
 7297 0088 F1E7     		b	.L529
 7298              	.LVL508:
 7299              	.L526:
4885:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7300              		.loc 1 4885 21 view .LVU2057
4885:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7301              		.loc 1 4885 63 is_stmt 0 view .LVU2058
 7302 008a 1435     		adds	r5, r5, #20
 7303              	.LVL509:
4885:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7304              		.loc 1 4885 63 view .LVU2059
 7305 008c 44F82570 		str	r7, [r4, r5, lsl #2]
4886:ThirdParty/FreeRTOS/tasks.c **** 
 7306              		.loc 1 4886 21 is_stmt 1 view .LVU2060
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 261


 7307 0090 EDE7     		b	.L529
 7308              	.LVL510:
 7309              	.L524:
4890:ThirdParty/FreeRTOS/tasks.c ****                     {
 7310              		.loc 1 4890 21 view .LVU2061
4890:ThirdParty/FreeRTOS/tasks.c ****                     {
 7311              		.loc 1 4890 23 is_stmt 0 view .LVU2062
 7312 0092 022B     		cmp	r3, #2
 7313 0094 5BD0     		beq	.L535
4892:ThirdParty/FreeRTOS/tasks.c ****                     }
 7314              		.loc 1 4892 25 is_stmt 1 view .LVU2063
4892:ThirdParty/FreeRTOS/tasks.c ****                     }
 7315              		.loc 1 4892 67 is_stmt 0 view .LVU2064
 7316 0096 1435     		adds	r5, r5, #20
 7317              	.LVL511:
4892:ThirdParty/FreeRTOS/tasks.c ****                     }
 7318              		.loc 1 4892 67 view .LVU2065
 7319 0098 44F82570 		str	r7, [r4, r5, lsl #2]
 7320 009c E7E7     		b	.L529
 7321              	.LVL512:
 7322              	.L523:
4913:ThirdParty/FreeRTOS/tasks.c **** 
 7323              		.loc 1 4913 21 is_stmt 1 view .LVU2066
 7324 009e 2E4A     		ldr	r2, .L543
 7325 00a0 1268     		ldr	r2, [r2]
 7326 00a2 002A     		cmp	r2, #0
 7327 00a4 E3D0     		beq	.L529
4913:ThirdParty/FreeRTOS/tasks.c **** 
 7328              		.loc 1 4913 21 discriminator 1 view .LVU2067
 7329              	.LBB300:
 7330              	.LBI300:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7331              		.loc 2 194 34 view .LVU2068
 7332              	.LBB301:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7333              		.loc 2 196 9 view .LVU2069
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7334              		.loc 2 198 9 view .LVU2070
 7335              		.syntax unified
 7336              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7337 00a6 4FF05003 			mov r3, #80												
 7338 00aa 83F31188 		msr basepri, r3											
 7339 00ae BFF36F8F 		isb														
 7340 00b2 BFF34F8F 		dsb														
 7341              	
 7342              	@ 0 "" 2
 7343              	.LVL513:
 7344              		.thumb
 7345              		.syntax unified
 7346              	.L531:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7347              		.loc 2 198 9 is_stmt 0 view .LVU2071
 7348              	.LBE301:
 7349              	.LBE300:
4913:ThirdParty/FreeRTOS/tasks.c **** 
 7350              		.loc 1 4913 21 is_stmt 1 discriminator 3 view .LVU2072
4913:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 262


 7351              		.loc 1 4913 21 discriminator 3 view .LVU2073
 7352 00b6 FEE7     		b	.L531
 7353              	.LVL514:
 7354              	.L541:
 7355              	.LBB302:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7356              		.loc 1 4924 17 view .LVU2074
 7357 00b8 6369     		ldr	r3, [r4, #20]
 7358              	.LVL515:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7359              		.loc 1 4924 17 view .LVU2075
 7360 00ba A168     		ldr	r1, [r4, #8]
 7361 00bc E268     		ldr	r2, [r4, #12]
 7362 00be 8A60     		str	r2, [r1, #8]
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7363              		.loc 1 4924 17 view .LVU2076
 7364 00c0 A168     		ldr	r1, [r4, #8]
 7365 00c2 5160     		str	r1, [r2, #4]
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7366              		.loc 1 4924 17 view .LVU2077
 7367 00c4 5A68     		ldr	r2, [r3, #4]
 7368 00c6 211D     		adds	r1, r4, #4
 7369 00c8 8A42     		cmp	r2, r1
 7370 00ca 2BD0     		beq	.L542
 7371              	.L532:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7372              		.loc 1 4924 17 discriminator 3 view .LVU2078
 7373 00cc 0022     		movs	r2, #0
 7374 00ce 6261     		str	r2, [r4, #20]
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7375              		.loc 1 4924 17 discriminator 3 view .LVU2079
 7376 00d0 1A68     		ldr	r2, [r3]
 7377 00d2 013A     		subs	r2, r2, #1
 7378 00d4 1A60     		str	r2, [r3]
 7379              	.LBE302:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7380              		.loc 1 4924 62 discriminator 3 view .LVU2080
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7381              		.loc 1 4925 17 view .LVU2081
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7382              		.loc 1 4925 17 view .LVU2082
 7383 00d6 E36A     		ldr	r3, [r4, #44]
 7384              	.LVL516:
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7385              		.loc 1 4925 17 is_stmt 0 view .LVU2083
 7386 00d8 0122     		movs	r2, #1
 7387 00da 9A40     		lsls	r2, r2, r3
 7388 00dc 1F48     		ldr	r0, .L543+4
 7389 00de 0568     		ldr	r5, [r0]
 7390 00e0 2A43     		orrs	r2, r2, r5
 7391 00e2 0260     		str	r2, [r0]
 7392              	.LBB303:
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7393              		.loc 1 4925 17 is_stmt 1 view .LVU2084
 7394 00e4 1E4A     		ldr	r2, .L543+8
 7395 00e6 03EB8303 		add	r3, r3, r3, lsl #2
 7396 00ea 02EB8303 		add	r3, r2, r3, lsl #2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 263


 7397 00ee 5B68     		ldr	r3, [r3, #4]
 7398              	.LVL517:
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7399              		.loc 1 4925 17 view .LVU2085
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7400              		.loc 1 4925 17 view .LVU2086
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7401              		.loc 1 4925 17 view .LVU2087
 7402 00f0 A360     		str	r3, [r4, #8]
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7403              		.loc 1 4925 17 view .LVU2088
 7404 00f2 9868     		ldr	r0, [r3, #8]
 7405 00f4 E060     		str	r0, [r4, #12]
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7406              		.loc 1 4925 17 view .LVU2089
 7407 00f6 4160     		str	r1, [r0, #4]
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7408              		.loc 1 4925 17 view .LVU2090
 7409 00f8 9960     		str	r1, [r3, #8]
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7410              		.loc 1 4925 17 view .LVU2091
 7411 00fa E36A     		ldr	r3, [r4, #44]
 7412              	.LVL518:
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7413              		.loc 1 4925 17 is_stmt 0 view .LVU2092
 7414 00fc 03EB8301 		add	r1, r3, r3, lsl #2
 7415 0100 8800     		lsls	r0, r1, #2
 7416 0102 02EB8101 		add	r1, r2, r1, lsl #2
 7417 0106 6161     		str	r1, [r4, #20]
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7418              		.loc 1 4925 17 is_stmt 1 view .LVU2093
 7419 0108 1158     		ldr	r1, [r2, r0]
 7420 010a 0131     		adds	r1, r1, #1
 7421 010c 1150     		str	r1, [r2, r0]
 7422              	.LBE303:
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7423              		.loc 1 4925 17 view .LVU2094
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7424              		.loc 1 4925 47 view .LVU2095
4928:ThirdParty/FreeRTOS/tasks.c **** 
 7425              		.loc 1 4928 17 view .LVU2096
 7426 010e A36A     		ldr	r3, [r4, #40]
 7427 0110 5BB1     		cbz	r3, .L533
4928:ThirdParty/FreeRTOS/tasks.c **** 
 7428              		.loc 1 4928 17 discriminator 1 view .LVU2097
 7429              	.LBB304:
 7430              	.LBI304:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7431              		.loc 2 194 34 view .LVU2098
 7432              	.LBB305:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7433              		.loc 2 196 9 view .LVU2099
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7434              		.loc 2 198 9 view .LVU2100
 7435              		.syntax unified
 7436              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7437 0112 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 264


 7438 0116 83F31188 		msr basepri, r3											
 7439 011a BFF36F8F 		isb														
 7440 011e BFF34F8F 		dsb														
 7441              	
 7442              	@ 0 "" 2
 7443              		.thumb
 7444              		.syntax unified
 7445              	.L534:
 7446              	.LBE305:
 7447              	.LBE304:
4928:ThirdParty/FreeRTOS/tasks.c **** 
 7448              		.loc 1 4928 17 discriminator 3 view .LVU2101
4928:ThirdParty/FreeRTOS/tasks.c **** 
 7449              		.loc 1 4928 17 discriminator 3 view .LVU2102
 7450 0122 FEE7     		b	.L534
 7451              	.LVL519:
 7452              	.L542:
 7453              	.LBB306:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7454              		.loc 1 4924 17 discriminator 1 view .LVU2103
 7455 0124 E268     		ldr	r2, [r4, #12]
 7456 0126 5A60     		str	r2, [r3, #4]
 7457 0128 D0E7     		b	.L532
 7458              	.LVL520:
 7459              	.L533:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7460              		.loc 1 4924 17 is_stmt 0 discriminator 1 view .LVU2104
 7461              	.LBE306:
4928:ThirdParty/FreeRTOS/tasks.c **** 
 7462              		.loc 1 4928 94 is_stmt 1 discriminator 2 view .LVU2105
4946:ThirdParty/FreeRTOS/tasks.c ****                 {
 7463              		.loc 1 4946 17 view .LVU2106
4946:ThirdParty/FreeRTOS/tasks.c ****                 {
 7464              		.loc 1 4946 26 is_stmt 0 view .LVU2107
 7465 012a E26A     		ldr	r2, [r4, #44]
4946:ThirdParty/FreeRTOS/tasks.c ****                 {
 7466              		.loc 1 4946 53 view .LVU2108
 7467 012c 0D4B     		ldr	r3, .L543+12
 7468 012e 1B68     		ldr	r3, [r3]
 7469 0130 DB6A     		ldr	r3, [r3, #44]
4946:ThirdParty/FreeRTOS/tasks.c ****                 {
 7470              		.loc 1 4946 19 view .LVU2109
 7471 0132 9A42     		cmp	r2, r3
 7472 0134 0DD9     		bls	.L537
4950:ThirdParty/FreeRTOS/tasks.c ****                 }
 7473              		.loc 1 4950 21 is_stmt 1 view .LVU2110
 7474 0136 4FF0E023 		mov	r3, #-536813568
 7475 013a 4FF08052 		mov	r2, #268435456
 7476 013e C3F8042D 		str	r2, [r3, #3332]
 7477              	.LVL521:
4950:ThirdParty/FreeRTOS/tasks.c ****                 }
 7478              		.loc 1 4950 21 view .LVU2111
 7479              		.syntax unified
 7480              	@ 4950 "ThirdParty/FreeRTOS/tasks.c" 1
 7481 0142 BFF34F8F 		dsb
 7482              	@ 0 "" 2
4950:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 265


 7483              		.loc 1 4950 21 view .LVU2112
 7484              	@ 4950 "ThirdParty/FreeRTOS/tasks.c" 1
 7485 0146 BFF36F8F 		isb
 7486              	@ 0 "" 2
4950:ThirdParty/FreeRTOS/tasks.c ****                 }
 7487              		.loc 1 4950 52 view .LVU2113
 7488              		.thumb
 7489              		.syntax unified
 7490 014a 0124     		movs	r4, #1
 7491              	.LVL522:
4950:ThirdParty/FreeRTOS/tasks.c ****                 }
 7492              		.loc 1 4950 52 is_stmt 0 view .LVU2114
 7493 014c 92E7     		b	.L530
 7494              	.LVL523:
 7495              	.L535:
4897:ThirdParty/FreeRTOS/tasks.c ****                     }
 7496              		.loc 1 4897 33 view .LVU2115
 7497 014e 0024     		movs	r4, #0
 7498              	.LVL524:
4897:ThirdParty/FreeRTOS/tasks.c ****                     }
 7499              		.loc 1 4897 33 view .LVU2116
 7500 0150 90E7     		b	.L530
 7501              	.LVL525:
 7502              	.L537:
4897:ThirdParty/FreeRTOS/tasks.c ****                     }
 7503              		.loc 1 4897 33 view .LVU2117
 7504 0152 0124     		movs	r4, #1
 7505              	.LVL526:
4897:ThirdParty/FreeRTOS/tasks.c ****                     }
 7506              		.loc 1 4897 33 view .LVU2118
 7507 0154 8EE7     		b	.L530
 7508              	.L544:
 7509 0156 00BF     		.align	2
 7510              	.L543:
 7511 0158 00000000 		.word	xTickCount
 7512 015c 00000000 		.word	uxTopReadyPriority
 7513 0160 00000000 		.word	pxReadyTasksLists
 7514 0164 00000000 		.word	pxCurrentTCB
 7515              		.cfi_endproc
 7516              	.LFE59:
 7518              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 7519              		.align	1
 7520              		.global	xTaskGenericNotifyFromISR
 7521              		.syntax unified
 7522              		.thumb
 7523              		.thumb_func
 7525              	xTaskGenericNotifyFromISR:
 7526              	.LVL527:
 7527              	.LFB60:
4978:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7528              		.loc 1 4978 5 is_stmt 1 view -0
 7529              		.cfi_startproc
 7530              		@ args = 8, pretend = 0, frame = 0
 7531              		@ frame_needed = 0, uses_anonymous_args = 0
4978:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7532              		.loc 1 4978 5 is_stmt 0 view .LVU2120
 7533 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 266


 7534              	.LCFI57:
 7535              		.cfi_def_cfa_offset 24
 7536              		.cfi_offset 3, -24
 7537              		.cfi_offset 4, -20
 7538              		.cfi_offset 5, -16
 7539              		.cfi_offset 6, -12
 7540              		.cfi_offset 7, -8
 7541              		.cfi_offset 14, -4
4979:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 7542              		.loc 1 4979 9 is_stmt 1 view .LVU2121
4980:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
 7543              		.loc 1 4980 9 view .LVU2122
4981:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 7544              		.loc 1 4981 9 view .LVU2123
 7545              	.LVL528:
4982:ThirdParty/FreeRTOS/tasks.c **** 
 7546              		.loc 1 4982 9 view .LVU2124
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7547              		.loc 1 4984 9 view .LVU2125
 7548 0002 68B1     		cbz	r0, .L571
 7549 0004 0C46     		mov	r4, r1
 7550 0006 1746     		mov	r7, r2
 7551 0008 1D46     		mov	r5, r3
 7552 000a 0646     		mov	r6, r0
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7553              		.loc 1 4984 38 discriminator 2 view .LVU2126
4985:ThirdParty/FreeRTOS/tasks.c **** 
 7554              		.loc 1 4985 9 view .LVU2127
 7555 000c 89B1     		cbz	r1, .L548
4985:ThirdParty/FreeRTOS/tasks.c **** 
 7556              		.loc 1 4985 9 discriminator 1 view .LVU2128
 7557              	.LBB307:
 7558              	.LBI307:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7559              		.loc 2 194 34 view .LVU2129
 7560              	.LBB308:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7561              		.loc 2 196 9 view .LVU2130
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7562              		.loc 2 198 9 view .LVU2131
 7563              		.syntax unified
 7564              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7565 000e 4FF05003 			mov r3, #80												
 7566 0012 83F31188 		msr basepri, r3											
 7567 0016 BFF36F8F 		isb														
 7568 001a BFF34F8F 		dsb														
 7569              	
 7570              	@ 0 "" 2
 7571              	.LVL529:
 7572              		.thumb
 7573              		.syntax unified
 7574              	.L549:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7575              		.loc 2 198 9 is_stmt 0 view .LVU2132
 7576              	.LBE308:
 7577              	.LBE307:
4985:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 267


 7578              		.loc 1 4985 9 is_stmt 1 discriminator 3 view .LVU2133
4985:ThirdParty/FreeRTOS/tasks.c **** 
 7579              		.loc 1 4985 9 discriminator 3 view .LVU2134
 7580 001e FEE7     		b	.L549
 7581              	.LVL530:
 7582              	.L571:
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7583              		.loc 1 4984 9 discriminator 1 view .LVU2135
 7584              	.LBB309:
 7585              	.LBI309:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7586              		.loc 2 194 34 view .LVU2136
 7587              	.LBB310:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7588              		.loc 2 196 9 view .LVU2137
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7589              		.loc 2 198 9 view .LVU2138
 7590              		.syntax unified
 7591              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7592 0020 4FF05003 			mov r3, #80												
 7593 0024 83F31188 		msr basepri, r3											
 7594 0028 BFF36F8F 		isb														
 7595 002c BFF34F8F 		dsb														
 7596              	
 7597              	@ 0 "" 2
 7598              	.LVL531:
 7599              		.thumb
 7600              		.syntax unified
 7601              	.L547:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7602              		.loc 2 198 9 is_stmt 0 view .LVU2139
 7603              	.LBE310:
 7604              	.LBE309:
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7605              		.loc 1 4984 9 is_stmt 1 discriminator 3 view .LVU2140
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7606              		.loc 1 4984 9 discriminator 3 view .LVU2141
 7607 0030 FEE7     		b	.L547
 7608              	.LVL532:
 7609              	.L548:
4985:ThirdParty/FreeRTOS/tasks.c **** 
 7610              		.loc 1 4985 80 discriminator 2 view .LVU2142
5003:ThirdParty/FreeRTOS/tasks.c **** 
 7611              		.loc 1 5003 9 view .LVU2143
 7612 0032 FFF7FEFF 		bl	vPortValidateInterruptPriority
 7613              	.LVL533:
5005:ThirdParty/FreeRTOS/tasks.c **** 
 7614              		.loc 1 5005 9 view .LVU2144
5007:ThirdParty/FreeRTOS/tasks.c ****         {
 7615              		.loc 1 5007 9 view .LVU2145
 7616              	.LBB311:
 7617              	.LBI311:
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7618              		.loc 2 210 38 view .LVU2146
 7619              	.LBB312:
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7620              		.loc 2 212 9 view .LVU2147
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 268


 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7621              		.loc 2 214 9 view .LVU2148
 7622              		.syntax unified
 7623              	@ 214 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7624 0036 EFF31182 			mrs r2, basepri											
 7625 003a 4FF05003 		mov r3, #80												
 7626 003e 83F31188 		msr basepri, r3											
 7627 0042 BFF36F8F 		isb														
 7628 0046 BFF34F8F 		dsb														
 7629              	
 7630              	@ 0 "" 2
 7631              	.LVL534:
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 7632              		.loc 2 226 9 view .LVU2149
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 7633              		.loc 2 226 9 is_stmt 0 view .LVU2150
 7634              		.thumb
 7635              		.syntax unified
 7636              	.LBE312:
 7637              	.LBE311:
5009:ThirdParty/FreeRTOS/tasks.c ****             {
 7638              		.loc 1 5009 13 is_stmt 1 view .LVU2151
5009:ThirdParty/FreeRTOS/tasks.c ****             {
 7639              		.loc 1 5009 15 is_stmt 0 view .LVU2152
 7640 004a 069B     		ldr	r3, [sp, #24]
 7641 004c 2BB1     		cbz	r3, .L550
5011:ThirdParty/FreeRTOS/tasks.c ****             }
 7642              		.loc 1 5011 17 is_stmt 1 view .LVU2153
5011:ThirdParty/FreeRTOS/tasks.c ****             }
 7643              		.loc 1 5011 71 is_stmt 0 view .LVU2154
 7644 004e 04F11403 		add	r3, r4, #20
 7645 0052 56F82330 		ldr	r3, [r6, r3, lsl #2]
5011:ThirdParty/FreeRTOS/tasks.c ****             }
 7646              		.loc 1 5011 47 view .LVU2155
 7647 0056 0699     		ldr	r1, [sp, #24]
 7648 0058 0B60     		str	r3, [r1]
 7649              	.L550:
5014:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 7650              		.loc 1 5014 13 is_stmt 1 view .LVU2156
5014:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 7651              		.loc 1 5014 35 is_stmt 0 view .LVU2157
 7652 005a 3119     		adds	r1, r6, r4
 7653 005c 91F85430 		ldrb	r3, [r1, #84]	@ zero_extendqisi2
 7654 0060 DBB2     		uxtb	r3, r3
 7655              	.LVL535:
5015:ThirdParty/FreeRTOS/tasks.c **** 
 7656              		.loc 1 5015 13 is_stmt 1 view .LVU2158
5015:ThirdParty/FreeRTOS/tasks.c **** 
 7657              		.loc 1 5015 53 is_stmt 0 view .LVU2159
 7658 0062 0220     		movs	r0, #2
 7659 0064 81F85400 		strb	r0, [r1, #84]
5017:ThirdParty/FreeRTOS/tasks.c ****             {
 7660              		.loc 1 5017 13 is_stmt 1 view .LVU2160
 7661 0068 042D     		cmp	r5, #4
 7662 006a 21D8     		bhi	.L551
 7663 006c DFE805F0 		tbb	[pc, r5]
 7664              	.L553:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 269


 7665 0070 09       		.byte	(.L557-.L553)/2
 7666 0071 03       		.byte	(.L556-.L553)/2
 7667 0072 0F       		.byte	(.L555-.L553)/2
 7668 0073 16       		.byte	(.L554-.L553)/2
 7669 0074 1A       		.byte	(.L552-.L553)/2
 7670 0075 00       		.p2align 1
 7671              	.L556:
5020:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7672              		.loc 1 5020 21 view .LVU2161
5020:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7673              		.loc 1 5020 43 is_stmt 0 view .LVU2162
 7674 0076 1434     		adds	r4, r4, #20
 7675              	.LVL536:
5020:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7676              		.loc 1 5020 43 view .LVU2163
 7677 0078 56F82410 		ldr	r1, [r6, r4, lsl #2]
5020:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7678              		.loc 1 5020 63 view .LVU2164
 7679 007c 3943     		orrs	r1, r1, r7
 7680 007e 46F82410 		str	r1, [r6, r4, lsl #2]
5021:ThirdParty/FreeRTOS/tasks.c **** 
 7681              		.loc 1 5021 21 is_stmt 1 view .LVU2165
 7682              	.LVL537:
 7683              	.L557:
5060:ThirdParty/FreeRTOS/tasks.c **** 
 7684              		.loc 1 5060 57 view .LVU2166
5064:ThirdParty/FreeRTOS/tasks.c ****             {
 7685              		.loc 1 5064 13 view .LVU2167
5064:ThirdParty/FreeRTOS/tasks.c ****             {
 7686              		.loc 1 5064 15 is_stmt 0 view .LVU2168
 7687 0082 012B     		cmp	r3, #1
 7688 0084 21D0     		beq	.L572
 7689 0086 0120     		movs	r0, #1
 7690              	.LVL538:
 7691              	.L558:
5097:ThirdParty/FreeRTOS/tasks.c ****                 }
 7692              		.loc 1 5097 45 is_stmt 1 view .LVU2169
5101:ThirdParty/FreeRTOS/tasks.c **** 
 7693              		.loc 1 5101 9 view .LVU2170
 7694              	.LBB313:
 7695              	.LBI313:
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7696              		.loc 2 230 34 view .LVU2171
 7697              	.LBB314:
 7698              		.loc 2 232 9 view .LVU2172
 7699              		.syntax unified
 7700              	@ 232 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7701 0088 82F31188 			msr basepri, r2	
 7702              	@ 0 "" 2
 7703              		.thumb
 7704              		.syntax unified
 7705              	.LBE314:
 7706              	.LBE313:
5103:ThirdParty/FreeRTOS/tasks.c ****     }
 7707              		.loc 1 5103 9 view .LVU2173
5104:ThirdParty/FreeRTOS/tasks.c **** 
 7708              		.loc 1 5104 5 is_stmt 0 view .LVU2174
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 270


 7709 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7710              	.LVL539:
 7711              	.L555:
5024:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7712              		.loc 1 5024 21 is_stmt 1 view .LVU2175
5024:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7713              		.loc 1 5024 45 is_stmt 0 view .LVU2176
 7714 008e 1434     		adds	r4, r4, #20
 7715              	.LVL540:
5024:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7716              		.loc 1 5024 45 view .LVU2177
 7717 0090 56F82410 		ldr	r1, [r6, r4, lsl #2]
5024:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7718              		.loc 1 5024 66 view .LVU2178
 7719 0094 0131     		adds	r1, r1, #1
 7720 0096 46F82410 		str	r1, [r6, r4, lsl #2]
5025:ThirdParty/FreeRTOS/tasks.c **** 
 7721              		.loc 1 5025 21 is_stmt 1 view .LVU2179
 7722 009a F2E7     		b	.L557
 7723              	.LVL541:
 7724              	.L554:
5028:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7725              		.loc 1 5028 21 view .LVU2180
5028:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7726              		.loc 1 5028 63 is_stmt 0 view .LVU2181
 7727 009c 1434     		adds	r4, r4, #20
 7728              	.LVL542:
5028:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7729              		.loc 1 5028 63 view .LVU2182
 7730 009e 46F82470 		str	r7, [r6, r4, lsl #2]
5029:ThirdParty/FreeRTOS/tasks.c **** 
 7731              		.loc 1 5029 21 is_stmt 1 view .LVU2183
 7732 00a2 EEE7     		b	.L557
 7733              	.LVL543:
 7734              	.L552:
5033:ThirdParty/FreeRTOS/tasks.c ****                     {
 7735              		.loc 1 5033 21 view .LVU2184
5033:ThirdParty/FreeRTOS/tasks.c ****                     {
 7736              		.loc 1 5033 23 is_stmt 0 view .LVU2185
 7737 00a4 022B     		cmp	r3, #2
 7738 00a6 6AD0     		beq	.L566
5035:ThirdParty/FreeRTOS/tasks.c ****                     }
 7739              		.loc 1 5035 25 is_stmt 1 view .LVU2186
5035:ThirdParty/FreeRTOS/tasks.c ****                     }
 7740              		.loc 1 5035 67 is_stmt 0 view .LVU2187
 7741 00a8 1434     		adds	r4, r4, #20
 7742              	.LVL544:
5035:ThirdParty/FreeRTOS/tasks.c ****                     }
 7743              		.loc 1 5035 67 view .LVU2188
 7744 00aa 46F82470 		str	r7, [r6, r4, lsl #2]
 7745 00ae E8E7     		b	.L557
 7746              	.LVL545:
 7747              	.L551:
5056:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7748              		.loc 1 5056 21 is_stmt 1 view .LVU2189
 7749 00b0 3549     		ldr	r1, .L574
 7750 00b2 0968     		ldr	r1, [r1]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 271


 7751 00b4 0029     		cmp	r1, #0
 7752 00b6 E4D0     		beq	.L557
5056:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7753              		.loc 1 5056 21 discriminator 1 view .LVU2190
 7754              	.LBB315:
 7755              	.LBI315:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7756              		.loc 2 194 34 view .LVU2191
 7757              	.LBB316:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7758              		.loc 2 196 9 view .LVU2192
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7759              		.loc 2 198 9 view .LVU2193
 7760              		.syntax unified
 7761              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7762 00b8 4FF05003 			mov r3, #80												
 7763 00bc 83F31188 		msr basepri, r3											
 7764 00c0 BFF36F8F 		isb														
 7765 00c4 BFF34F8F 		dsb														
 7766              	
 7767              	@ 0 "" 2
 7768              	.LVL546:
 7769              		.thumb
 7770              		.syntax unified
 7771              	.L559:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7772              		.loc 2 198 9 is_stmt 0 view .LVU2194
 7773              	.LBE316:
 7774              	.LBE315:
5056:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7775              		.loc 1 5056 21 is_stmt 1 discriminator 3 view .LVU2195
5056:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7776              		.loc 1 5056 21 discriminator 3 view .LVU2196
 7777 00c8 FEE7     		b	.L559
 7778              	.LVL547:
 7779              	.L572:
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7780              		.loc 1 5067 17 view .LVU2197
 7781 00ca B36A     		ldr	r3, [r6, #40]
 7782              	.LVL548:
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7783              		.loc 1 5067 17 is_stmt 0 view .LVU2198
 7784 00cc 43B1     		cbz	r3, .L560
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7785              		.loc 1 5067 17 is_stmt 1 discriminator 1 view .LVU2199
 7786              	.LBB317:
 7787              	.LBI317:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7788              		.loc 2 194 34 view .LVU2200
 7789              	.LBB318:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7790              		.loc 2 196 9 view .LVU2201
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7791              		.loc 2 198 9 view .LVU2202
 7792              		.syntax unified
 7793              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7794 00ce 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 272


 7795 00d2 83F31188 		msr basepri, r3											
 7796 00d6 BFF36F8F 		isb														
 7797 00da BFF34F8F 		dsb														
 7798              	
 7799              	@ 0 "" 2
 7800              		.thumb
 7801              		.syntax unified
 7802              	.L561:
 7803              	.LBE318:
 7804              	.LBE317:
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7805              		.loc 1 5067 17 discriminator 3 view .LVU2203
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7806              		.loc 1 5067 17 discriminator 3 view .LVU2204
 7807 00de FEE7     		b	.L561
 7808              	.L560:
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7809              		.loc 1 5067 94 discriminator 2 view .LVU2205
5069:ThirdParty/FreeRTOS/tasks.c ****                 {
 7810              		.loc 1 5069 17 view .LVU2206
5069:ThirdParty/FreeRTOS/tasks.c ****                 {
 7811              		.loc 1 5069 42 is_stmt 0 view .LVU2207
 7812 00e0 2A4B     		ldr	r3, .L574+4
 7813 00e2 1B68     		ldr	r3, [r3]
5069:ThirdParty/FreeRTOS/tasks.c ****                 {
 7814              		.loc 1 5069 19 view .LVU2208
 7815 00e4 002B     		cmp	r3, #0
 7816 00e6 3CD1     		bne	.L562
 7817              	.LBB319:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7818              		.loc 1 5071 21 is_stmt 1 view .LVU2209
 7819 00e8 7369     		ldr	r3, [r6, #20]
 7820              	.LVL549:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7821              		.loc 1 5071 21 view .LVU2210
 7822 00ea B068     		ldr	r0, [r6, #8]
 7823 00ec F168     		ldr	r1, [r6, #12]
 7824 00ee 8160     		str	r1, [r0, #8]
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7825              		.loc 1 5071 21 view .LVU2211
 7826 00f0 B068     		ldr	r0, [r6, #8]
 7827 00f2 4860     		str	r0, [r1, #4]
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7828              		.loc 1 5071 21 view .LVU2212
 7829 00f4 5968     		ldr	r1, [r3, #4]
 7830 00f6 301D     		adds	r0, r6, #4
 7831 00f8 8142     		cmp	r1, r0
 7832 00fa 2FD0     		beq	.L573
 7833              	.L563:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7834              		.loc 1 5071 21 discriminator 3 view .LVU2213
 7835 00fc 0021     		movs	r1, #0
 7836 00fe 7161     		str	r1, [r6, #20]
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7837              		.loc 1 5071 21 discriminator 3 view .LVU2214
 7838 0100 1968     		ldr	r1, [r3]
 7839 0102 0139     		subs	r1, r1, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 273


 7840 0104 1960     		str	r1, [r3]
 7841              	.LBE319:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7842              		.loc 1 5071 66 discriminator 3 view .LVU2215
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7843              		.loc 1 5072 21 view .LVU2216
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7844              		.loc 1 5072 21 view .LVU2217
 7845 0106 F36A     		ldr	r3, [r6, #44]
 7846              	.LVL550:
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7847              		.loc 1 5072 21 is_stmt 0 view .LVU2218
 7848 0108 0121     		movs	r1, #1
 7849 010a 9940     		lsls	r1, r1, r3
 7850 010c 204C     		ldr	r4, .L574+8
 7851 010e 2568     		ldr	r5, [r4]
 7852 0110 2943     		orrs	r1, r1, r5
 7853 0112 2160     		str	r1, [r4]
 7854              	.LBB320:
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7855              		.loc 1 5072 21 is_stmt 1 view .LVU2219
 7856 0114 1F49     		ldr	r1, .L574+12
 7857 0116 03EB8303 		add	r3, r3, r3, lsl #2
 7858 011a 01EB8303 		add	r3, r1, r3, lsl #2
 7859 011e 5B68     		ldr	r3, [r3, #4]
 7860              	.LVL551:
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7861              		.loc 1 5072 21 view .LVU2220
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7862              		.loc 1 5072 21 view .LVU2221
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7863              		.loc 1 5072 21 view .LVU2222
 7864 0120 B360     		str	r3, [r6, #8]
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7865              		.loc 1 5072 21 view .LVU2223
 7866 0122 9C68     		ldr	r4, [r3, #8]
 7867 0124 F460     		str	r4, [r6, #12]
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7868              		.loc 1 5072 21 view .LVU2224
 7869 0126 6060     		str	r0, [r4, #4]
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7870              		.loc 1 5072 21 view .LVU2225
 7871 0128 9860     		str	r0, [r3, #8]
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7872              		.loc 1 5072 21 view .LVU2226
 7873 012a F36A     		ldr	r3, [r6, #44]
 7874              	.LVL552:
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7875              		.loc 1 5072 21 is_stmt 0 view .LVU2227
 7876 012c 03EB8300 		add	r0, r3, r3, lsl #2
 7877 0130 8400     		lsls	r4, r0, #2
 7878 0132 01EB8000 		add	r0, r1, r0, lsl #2
 7879 0136 7061     		str	r0, [r6, #20]
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7880              		.loc 1 5072 21 is_stmt 1 view .LVU2228
 7881 0138 0859     		ldr	r0, [r1, r4]
 7882 013a 0130     		adds	r0, r0, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 274


 7883 013c 0851     		str	r0, [r1, r4]
 7884              	.LBE320:
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7885              		.loc 1 5072 21 view .LVU2229
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7886              		.loc 1 5072 51 view .LVU2230
 7887              	.LVL553:
 7888              	.L564:
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7889              		.loc 1 5078 89 discriminator 1 view .LVU2231
5081:ThirdParty/FreeRTOS/tasks.c ****                 {
 7890              		.loc 1 5081 17 view .LVU2232
5081:ThirdParty/FreeRTOS/tasks.c ****                 {
 7891              		.loc 1 5081 26 is_stmt 0 view .LVU2233
 7892 013e F16A     		ldr	r1, [r6, #44]
5081:ThirdParty/FreeRTOS/tasks.c ****                 {
 7893              		.loc 1 5081 53 view .LVU2234
 7894 0140 154B     		ldr	r3, .L574+16
 7895 0142 1B68     		ldr	r3, [r3]
 7896 0144 DB6A     		ldr	r3, [r3, #44]
5081:ThirdParty/FreeRTOS/tasks.c ****                 {
 7897              		.loc 1 5081 19 view .LVU2235
 7898 0146 9942     		cmp	r1, r3
 7899 0148 1BD9     		bls	.L568
5085:ThirdParty/FreeRTOS/tasks.c ****                     {
 7900              		.loc 1 5085 21 is_stmt 1 view .LVU2236
5085:ThirdParty/FreeRTOS/tasks.c ****                     {
 7901              		.loc 1 5085 23 is_stmt 0 view .LVU2237
 7902 014a 079B     		ldr	r3, [sp, #28]
 7903 014c 13B1     		cbz	r3, .L565
5087:ThirdParty/FreeRTOS/tasks.c ****                     }
 7904              		.loc 1 5087 25 is_stmt 1 view .LVU2238
5087:ThirdParty/FreeRTOS/tasks.c ****                     }
 7905              		.loc 1 5087 52 is_stmt 0 view .LVU2239
 7906 014e 0123     		movs	r3, #1
 7907 0150 0799     		ldr	r1, [sp, #28]
 7908 0152 0B60     		str	r3, [r1]
 7909              	.L565:
5093:ThirdParty/FreeRTOS/tasks.c ****                 }
 7910              		.loc 1 5093 21 is_stmt 1 view .LVU2240
5093:ThirdParty/FreeRTOS/tasks.c ****                 }
 7911              		.loc 1 5093 35 is_stmt 0 view .LVU2241
 7912 0154 0120     		movs	r0, #1
 7913 0156 114B     		ldr	r3, .L574+20
 7914 0158 1860     		str	r0, [r3]
 7915 015a 95E7     		b	.L558
 7916              	.LVL554:
 7917              	.L573:
 7918              	.LBB321:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7919              		.loc 1 5071 21 is_stmt 1 discriminator 1 view .LVU2242
 7920 015c F168     		ldr	r1, [r6, #12]
 7921 015e 5960     		str	r1, [r3, #4]
 7922 0160 CCE7     		b	.L563
 7923              	.LVL555:
 7924              	.L562:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 275


 7925              		.loc 1 5071 21 is_stmt 0 discriminator 1 view .LVU2243
 7926              	.LBE321:
 7927              	.LBB322:
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7928              		.loc 1 5078 21 is_stmt 1 view .LVU2244
 7929 0162 0F4B     		ldr	r3, .L574+24
 7930 0164 5968     		ldr	r1, [r3, #4]
 7931              	.LVL556:
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7932              		.loc 1 5078 21 view .LVU2245
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7933              		.loc 1 5078 21 view .LVU2246
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7934              		.loc 1 5078 21 view .LVU2247
 7935 0166 F161     		str	r1, [r6, #28]
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7936              		.loc 1 5078 21 view .LVU2248
 7937 0168 8C68     		ldr	r4, [r1, #8]
 7938 016a 3462     		str	r4, [r6, #32]
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7939              		.loc 1 5078 21 view .LVU2249
 7940 016c 06F11800 		add	r0, r6, #24
 7941 0170 6060     		str	r0, [r4, #4]
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7942              		.loc 1 5078 21 view .LVU2250
 7943 0172 8860     		str	r0, [r1, #8]
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7944              		.loc 1 5078 21 view .LVU2251
 7945 0174 B362     		str	r3, [r6, #40]
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7946              		.loc 1 5078 21 view .LVU2252
 7947 0176 1968     		ldr	r1, [r3]
 7948              	.LVL557:
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7949              		.loc 1 5078 21 is_stmt 0 view .LVU2253
 7950 0178 0131     		adds	r1, r1, #1
 7951 017a 1960     		str	r1, [r3]
 7952 017c DFE7     		b	.L564
 7953              	.LVL558:
 7954              	.L566:
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7955              		.loc 1 5078 21 view .LVU2254
 7956              	.LBE322:
5040:ThirdParty/FreeRTOS/tasks.c ****                     }
 7957              		.loc 1 5040 33 view .LVU2255
 7958 017e 0020     		movs	r0, #0
 7959 0180 82E7     		b	.L558
 7960              	.LVL559:
 7961              	.L568:
5040:ThirdParty/FreeRTOS/tasks.c ****                     }
 7962              		.loc 1 5040 33 view .LVU2256
 7963 0182 0120     		movs	r0, #1
 7964 0184 80E7     		b	.L558
 7965              	.L575:
 7966 0186 00BF     		.align	2
 7967              	.L574:
 7968 0188 00000000 		.word	xTickCount
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 276


 7969 018c 00000000 		.word	uxSchedulerSuspended
 7970 0190 00000000 		.word	uxTopReadyPriority
 7971 0194 00000000 		.word	pxReadyTasksLists
 7972 0198 00000000 		.word	pxCurrentTCB
 7973 019c 00000000 		.word	xYieldPending
 7974 01a0 00000000 		.word	xPendingReadyList
 7975              		.cfi_endproc
 7976              	.LFE60:
 7978              		.section	.text.vTaskGenericNotifyGiveFromISR,"ax",%progbits
 7979              		.align	1
 7980              		.global	vTaskGenericNotifyGiveFromISR
 7981              		.syntax unified
 7982              		.thumb
 7983              		.thumb_func
 7985              	vTaskGenericNotifyGiveFromISR:
 7986              	.LVL560:
 7987              	.LFB61:
5114:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7988              		.loc 1 5114 5 is_stmt 1 view -0
 7989              		.cfi_startproc
 7990              		@ args = 0, pretend = 0, frame = 0
 7991              		@ frame_needed = 0, uses_anonymous_args = 0
5114:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7992              		.loc 1 5114 5 is_stmt 0 view .LVU2258
 7993 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7994              	.LCFI58:
 7995              		.cfi_def_cfa_offset 24
 7996              		.cfi_offset 3, -24
 7997              		.cfi_offset 4, -20
 7998              		.cfi_offset 5, -16
 7999              		.cfi_offset 6, -12
 8000              		.cfi_offset 7, -8
 8001              		.cfi_offset 14, -4
5115:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 8002              		.loc 1 5115 9 is_stmt 1 view .LVU2259
5116:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 8003              		.loc 1 5116 9 view .LVU2260
5117:ThirdParty/FreeRTOS/tasks.c **** 
 8004              		.loc 1 5117 9 view .LVU2261
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 8005              		.loc 1 5119 9 view .LVU2262
 8006 0002 60B1     		cbz	r0, .L589
 8007 0004 0C46     		mov	r4, r1
 8008 0006 1546     		mov	r5, r2
 8009 0008 0646     		mov	r6, r0
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 8010              		.loc 1 5119 38 discriminator 2 view .LVU2263
5120:ThirdParty/FreeRTOS/tasks.c **** 
 8011              		.loc 1 5120 9 view .LVU2264
 8012 000a 89B1     		cbz	r1, .L579
5120:ThirdParty/FreeRTOS/tasks.c **** 
 8013              		.loc 1 5120 9 discriminator 1 view .LVU2265
 8014              	.LBB323:
 8015              	.LBI323:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8016              		.loc 2 194 34 view .LVU2266
 8017              	.LBB324:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 277


 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 8018              		.loc 2 196 9 view .LVU2267
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8019              		.loc 2 198 9 view .LVU2268
 8020              		.syntax unified
 8021              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8022 000c 4FF05003 			mov r3, #80												
 8023 0010 83F31188 		msr basepri, r3											
 8024 0014 BFF36F8F 		isb														
 8025 0018 BFF34F8F 		dsb														
 8026              	
 8027              	@ 0 "" 2
 8028              		.thumb
 8029              		.syntax unified
 8030              	.L580:
 8031              	.LBE324:
 8032              	.LBE323:
5120:ThirdParty/FreeRTOS/tasks.c **** 
 8033              		.loc 1 5120 9 discriminator 3 view .LVU2269
5120:ThirdParty/FreeRTOS/tasks.c **** 
 8034              		.loc 1 5120 9 discriminator 3 view .LVU2270
 8035 001c FEE7     		b	.L580
 8036              	.L589:
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 8037              		.loc 1 5119 9 discriminator 1 view .LVU2271
 8038              	.LBB325:
 8039              	.LBI325:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8040              		.loc 2 194 34 view .LVU2272
 8041              	.LBB326:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 8042              		.loc 2 196 9 view .LVU2273
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8043              		.loc 2 198 9 view .LVU2274
 8044              		.syntax unified
 8045              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8046 001e 4FF05003 			mov r3, #80												
 8047 0022 83F31188 		msr basepri, r3											
 8048 0026 BFF36F8F 		isb														
 8049 002a BFF34F8F 		dsb														
 8050              	
 8051              	@ 0 "" 2
 8052              		.thumb
 8053              		.syntax unified
 8054              	.L578:
 8055              	.LBE326:
 8056              	.LBE325:
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 8057              		.loc 1 5119 9 discriminator 3 view .LVU2275
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 8058              		.loc 1 5119 9 discriminator 3 view .LVU2276
 8059 002e FEE7     		b	.L578
 8060              	.L579:
5120:ThirdParty/FreeRTOS/tasks.c **** 
 8061              		.loc 1 5120 80 discriminator 2 view .LVU2277
5138:ThirdParty/FreeRTOS/tasks.c **** 
 8062              		.loc 1 5138 9 view .LVU2278
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 278


 8063 0030 FFF7FEFF 		bl	vPortValidateInterruptPriority
 8064              	.LVL561:
5140:ThirdParty/FreeRTOS/tasks.c **** 
 8065              		.loc 1 5140 9 view .LVU2279
5142:ThirdParty/FreeRTOS/tasks.c ****         {
 8066              		.loc 1 5142 9 view .LVU2280
 8067              	.LBB327:
 8068              	.LBI327:
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8069              		.loc 2 210 38 view .LVU2281
 8070              	.LBB328:
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 8071              		.loc 2 212 9 view .LVU2282
 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8072              		.loc 2 214 9 view .LVU2283
 8073              		.syntax unified
 8074              	@ 214 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8075 0034 EFF31181 			mrs r1, basepri											
 8076 0038 4FF05003 		mov r3, #80												
 8077 003c 83F31188 		msr basepri, r3											
 8078 0040 BFF36F8F 		isb														
 8079 0044 BFF34F8F 		dsb														
 8080              	
 8081              	@ 0 "" 2
 8082              	.LVL562:
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 8083              		.loc 2 226 9 view .LVU2284
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 8084              		.loc 2 226 9 is_stmt 0 view .LVU2285
 8085              		.thumb
 8086              		.syntax unified
 8087              	.LBE328:
 8088              	.LBE327:
5144:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 8089              		.loc 1 5144 13 is_stmt 1 view .LVU2286
5144:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 8090              		.loc 1 5144 35 is_stmt 0 view .LVU2287
 8091 0048 3219     		adds	r2, r6, r4
 8092 004a 92F85430 		ldrb	r3, [r2, #84]	@ zero_extendqisi2
 8093 004e DBB2     		uxtb	r3, r3
 8094              	.LVL563:
5145:ThirdParty/FreeRTOS/tasks.c **** 
 8095              		.loc 1 5145 13 is_stmt 1 view .LVU2288
5145:ThirdParty/FreeRTOS/tasks.c **** 
 8096              		.loc 1 5145 53 is_stmt 0 view .LVU2289
 8097 0050 0220     		movs	r0, #2
 8098 0052 82F85400 		strb	r0, [r2, #84]
5149:ThirdParty/FreeRTOS/tasks.c **** 
 8099              		.loc 1 5149 13 is_stmt 1 view .LVU2290
5149:ThirdParty/FreeRTOS/tasks.c **** 
 8100              		.loc 1 5149 37 is_stmt 0 view .LVU2291
 8101 0056 1434     		adds	r4, r4, #20
 8102              	.LVL564:
5149:ThirdParty/FreeRTOS/tasks.c **** 
 8103              		.loc 1 5149 37 view .LVU2292
 8104 0058 56F82420 		ldr	r2, [r6, r4, lsl #2]
5149:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 279


 8105              		.loc 1 5149 58 view .LVU2293
 8106 005c 0132     		adds	r2, r2, #1
 8107 005e 46F82420 		str	r2, [r6, r4, lsl #2]
5151:ThirdParty/FreeRTOS/tasks.c **** 
 8108              		.loc 1 5151 62 is_stmt 1 view .LVU2294
5155:ThirdParty/FreeRTOS/tasks.c ****             {
 8109              		.loc 1 5155 13 view .LVU2295
5155:ThirdParty/FreeRTOS/tasks.c ****             {
 8110              		.loc 1 5155 15 is_stmt 0 view .LVU2296
 8111 0062 012B     		cmp	r3, #1
 8112 0064 02D0     		beq	.L590
 8113              	.LVL565:
 8114              	.L581:
5188:ThirdParty/FreeRTOS/tasks.c ****                 }
 8115              		.loc 1 5188 45 is_stmt 1 view .LVU2297
5192:ThirdParty/FreeRTOS/tasks.c ****     }
 8116              		.loc 1 5192 9 view .LVU2298
 8117              	.LBB329:
 8118              	.LBI329:
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8119              		.loc 2 230 34 view .LVU2299
 8120              	.LBB330:
 8121              		.loc 2 232 9 view .LVU2300
 8122              		.syntax unified
 8123              	@ 232 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8124 0066 81F31188 			msr basepri, r1	
 8125              	@ 0 "" 2
 8126              		.thumb
 8127              		.syntax unified
 8128              	.LBE330:
 8129              	.LBE329:
5193:ThirdParty/FreeRTOS/tasks.c **** 
 8130              		.loc 1 5193 5 is_stmt 0 view .LVU2301
 8131 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8132              	.LVL566:
 8133              	.L590:
5158:ThirdParty/FreeRTOS/tasks.c **** 
 8134              		.loc 1 5158 17 is_stmt 1 view .LVU2302
 8135 006c B36A     		ldr	r3, [r6, #40]
 8136              	.LVL567:
5158:ThirdParty/FreeRTOS/tasks.c **** 
 8137              		.loc 1 5158 17 is_stmt 0 view .LVU2303
 8138 006e 43B1     		cbz	r3, .L582
5158:ThirdParty/FreeRTOS/tasks.c **** 
 8139              		.loc 1 5158 17 is_stmt 1 discriminator 1 view .LVU2304
 8140              	.LBB331:
 8141              	.LBI331:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8142              		.loc 2 194 34 view .LVU2305
 8143              	.LBB332:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 8144              		.loc 2 196 9 view .LVU2306
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8145              		.loc 2 198 9 view .LVU2307
 8146              		.syntax unified
 8147              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8148 0070 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 280


 8149 0074 83F31188 		msr basepri, r3											
 8150 0078 BFF36F8F 		isb														
 8151 007c BFF34F8F 		dsb														
 8152              	
 8153              	@ 0 "" 2
 8154              		.thumb
 8155              		.syntax unified
 8156              	.L583:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8157              		.loc 2 198 9 is_stmt 0 view .LVU2308
 8158              	.LBE332:
 8159              	.LBE331:
5158:ThirdParty/FreeRTOS/tasks.c **** 
 8160              		.loc 1 5158 17 is_stmt 1 discriminator 3 view .LVU2309
5158:ThirdParty/FreeRTOS/tasks.c **** 
 8161              		.loc 1 5158 17 discriminator 3 view .LVU2310
 8162 0080 FEE7     		b	.L583
 8163              	.L582:
5158:ThirdParty/FreeRTOS/tasks.c **** 
 8164              		.loc 1 5158 94 discriminator 2 view .LVU2311
5160:ThirdParty/FreeRTOS/tasks.c ****                 {
 8165              		.loc 1 5160 17 view .LVU2312
5160:ThirdParty/FreeRTOS/tasks.c ****                 {
 8166              		.loc 1 5160 42 is_stmt 0 view .LVU2313
 8167 0082 264B     		ldr	r3, .L592
 8168 0084 1B68     		ldr	r3, [r3]
5160:ThirdParty/FreeRTOS/tasks.c ****                 {
 8169              		.loc 1 5160 19 view .LVU2314
 8170 0086 002B     		cmp	r3, #0
 8171 0088 3AD1     		bne	.L584
 8172              	.LBB333:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8173              		.loc 1 5162 21 is_stmt 1 view .LVU2315
 8174 008a 7369     		ldr	r3, [r6, #20]
 8175              	.LVL568:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8176              		.loc 1 5162 21 view .LVU2316
 8177 008c B068     		ldr	r0, [r6, #8]
 8178 008e F268     		ldr	r2, [r6, #12]
 8179 0090 8260     		str	r2, [r0, #8]
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8180              		.loc 1 5162 21 view .LVU2317
 8181 0092 B068     		ldr	r0, [r6, #8]
 8182 0094 5060     		str	r0, [r2, #4]
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8183              		.loc 1 5162 21 view .LVU2318
 8184 0096 5A68     		ldr	r2, [r3, #4]
 8185 0098 301D     		adds	r0, r6, #4
 8186 009a 8242     		cmp	r2, r0
 8187 009c 2DD0     		beq	.L591
 8188              	.L585:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8189              		.loc 1 5162 21 discriminator 3 view .LVU2319
 8190 009e 0022     		movs	r2, #0
 8191 00a0 7261     		str	r2, [r6, #20]
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8192              		.loc 1 5162 21 discriminator 3 view .LVU2320
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 281


 8193 00a2 1A68     		ldr	r2, [r3]
 8194 00a4 013A     		subs	r2, r2, #1
 8195 00a6 1A60     		str	r2, [r3]
 8196              	.LBE333:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8197              		.loc 1 5162 66 discriminator 3 view .LVU2321
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8198              		.loc 1 5163 21 view .LVU2322
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8199              		.loc 1 5163 21 view .LVU2323
 8200 00a8 F36A     		ldr	r3, [r6, #44]
 8201              	.LVL569:
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8202              		.loc 1 5163 21 is_stmt 0 view .LVU2324
 8203 00aa 0122     		movs	r2, #1
 8204 00ac 9A40     		lsls	r2, r2, r3
 8205 00ae 1C4C     		ldr	r4, .L592+4
 8206 00b0 2768     		ldr	r7, [r4]
 8207 00b2 3A43     		orrs	r2, r2, r7
 8208 00b4 2260     		str	r2, [r4]
 8209              	.LBB334:
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8210              		.loc 1 5163 21 is_stmt 1 view .LVU2325
 8211 00b6 1B4A     		ldr	r2, .L592+8
 8212 00b8 03EB8303 		add	r3, r3, r3, lsl #2
 8213 00bc 02EB8303 		add	r3, r2, r3, lsl #2
 8214 00c0 5B68     		ldr	r3, [r3, #4]
 8215              	.LVL570:
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8216              		.loc 1 5163 21 view .LVU2326
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8217              		.loc 1 5163 21 view .LVU2327
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8218              		.loc 1 5163 21 view .LVU2328
 8219 00c2 B360     		str	r3, [r6, #8]
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8220              		.loc 1 5163 21 view .LVU2329
 8221 00c4 9C68     		ldr	r4, [r3, #8]
 8222 00c6 F460     		str	r4, [r6, #12]
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8223              		.loc 1 5163 21 view .LVU2330
 8224 00c8 6060     		str	r0, [r4, #4]
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8225              		.loc 1 5163 21 view .LVU2331
 8226 00ca 9860     		str	r0, [r3, #8]
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8227              		.loc 1 5163 21 view .LVU2332
 8228 00cc F36A     		ldr	r3, [r6, #44]
 8229              	.LVL571:
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8230              		.loc 1 5163 21 is_stmt 0 view .LVU2333
 8231 00ce 03EB8300 		add	r0, r3, r3, lsl #2
 8232 00d2 8400     		lsls	r4, r0, #2
 8233 00d4 02EB8000 		add	r0, r2, r0, lsl #2
 8234 00d8 7061     		str	r0, [r6, #20]
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8235              		.loc 1 5163 21 is_stmt 1 view .LVU2334
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 282


 8236 00da 1059     		ldr	r0, [r2, r4]
 8237 00dc 0130     		adds	r0, r0, #1
 8238 00de 1051     		str	r0, [r2, r4]
 8239              	.LBE334:
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8240              		.loc 1 5163 21 view .LVU2335
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8241              		.loc 1 5163 51 view .LVU2336
 8242              	.LVL572:
 8243              	.L586:
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8244              		.loc 1 5169 89 discriminator 1 view .LVU2337
5172:ThirdParty/FreeRTOS/tasks.c ****                 {
 8245              		.loc 1 5172 17 view .LVU2338
5172:ThirdParty/FreeRTOS/tasks.c ****                 {
 8246              		.loc 1 5172 26 is_stmt 0 view .LVU2339
 8247 00e0 F26A     		ldr	r2, [r6, #44]
5172:ThirdParty/FreeRTOS/tasks.c ****                 {
 8248              		.loc 1 5172 53 view .LVU2340
 8249 00e2 114B     		ldr	r3, .L592+12
 8250 00e4 1B68     		ldr	r3, [r3]
 8251 00e6 DB6A     		ldr	r3, [r3, #44]
5172:ThirdParty/FreeRTOS/tasks.c ****                 {
 8252              		.loc 1 5172 19 view .LVU2341
 8253 00e8 9A42     		cmp	r2, r3
 8254 00ea BCD9     		bls	.L581
5176:ThirdParty/FreeRTOS/tasks.c ****                     {
 8255              		.loc 1 5176 21 is_stmt 1 view .LVU2342
5176:ThirdParty/FreeRTOS/tasks.c ****                     {
 8256              		.loc 1 5176 23 is_stmt 0 view .LVU2343
 8257 00ec 0DB1     		cbz	r5, .L587
5178:ThirdParty/FreeRTOS/tasks.c ****                     }
 8258              		.loc 1 5178 25 is_stmt 1 view .LVU2344
5178:ThirdParty/FreeRTOS/tasks.c ****                     }
 8259              		.loc 1 5178 52 is_stmt 0 view .LVU2345
 8260 00ee 0123     		movs	r3, #1
 8261 00f0 2B60     		str	r3, [r5]
 8262              	.L587:
5184:ThirdParty/FreeRTOS/tasks.c ****                 }
 8263              		.loc 1 5184 21 is_stmt 1 view .LVU2346
5184:ThirdParty/FreeRTOS/tasks.c ****                 }
 8264              		.loc 1 5184 35 is_stmt 0 view .LVU2347
 8265 00f2 0E4B     		ldr	r3, .L592+16
 8266 00f4 0122     		movs	r2, #1
 8267 00f6 1A60     		str	r2, [r3]
 8268 00f8 B5E7     		b	.L581
 8269              	.LVL573:
 8270              	.L591:
 8271              	.LBB335:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8272              		.loc 1 5162 21 is_stmt 1 discriminator 1 view .LVU2348
 8273 00fa F268     		ldr	r2, [r6, #12]
 8274 00fc 5A60     		str	r2, [r3, #4]
 8275 00fe CEE7     		b	.L585
 8276              	.LVL574:
 8277              	.L584:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 283


 8278              		.loc 1 5162 21 is_stmt 0 discriminator 1 view .LVU2349
 8279              	.LBE335:
 8280              	.LBB336:
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8281              		.loc 1 5169 21 is_stmt 1 view .LVU2350
 8282 0100 0B4B     		ldr	r3, .L592+20
 8283 0102 5A68     		ldr	r2, [r3, #4]
 8284              	.LVL575:
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8285              		.loc 1 5169 21 view .LVU2351
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8286              		.loc 1 5169 21 view .LVU2352
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8287              		.loc 1 5169 21 view .LVU2353
 8288 0104 F261     		str	r2, [r6, #28]
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8289              		.loc 1 5169 21 view .LVU2354
 8290 0106 9468     		ldr	r4, [r2, #8]
 8291 0108 3462     		str	r4, [r6, #32]
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8292              		.loc 1 5169 21 view .LVU2355
 8293 010a 06F11800 		add	r0, r6, #24
 8294 010e 6060     		str	r0, [r4, #4]
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8295              		.loc 1 5169 21 view .LVU2356
 8296 0110 9060     		str	r0, [r2, #8]
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8297              		.loc 1 5169 21 view .LVU2357
 8298 0112 B362     		str	r3, [r6, #40]
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8299              		.loc 1 5169 21 view .LVU2358
 8300 0114 1A68     		ldr	r2, [r3]
 8301              	.LVL576:
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8302              		.loc 1 5169 21 is_stmt 0 view .LVU2359
 8303 0116 0132     		adds	r2, r2, #1
 8304 0118 1A60     		str	r2, [r3]
 8305 011a E1E7     		b	.L586
 8306              	.L593:
 8307              		.align	2
 8308              	.L592:
 8309 011c 00000000 		.word	uxSchedulerSuspended
 8310 0120 00000000 		.word	uxTopReadyPriority
 8311 0124 00000000 		.word	pxReadyTasksLists
 8312 0128 00000000 		.word	pxCurrentTCB
 8313 012c 00000000 		.word	xYieldPending
 8314 0130 00000000 		.word	xPendingReadyList
 8315              	.LBE336:
 8316              		.cfi_endproc
 8317              	.LFE61:
 8319              		.section	.text.xTaskGenericNotifyStateClear,"ax",%progbits
 8320              		.align	1
 8321              		.global	xTaskGenericNotifyStateClear
 8322              		.syntax unified
 8323              		.thumb
 8324              		.thumb_func
 8326              	xTaskGenericNotifyStateClear:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 284


 8327              	.LVL577:
 8328              	.LFB62:
5202:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 8329              		.loc 1 5202 5 is_stmt 1 view -0
 8330              		.cfi_startproc
 8331              		@ args = 0, pretend = 0, frame = 0
 8332              		@ frame_needed = 0, uses_anonymous_args = 0
5202:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 8333              		.loc 1 5202 5 is_stmt 0 view .LVU2361
 8334 0000 38B5     		push	{r3, r4, r5, lr}
 8335              	.LCFI59:
 8336              		.cfi_def_cfa_offset 16
 8337              		.cfi_offset 3, -16
 8338              		.cfi_offset 4, -12
 8339              		.cfi_offset 5, -8
 8340              		.cfi_offset 14, -4
5203:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 8341              		.loc 1 5203 9 is_stmt 1 view .LVU2362
5204:ThirdParty/FreeRTOS/tasks.c **** 
 8342              		.loc 1 5204 9 view .LVU2363
5206:ThirdParty/FreeRTOS/tasks.c **** 
 8343              		.loc 1 5206 9 view .LVU2364
 8344 0002 41B1     		cbz	r1, .L595
5206:ThirdParty/FreeRTOS/tasks.c **** 
 8345              		.loc 1 5206 9 discriminator 1 view .LVU2365
 8346              	.LBB337:
 8347              	.LBI337:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8348              		.loc 2 194 34 view .LVU2366
 8349              	.LBB338:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 8350              		.loc 2 196 9 view .LVU2367
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8351              		.loc 2 198 9 view .LVU2368
 8352              		.syntax unified
 8353              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8354 0004 4FF05003 			mov r3, #80												
 8355 0008 83F31188 		msr basepri, r3											
 8356 000c BFF36F8F 		isb														
 8357 0010 BFF34F8F 		dsb														
 8358              	
 8359              	@ 0 "" 2
 8360              		.thumb
 8361              		.syntax unified
 8362              	.L596:
 8363              	.LBE338:
 8364              	.LBE337:
5206:ThirdParty/FreeRTOS/tasks.c **** 
 8365              		.loc 1 5206 9 discriminator 3 view .LVU2369
5206:ThirdParty/FreeRTOS/tasks.c **** 
 8366              		.loc 1 5206 9 discriminator 3 view .LVU2370
 8367 0014 FEE7     		b	.L596
 8368              	.L595:
 8369 0016 0446     		mov	r4, r0
 8370 0018 0D46     		mov	r5, r1
5206:ThirdParty/FreeRTOS/tasks.c **** 
 8371              		.loc 1 5206 79 discriminator 2 view .LVU2371
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 285


5210:ThirdParty/FreeRTOS/tasks.c **** 
 8372              		.loc 1 5210 9 view .LVU2372
5210:ThirdParty/FreeRTOS/tasks.c **** 
 8373              		.loc 1 5210 17 is_stmt 0 view .LVU2373
 8374 001a 60B1     		cbz	r0, .L601
 8375              	.LVL578:
 8376              	.L597:
5212:ThirdParty/FreeRTOS/tasks.c ****         {
 8377              		.loc 1 5212 9 is_stmt 1 view .LVU2374
 8378 001c FFF7FEFF 		bl	vPortEnterCritical
 8379              	.LVL579:
5214:ThirdParty/FreeRTOS/tasks.c ****             {
 8380              		.loc 1 5214 13 view .LVU2375
5214:ThirdParty/FreeRTOS/tasks.c ****             {
 8381              		.loc 1 5214 37 is_stmt 0 view .LVU2376
 8382 0020 6319     		adds	r3, r4, r5
 8383 0022 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 8384 0026 DBB2     		uxtb	r3, r3
5214:ThirdParty/FreeRTOS/tasks.c ****             {
 8385              		.loc 1 5214 15 view .LVU2377
 8386 0028 022B     		cmp	r3, #2
 8387 002a 07D0     		beq	.L602
5221:ThirdParty/FreeRTOS/tasks.c ****             }
 8388              		.loc 1 5221 25 view .LVU2378
 8389 002c 0024     		movs	r4, #0
 8390              	.LVL580:
 8391              	.L598:
5224:ThirdParty/FreeRTOS/tasks.c **** 
 8392              		.loc 1 5224 9 is_stmt 1 view .LVU2379
 8393 002e FFF7FEFF 		bl	vPortExitCritical
 8394              	.LVL581:
5226:ThirdParty/FreeRTOS/tasks.c ****     }
 8395              		.loc 1 5226 9 view .LVU2380
5227:ThirdParty/FreeRTOS/tasks.c **** 
 8396              		.loc 1 5227 5 is_stmt 0 view .LVU2381
 8397 0032 2046     		mov	r0, r4
 8398 0034 38BD     		pop	{r3, r4, r5, pc}
 8399              	.LVL582:
 8400              	.L601:
5210:ThirdParty/FreeRTOS/tasks.c **** 
 8401              		.loc 1 5210 17 discriminator 1 view .LVU2382
 8402 0036 044B     		ldr	r3, .L603
 8403 0038 1C68     		ldr	r4, [r3]
 8404              	.LVL583:
5210:ThirdParty/FreeRTOS/tasks.c **** 
 8405              		.loc 1 5210 17 discriminator 1 view .LVU2383
 8406 003a EFE7     		b	.L597
 8407              	.LVL584:
 8408              	.L602:
5216:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 8409              		.loc 1 5216 17 is_stmt 1 view .LVU2384
5216:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 8410              		.loc 1 5216 56 is_stmt 0 view .LVU2385
 8411 003c 2C44     		add	r4, r4, r5
 8412              	.LVL585:
5216:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 8413              		.loc 1 5216 56 view .LVU2386
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 286


 8414 003e 0023     		movs	r3, #0
 8415 0040 84F85430 		strb	r3, [r4, #84]
5217:ThirdParty/FreeRTOS/tasks.c ****             }
 8416              		.loc 1 5217 17 is_stmt 1 view .LVU2387
 8417              	.LVL586:
5217:ThirdParty/FreeRTOS/tasks.c ****             }
 8418              		.loc 1 5217 25 is_stmt 0 view .LVU2388
 8419 0044 0124     		movs	r4, #1
 8420 0046 F2E7     		b	.L598
 8421              	.L604:
 8422              		.align	2
 8423              	.L603:
 8424 0048 00000000 		.word	pxCurrentTCB
 8425              		.cfi_endproc
 8426              	.LFE62:
 8428              		.section	.text.ulTaskGenericNotifyValueClear,"ax",%progbits
 8429              		.align	1
 8430              		.global	ulTaskGenericNotifyValueClear
 8431              		.syntax unified
 8432              		.thumb
 8433              		.thumb_func
 8435              	ulTaskGenericNotifyValueClear:
 8436              	.LVL587:
 8437              	.LFB63:
5237:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 8438              		.loc 1 5237 5 is_stmt 1 view -0
 8439              		.cfi_startproc
 8440              		@ args = 0, pretend = 0, frame = 0
 8441              		@ frame_needed = 0, uses_anonymous_args = 0
5237:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 8442              		.loc 1 5237 5 is_stmt 0 view .LVU2390
 8443 0000 70B5     		push	{r4, r5, r6, lr}
 8444              	.LCFI60:
 8445              		.cfi_def_cfa_offset 16
 8446              		.cfi_offset 4, -16
 8447              		.cfi_offset 5, -12
 8448              		.cfi_offset 6, -8
 8449              		.cfi_offset 14, -4
 8450 0002 0C46     		mov	r4, r1
 8451 0004 1646     		mov	r6, r2
5238:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 8452              		.loc 1 5238 9 is_stmt 1 view .LVU2391
5239:ThirdParty/FreeRTOS/tasks.c **** 
 8453              		.loc 1 5239 9 view .LVU2392
5243:ThirdParty/FreeRTOS/tasks.c **** 
 8454              		.loc 1 5243 9 view .LVU2393
5243:ThirdParty/FreeRTOS/tasks.c **** 
 8455              		.loc 1 5243 17 is_stmt 0 view .LVU2394
 8456 0006 0546     		mov	r5, r0
 8457 0008 78B1     		cbz	r0, .L608
 8458              	.LVL588:
 8459              	.L606:
5245:ThirdParty/FreeRTOS/tasks.c ****         {
 8460              		.loc 1 5245 9 is_stmt 1 view .LVU2395
 8461 000a FFF7FEFF 		bl	vPortEnterCritical
 8462              	.LVL589:
5249:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 287


 8463              		.loc 1 5249 13 view .LVU2396
5249:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 8464              		.loc 1 5249 22 is_stmt 0 view .LVU2397
 8465 000e 04F11401 		add	r1, r4, #20
 8466 0012 55F82140 		ldr	r4, [r5, r1, lsl #2]
 8467              	.LVL590:
5250:ThirdParty/FreeRTOS/tasks.c ****         }
 8468              		.loc 1 5250 13 is_stmt 1 view .LVU2398
5250:ThirdParty/FreeRTOS/tasks.c ****         }
 8469              		.loc 1 5250 35 is_stmt 0 view .LVU2399
 8470 0016 55F82130 		ldr	r3, [r5, r1, lsl #2]
5250:ThirdParty/FreeRTOS/tasks.c ****         }
 8471              		.loc 1 5250 54 view .LVU2400
 8472 001a 23EA0603 		bic	r3, r3, r6
 8473 001e 45F82130 		str	r3, [r5, r1, lsl #2]
5252:ThirdParty/FreeRTOS/tasks.c **** 
 8474              		.loc 1 5252 9 is_stmt 1 view .LVU2401
 8475 0022 FFF7FEFF 		bl	vPortExitCritical
 8476              	.LVL591:
5254:ThirdParty/FreeRTOS/tasks.c ****     }
 8477              		.loc 1 5254 9 view .LVU2402
5255:ThirdParty/FreeRTOS/tasks.c **** 
 8478              		.loc 1 5255 5 is_stmt 0 view .LVU2403
 8479 0026 2046     		mov	r0, r4
 8480 0028 70BD     		pop	{r4, r5, r6, pc}
 8481              	.LVL592:
 8482              	.L608:
5243:ThirdParty/FreeRTOS/tasks.c **** 
 8483              		.loc 1 5243 17 discriminator 1 view .LVU2404
 8484 002a 014B     		ldr	r3, .L609
 8485 002c 1D68     		ldr	r5, [r3]
 8486              	.LVL593:
5243:ThirdParty/FreeRTOS/tasks.c **** 
 8487              		.loc 1 5243 17 discriminator 1 view .LVU2405
 8488 002e ECE7     		b	.L606
 8489              	.L610:
 8490              		.align	2
 8491              	.L609:
 8492 0030 00000000 		.word	pxCurrentTCB
 8493              		.cfi_endproc
 8494              	.LFE63:
 8496              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 8497              		.align	2
 8500              	uxSchedulerSuspended:
 8501 0000 00000000 		.space	4
 8502              		.global	uxTopUsedPriority
 8503              		.section	.rodata.uxTopUsedPriority,"a"
 8504              		.align	2
 8507              	uxTopUsedPriority:
 8508 0000 04000000 		.word	4
 8509              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 8510              		.align	2
 8513              	xIdleTaskHandle:
 8514 0000 00000000 		.space	4
 8515              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 8516              		.align	2
 8519              	xNextTaskUnblockTime:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 288


 8520 0000 00000000 		.space	4
 8521              		.section	.bss.uxTaskNumber,"aw",%nobits
 8522              		.align	2
 8525              	uxTaskNumber:
 8526 0000 00000000 		.space	4
 8527              		.section	.bss.xNumOfOverflows,"aw",%nobits
 8528              		.align	2
 8531              	xNumOfOverflows:
 8532 0000 00000000 		.space	4
 8533              		.section	.bss.xYieldPending,"aw",%nobits
 8534              		.align	2
 8537              	xYieldPending:
 8538 0000 00000000 		.space	4
 8539              		.section	.bss.xPendedTicks,"aw",%nobits
 8540              		.align	2
 8543              	xPendedTicks:
 8544 0000 00000000 		.space	4
 8545              		.section	.bss.xSchedulerRunning,"aw",%nobits
 8546              		.align	2
 8549              	xSchedulerRunning:
 8550 0000 00000000 		.space	4
 8551              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 8552              		.align	2
 8555              	uxTopReadyPriority:
 8556 0000 00000000 		.space	4
 8557              		.section	.bss.xTickCount,"aw",%nobits
 8558              		.align	2
 8561              	xTickCount:
 8562 0000 00000000 		.space	4
 8563              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 8564              		.align	2
 8567              	uxCurrentNumberOfTasks:
 8568 0000 00000000 		.space	4
 8569              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 8570              		.align	2
 8573              	xSuspendedTaskList:
 8574 0000 00000000 		.space	20
 8574      00000000 
 8574      00000000 
 8574      00000000 
 8574      00000000 
 8575              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 8576              		.align	2
 8579              	uxDeletedTasksWaitingCleanUp:
 8580 0000 00000000 		.space	4
 8581              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 8582              		.align	2
 8585              	xTasksWaitingTermination:
 8586 0000 00000000 		.space	20
 8586      00000000 
 8586      00000000 
 8586      00000000 
 8586      00000000 
 8587              		.section	.bss.xPendingReadyList,"aw",%nobits
 8588              		.align	2
 8591              	xPendingReadyList:
 8592 0000 00000000 		.space	20
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 289


 8592      00000000 
 8592      00000000 
 8592      00000000 
 8592      00000000 
 8593              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 8594              		.align	2
 8597              	pxOverflowDelayedTaskList:
 8598 0000 00000000 		.space	4
 8599              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 8600              		.align	2
 8603              	pxDelayedTaskList:
 8604 0000 00000000 		.space	4
 8605              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 8606              		.align	2
 8609              	xDelayedTaskList2:
 8610 0000 00000000 		.space	20
 8610      00000000 
 8610      00000000 
 8610      00000000 
 8610      00000000 
 8611              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 8612              		.align	2
 8615              	xDelayedTaskList1:
 8616 0000 00000000 		.space	20
 8616      00000000 
 8616      00000000 
 8616      00000000 
 8616      00000000 
 8617              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 8618              		.align	2
 8621              	pxReadyTasksLists:
 8622 0000 00000000 		.space	100
 8622      00000000 
 8622      00000000 
 8622      00000000 
 8622      00000000 
 8623              		.global	pxCurrentTCB
 8624              		.section	.bss.pxCurrentTCB,"aw",%nobits
 8625              		.align	2
 8628              	pxCurrentTCB:
 8629 0000 00000000 		.space	4
 8630              		.text
 8631              	.Letext0:
 8632              		.file 3 "C:/ARM GNU Toolchain/lib/gcc/arm-none-eabi/13.3.1/include/stddef.h"
 8633              		.file 4 "C:/ARM GNU Toolchain/arm-none-eabi/include/machine/_default_types.h"
 8634              		.file 5 "C:/ARM GNU Toolchain/arm-none-eabi/include/sys/_stdint.h"
 8635              		.file 6 "ThirdParty/FreeRTOS/include/projdefs.h"
 8636              		.file 7 "ThirdParty/FreeRTOS/include/list.h"
 8637              		.file 8 "ThirdParty/FreeRTOS/include/task.h"
 8638              		.file 9 "ThirdParty/FreeRTOS/include/portable.h"
 8639              		.file 10 "ThirdParty/FreeRTOS/include/timers.h"
 8640              		.file 11 "C:/ARM GNU Toolchain/arm-none-eabi/include/string.h"
 8641              		.file 12 "<built-in>"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 290


DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:21     .text.prvTaskIsTaskSuspended:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:26     .text.prvTaskIsTaskSuspended:00000000 prvTaskIsTaskSuspended
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:112    .text.prvTaskIsTaskSuspended:00000038 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8573   .bss.xSuspendedTaskList:00000000 xSuspendedTaskList
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8591   .bss.xPendingReadyList:00000000 xPendingReadyList
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:118    .text.prvTaskCheckFreeStackSpace:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:123    .text.prvTaskCheckFreeStackSpace:00000000 prvTaskCheckFreeStackSpace
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:166    .text.prvResetNextTaskUnblockTime:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:171    .text.prvResetNextTaskUnblockTime:00000000 prvResetNextTaskUnblockTime
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:206    .text.prvResetNextTaskUnblockTime:00000020 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8603   .bss.pxDelayedTaskList:00000000 pxDelayedTaskList
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8519   .bss.xNextTaskUnblockTime:00000000 xNextTaskUnblockTime
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:212    .text.prvDeleteTCB:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:217    .text.prvDeleteTCB:00000000 prvDeleteTCB
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:249    .text.prvInitialiseNewTask:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:254    .text.prvInitialiseNewTask:00000000 prvInitialiseNewTask
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:422    .text.prvInitialiseTaskLists:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:427    .text.prvInitialiseTaskLists:00000000 prvInitialiseTaskLists
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:500    .text.prvInitialiseTaskLists:00000048 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8621   .bss.pxReadyTasksLists:00000000 pxReadyTasksLists
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8615   .bss.xDelayedTaskList1:00000000 xDelayedTaskList1
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8609   .bss.xDelayedTaskList2:00000000 xDelayedTaskList2
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8585   .bss.xTasksWaitingTermination:00000000 xTasksWaitingTermination
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8597   .bss.pxOverflowDelayedTaskList:00000000 pxOverflowDelayedTaskList
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:512    .text.prvAddNewTaskToReadyList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:517    .text.prvAddNewTaskToReadyList:00000000 prvAddNewTaskToReadyList
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:682    .text.prvAddNewTaskToReadyList:000000b0 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8567   .bss.uxCurrentNumberOfTasks:00000000 uxCurrentNumberOfTasks
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8628   .bss.pxCurrentTCB:00000000 pxCurrentTCB
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8549   .bss.xSchedulerRunning:00000000 xSchedulerRunning
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8525   .bss.uxTaskNumber:00000000 uxTaskNumber
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8555   .bss.uxTopReadyPriority:00000000 uxTopReadyPriority
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:692    .text.prvCheckTasksWaitingTermination:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:697    .text.prvCheckTasksWaitingTermination:00000000 prvCheckTasksWaitingTermination
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:770    .text.prvCheckTasksWaitingTermination:00000040 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8579   .bss.uxDeletedTasksWaitingCleanUp:00000000 uxDeletedTasksWaitingCleanUp
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:777    .text.prvIdleTask:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:782    .text.prvIdleTask:00000000 prvIdleTask
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:831    .text.prvIdleTask:00000024 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:836    .text.prvAddCurrentTaskToDelayedList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:841    .text.prvAddCurrentTaskToDelayedList:00000000 prvAddCurrentTaskToDelayedList
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:987    .text.prvAddCurrentTaskToDelayedList:00000094 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8561   .bss.xTickCount:00000000 xTickCount
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:998    .text.xTaskCreate:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1004   .text.xTaskCreate:00000000 xTaskCreate
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1121   .text.vTaskDelete:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1127   .text.vTaskDelete:00000000 vTaskDelete
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1318   .text.vTaskDelete:000000c4 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8500   .bss.uxSchedulerSuspended:00000000 uxSchedulerSuspended
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1331   .text.eTaskGetState:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1337   .text.eTaskGetState:00000000 eTaskGetState
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1516   .text.eTaskGetState:00000088 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1525   .text.uxTaskPriorityGet:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1531   .text.uxTaskPriorityGet:00000000 uxTaskPriorityGet
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1577   .text.uxTaskPriorityGet:0000001c $d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 291


C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1582   .text.uxTaskPriorityGetFromISR:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1588   .text.uxTaskPriorityGetFromISR:00000000 uxTaskPriorityGetFromISR
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1667   .text.uxTaskPriorityGetFromISR:0000002c $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1672   .text.vTaskPrioritySet:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1678   .text.vTaskPrioritySet:00000000 vTaskPrioritySet
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1943   .text.vTaskPrioritySet:000000f4 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1950   .text.vTaskResume:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:1956   .text.vTaskResume:00000000 vTaskResume
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2109   .text.vTaskResume:00000094 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2116   .text.xTaskResumeFromISR:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2122   .text.xTaskResumeFromISR:00000000 xTaskResumeFromISR
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2322   .text.xTaskResumeFromISR:000000b4 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8537   .bss.xYieldPending:00000000 xYieldPending
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2332   .rodata.vTaskStartScheduler.str1.4:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2336   .text.vTaskStartScheduler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2342   .text.vTaskStartScheduler:00000000 vTaskStartScheduler
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2471   .text.vTaskStartScheduler:00000070 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8513   .bss.xIdleTaskHandle:00000000 xIdleTaskHandle
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8507   .rodata.uxTopUsedPriority:00000000 uxTopUsedPriority
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2482   .text.vTaskEndScheduler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2488   .text.vTaskEndScheduler:00000000 vTaskEndScheduler
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2531   .text.vTaskEndScheduler:00000020 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2536   .text.vTaskSuspendAll:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2542   .text.vTaskSuspendAll:00000000 vTaskSuspendAll
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2561   .text.vTaskSuspendAll:0000000c $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2566   .text.xTaskGetTickCount:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2572   .text.xTaskGetTickCount:00000000 xTaskGetTickCount
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2593   .text.xTaskGetTickCount:00000008 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2598   .text.xTaskGetTickCountFromISR:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2604   .text.xTaskGetTickCountFromISR:00000000 xTaskGetTickCountFromISR
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2633   .text.xTaskGetTickCountFromISR:0000000c $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2638   .text.uxTaskGetNumberOfTasks:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2644   .text.uxTaskGetNumberOfTasks:00000000 uxTaskGetNumberOfTasks
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2660   .text.uxTaskGetNumberOfTasks:00000008 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2665   .text.pcTaskGetName:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2671   .text.pcTaskGetName:00000000 pcTaskGetName
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2728   .text.pcTaskGetName:00000024 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2733   .text.xTaskIncrementTick:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:2739   .text.xTaskIncrementTick:00000000 xTaskIncrementTick
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3087   .text.xTaskIncrementTick:0000014c $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8531   .bss.xNumOfOverflows:00000000 xNumOfOverflows
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8543   .bss.xPendedTicks:00000000 xPendedTicks
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3102   .text.xTaskResumeAll:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3108   .text.xTaskResumeAll:00000000 xTaskResumeAll
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3432   .text.xTaskResumeAll:0000012c $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3444   .text.xTaskDelayUntil:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3450   .text.xTaskDelayUntil:00000000 xTaskDelayUntil
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3688   .text.xTaskDelayUntil:000000a8 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3694   .text.vTaskDelay:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3700   .text.vTaskDelay:00000000 vTaskDelay
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3790   .text.vTaskDelay:00000048 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3795   .text.xTaskCatchUpTicks:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3801   .text.xTaskCatchUpTicks:00000000 xTaskCatchUpTicks
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3872   .text.xTaskCatchUpTicks:00000038 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3878   .text.vTaskSwitchContext:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:3884   .text.vTaskSwitchContext:00000000 vTaskSwitchContext
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4025   .text.vTaskSwitchContext:00000084 $d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 292


C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4036   .text.vTaskSuspend:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4042   .text.vTaskSuspend:00000000 vTaskSuspend
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4267   .text.vTaskSuspend:000000dc $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4278   .text.vTaskPlaceOnEventList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4284   .text.vTaskPlaceOnEventList:00000000 vTaskPlaceOnEventList
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4349   .text.vTaskPlaceOnEventList:0000002c $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4354   .text.vTaskPlaceOnUnorderedEventList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4360   .text.vTaskPlaceOnUnorderedEventList:00000000 vTaskPlaceOnUnorderedEventList
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4487   .text.vTaskPlaceOnUnorderedEventList:00000068 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4493   .text.vTaskPlaceOnEventListRestricted:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4499   .text.vTaskPlaceOnEventListRestricted:00000000 vTaskPlaceOnEventListRestricted
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4597   .text.vTaskPlaceOnEventListRestricted:00000050 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4602   .text.xTaskRemoveFromEventList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4608   .text.xTaskRemoveFromEventList:00000000 xTaskRemoveFromEventList
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4861   .text.xTaskRemoveFromEventList:000000d8 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4871   .text.vTaskRemoveFromUnorderedEventList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:4877   .text.vTaskRemoveFromUnorderedEventList:00000000 vTaskRemoveFromUnorderedEventList
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5103   .text.vTaskRemoveFromUnorderedEventList:000000cc $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5113   .text.vTaskSetTimeOutState:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5119   .text.vTaskSetTimeOutState:00000000 vTaskSetTimeOutState
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5186   .text.vTaskSetTimeOutState:00000030 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5192   .text.vTaskInternalSetTimeOutState:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5198   .text.vTaskInternalSetTimeOutState:00000000 vTaskInternalSetTimeOutState
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5221   .text.vTaskInternalSetTimeOutState:00000010 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5227   .text.xTaskCheckForTimeOut:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5233   .text.xTaskCheckForTimeOut:00000000 xTaskCheckForTimeOut
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5410   .text.xTaskCheckForTimeOut:00000080 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5416   .text.vTaskMissedYield:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5422   .text.vTaskMissedYield:00000000 vTaskMissedYield
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5439   .text.vTaskMissedYield:00000008 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5444   .text.uxTaskGetTaskNumber:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5450   .text.uxTaskGetTaskNumber:00000000 uxTaskGetTaskNumber
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5483   .text.vTaskSetTaskNumber:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5489   .text.vTaskSetTaskNumber:00000000 vTaskSetTaskNumber
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5514   .text.vTaskGetInfo:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5520   .text.vTaskGetInfo:00000000 vTaskGetInfo
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5667   .text.vTaskGetInfo:00000074 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5672   .text.prvListTasksWithinSingleList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5677   .text.prvListTasksWithinSingleList:00000000 prvListTasksWithinSingleList
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5793   .text.uxTaskGetSystemState:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5799   .text.uxTaskGetSystemState:00000000 uxTaskGetSystemState
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5937   .text.uxTaskGetSystemState:00000098 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5947   .text.xTaskGetCurrentTaskHandle:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5953   .text.xTaskGetCurrentTaskHandle:00000000 xTaskGetCurrentTaskHandle
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5972   .text.xTaskGetCurrentTaskHandle:00000008 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5977   .text.xTaskGetSchedulerState:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:5983   .text.xTaskGetSchedulerState:00000000 xTaskGetSchedulerState
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6021   .text.xTaskGetSchedulerState:00000018 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6027   .text.xTaskPriorityInherit:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6033   .text.xTaskPriorityInherit:00000000 xTaskPriorityInherit
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6220   .text.xTaskPriorityInherit:000000b8 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6227   .text.xTaskPriorityDisinherit:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6233   .text.xTaskPriorityDisinherit:00000000 xTaskPriorityDisinherit
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6441   .text.xTaskPriorityDisinherit:000000b0 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6448   .text.vTaskPriorityDisinheritAfterTimeout:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6454   .text.vTaskPriorityDisinheritAfterTimeout:00000000 vTaskPriorityDisinheritAfterTimeout
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6671   .text.vTaskPriorityDisinheritAfterTimeout:000000c0 $d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 293


C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6678   .text.uxTaskResetEventItemValue:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6684   .text.uxTaskResetEventItemValue:00000000 uxTaskResetEventItemValue
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6711   .text.uxTaskResetEventItemValue:00000014 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6716   .text.pvTaskIncrementMutexHeldCount:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6722   .text.pvTaskIncrementMutexHeldCount:00000000 pvTaskIncrementMutexHeldCount
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6753   .text.pvTaskIncrementMutexHeldCount:00000018 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6758   .text.ulTaskGenericNotifyTake:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6764   .text.ulTaskGenericNotifyTake:00000000 ulTaskGenericNotifyTake
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6921   .text.ulTaskGenericNotifyTake:000000a4 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6926   .text.xTaskGenericNotifyWait:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:6932   .text.xTaskGenericNotifyWait:00000000 xTaskGenericNotifyWait
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7120   .text.xTaskGenericNotifyWait:000000c8 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7125   .text.xTaskGenericNotify:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7131   .text.xTaskGenericNotify:00000000 xTaskGenericNotify
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7222   .text.xTaskGenericNotify:0000004a $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7511   .text.xTaskGenericNotify:00000158 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7519   .text.xTaskGenericNotifyFromISR:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7525   .text.xTaskGenericNotifyFromISR:00000000 xTaskGenericNotifyFromISR
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7665   .text.xTaskGenericNotifyFromISR:00000070 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7968   .text.xTaskGenericNotifyFromISR:00000188 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7979   .text.vTaskGenericNotifyGiveFromISR:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7985   .text.vTaskGenericNotifyGiveFromISR:00000000 vTaskGenericNotifyGiveFromISR
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8309   .text.vTaskGenericNotifyGiveFromISR:0000011c $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8320   .text.xTaskGenericNotifyStateClear:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8326   .text.xTaskGenericNotifyStateClear:00000000 xTaskGenericNotifyStateClear
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8424   .text.xTaskGenericNotifyStateClear:00000048 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8429   .text.ulTaskGenericNotifyValueClear:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8435   .text.ulTaskGenericNotifyValueClear:00000000 ulTaskGenericNotifyValueClear
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8492   .text.ulTaskGenericNotifyValueClear:00000030 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8497   .bss.uxSchedulerSuspended:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8504   .rodata.uxTopUsedPriority:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8510   .bss.xIdleTaskHandle:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8516   .bss.xNextTaskUnblockTime:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8522   .bss.uxTaskNumber:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8528   .bss.xNumOfOverflows:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8534   .bss.xYieldPending:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8540   .bss.xPendedTicks:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8546   .bss.xSchedulerRunning:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8552   .bss.uxTopReadyPriority:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8558   .bss.xTickCount:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8564   .bss.uxCurrentNumberOfTasks:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8570   .bss.xSuspendedTaskList:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8576   .bss.uxDeletedTasksWaitingCleanUp:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8582   .bss.xTasksWaitingTermination:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8588   .bss.xPendingReadyList:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8594   .bss.pxOverflowDelayedTaskList:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8600   .bss.pxDelayedTaskList:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8606   .bss.xDelayedTaskList2:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8612   .bss.xDelayedTaskList1:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8618   .bss.pxReadyTasksLists:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:8625   .bss.pxCurrentTCB:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7228   .text.xTaskGenericNotify:0000004f $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7228   .text.xTaskGenericNotify:00000050 $t
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7670   .text.xTaskGenericNotifyFromISR:00000075 $d
C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s:7670   .text.xTaskGenericNotifyFromISR:00000076 $t

UNDEFINED SYMBOLS
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccjF9Krg.s 			page 294


vPortFree
memset
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vPortExitCritical
uxListRemove
vListInsert
pvPortMalloc
vListInsertEnd
vPortValidateInterruptPriority
xTimerCreateTimerTask
xPortStartScheduler
vPortEndScheduler
