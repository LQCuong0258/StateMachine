ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"tasks.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "ThirdParty/FreeRTOS/tasks.c"
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	prvTaskIsTaskSuspended:
  27              	.LVL0:
  28              	.LFB16:
   1:ThirdParty/FreeRTOS/tasks.c **** /*
   2:ThirdParty/FreeRTOS/tasks.c ****  * FreeRTOS Kernel V10.5.1
   3:ThirdParty/FreeRTOS/tasks.c ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/tasks.c ****  *
   5:ThirdParty/FreeRTOS/tasks.c ****  * SPDX-License-Identifier: MIT
   6:ThirdParty/FreeRTOS/tasks.c ****  *
   7:ThirdParty/FreeRTOS/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:ThirdParty/FreeRTOS/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   9:ThirdParty/FreeRTOS/tasks.c ****  * the Software without restriction, including without limitation the rights to
  10:ThirdParty/FreeRTOS/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:ThirdParty/FreeRTOS/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:ThirdParty/FreeRTOS/tasks.c ****  * subject to the following conditions:
  13:ThirdParty/FreeRTOS/tasks.c ****  *
  14:ThirdParty/FreeRTOS/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  15:ThirdParty/FreeRTOS/tasks.c ****  * copies or substantial portions of the Software.
  16:ThirdParty/FreeRTOS/tasks.c ****  *
  17:ThirdParty/FreeRTOS/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:ThirdParty/FreeRTOS/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:ThirdParty/FreeRTOS/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:ThirdParty/FreeRTOS/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:ThirdParty/FreeRTOS/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:ThirdParty/FreeRTOS/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:ThirdParty/FreeRTOS/tasks.c ****  *
  24:ThirdParty/FreeRTOS/tasks.c ****  * https://www.FreeRTOS.org
  25:ThirdParty/FreeRTOS/tasks.c ****  * https://github.com/FreeRTOS
  26:ThirdParty/FreeRTOS/tasks.c ****  *
  27:ThirdParty/FreeRTOS/tasks.c ****  */
  28:ThirdParty/FreeRTOS/tasks.c **** 
  29:ThirdParty/FreeRTOS/tasks.c **** /* Standard includes. */
  30:ThirdParty/FreeRTOS/tasks.c **** #include <stdlib.h>
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 2


  31:ThirdParty/FreeRTOS/tasks.c **** #include <string.h>
  32:ThirdParty/FreeRTOS/tasks.c **** 
  33:ThirdParty/FreeRTOS/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  34:ThirdParty/FreeRTOS/tasks.c ****  * all the API functions to use the MPU wrappers.  That should only be done when
  35:ThirdParty/FreeRTOS/tasks.c ****  * task.h is included from an application file. */
  36:ThirdParty/FreeRTOS/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  37:ThirdParty/FreeRTOS/tasks.c **** 
  38:ThirdParty/FreeRTOS/tasks.c **** /* FreeRTOS includes. */
  39:ThirdParty/FreeRTOS/tasks.c **** #include "FreeRTOS.h"
  40:ThirdParty/FreeRTOS/tasks.c **** #include "task.h"
  41:ThirdParty/FreeRTOS/tasks.c **** #include "timers.h"
  42:ThirdParty/FreeRTOS/tasks.c **** #include "stack_macros.h"
  43:ThirdParty/FreeRTOS/tasks.c **** 
  44:ThirdParty/FreeRTOS/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  45:ThirdParty/FreeRTOS/tasks.c ****  * because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  46:ThirdParty/FreeRTOS/tasks.c ****  * for the header files above, but not in this file, in order to generate the
  47:ThirdParty/FreeRTOS/tasks.c ****  * correct privileged Vs unprivileged linkage and placement. */
  48:ThirdParty/FreeRTOS/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  49:ThirdParty/FreeRTOS/tasks.c **** 
  50:ThirdParty/FreeRTOS/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  51:ThirdParty/FreeRTOS/tasks.c ****  * functions but without including stdio.h here. */
  52:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  53:ThirdParty/FreeRTOS/tasks.c **** 
  54:ThirdParty/FreeRTOS/tasks.c **** /* At the bottom of this file are two optional functions that can be used
  55:ThirdParty/FreeRTOS/tasks.c ****  * to generate human readable text from the raw data generated by the
  56:ThirdParty/FreeRTOS/tasks.c ****  * uxTaskGetSystemState() function.  Note the formatting functions are provided
  57:ThirdParty/FreeRTOS/tasks.c ****  * for convenience only, and are NOT considered part of the kernel. */
  58:ThirdParty/FreeRTOS/tasks.c ****     #include <stdio.h>
  59:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  60:ThirdParty/FreeRTOS/tasks.c **** 
  61:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_PREEMPTION == 0 )
  62:ThirdParty/FreeRTOS/tasks.c **** 
  63:ThirdParty/FreeRTOS/tasks.c **** /* If the cooperative scheduler is being used then a yield should not be
  64:ThirdParty/FreeRTOS/tasks.c ****  * performed just because a higher priority task has been woken. */
  65:ThirdParty/FreeRTOS/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()
  66:ThirdParty/FreeRTOS/tasks.c **** #else
  67:ThirdParty/FreeRTOS/tasks.c ****     #define taskYIELD_IF_USING_PREEMPTION()    portYIELD_WITHIN_API()
  68:ThirdParty/FreeRTOS/tasks.c **** #endif
  69:ThirdParty/FreeRTOS/tasks.c **** 
  70:ThirdParty/FreeRTOS/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  71:ThirdParty/FreeRTOS/tasks.c **** #define taskNOT_WAITING_NOTIFICATION              ( ( uint8_t ) 0 ) /* Must be zero as it is the in
  72:ThirdParty/FreeRTOS/tasks.c **** #define taskWAITING_NOTIFICATION                  ( ( uint8_t ) 1 )
  73:ThirdParty/FreeRTOS/tasks.c **** #define taskNOTIFICATION_RECEIVED                 ( ( uint8_t ) 2 )
  74:ThirdParty/FreeRTOS/tasks.c **** 
  75:ThirdParty/FreeRTOS/tasks.c **** /*
  76:ThirdParty/FreeRTOS/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  77:ThirdParty/FreeRTOS/tasks.c ****  * is used purely for checking the high water mark for tasks.
  78:ThirdParty/FreeRTOS/tasks.c ****  */
  79:ThirdParty/FreeRTOS/tasks.c **** #define tskSTACK_FILL_BYTE                        ( 0xa5U )
  80:ThirdParty/FreeRTOS/tasks.c **** 
  81:ThirdParty/FreeRTOS/tasks.c **** /* Bits used to record how a task's stack and TCB were allocated. */
  82:ThirdParty/FreeRTOS/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB    ( ( uint8_t ) 0 )
  83:ThirdParty/FreeRTOS/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY        ( ( uint8_t ) 1 )
  84:ThirdParty/FreeRTOS/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB     ( ( uint8_t ) 2 )
  85:ThirdParty/FreeRTOS/tasks.c **** 
  86:ThirdParty/FreeRTOS/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  87:ThirdParty/FreeRTOS/tasks.c ****  * value so the high water mark can be determined.  If none of the following are
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 3


  88:ThirdParty/FreeRTOS/tasks.c ****  * set then don't fill the stack so there is no unnecessary dependency on memset. */
  89:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
  90:ThirdParty/FreeRTOS/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    1
  91:ThirdParty/FreeRTOS/tasks.c **** #else
  92:ThirdParty/FreeRTOS/tasks.c ****     #define tskSET_NEW_STACKS_TO_KNOWN_VALUE    0
  93:ThirdParty/FreeRTOS/tasks.c **** #endif
  94:ThirdParty/FreeRTOS/tasks.c **** 
  95:ThirdParty/FreeRTOS/tasks.c **** /*
  96:ThirdParty/FreeRTOS/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  97:ThirdParty/FreeRTOS/tasks.c ****  */
  98:ThirdParty/FreeRTOS/tasks.c **** #define tskRUNNING_CHAR      ( 'X' )
  99:ThirdParty/FreeRTOS/tasks.c **** #define tskBLOCKED_CHAR      ( 'B' )
 100:ThirdParty/FreeRTOS/tasks.c **** #define tskREADY_CHAR        ( 'R' )
 101:ThirdParty/FreeRTOS/tasks.c **** #define tskDELETED_CHAR      ( 'D' )
 102:ThirdParty/FreeRTOS/tasks.c **** #define tskSUSPENDED_CHAR    ( 'S' )
 103:ThirdParty/FreeRTOS/tasks.c **** 
 104:ThirdParty/FreeRTOS/tasks.c **** /*
 105:ThirdParty/FreeRTOS/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to to
 106:ThirdParty/FreeRTOS/tasks.c ****  * be global, rather than file scope.
 107:ThirdParty/FreeRTOS/tasks.c ****  */
 108:ThirdParty/FreeRTOS/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 109:ThirdParty/FreeRTOS/tasks.c ****     #define static
 110:ThirdParty/FreeRTOS/tasks.c **** #endif
 111:ThirdParty/FreeRTOS/tasks.c **** 
 112:ThirdParty/FreeRTOS/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 113:ThirdParty/FreeRTOS/tasks.c ****  * configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 114:ThirdParty/FreeRTOS/tasks.c **** #ifndef configIDLE_TASK_NAME
 115:ThirdParty/FreeRTOS/tasks.c ****     #define configIDLE_TASK_NAME    "IDLE"
 116:ThirdParty/FreeRTOS/tasks.c **** #endif
 117:ThirdParty/FreeRTOS/tasks.c **** 
 118:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 119:ThirdParty/FreeRTOS/tasks.c **** 
 120:ThirdParty/FreeRTOS/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 121:ThirdParty/FreeRTOS/tasks.c ****  * performed in a generic way that is not optimised to any particular
 122:ThirdParty/FreeRTOS/tasks.c ****  * microcontroller architecture. */
 123:ThirdParty/FreeRTOS/tasks.c **** 
 124:ThirdParty/FreeRTOS/tasks.c **** /* uxTopReadyPriority holds the priority of the highest priority ready
 125:ThirdParty/FreeRTOS/tasks.c ****  * state task. */
 126:ThirdParty/FreeRTOS/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority ) \
 127:ThirdParty/FreeRTOS/tasks.c ****     {                                               \
 128:ThirdParty/FreeRTOS/tasks.c ****         if( ( uxPriority ) > uxTopReadyPriority )   \
 129:ThirdParty/FreeRTOS/tasks.c ****         {                                           \
 130:ThirdParty/FreeRTOS/tasks.c ****             uxTopReadyPriority = ( uxPriority );    \
 131:ThirdParty/FreeRTOS/tasks.c ****         }                                           \
 132:ThirdParty/FreeRTOS/tasks.c ****     } /* taskRECORD_READY_PRIORITY */
 133:ThirdParty/FreeRTOS/tasks.c **** 
 134:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 135:ThirdParty/FreeRTOS/tasks.c **** 
 136:ThirdParty/FreeRTOS/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                \
 137:ThirdParty/FreeRTOS/tasks.c ****     {                                                                         \
 138:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTopPriority = uxTopReadyPriority;                       \
 139:ThirdParty/FreeRTOS/tasks.c ****                                                                               \
 140:ThirdParty/FreeRTOS/tasks.c ****         /* Find the highest priority queue that contains ready tasks. */      \
 141:ThirdParty/FreeRTOS/tasks.c ****         while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) ) \
 142:ThirdParty/FreeRTOS/tasks.c ****         {                                                                     \
 143:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( uxTopPriority );                                    \
 144:ThirdParty/FreeRTOS/tasks.c ****             --uxTopPriority;                                                  \
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 4


 145:ThirdParty/FreeRTOS/tasks.c ****         }                                                                     \
 146:ThirdParty/FreeRTOS/tasks.c ****                                                                               \
 147:ThirdParty/FreeRTOS/tasks.c ****         /* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of \
 148:ThirdParty/FreeRTOS/tasks.c ****          * the  same priority get an equal share of the processor time. */                    \
 149:ThirdParty/FreeRTOS/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) ); \
 150:ThirdParty/FreeRTOS/tasks.c ****         uxTopReadyPriority = uxTopPriority;                                                   \
 151:ThirdParty/FreeRTOS/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK */
 152:ThirdParty/FreeRTOS/tasks.c **** 
 153:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 154:ThirdParty/FreeRTOS/tasks.c **** 
 155:ThirdParty/FreeRTOS/tasks.c **** /* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 156:ThirdParty/FreeRTOS/tasks.c ****  * they are only required when a port optimised method of task selection is
 157:ThirdParty/FreeRTOS/tasks.c ****  * being used. */
 158:ThirdParty/FreeRTOS/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )
 159:ThirdParty/FreeRTOS/tasks.c ****     #define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 160:ThirdParty/FreeRTOS/tasks.c **** 
 161:ThirdParty/FreeRTOS/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 162:ThirdParty/FreeRTOS/tasks.c **** 
 163:ThirdParty/FreeRTOS/tasks.c **** /* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 164:ThirdParty/FreeRTOS/tasks.c ****  * performed in a way that is tailored to the particular microcontroller
 165:ThirdParty/FreeRTOS/tasks.c ****  * architecture being used. */
 166:ThirdParty/FreeRTOS/tasks.c **** 
 167:ThirdParty/FreeRTOS/tasks.c **** /* A port optimised version is provided.  Call the port defined macros. */
 168:ThirdParty/FreeRTOS/tasks.c ****     #define taskRECORD_READY_PRIORITY( uxPriority )    portRECORD_READY_PRIORITY( ( uxPriority ), u
 169:ThirdParty/FreeRTOS/tasks.c **** 
 170:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 171:ThirdParty/FreeRTOS/tasks.c **** 
 172:ThirdParty/FreeRTOS/tasks.c ****     #define taskSELECT_HIGHEST_PRIORITY_TASK()                                                  \
 173:ThirdParty/FreeRTOS/tasks.c ****     {                                                                                           \
 174:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTopPriority;                                                              \
 175:ThirdParty/FreeRTOS/tasks.c ****                                                                                                 \
 176:ThirdParty/FreeRTOS/tasks.c ****         /* Find the highest priority list that contains ready tasks. */                         \
 177:ThirdParty/FreeRTOS/tasks.c ****         portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );                          \
 178:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 ); \
 179:ThirdParty/FreeRTOS/tasks.c ****         listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );   \
 180:ThirdParty/FreeRTOS/tasks.c ****     } /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 181:ThirdParty/FreeRTOS/tasks.c **** 
 182:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 183:ThirdParty/FreeRTOS/tasks.c **** 
 184:ThirdParty/FreeRTOS/tasks.c **** /* A port optimised version is provided, call it only if the TCB being reset
 185:ThirdParty/FreeRTOS/tasks.c ****  * is being referenced from a ready list.  If it is referenced from a delayed
 186:ThirdParty/FreeRTOS/tasks.c ****  * or suspended list then it won't be in a ready list. */
 187:ThirdParty/FreeRTOS/tasks.c ****     #define taskRESET_READY_PRIORITY( uxPriority )                                                 
 188:ThirdParty/FreeRTOS/tasks.c ****     {                                                                                              
 189:ThirdParty/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 
 190:ThirdParty/FreeRTOS/tasks.c ****         {                                                                                          
 191:ThirdParty/FreeRTOS/tasks.c ****             portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );                    
 192:ThirdParty/FreeRTOS/tasks.c ****         }                                                                                          
 193:ThirdParty/FreeRTOS/tasks.c ****     }
 194:ThirdParty/FreeRTOS/tasks.c **** 
 195:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 196:ThirdParty/FreeRTOS/tasks.c **** 
 197:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 198:ThirdParty/FreeRTOS/tasks.c **** 
 199:ThirdParty/FreeRTOS/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 200:ThirdParty/FreeRTOS/tasks.c ****  * count overflows. */
 201:ThirdParty/FreeRTOS/tasks.c **** #define taskSWITCH_DELAYED_LISTS()                                                \
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 5


 202:ThirdParty/FreeRTOS/tasks.c ****     {                                                                             \
 203:ThirdParty/FreeRTOS/tasks.c ****         List_t * pxTemp;                                                          \
 204:ThirdParty/FreeRTOS/tasks.c ****                                                                                   \
 205:ThirdParty/FreeRTOS/tasks.c ****         /* The delayed tasks list should be empty when the lists are switched. */ \
 206:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );               \
 207:ThirdParty/FreeRTOS/tasks.c ****                                                                                   \
 208:ThirdParty/FreeRTOS/tasks.c ****         pxTemp = pxDelayedTaskList;                                               \
 209:ThirdParty/FreeRTOS/tasks.c ****         pxDelayedTaskList = pxOverflowDelayedTaskList;                            \
 210:ThirdParty/FreeRTOS/tasks.c ****         pxOverflowDelayedTaskList = pxTemp;                                       \
 211:ThirdParty/FreeRTOS/tasks.c ****         xNumOfOverflows++;                                                        \
 212:ThirdParty/FreeRTOS/tasks.c ****         prvResetNextTaskUnblockTime();                                            \
 213:ThirdParty/FreeRTOS/tasks.c ****     }
 214:ThirdParty/FreeRTOS/tasks.c **** 
 215:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 216:ThirdParty/FreeRTOS/tasks.c **** 
 217:ThirdParty/FreeRTOS/tasks.c **** /*
 218:ThirdParty/FreeRTOS/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 219:ThirdParty/FreeRTOS/tasks.c ****  * the task.  It is inserted at the end of the list.
 220:ThirdParty/FreeRTOS/tasks.c ****  */
 221:ThirdParty/FreeRTOS/tasks.c **** #define prvAddTaskToReadyList( pxTCB )                                                             
 222:ThirdParty/FreeRTOS/tasks.c ****     traceMOVED_TASK_TO_READY_STATE( pxTCB );                                                       
 223:ThirdParty/FreeRTOS/tasks.c ****     taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );                                            
 224:ThirdParty/FreeRTOS/tasks.c ****     listINSERT_END( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem )
 225:ThirdParty/FreeRTOS/tasks.c ****     tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 226:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 227:ThirdParty/FreeRTOS/tasks.c **** 
 228:ThirdParty/FreeRTOS/tasks.c **** /*
 229:ThirdParty/FreeRTOS/tasks.c ****  * Several functions take a TaskHandle_t parameter that can optionally be NULL,
 230:ThirdParty/FreeRTOS/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 231:ThirdParty/FreeRTOS/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 232:ThirdParty/FreeRTOS/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 233:ThirdParty/FreeRTOS/tasks.c ****  */
 234:ThirdParty/FreeRTOS/tasks.c **** #define prvGetTCBFromHandle( pxHandle )    ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle )
 235:ThirdParty/FreeRTOS/tasks.c **** 
 236:ThirdParty/FreeRTOS/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 237:ThirdParty/FreeRTOS/tasks.c ****  * of the task to which it belongs (coded to allow it to be held in reverse
 238:ThirdParty/FreeRTOS/tasks.c ****  * priority order).  However, it is occasionally borrowed for other purposes.  It
 239:ThirdParty/FreeRTOS/tasks.c ****  * is important its value is not updated due to a task priority change while it is
 240:ThirdParty/FreeRTOS/tasks.c ****  * being used for another purpose.  The following bit definition is used to inform
 241:ThirdParty/FreeRTOS/tasks.c ****  * the scheduler that the value should not be changed - in which case it is the
 242:ThirdParty/FreeRTOS/tasks.c ****  * responsibility of whichever module is using the value to ensure it gets set back
 243:ThirdParty/FreeRTOS/tasks.c ****  * to its original value when it is released. */
 244:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_16_BIT_TICKS == 1 )
 245:ThirdParty/FreeRTOS/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x8000U
 246:ThirdParty/FreeRTOS/tasks.c **** #else
 247:ThirdParty/FreeRTOS/tasks.c ****     #define taskEVENT_LIST_ITEM_VALUE_IN_USE    0x80000000UL
 248:ThirdParty/FreeRTOS/tasks.c **** #endif
 249:ThirdParty/FreeRTOS/tasks.c **** 
 250:ThirdParty/FreeRTOS/tasks.c **** /*
 251:ThirdParty/FreeRTOS/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 252:ThirdParty/FreeRTOS/tasks.c ****  * and stores task state information, including a pointer to the task's context
 253:ThirdParty/FreeRTOS/tasks.c ****  * (the task's run time environment, including register values)
 254:ThirdParty/FreeRTOS/tasks.c ****  */
 255:ThirdParty/FreeRTOS/tasks.c **** typedef struct tskTaskControlBlock       /* The old naming convention is used to prevent breaking k
 256:ThirdParty/FreeRTOS/tasks.c **** {
 257:ThirdParty/FreeRTOS/tasks.c ****     volatile StackType_t * pxTopOfStack; /*< Points to the location of the last item placed on the 
 258:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 6


 259:ThirdParty/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 260:ThirdParty/FreeRTOS/tasks.c ****         xMPU_SETTINGS xMPUSettings; /*< The MPU settings are defined as part of the port layer.  TH
 261:ThirdParty/FreeRTOS/tasks.c ****     #endif
 262:ThirdParty/FreeRTOS/tasks.c **** 
 263:ThirdParty/FreeRTOS/tasks.c ****     ListItem_t xStateListItem;                  /*< The list that the state list item of a task is 
 264:ThirdParty/FreeRTOS/tasks.c ****     ListItem_t xEventListItem;                  /*< Used to reference a task from an event list. */
 265:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;                     /*< The priority of the task.  0 is the lowest prio
 266:ThirdParty/FreeRTOS/tasks.c ****     StackType_t * pxStack;                      /*< Points to the start of the stack. */
 267:ThirdParty/FreeRTOS/tasks.c ****     char pcTaskName[ configMAX_TASK_NAME_LEN ]; /*< Descriptive name given to the task when created
 268:ThirdParty/FreeRTOS/tasks.c **** 
 269:ThirdParty/FreeRTOS/tasks.c ****     #if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 270:ThirdParty/FreeRTOS/tasks.c ****         StackType_t * pxEndOfStack; /*< Points to the highest valid address for the stack. */
 271:ThirdParty/FreeRTOS/tasks.c ****     #endif
 272:ThirdParty/FreeRTOS/tasks.c **** 
 273:ThirdParty/FreeRTOS/tasks.c ****     #if ( portCRITICAL_NESTING_IN_TCB == 1 )
 274:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxCriticalNesting; /*< Holds the critical section nesting depth for ports that 
 275:ThirdParty/FreeRTOS/tasks.c ****     #endif
 276:ThirdParty/FreeRTOS/tasks.c **** 
 277:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_TRACE_FACILITY == 1 )
 278:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTCBNumber;  /*< Stores a number that increments each time a TCB is created.  
 279:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTaskNumber; /*< Stores a number specifically for use by third party trace cod
 280:ThirdParty/FreeRTOS/tasks.c ****     #endif
 281:ThirdParty/FreeRTOS/tasks.c **** 
 282:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 283:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxBasePriority; /*< The priority last assigned to the task - used by the priori
 284:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxMutexesHeld;
 285:ThirdParty/FreeRTOS/tasks.c ****     #endif
 286:ThirdParty/FreeRTOS/tasks.c **** 
 287:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_APPLICATION_TASK_TAG == 1 )
 288:ThirdParty/FreeRTOS/tasks.c ****         TaskHookFunction_t pxTaskTag;
 289:ThirdParty/FreeRTOS/tasks.c ****     #endif
 290:ThirdParty/FreeRTOS/tasks.c **** 
 291:ThirdParty/FreeRTOS/tasks.c ****     #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 292:ThirdParty/FreeRTOS/tasks.c ****         void * pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 293:ThirdParty/FreeRTOS/tasks.c ****     #endif
 294:ThirdParty/FreeRTOS/tasks.c **** 
 295:ThirdParty/FreeRTOS/tasks.c ****     #if ( configGENERATE_RUN_TIME_STATS == 1 )
 296:ThirdParty/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulRunTimeCounter; /*< Stores the amount of time the task has sp
 297:ThirdParty/FreeRTOS/tasks.c ****     #endif
 298:ThirdParty/FreeRTOS/tasks.c **** 
 299:ThirdParty/FreeRTOS/tasks.c ****     #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
 300:ThirdParty/FreeRTOS/tasks.c ****         configTLS_BLOCK_TYPE xTLSBlock; /*< Memory block used as Thread Local Storage (TLS) Block f
 301:ThirdParty/FreeRTOS/tasks.c ****     #endif
 302:ThirdParty/FreeRTOS/tasks.c **** 
 303:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_TASK_NOTIFICATIONS == 1 )
 304:ThirdParty/FreeRTOS/tasks.c ****         volatile uint32_t ulNotifiedValue[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 305:ThirdParty/FreeRTOS/tasks.c ****         volatile uint8_t ucNotifyState[ configTASK_NOTIFICATION_ARRAY_ENTRIES ];
 306:ThirdParty/FreeRTOS/tasks.c ****     #endif
 307:ThirdParty/FreeRTOS/tasks.c **** 
 308:ThirdParty/FreeRTOS/tasks.c ****     /* See the comments in FreeRTOS.h with the definition of
 309:ThirdParty/FreeRTOS/tasks.c ****      * tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 310:ThirdParty/FreeRTOS/tasks.c ****     #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been conso
 311:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucStaticallyAllocated;                     /*< Set to pdTRUE if the task is a stati
 312:ThirdParty/FreeRTOS/tasks.c ****     #endif
 313:ThirdParty/FreeRTOS/tasks.c **** 
 314:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
 315:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucDelayAborted;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 7


 316:ThirdParty/FreeRTOS/tasks.c ****     #endif
 317:ThirdParty/FreeRTOS/tasks.c **** 
 318:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_POSIX_ERRNO == 1 )
 319:ThirdParty/FreeRTOS/tasks.c ****         int iTaskErrno;
 320:ThirdParty/FreeRTOS/tasks.c ****     #endif
 321:ThirdParty/FreeRTOS/tasks.c **** } tskTCB;
 322:ThirdParty/FreeRTOS/tasks.c **** 
 323:ThirdParty/FreeRTOS/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 324:ThirdParty/FreeRTOS/tasks.c ****  * below to enable the use of older kernel aware debuggers. */
 325:ThirdParty/FreeRTOS/tasks.c **** typedef tskTCB TCB_t;
 326:ThirdParty/FreeRTOS/tasks.c **** 
 327:ThirdParty/FreeRTOS/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 328:ThirdParty/FreeRTOS/tasks.c ****  * which static variables must be declared volatile. */
 329:ThirdParty/FreeRTOS/tasks.c **** portDONT_DISCARD PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 330:ThirdParty/FreeRTOS/tasks.c **** 
 331:ThirdParty/FreeRTOS/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 332:ThirdParty/FreeRTOS/tasks.c ****  * xDelayedTaskList1 and xDelayedTaskList2 could be moved to function scope but
 333:ThirdParty/FreeRTOS/tasks.c ****  * doing so breaks some kernel aware debuggers and debuggers that rely on removing
 334:ThirdParty/FreeRTOS/tasks.c ****  * the static qualifier. */
 335:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ]; /*< Prioritised ready task
 336:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;                         /*< Delayed tasks. */
 337:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;                         /*< Delayed tasks (two lis
 338:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /*< Points to the delayed 
 339:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /*< Points to the delayed 
 340:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;                         /*< Tasks that have been r
 341:ThirdParty/FreeRTOS/tasks.c **** 
 342:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 343:ThirdParty/FreeRTOS/tasks.c **** 
 344:ThirdParty/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static List_t xTasksWaitingTermination; /*< Tasks that have been deleted - but 
 345:ThirdParty/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 346:ThirdParty/FreeRTOS/tasks.c **** 
 347:ThirdParty/FreeRTOS/tasks.c **** #endif
 348:ThirdParty/FreeRTOS/tasks.c **** 
 349:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 350:ThirdParty/FreeRTOS/tasks.c **** 
 351:ThirdParty/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static List_t xSuspendedTaskList; /*< Tasks that are currently suspended. */
 352:ThirdParty/FreeRTOS/tasks.c **** 
 353:ThirdParty/FreeRTOS/tasks.c **** #endif
 354:ThirdParty/FreeRTOS/tasks.c **** 
 355:ThirdParty/FreeRTOS/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 356:ThirdParty/FreeRTOS/tasks.c ****  * the errno of the currently running task. */
 357:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 358:ThirdParty/FreeRTOS/tasks.c ****     int FreeRTOS_errno = 0;
 359:ThirdParty/FreeRTOS/tasks.c **** #endif
 360:ThirdParty/FreeRTOS/tasks.c **** 
 361:ThirdParty/FreeRTOS/tasks.c **** /* Other file private variables. --------------------------------*/
 362:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
 363:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 364:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
 365:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
 366:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
 367:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending = pdFALSE;
 368:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
 369:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
 370:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised
 371:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle = NULL;                          /*< Holds the 
 372:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 8


 373:ThirdParty/FreeRTOS/tasks.c **** /* Improve support for OpenOCD. The kernel tracks Ready tasks via priority lists.
 374:ThirdParty/FreeRTOS/tasks.c ****  * For tracking the state of remote threads, OpenOCD uses uxTopUsedPriority
 375:ThirdParty/FreeRTOS/tasks.c ****  * to determine the number of priority lists to read back from the remote target. */
 376:ThirdParty/FreeRTOS/tasks.c **** const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
 377:ThirdParty/FreeRTOS/tasks.c **** 
 378:ThirdParty/FreeRTOS/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 379:ThirdParty/FreeRTOS/tasks.c ****  * interrupts must not manipulate the xStateListItem of a TCB, or any of the
 380:ThirdParty/FreeRTOS/tasks.c ****  * lists the xStateListItem can be referenced from, if the scheduler is suspended.
 381:ThirdParty/FreeRTOS/tasks.c ****  * If an interrupt needs to unblock a task while the scheduler is suspended then it
 382:ThirdParty/FreeRTOS/tasks.c ****  * moves the task's event list item into the xPendingReadyList, ready for the
 383:ThirdParty/FreeRTOS/tasks.c ****  * kernel to move the task from the pending ready list into the real ready list
 384:ThirdParty/FreeRTOS/tasks.c ****  * when the scheduler is unsuspended.  The pending ready list itself can only be
 385:ThirdParty/FreeRTOS/tasks.c ****  * accessed from a critical section. */
 386:ThirdParty/FreeRTOS/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) pdFALSE;
 387:ThirdParty/FreeRTOS/tasks.c **** 
 388:ThirdParty/FreeRTOS/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 389:ThirdParty/FreeRTOS/tasks.c **** 
 390:ThirdParty/FreeRTOS/tasks.c **** /* Do not move these variables to function scope as doing so prevents the
 391:ThirdParty/FreeRTOS/tasks.c ****  * code working with debuggers that need to remove the static qualifier. */
 392:ThirdParty/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static configRUN_TIME_COUNTER_TYPE ulTaskSwitchedInTime = 0UL;    /*< Holds the
 393:ThirdParty/FreeRTOS/tasks.c ****     PRIVILEGED_DATA static volatile configRUN_TIME_COUNTER_TYPE ulTotalRunTime = 0UL; /*< Holds the
 394:ThirdParty/FreeRTOS/tasks.c **** 
 395:ThirdParty/FreeRTOS/tasks.c **** #endif
 396:ThirdParty/FreeRTOS/tasks.c **** 
 397:ThirdParty/FreeRTOS/tasks.c **** /*lint -restore */
 398:ThirdParty/FreeRTOS/tasks.c **** 
 399:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 400:ThirdParty/FreeRTOS/tasks.c **** 
 401:ThirdParty/FreeRTOS/tasks.c **** /* File private functions. --------------------------------*/
 402:ThirdParty/FreeRTOS/tasks.c **** 
 403:ThirdParty/FreeRTOS/tasks.c **** /**
 404:ThirdParty/FreeRTOS/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 405:ThirdParty/FreeRTOS/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 406:ThirdParty/FreeRTOS/tasks.c ****  * is in any other state.
 407:ThirdParty/FreeRTOS/tasks.c ****  */
 408:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 409:ThirdParty/FreeRTOS/tasks.c **** 
 410:ThirdParty/FreeRTOS/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 411:ThirdParty/FreeRTOS/tasks.c **** 
 412:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 413:ThirdParty/FreeRTOS/tasks.c **** 
 414:ThirdParty/FreeRTOS/tasks.c **** /*
 415:ThirdParty/FreeRTOS/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 416:ThirdParty/FreeRTOS/tasks.c ****  * automatically upon the creation of the first task.
 417:ThirdParty/FreeRTOS/tasks.c ****  */
 418:ThirdParty/FreeRTOS/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 419:ThirdParty/FreeRTOS/tasks.c **** 
 420:ThirdParty/FreeRTOS/tasks.c **** /*
 421:ThirdParty/FreeRTOS/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 422:ThirdParty/FreeRTOS/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 423:ThirdParty/FreeRTOS/tasks.c ****  * creation of the first user task.
 424:ThirdParty/FreeRTOS/tasks.c ****  *
 425:ThirdParty/FreeRTOS/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 426:ThirdParty/FreeRTOS/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 427:ThirdParty/FreeRTOS/tasks.c ****  *
 428:ThirdParty/FreeRTOS/tasks.c ****  * void prvIdleTask( void *pvParameters );
 429:ThirdParty/FreeRTOS/tasks.c ****  *
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 9


 430:ThirdParty/FreeRTOS/tasks.c ****  */
 431:ThirdParty/FreeRTOS/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters ) PRIVILEGED_FUNCTION;
 432:ThirdParty/FreeRTOS/tasks.c **** 
 433:ThirdParty/FreeRTOS/tasks.c **** /*
 434:ThirdParty/FreeRTOS/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 435:ThirdParty/FreeRTOS/tasks.c ****  * including the stack pointed to by the TCB.
 436:ThirdParty/FreeRTOS/tasks.c ****  *
 437:ThirdParty/FreeRTOS/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 438:ThirdParty/FreeRTOS/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 439:ThirdParty/FreeRTOS/tasks.c ****  */
 440:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 441:ThirdParty/FreeRTOS/tasks.c **** 
 442:ThirdParty/FreeRTOS/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB ) PRIVILEGED_FUNCTION;
 443:ThirdParty/FreeRTOS/tasks.c **** 
 444:ThirdParty/FreeRTOS/tasks.c **** #endif
 445:ThirdParty/FreeRTOS/tasks.c **** 
 446:ThirdParty/FreeRTOS/tasks.c **** /*
 447:ThirdParty/FreeRTOS/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 448:ThirdParty/FreeRTOS/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 449:ThirdParty/FreeRTOS/tasks.c ****  * and its TCB deleted.
 450:ThirdParty/FreeRTOS/tasks.c ****  */
 451:ThirdParty/FreeRTOS/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 452:ThirdParty/FreeRTOS/tasks.c **** 
 453:ThirdParty/FreeRTOS/tasks.c **** /*
 454:ThirdParty/FreeRTOS/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 455:ThirdParty/FreeRTOS/tasks.c ****  * either the current or the overflow delayed task list.
 456:ThirdParty/FreeRTOS/tasks.c ****  */
 457:ThirdParty/FreeRTOS/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
 458:ThirdParty/FreeRTOS/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely ) PRIVILEGED_FUN
 459:ThirdParty/FreeRTOS/tasks.c **** 
 460:ThirdParty/FreeRTOS/tasks.c **** /*
 461:ThirdParty/FreeRTOS/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 462:ThirdParty/FreeRTOS/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 463:ThirdParty/FreeRTOS/tasks.c ****  * a suspended list, etc.).
 464:ThirdParty/FreeRTOS/tasks.c ****  *
 465:ThirdParty/FreeRTOS/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 466:ThirdParty/FreeRTOS/tasks.c ****  * NORMAL APPLICATION CODE.
 467:ThirdParty/FreeRTOS/tasks.c ****  */
 468:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 469:ThirdParty/FreeRTOS/tasks.c **** 
 470:ThirdParty/FreeRTOS/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
 471:ThirdParty/FreeRTOS/tasks.c ****                                                      List_t * pxList,
 472:ThirdParty/FreeRTOS/tasks.c ****                                                      eTaskState eState ) PRIVILEGED_FUNCTION;
 473:ThirdParty/FreeRTOS/tasks.c **** 
 474:ThirdParty/FreeRTOS/tasks.c **** #endif
 475:ThirdParty/FreeRTOS/tasks.c **** 
 476:ThirdParty/FreeRTOS/tasks.c **** /*
 477:ThirdParty/FreeRTOS/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 478:ThirdParty/FreeRTOS/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 479:ThirdParty/FreeRTOS/tasks.c ****  */
 480:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 481:ThirdParty/FreeRTOS/tasks.c **** 
 482:ThirdParty/FreeRTOS/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
 483:ThirdParty/FreeRTOS/tasks.c ****                                                      const char pcNameToQuery[] ) PRIVILEGED_FUNCTI
 484:ThirdParty/FreeRTOS/tasks.c **** 
 485:ThirdParty/FreeRTOS/tasks.c **** #endif
 486:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 10


 487:ThirdParty/FreeRTOS/tasks.c **** /*
 488:ThirdParty/FreeRTOS/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 489:ThirdParty/FreeRTOS/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 490:ThirdParty/FreeRTOS/tasks.c ****  * determining how much of the stack remains at the original preset value.
 491:ThirdParty/FreeRTOS/tasks.c ****  */
 492:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 493:ThirdParty/FreeRTOS/tasks.c **** 
 494:ThirdParty/FreeRTOS/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVIL
 495:ThirdParty/FreeRTOS/tasks.c **** 
 496:ThirdParty/FreeRTOS/tasks.c **** #endif
 497:ThirdParty/FreeRTOS/tasks.c **** 
 498:ThirdParty/FreeRTOS/tasks.c **** /*
 499:ThirdParty/FreeRTOS/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 500:ThirdParty/FreeRTOS/tasks.c ****  * next move a task from the Blocked state to the Running state.
 501:ThirdParty/FreeRTOS/tasks.c ****  *
 502:ThirdParty/FreeRTOS/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 503:ThirdParty/FreeRTOS/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 504:ThirdParty/FreeRTOS/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 505:ThirdParty/FreeRTOS/tasks.c ****  * set to a value other than 1.
 506:ThirdParty/FreeRTOS/tasks.c ****  */
 507:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 508:ThirdParty/FreeRTOS/tasks.c **** 
 509:ThirdParty/FreeRTOS/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 510:ThirdParty/FreeRTOS/tasks.c **** 
 511:ThirdParty/FreeRTOS/tasks.c **** #endif
 512:ThirdParty/FreeRTOS/tasks.c **** 
 513:ThirdParty/FreeRTOS/tasks.c **** /*
 514:ThirdParty/FreeRTOS/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 515:ThirdParty/FreeRTOS/tasks.c ****  * will exit the Blocked state.
 516:ThirdParty/FreeRTOS/tasks.c ****  */
 517:ThirdParty/FreeRTOS/tasks.c **** static void prvResetNextTaskUnblockTime( void ) PRIVILEGED_FUNCTION;
 518:ThirdParty/FreeRTOS/tasks.c **** 
 519:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 )
 520:ThirdParty/FreeRTOS/tasks.c **** 
 521:ThirdParty/FreeRTOS/tasks.c **** /*
 522:ThirdParty/FreeRTOS/tasks.c ****  * Helper function used to pad task names with spaces when printing out
 523:ThirdParty/FreeRTOS/tasks.c ****  * human readable tables of task information.
 524:ThirdParty/FreeRTOS/tasks.c ****  */
 525:ThirdParty/FreeRTOS/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
 526:ThirdParty/FreeRTOS/tasks.c ****                                         const char * pcTaskName ) PRIVILEGED_FUNCTION;
 527:ThirdParty/FreeRTOS/tasks.c **** 
 528:ThirdParty/FreeRTOS/tasks.c **** #endif
 529:ThirdParty/FreeRTOS/tasks.c **** 
 530:ThirdParty/FreeRTOS/tasks.c **** /*
 531:ThirdParty/FreeRTOS/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 532:ThirdParty/FreeRTOS/tasks.c ****  * dynamically to fill in the structure's members.
 533:ThirdParty/FreeRTOS/tasks.c ****  */
 534:ThirdParty/FreeRTOS/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 535:ThirdParty/FreeRTOS/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 536:ThirdParty/FreeRTOS/tasks.c ****                                   const uint32_t ulStackDepth,
 537:ThirdParty/FreeRTOS/tasks.c ****                                   void * const pvParameters,
 538:ThirdParty/FreeRTOS/tasks.c ****                                   UBaseType_t uxPriority,
 539:ThirdParty/FreeRTOS/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 540:ThirdParty/FreeRTOS/tasks.c ****                                   TCB_t * pxNewTCB,
 541:ThirdParty/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 542:ThirdParty/FreeRTOS/tasks.c **** 
 543:ThirdParty/FreeRTOS/tasks.c **** /*
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 11


 544:ThirdParty/FreeRTOS/tasks.c ****  * Called after a new task has been created and initialised to place the task
 545:ThirdParty/FreeRTOS/tasks.c ****  * under the control of the scheduler.
 546:ThirdParty/FreeRTOS/tasks.c ****  */
 547:ThirdParty/FreeRTOS/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB ) PRIVILEGED_FUNCTION;
 548:ThirdParty/FreeRTOS/tasks.c **** 
 549:ThirdParty/FreeRTOS/tasks.c **** /*
 550:ThirdParty/FreeRTOS/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 551:ThirdParty/FreeRTOS/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 552:ThirdParty/FreeRTOS/tasks.c ****  * called by the function.
 553:ThirdParty/FreeRTOS/tasks.c ****  */
 554:ThirdParty/FreeRTOS/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 555:ThirdParty/FreeRTOS/tasks.c **** 
 556:ThirdParty/FreeRTOS/tasks.c ****     static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 557:ThirdParty/FreeRTOS/tasks.c **** 
 558:ThirdParty/FreeRTOS/tasks.c **** #endif
 559:ThirdParty/FreeRTOS/tasks.c **** 
 560:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 561:ThirdParty/FreeRTOS/tasks.c **** 
 562:ThirdParty/FreeRTOS/tasks.c **** #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
 563:ThirdParty/FreeRTOS/tasks.c **** 
 564:ThirdParty/FreeRTOS/tasks.c ****     TaskHandle_t xTaskCreateStatic( TaskFunction_t pxTaskCode,
 565:ThirdParty/FreeRTOS/tasks.c ****                                     const char * const pcName, /*lint !e971 Unqualified char types 
 566:ThirdParty/FreeRTOS/tasks.c ****                                     const uint32_t ulStackDepth,
 567:ThirdParty/FreeRTOS/tasks.c ****                                     void * const pvParameters,
 568:ThirdParty/FreeRTOS/tasks.c ****                                     UBaseType_t uxPriority,
 569:ThirdParty/FreeRTOS/tasks.c ****                                     StackType_t * const puxStackBuffer,
 570:ThirdParty/FreeRTOS/tasks.c ****                                     StaticTask_t * const pxTaskBuffer )
 571:ThirdParty/FreeRTOS/tasks.c ****     {
 572:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 573:ThirdParty/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
 574:ThirdParty/FreeRTOS/tasks.c **** 
 575:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( puxStackBuffer != NULL );
 576:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTaskBuffer != NULL );
 577:ThirdParty/FreeRTOS/tasks.c **** 
 578:ThirdParty/FreeRTOS/tasks.c ****         #if ( configASSERT_DEFINED == 1 )
 579:ThirdParty/FreeRTOS/tasks.c ****         {
 580:ThirdParty/FreeRTOS/tasks.c ****             /* Sanity check that the size of the structure used to declare a
 581:ThirdParty/FreeRTOS/tasks.c ****              * variable of type StaticTask_t equals the size of the real task
 582:ThirdParty/FreeRTOS/tasks.c ****              * structure. */
 583:ThirdParty/FreeRTOS/tasks.c ****             volatile size_t xSize = sizeof( StaticTask_t );
 584:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( xSize == sizeof( TCB_t ) );
 585:ThirdParty/FreeRTOS/tasks.c ****             ( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 586:ThirdParty/FreeRTOS/tasks.c ****         }
 587:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configASSERT_DEFINED */
 588:ThirdParty/FreeRTOS/tasks.c **** 
 589:ThirdParty/FreeRTOS/tasks.c ****         if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 590:ThirdParty/FreeRTOS/tasks.c ****         {
 591:ThirdParty/FreeRTOS/tasks.c ****             /* The memory used for the task's TCB and stack are passed into this
 592:ThirdParty/FreeRTOS/tasks.c ****              * function - use them. */
 593:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the stru
 594:ThirdParty/FreeRTOS/tasks.c ****             memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 595:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 596:ThirdParty/FreeRTOS/tasks.c **** 
 597:ThirdParty/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has be
 598:ThirdParty/FreeRTOS/tasks.c ****             {
 599:ThirdParty/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 600:ThirdParty/FreeRTOS/tasks.c ****                  * task was created statically in case the task is later deleted. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 12


 601:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 602:ThirdParty/FreeRTOS/tasks.c ****             }
 603:ThirdParty/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 604:ThirdParty/FreeRTOS/tasks.c **** 
 605:ThirdParty/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xRet
 606:ThirdParty/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 607:ThirdParty/FreeRTOS/tasks.c ****         }
 608:ThirdParty/FreeRTOS/tasks.c ****         else
 609:ThirdParty/FreeRTOS/tasks.c ****         {
 610:ThirdParty/FreeRTOS/tasks.c ****             xReturn = NULL;
 611:ThirdParty/FreeRTOS/tasks.c ****         }
 612:ThirdParty/FreeRTOS/tasks.c **** 
 613:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
 614:ThirdParty/FreeRTOS/tasks.c ****     }
 615:ThirdParty/FreeRTOS/tasks.c **** 
 616:ThirdParty/FreeRTOS/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 617:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 618:ThirdParty/FreeRTOS/tasks.c **** 
 619:ThirdParty/FreeRTOS/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 620:ThirdParty/FreeRTOS/tasks.c **** 
 621:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition,
 622:ThirdParty/FreeRTOS/tasks.c ****                                             TaskHandle_t * pxCreatedTask )
 623:ThirdParty/FreeRTOS/tasks.c ****     {
 624:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 625:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 626:ThirdParty/FreeRTOS/tasks.c **** 
 627:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 628:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 629:ThirdParty/FreeRTOS/tasks.c **** 
 630:ThirdParty/FreeRTOS/tasks.c ****         if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NUL
 631:ThirdParty/FreeRTOS/tasks.c ****         {
 632:ThirdParty/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 633:ThirdParty/FreeRTOS/tasks.c ****              * on the implementation of the port malloc function and whether or
 634:ThirdParty/FreeRTOS/tasks.c ****              * not static allocation is being used. */
 635:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 636:ThirdParty/FreeRTOS/tasks.c ****             memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 637:ThirdParty/FreeRTOS/tasks.c **** 
 638:ThirdParty/FreeRTOS/tasks.c ****             /* Store the stack location in the TCB. */
 639:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 640:ThirdParty/FreeRTOS/tasks.c **** 
 641:ThirdParty/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 642:ThirdParty/FreeRTOS/tasks.c ****             {
 643:ThirdParty/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 644:ThirdParty/FreeRTOS/tasks.c ****                  * task was created statically in case the task is later deleted. */
 645:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 646:ThirdParty/FreeRTOS/tasks.c ****             }
 647:ThirdParty/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 648:ThirdParty/FreeRTOS/tasks.c **** 
 649:ThirdParty/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 650:ThirdParty/FreeRTOS/tasks.c ****                                   pxTaskDefinition->pcName,
 651:ThirdParty/FreeRTOS/tasks.c ****                                   ( uint32_t ) pxTaskDefinition->usStackDepth,
 652:ThirdParty/FreeRTOS/tasks.c ****                                   pxTaskDefinition->pvParameters,
 653:ThirdParty/FreeRTOS/tasks.c ****                                   pxTaskDefinition->uxPriority,
 654:ThirdParty/FreeRTOS/tasks.c ****                                   pxCreatedTask, pxNewTCB,
 655:ThirdParty/FreeRTOS/tasks.c ****                                   pxTaskDefinition->xRegions );
 656:ThirdParty/FreeRTOS/tasks.c **** 
 657:ThirdParty/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 13


 658:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdPASS;
 659:ThirdParty/FreeRTOS/tasks.c ****         }
 660:ThirdParty/FreeRTOS/tasks.c **** 
 661:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
 662:ThirdParty/FreeRTOS/tasks.c ****     }
 663:ThirdParty/FreeRTOS/tasks.c **** 
 664:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 665:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 666:ThirdParty/FreeRTOS/tasks.c **** 
 667:ThirdParty/FreeRTOS/tasks.c **** #if ( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 668:ThirdParty/FreeRTOS/tasks.c **** 
 669:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition,
 670:ThirdParty/FreeRTOS/tasks.c ****                                       TaskHandle_t * pxCreatedTask )
 671:ThirdParty/FreeRTOS/tasks.c ****     {
 672:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 673:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 674:ThirdParty/FreeRTOS/tasks.c **** 
 675:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTaskDefinition->puxStackBuffer );
 676:ThirdParty/FreeRTOS/tasks.c **** 
 677:ThirdParty/FreeRTOS/tasks.c ****         if( pxTaskDefinition->puxStackBuffer != NULL )
 678:ThirdParty/FreeRTOS/tasks.c ****         {
 679:ThirdParty/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends
 680:ThirdParty/FreeRTOS/tasks.c ****              * on the implementation of the port malloc function and whether or
 681:ThirdParty/FreeRTOS/tasks.c ****              * not static allocation is being used. */
 682:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 683:ThirdParty/FreeRTOS/tasks.c **** 
 684:ThirdParty/FreeRTOS/tasks.c ****             if( pxNewTCB != NULL )
 685:ThirdParty/FreeRTOS/tasks.c ****             {
 686:ThirdParty/FreeRTOS/tasks.c ****                 memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 687:ThirdParty/FreeRTOS/tasks.c **** 
 688:ThirdParty/FreeRTOS/tasks.c ****                 /* Store the stack location in the TCB. */
 689:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 690:ThirdParty/FreeRTOS/tasks.c **** 
 691:ThirdParty/FreeRTOS/tasks.c ****                 #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 692:ThirdParty/FreeRTOS/tasks.c ****                 {
 693:ThirdParty/FreeRTOS/tasks.c ****                     /* Tasks can be created statically or dynamically, so note
 694:ThirdParty/FreeRTOS/tasks.c ****                      * this task had a statically allocated stack in case it is
 695:ThirdParty/FreeRTOS/tasks.c ****                      * later deleted.  The TCB was allocated dynamically. */
 696:ThirdParty/FreeRTOS/tasks.c ****                     pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 697:ThirdParty/FreeRTOS/tasks.c ****                 }
 698:ThirdParty/FreeRTOS/tasks.c ****                 #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 699:ThirdParty/FreeRTOS/tasks.c **** 
 700:ThirdParty/FreeRTOS/tasks.c ****                 prvInitialiseNewTask( pxTaskDefinition->pvTaskCode,
 701:ThirdParty/FreeRTOS/tasks.c ****                                       pxTaskDefinition->pcName,
 702:ThirdParty/FreeRTOS/tasks.c ****                                       ( uint32_t ) pxTaskDefinition->usStackDepth,
 703:ThirdParty/FreeRTOS/tasks.c ****                                       pxTaskDefinition->pvParameters,
 704:ThirdParty/FreeRTOS/tasks.c ****                                       pxTaskDefinition->uxPriority,
 705:ThirdParty/FreeRTOS/tasks.c ****                                       pxCreatedTask, pxNewTCB,
 706:ThirdParty/FreeRTOS/tasks.c ****                                       pxTaskDefinition->xRegions );
 707:ThirdParty/FreeRTOS/tasks.c **** 
 708:ThirdParty/FreeRTOS/tasks.c ****                 prvAddNewTaskToReadyList( pxNewTCB );
 709:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 710:ThirdParty/FreeRTOS/tasks.c ****             }
 711:ThirdParty/FreeRTOS/tasks.c ****         }
 712:ThirdParty/FreeRTOS/tasks.c **** 
 713:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
 714:ThirdParty/FreeRTOS/tasks.c ****     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 14


 715:ThirdParty/FreeRTOS/tasks.c **** 
 716:ThirdParty/FreeRTOS/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 717:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 718:ThirdParty/FreeRTOS/tasks.c **** 
 719:ThirdParty/FreeRTOS/tasks.c **** #if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 720:ThirdParty/FreeRTOS/tasks.c **** 
 721:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskCreate( TaskFunction_t pxTaskCode,
 722:ThirdParty/FreeRTOS/tasks.c ****                             const char * const pcName, /*lint !e971 Unqualified char types are allo
 723:ThirdParty/FreeRTOS/tasks.c ****                             const configSTACK_DEPTH_TYPE usStackDepth,
 724:ThirdParty/FreeRTOS/tasks.c ****                             void * const pvParameters,
 725:ThirdParty/FreeRTOS/tasks.c ****                             UBaseType_t uxPriority,
 726:ThirdParty/FreeRTOS/tasks.c ****                             TaskHandle_t * const pxCreatedTask )
 727:ThirdParty/FreeRTOS/tasks.c ****     {
 728:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 729:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 730:ThirdParty/FreeRTOS/tasks.c **** 
 731:ThirdParty/FreeRTOS/tasks.c ****         /* If the stack grows down then allocate the stack then the TCB so the stack
 732:ThirdParty/FreeRTOS/tasks.c ****          * does not grow into the TCB.  Likewise if the stack grows up then allocate
 733:ThirdParty/FreeRTOS/tasks.c ****          * the TCB then the stack. */
 734:ThirdParty/FreeRTOS/tasks.c ****         #if ( portSTACK_GROWTH > 0 )
 735:ThirdParty/FreeRTOS/tasks.c ****         {
 736:ThirdParty/FreeRTOS/tasks.c ****             /* Allocate space for the TCB.  Where the memory comes from depends on
 737:ThirdParty/FreeRTOS/tasks.c ****              * the implementation of the port malloc function and whether or not static
 738:ThirdParty/FreeRTOS/tasks.c ****              * allocation is being used. */
 739:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 740:ThirdParty/FreeRTOS/tasks.c **** 
 741:ThirdParty/FreeRTOS/tasks.c ****             if( pxNewTCB != NULL )
 742:ThirdParty/FreeRTOS/tasks.c ****             {
 743:ThirdParty/FreeRTOS/tasks.c ****                 memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 744:ThirdParty/FreeRTOS/tasks.c **** 
 745:ThirdParty/FreeRTOS/tasks.c ****                 /* Allocate space for the stack used by the task being created.
 746:ThirdParty/FreeRTOS/tasks.c ****                  * The base of the stack memory stored in the TCB so the task can
 747:ThirdParty/FreeRTOS/tasks.c ****                  * be deleted later if required. */
 748:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxStack = ( StackType_t * ) pvPortMallocStack( ( ( ( size_t ) usStackDept
 749:ThirdParty/FreeRTOS/tasks.c **** 
 750:ThirdParty/FreeRTOS/tasks.c ****                 if( pxNewTCB->pxStack == NULL )
 751:ThirdParty/FreeRTOS/tasks.c ****                 {
 752:ThirdParty/FreeRTOS/tasks.c ****                     /* Could not allocate the stack.  Delete the allocated TCB. */
 753:ThirdParty/FreeRTOS/tasks.c ****                     vPortFree( pxNewTCB );
 754:ThirdParty/FreeRTOS/tasks.c ****                     pxNewTCB = NULL;
 755:ThirdParty/FreeRTOS/tasks.c ****                 }
 756:ThirdParty/FreeRTOS/tasks.c ****             }
 757:ThirdParty/FreeRTOS/tasks.c ****         }
 758:ThirdParty/FreeRTOS/tasks.c ****         #else /* portSTACK_GROWTH */
 759:ThirdParty/FreeRTOS/tasks.c ****         {
 760:ThirdParty/FreeRTOS/tasks.c ****             StackType_t * pxStack;
 761:ThirdParty/FreeRTOS/tasks.c **** 
 762:ThirdParty/FreeRTOS/tasks.c ****             /* Allocate space for the stack used by the task being created. */
 763:ThirdParty/FreeRTOS/tasks.c ****             pxStack = pvPortMallocStack( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) );
 764:ThirdParty/FreeRTOS/tasks.c **** 
 765:ThirdParty/FreeRTOS/tasks.c ****             if( pxStack != NULL )
 766:ThirdParty/FreeRTOS/tasks.c ****             {
 767:ThirdParty/FreeRTOS/tasks.c ****                 /* Allocate space for the TCB. */
 768:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All va
 769:ThirdParty/FreeRTOS/tasks.c **** 
 770:ThirdParty/FreeRTOS/tasks.c ****                 if( pxNewTCB != NULL )
 771:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 15


 772:ThirdParty/FreeRTOS/tasks.c ****                     memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 773:ThirdParty/FreeRTOS/tasks.c **** 
 774:ThirdParty/FreeRTOS/tasks.c ****                     /* Store the stack location in the TCB. */
 775:ThirdParty/FreeRTOS/tasks.c ****                     pxNewTCB->pxStack = pxStack;
 776:ThirdParty/FreeRTOS/tasks.c ****                 }
 777:ThirdParty/FreeRTOS/tasks.c ****                 else
 778:ThirdParty/FreeRTOS/tasks.c ****                 {
 779:ThirdParty/FreeRTOS/tasks.c ****                     /* The stack cannot be used as the TCB was not created.  Free
 780:ThirdParty/FreeRTOS/tasks.c ****                      * it again. */
 781:ThirdParty/FreeRTOS/tasks.c ****                     vPortFreeStack( pxStack );
 782:ThirdParty/FreeRTOS/tasks.c ****                 }
 783:ThirdParty/FreeRTOS/tasks.c ****             }
 784:ThirdParty/FreeRTOS/tasks.c ****             else
 785:ThirdParty/FreeRTOS/tasks.c ****             {
 786:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB = NULL;
 787:ThirdParty/FreeRTOS/tasks.c ****             }
 788:ThirdParty/FreeRTOS/tasks.c ****         }
 789:ThirdParty/FreeRTOS/tasks.c ****         #endif /* portSTACK_GROWTH */
 790:ThirdParty/FreeRTOS/tasks.c **** 
 791:ThirdParty/FreeRTOS/tasks.c ****         if( pxNewTCB != NULL )
 792:ThirdParty/FreeRTOS/tasks.c ****         {
 793:ThirdParty/FreeRTOS/tasks.c ****             #if ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has be
 794:ThirdParty/FreeRTOS/tasks.c ****             {
 795:ThirdParty/FreeRTOS/tasks.c ****                 /* Tasks can be created statically or dynamically, so note this
 796:ThirdParty/FreeRTOS/tasks.c ****                  * task was created dynamically in case it is later deleted. */
 797:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 798:ThirdParty/FreeRTOS/tasks.c ****             }
 799:ThirdParty/FreeRTOS/tasks.c ****             #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 800:ThirdParty/FreeRTOS/tasks.c **** 
 801:ThirdParty/FreeRTOS/tasks.c ****             prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPr
 802:ThirdParty/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 803:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdPASS;
 804:ThirdParty/FreeRTOS/tasks.c ****         }
 805:ThirdParty/FreeRTOS/tasks.c ****         else
 806:ThirdParty/FreeRTOS/tasks.c ****         {
 807:ThirdParty/FreeRTOS/tasks.c ****             xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 808:ThirdParty/FreeRTOS/tasks.c ****         }
 809:ThirdParty/FreeRTOS/tasks.c **** 
 810:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
 811:ThirdParty/FreeRTOS/tasks.c ****     }
 812:ThirdParty/FreeRTOS/tasks.c **** 
 813:ThirdParty/FreeRTOS/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 814:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 815:ThirdParty/FreeRTOS/tasks.c **** 
 816:ThirdParty/FreeRTOS/tasks.c **** static void prvInitialiseNewTask( TaskFunction_t pxTaskCode,
 817:ThirdParty/FreeRTOS/tasks.c ****                                   const char * const pcName, /*lint !e971 Unqualified char types ar
 818:ThirdParty/FreeRTOS/tasks.c ****                                   const uint32_t ulStackDepth,
 819:ThirdParty/FreeRTOS/tasks.c ****                                   void * const pvParameters,
 820:ThirdParty/FreeRTOS/tasks.c ****                                   UBaseType_t uxPriority,
 821:ThirdParty/FreeRTOS/tasks.c ****                                   TaskHandle_t * const pxCreatedTask,
 822:ThirdParty/FreeRTOS/tasks.c ****                                   TCB_t * pxNewTCB,
 823:ThirdParty/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions )
 824:ThirdParty/FreeRTOS/tasks.c **** {
 825:ThirdParty/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 826:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t x;
 827:ThirdParty/FreeRTOS/tasks.c **** 
 828:ThirdParty/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 16


 829:ThirdParty/FreeRTOS/tasks.c ****         /* Should the task be created in privileged mode? */
 830:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xRunPrivileged;
 831:ThirdParty/FreeRTOS/tasks.c **** 
 832:ThirdParty/FreeRTOS/tasks.c ****         if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 833:ThirdParty/FreeRTOS/tasks.c ****         {
 834:ThirdParty/FreeRTOS/tasks.c ****             xRunPrivileged = pdTRUE;
 835:ThirdParty/FreeRTOS/tasks.c ****         }
 836:ThirdParty/FreeRTOS/tasks.c ****         else
 837:ThirdParty/FreeRTOS/tasks.c ****         {
 838:ThirdParty/FreeRTOS/tasks.c ****             xRunPrivileged = pdFALSE;
 839:ThirdParty/FreeRTOS/tasks.c ****         }
 840:ThirdParty/FreeRTOS/tasks.c ****         uxPriority &= ~portPRIVILEGE_BIT;
 841:ThirdParty/FreeRTOS/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS == 1 */
 842:ThirdParty/FreeRTOS/tasks.c **** 
 843:ThirdParty/FreeRTOS/tasks.c ****     /* Avoid dependency on memset() if it is not required. */
 844:ThirdParty/FreeRTOS/tasks.c ****     #if ( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 845:ThirdParty/FreeRTOS/tasks.c ****     {
 846:ThirdParty/FreeRTOS/tasks.c ****         /* Fill the stack with a known value to assist debugging. */
 847:ThirdParty/FreeRTOS/tasks.c ****         ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * s
 848:ThirdParty/FreeRTOS/tasks.c ****     }
 849:ThirdParty/FreeRTOS/tasks.c ****     #endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 850:ThirdParty/FreeRTOS/tasks.c **** 
 851:ThirdParty/FreeRTOS/tasks.c ****     /* Calculate the top of stack address.  This depends on whether the stack
 852:ThirdParty/FreeRTOS/tasks.c ****      * grows from high memory to low (as per the 80x86) or vice versa.
 853:ThirdParty/FreeRTOS/tasks.c ****      * portSTACK_GROWTH is used to make the result positive or negative as required
 854:ThirdParty/FreeRTOS/tasks.c ****      * by the port. */
 855:ThirdParty/FreeRTOS/tasks.c ****     #if ( portSTACK_GROWTH < 0 )
 856:ThirdParty/FreeRTOS/tasks.c ****     {
 857:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 858:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 859:ThirdParty/FreeRTOS/tasks.c **** 
 860:ThirdParty/FreeRTOS/tasks.c ****         /* Check the alignment of the calculated top of stack is correct. */
 861:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBY
 862:ThirdParty/FreeRTOS/tasks.c **** 
 863:ThirdParty/FreeRTOS/tasks.c ****         #if ( configRECORD_STACK_HIGH_ADDRESS == 1 )
 864:ThirdParty/FreeRTOS/tasks.c ****         {
 865:ThirdParty/FreeRTOS/tasks.c ****             /* Also record the stack's high address, which may assist
 866:ThirdParty/FreeRTOS/tasks.c ****              * debugging. */
 867:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pxEndOfStack = pxTopOfStack;
 868:ThirdParty/FreeRTOS/tasks.c ****         }
 869:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configRECORD_STACK_HIGH_ADDRESS */
 870:ThirdParty/FreeRTOS/tasks.c ****     }
 871:ThirdParty/FreeRTOS/tasks.c ****     #else /* portSTACK_GROWTH */
 872:ThirdParty/FreeRTOS/tasks.c ****     {
 873:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = pxNewTCB->pxStack;
 874:ThirdParty/FreeRTOS/tasks.c **** 
 875:ThirdParty/FreeRTOS/tasks.c ****         /* Check the alignment of the stack buffer is correct. */
 876:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) p
 877:ThirdParty/FreeRTOS/tasks.c **** 
 878:ThirdParty/FreeRTOS/tasks.c ****         /* The other extreme of the stack space is required if stack checking is
 879:ThirdParty/FreeRTOS/tasks.c ****          * performed. */
 880:ThirdParty/FreeRTOS/tasks.c ****         pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 881:ThirdParty/FreeRTOS/tasks.c ****     }
 882:ThirdParty/FreeRTOS/tasks.c ****     #endif /* portSTACK_GROWTH */
 883:ThirdParty/FreeRTOS/tasks.c **** 
 884:ThirdParty/FreeRTOS/tasks.c ****     /* Store the task name in the TCB. */
 885:ThirdParty/FreeRTOS/tasks.c ****     if( pcName != NULL )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 17


 886:ThirdParty/FreeRTOS/tasks.c ****     {
 887:ThirdParty/FreeRTOS/tasks.c ****         for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 888:ThirdParty/FreeRTOS/tasks.c ****         {
 889:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 890:ThirdParty/FreeRTOS/tasks.c **** 
 891:ThirdParty/FreeRTOS/tasks.c ****             /* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 892:ThirdParty/FreeRTOS/tasks.c ****              * configMAX_TASK_NAME_LEN characters just in case the memory after the
 893:ThirdParty/FreeRTOS/tasks.c ****              * string is not accessible (extremely unlikely). */
 894:ThirdParty/FreeRTOS/tasks.c ****             if( pcName[ x ] == ( char ) 0x00 )
 895:ThirdParty/FreeRTOS/tasks.c ****             {
 896:ThirdParty/FreeRTOS/tasks.c ****                 break;
 897:ThirdParty/FreeRTOS/tasks.c ****             }
 898:ThirdParty/FreeRTOS/tasks.c ****             else
 899:ThirdParty/FreeRTOS/tasks.c ****             {
 900:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
 901:ThirdParty/FreeRTOS/tasks.c ****             }
 902:ThirdParty/FreeRTOS/tasks.c ****         }
 903:ThirdParty/FreeRTOS/tasks.c **** 
 904:ThirdParty/FreeRTOS/tasks.c ****         /* Ensure the name string is terminated in the case that the string length
 905:ThirdParty/FreeRTOS/tasks.c ****          * was greater or equal to configMAX_TASK_NAME_LEN. */
 906:ThirdParty/FreeRTOS/tasks.c ****         pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 907:ThirdParty/FreeRTOS/tasks.c ****     }
 908:ThirdParty/FreeRTOS/tasks.c ****     else
 909:ThirdParty/FreeRTOS/tasks.c ****     {
 910:ThirdParty/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 911:ThirdParty/FreeRTOS/tasks.c ****     }
 912:ThirdParty/FreeRTOS/tasks.c **** 
 913:ThirdParty/FreeRTOS/tasks.c ****     /* This is used as an array index so must ensure it's not too large. */
 914:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( uxPriority < configMAX_PRIORITIES );
 915:ThirdParty/FreeRTOS/tasks.c **** 
 916:ThirdParty/FreeRTOS/tasks.c ****     if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 917:ThirdParty/FreeRTOS/tasks.c ****     {
 918:ThirdParty/FreeRTOS/tasks.c ****         uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 919:ThirdParty/FreeRTOS/tasks.c ****     }
 920:ThirdParty/FreeRTOS/tasks.c ****     else
 921:ThirdParty/FreeRTOS/tasks.c ****     {
 922:ThirdParty/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 923:ThirdParty/FreeRTOS/tasks.c ****     }
 924:ThirdParty/FreeRTOS/tasks.c **** 
 925:ThirdParty/FreeRTOS/tasks.c ****     pxNewTCB->uxPriority = uxPriority;
 926:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 927:ThirdParty/FreeRTOS/tasks.c ****     {
 928:ThirdParty/FreeRTOS/tasks.c ****         pxNewTCB->uxBasePriority = uxPriority;
 929:ThirdParty/FreeRTOS/tasks.c ****     }
 930:ThirdParty/FreeRTOS/tasks.c ****     #endif /* configUSE_MUTEXES */
 931:ThirdParty/FreeRTOS/tasks.c **** 
 932:ThirdParty/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 933:ThirdParty/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 934:ThirdParty/FreeRTOS/tasks.c **** 
 935:ThirdParty/FreeRTOS/tasks.c ****     /* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 936:ThirdParty/FreeRTOS/tasks.c ****      * back to  the containing TCB from a generic item in a list. */
 937:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 938:ThirdParty/FreeRTOS/tasks.c **** 
 939:ThirdParty/FreeRTOS/tasks.c ****     /* Event lists are always in priority order. */
 940:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - (
 941:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 942:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 18


 943:ThirdParty/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 944:ThirdParty/FreeRTOS/tasks.c ****     {
 945:ThirdParty/FreeRTOS/tasks.c ****         vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStac
 946:ThirdParty/FreeRTOS/tasks.c ****     }
 947:ThirdParty/FreeRTOS/tasks.c ****     #else
 948:ThirdParty/FreeRTOS/tasks.c ****     {
 949:ThirdParty/FreeRTOS/tasks.c ****         /* Avoid compiler warning about unreferenced parameter. */
 950:ThirdParty/FreeRTOS/tasks.c ****         ( void ) xRegions;
 951:ThirdParty/FreeRTOS/tasks.c ****     }
 952:ThirdParty/FreeRTOS/tasks.c ****     #endif
 953:ThirdParty/FreeRTOS/tasks.c **** 
 954:ThirdParty/FreeRTOS/tasks.c ****     #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
 955:ThirdParty/FreeRTOS/tasks.c ****     {
 956:ThirdParty/FreeRTOS/tasks.c ****         /* Allocate and initialize memory for the task's TLS Block. */
 957:ThirdParty/FreeRTOS/tasks.c ****         configINIT_TLS_BLOCK( pxNewTCB->xTLSBlock );
 958:ThirdParty/FreeRTOS/tasks.c ****     }
 959:ThirdParty/FreeRTOS/tasks.c ****     #endif
 960:ThirdParty/FreeRTOS/tasks.c **** 
 961:ThirdParty/FreeRTOS/tasks.c ****     /* Initialize the TCB stack to look as if the task was already running,
 962:ThirdParty/FreeRTOS/tasks.c ****      * but had been interrupted by the scheduler.  The return address is set
 963:ThirdParty/FreeRTOS/tasks.c ****      * to the start of the task function. Once the stack has been initialised
 964:ThirdParty/FreeRTOS/tasks.c ****      * the top of stack variable is updated. */
 965:ThirdParty/FreeRTOS/tasks.c ****     #if ( portUSING_MPU_WRAPPERS == 1 )
 966:ThirdParty/FreeRTOS/tasks.c ****     {
 967:ThirdParty/FreeRTOS/tasks.c ****         /* If the port has capability to detect stack overflow,
 968:ThirdParty/FreeRTOS/tasks.c ****          * pass the stack end address to the stack initialization
 969:ThirdParty/FreeRTOS/tasks.c ****          * function as well. */
 970:ThirdParty/FreeRTOS/tasks.c ****         #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
 971:ThirdParty/FreeRTOS/tasks.c ****         {
 972:ThirdParty/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH < 0 )
 973:ThirdParty/FreeRTOS/tasks.c ****             {
 974:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, px
 975:ThirdParty/FreeRTOS/tasks.c ****             }
 976:ThirdParty/FreeRTOS/tasks.c ****             #else /* portSTACK_GROWTH */
 977:ThirdParty/FreeRTOS/tasks.c ****             {
 978:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStac
 979:ThirdParty/FreeRTOS/tasks.c ****             }
 980:ThirdParty/FreeRTOS/tasks.c ****             #endif /* portSTACK_GROWTH */
 981:ThirdParty/FreeRTOS/tasks.c ****         }
 982:ThirdParty/FreeRTOS/tasks.c ****         #else /* portHAS_STACK_OVERFLOW_CHECKING */
 983:ThirdParty/FreeRTOS/tasks.c ****         {
 984:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters,
 985:ThirdParty/FreeRTOS/tasks.c ****         }
 986:ThirdParty/FreeRTOS/tasks.c ****         #endif /* portHAS_STACK_OVERFLOW_CHECKING */
 987:ThirdParty/FreeRTOS/tasks.c ****     }
 988:ThirdParty/FreeRTOS/tasks.c ****     #else /* portUSING_MPU_WRAPPERS */
 989:ThirdParty/FreeRTOS/tasks.c ****     {
 990:ThirdParty/FreeRTOS/tasks.c ****         /* If the port has capability to detect stack overflow,
 991:ThirdParty/FreeRTOS/tasks.c ****          * pass the stack end address to the stack initialization
 992:ThirdParty/FreeRTOS/tasks.c ****          * function as well. */
 993:ThirdParty/FreeRTOS/tasks.c ****         #if ( portHAS_STACK_OVERFLOW_CHECKING == 1 )
 994:ThirdParty/FreeRTOS/tasks.c ****         {
 995:ThirdParty/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH < 0 )
 996:ThirdParty/FreeRTOS/tasks.c ****             {
 997:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, px
 998:ThirdParty/FreeRTOS/tasks.c ****             }
 999:ThirdParty/FreeRTOS/tasks.c ****             #else /* portSTACK_GROWTH */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 19


1000:ThirdParty/FreeRTOS/tasks.c ****             {
1001:ThirdParty/FreeRTOS/tasks.c ****                 pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStac
1002:ThirdParty/FreeRTOS/tasks.c ****             }
1003:ThirdParty/FreeRTOS/tasks.c ****             #endif /* portSTACK_GROWTH */
1004:ThirdParty/FreeRTOS/tasks.c ****         }
1005:ThirdParty/FreeRTOS/tasks.c ****         #else /* portHAS_STACK_OVERFLOW_CHECKING */
1006:ThirdParty/FreeRTOS/tasks.c ****         {
1007:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters 
1008:ThirdParty/FreeRTOS/tasks.c ****         }
1009:ThirdParty/FreeRTOS/tasks.c ****         #endif /* portHAS_STACK_OVERFLOW_CHECKING */
1010:ThirdParty/FreeRTOS/tasks.c ****     }
1011:ThirdParty/FreeRTOS/tasks.c ****     #endif /* portUSING_MPU_WRAPPERS */
1012:ThirdParty/FreeRTOS/tasks.c **** 
1013:ThirdParty/FreeRTOS/tasks.c ****     if( pxCreatedTask != NULL )
1014:ThirdParty/FreeRTOS/tasks.c ****     {
1015:ThirdParty/FreeRTOS/tasks.c ****         /* Pass the handle out in an anonymous way.  The handle can be used to
1016:ThirdParty/FreeRTOS/tasks.c ****          * change the created task's priority, delete the created task, etc.*/
1017:ThirdParty/FreeRTOS/tasks.c ****         *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1018:ThirdParty/FreeRTOS/tasks.c ****     }
1019:ThirdParty/FreeRTOS/tasks.c ****     else
1020:ThirdParty/FreeRTOS/tasks.c ****     {
1021:ThirdParty/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1022:ThirdParty/FreeRTOS/tasks.c ****     }
1023:ThirdParty/FreeRTOS/tasks.c **** }
1024:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1025:ThirdParty/FreeRTOS/tasks.c **** 
1026:ThirdParty/FreeRTOS/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
1027:ThirdParty/FreeRTOS/tasks.c **** {
1028:ThirdParty/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
1029:ThirdParty/FreeRTOS/tasks.c ****      * updated. */
1030:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
1031:ThirdParty/FreeRTOS/tasks.c ****     {
1032:ThirdParty/FreeRTOS/tasks.c ****         uxCurrentNumberOfTasks++;
1033:ThirdParty/FreeRTOS/tasks.c **** 
1034:ThirdParty/FreeRTOS/tasks.c ****         if( pxCurrentTCB == NULL )
1035:ThirdParty/FreeRTOS/tasks.c ****         {
1036:ThirdParty/FreeRTOS/tasks.c ****             /* There are no other tasks, or all the other tasks are in
1037:ThirdParty/FreeRTOS/tasks.c ****              * the suspended state - make this the current task. */
1038:ThirdParty/FreeRTOS/tasks.c ****             pxCurrentTCB = pxNewTCB;
1039:ThirdParty/FreeRTOS/tasks.c **** 
1040:ThirdParty/FreeRTOS/tasks.c ****             if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1041:ThirdParty/FreeRTOS/tasks.c ****             {
1042:ThirdParty/FreeRTOS/tasks.c ****                 /* This is the first task to be created so do the preliminary
1043:ThirdParty/FreeRTOS/tasks.c ****                  * initialisation required.  We will not recover if this call
1044:ThirdParty/FreeRTOS/tasks.c ****                  * fails, but we will report the failure. */
1045:ThirdParty/FreeRTOS/tasks.c ****                 prvInitialiseTaskLists();
1046:ThirdParty/FreeRTOS/tasks.c ****             }
1047:ThirdParty/FreeRTOS/tasks.c ****             else
1048:ThirdParty/FreeRTOS/tasks.c ****             {
1049:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1050:ThirdParty/FreeRTOS/tasks.c ****             }
1051:ThirdParty/FreeRTOS/tasks.c ****         }
1052:ThirdParty/FreeRTOS/tasks.c ****         else
1053:ThirdParty/FreeRTOS/tasks.c ****         {
1054:ThirdParty/FreeRTOS/tasks.c ****             /* If the scheduler is not already running, make this task the
1055:ThirdParty/FreeRTOS/tasks.c ****              * current task if it is the highest priority task to be created
1056:ThirdParty/FreeRTOS/tasks.c ****              * so far. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 20


1057:ThirdParty/FreeRTOS/tasks.c ****             if( xSchedulerRunning == pdFALSE )
1058:ThirdParty/FreeRTOS/tasks.c ****             {
1059:ThirdParty/FreeRTOS/tasks.c ****                 if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1060:ThirdParty/FreeRTOS/tasks.c ****                 {
1061:ThirdParty/FreeRTOS/tasks.c ****                     pxCurrentTCB = pxNewTCB;
1062:ThirdParty/FreeRTOS/tasks.c ****                 }
1063:ThirdParty/FreeRTOS/tasks.c ****                 else
1064:ThirdParty/FreeRTOS/tasks.c ****                 {
1065:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1066:ThirdParty/FreeRTOS/tasks.c ****                 }
1067:ThirdParty/FreeRTOS/tasks.c ****             }
1068:ThirdParty/FreeRTOS/tasks.c ****             else
1069:ThirdParty/FreeRTOS/tasks.c ****             {
1070:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1071:ThirdParty/FreeRTOS/tasks.c ****             }
1072:ThirdParty/FreeRTOS/tasks.c ****         }
1073:ThirdParty/FreeRTOS/tasks.c **** 
1074:ThirdParty/FreeRTOS/tasks.c ****         uxTaskNumber++;
1075:ThirdParty/FreeRTOS/tasks.c **** 
1076:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_TRACE_FACILITY == 1 )
1077:ThirdParty/FreeRTOS/tasks.c ****         {
1078:ThirdParty/FreeRTOS/tasks.c ****             /* Add a counter into the TCB for tracing only. */
1079:ThirdParty/FreeRTOS/tasks.c ****             pxNewTCB->uxTCBNumber = uxTaskNumber;
1080:ThirdParty/FreeRTOS/tasks.c ****         }
1081:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_TRACE_FACILITY */
1082:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_CREATE( pxNewTCB );
1083:ThirdParty/FreeRTOS/tasks.c **** 
1084:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxNewTCB );
1085:ThirdParty/FreeRTOS/tasks.c **** 
1086:ThirdParty/FreeRTOS/tasks.c ****         portSETUP_TCB( pxNewTCB );
1087:ThirdParty/FreeRTOS/tasks.c ****     }
1088:ThirdParty/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
1089:ThirdParty/FreeRTOS/tasks.c **** 
1090:ThirdParty/FreeRTOS/tasks.c ****     if( xSchedulerRunning != pdFALSE )
1091:ThirdParty/FreeRTOS/tasks.c ****     {
1092:ThirdParty/FreeRTOS/tasks.c ****         /* If the created task is of a higher priority than the current task
1093:ThirdParty/FreeRTOS/tasks.c ****          * then it should run now. */
1094:ThirdParty/FreeRTOS/tasks.c ****         if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1095:ThirdParty/FreeRTOS/tasks.c ****         {
1096:ThirdParty/FreeRTOS/tasks.c ****             taskYIELD_IF_USING_PREEMPTION();
1097:ThirdParty/FreeRTOS/tasks.c ****         }
1098:ThirdParty/FreeRTOS/tasks.c ****         else
1099:ThirdParty/FreeRTOS/tasks.c ****         {
1100:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1101:ThirdParty/FreeRTOS/tasks.c ****         }
1102:ThirdParty/FreeRTOS/tasks.c ****     }
1103:ThirdParty/FreeRTOS/tasks.c ****     else
1104:ThirdParty/FreeRTOS/tasks.c ****     {
1105:ThirdParty/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
1106:ThirdParty/FreeRTOS/tasks.c ****     }
1107:ThirdParty/FreeRTOS/tasks.c **** }
1108:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1109:ThirdParty/FreeRTOS/tasks.c **** 
1110:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1111:ThirdParty/FreeRTOS/tasks.c **** 
1112:ThirdParty/FreeRTOS/tasks.c ****     void vTaskDelete( TaskHandle_t xTaskToDelete )
1113:ThirdParty/FreeRTOS/tasks.c ****     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 21


1114:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1115:ThirdParty/FreeRTOS/tasks.c **** 
1116:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1117:ThirdParty/FreeRTOS/tasks.c ****         {
1118:ThirdParty/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the calling task that is
1119:ThirdParty/FreeRTOS/tasks.c ****              * being deleted. */
1120:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1121:ThirdParty/FreeRTOS/tasks.c **** 
1122:ThirdParty/FreeRTOS/tasks.c ****             /* Remove task from the ready/delayed list. */
1123:ThirdParty/FreeRTOS/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1124:ThirdParty/FreeRTOS/tasks.c ****             {
1125:ThirdParty/FreeRTOS/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1126:ThirdParty/FreeRTOS/tasks.c ****             }
1127:ThirdParty/FreeRTOS/tasks.c ****             else
1128:ThirdParty/FreeRTOS/tasks.c ****             {
1129:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1130:ThirdParty/FreeRTOS/tasks.c ****             }
1131:ThirdParty/FreeRTOS/tasks.c **** 
1132:ThirdParty/FreeRTOS/tasks.c ****             /* Is the task waiting on an event also? */
1133:ThirdParty/FreeRTOS/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1134:ThirdParty/FreeRTOS/tasks.c ****             {
1135:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1136:ThirdParty/FreeRTOS/tasks.c ****             }
1137:ThirdParty/FreeRTOS/tasks.c ****             else
1138:ThirdParty/FreeRTOS/tasks.c ****             {
1139:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1140:ThirdParty/FreeRTOS/tasks.c ****             }
1141:ThirdParty/FreeRTOS/tasks.c **** 
1142:ThirdParty/FreeRTOS/tasks.c ****             /* Increment the uxTaskNumber also so kernel aware debuggers can
1143:ThirdParty/FreeRTOS/tasks.c ****              * detect that the task lists need re-generating.  This is done before
1144:ThirdParty/FreeRTOS/tasks.c ****              * portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1145:ThirdParty/FreeRTOS/tasks.c ****              * not return. */
1146:ThirdParty/FreeRTOS/tasks.c ****             uxTaskNumber++;
1147:ThirdParty/FreeRTOS/tasks.c **** 
1148:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
1149:ThirdParty/FreeRTOS/tasks.c ****             {
1150:ThirdParty/FreeRTOS/tasks.c ****                 /* A task is deleting itself.  This cannot complete within the
1151:ThirdParty/FreeRTOS/tasks.c ****                  * task itself, as a context switch to another task is required.
1152:ThirdParty/FreeRTOS/tasks.c ****                  * Place the task in the termination list.  The idle task will
1153:ThirdParty/FreeRTOS/tasks.c ****                  * check the termination list and free up any memory allocated by
1154:ThirdParty/FreeRTOS/tasks.c ****                  * the scheduler for the TCB and stack of the deleted task. */
1155:ThirdParty/FreeRTOS/tasks.c ****                 vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1156:ThirdParty/FreeRTOS/tasks.c **** 
1157:ThirdParty/FreeRTOS/tasks.c ****                 /* Increment the ucTasksDeleted variable so the idle task knows
1158:ThirdParty/FreeRTOS/tasks.c ****                  * there is a task that has been deleted and that it should therefore
1159:ThirdParty/FreeRTOS/tasks.c ****                  * check the xTasksWaitingTermination list. */
1160:ThirdParty/FreeRTOS/tasks.c ****                 ++uxDeletedTasksWaitingCleanUp;
1161:ThirdParty/FreeRTOS/tasks.c **** 
1162:ThirdParty/FreeRTOS/tasks.c ****                 /* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1163:ThirdParty/FreeRTOS/tasks.c ****                  * portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1164:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_DELETE( pxTCB );
1165:ThirdParty/FreeRTOS/tasks.c **** 
1166:ThirdParty/FreeRTOS/tasks.c ****                 /* The pre-delete hook is primarily for the Windows simulator,
1167:ThirdParty/FreeRTOS/tasks.c ****                  * in which Windows specific clean up operations are performed,
1168:ThirdParty/FreeRTOS/tasks.c ****                  * after which it is not possible to yield away from this task -
1169:ThirdParty/FreeRTOS/tasks.c ****                  * hence xYieldPending is used to latch that a context switch is
1170:ThirdParty/FreeRTOS/tasks.c ****                  * required. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 22


1171:ThirdParty/FreeRTOS/tasks.c ****                 portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1172:ThirdParty/FreeRTOS/tasks.c ****             }
1173:ThirdParty/FreeRTOS/tasks.c ****             else
1174:ThirdParty/FreeRTOS/tasks.c ****             {
1175:ThirdParty/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
1176:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_DELETE( pxTCB );
1177:ThirdParty/FreeRTOS/tasks.c **** 
1178:ThirdParty/FreeRTOS/tasks.c ****                 /* Reset the next expected unblock time in case it referred to
1179:ThirdParty/FreeRTOS/tasks.c ****                  * the task that has just been deleted. */
1180:ThirdParty/FreeRTOS/tasks.c ****                 prvResetNextTaskUnblockTime();
1181:ThirdParty/FreeRTOS/tasks.c ****             }
1182:ThirdParty/FreeRTOS/tasks.c ****         }
1183:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1184:ThirdParty/FreeRTOS/tasks.c **** 
1185:ThirdParty/FreeRTOS/tasks.c ****         /* If the task is not deleting itself, call prvDeleteTCB from outside of
1186:ThirdParty/FreeRTOS/tasks.c ****          * critical section. If a task deletes itself, prvDeleteTCB is called
1187:ThirdParty/FreeRTOS/tasks.c ****          * from prvCheckTasksWaitingTermination which is called from Idle task. */
1188:ThirdParty/FreeRTOS/tasks.c ****         if( pxTCB != pxCurrentTCB )
1189:ThirdParty/FreeRTOS/tasks.c ****         {
1190:ThirdParty/FreeRTOS/tasks.c ****             prvDeleteTCB( pxTCB );
1191:ThirdParty/FreeRTOS/tasks.c ****         }
1192:ThirdParty/FreeRTOS/tasks.c **** 
1193:ThirdParty/FreeRTOS/tasks.c ****         /* Force a reschedule if it is the currently running task that has just
1194:ThirdParty/FreeRTOS/tasks.c ****          * been deleted. */
1195:ThirdParty/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
1196:ThirdParty/FreeRTOS/tasks.c ****         {
1197:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
1198:ThirdParty/FreeRTOS/tasks.c ****             {
1199:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1200:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
1201:ThirdParty/FreeRTOS/tasks.c ****             }
1202:ThirdParty/FreeRTOS/tasks.c ****             else
1203:ThirdParty/FreeRTOS/tasks.c ****             {
1204:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1205:ThirdParty/FreeRTOS/tasks.c ****             }
1206:ThirdParty/FreeRTOS/tasks.c ****         }
1207:ThirdParty/FreeRTOS/tasks.c ****     }
1208:ThirdParty/FreeRTOS/tasks.c **** 
1209:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1210:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1211:ThirdParty/FreeRTOS/tasks.c **** 
1212:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskDelayUntil == 1 )
1213:ThirdParty/FreeRTOS/tasks.c **** 
1214:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskDelayUntil( TickType_t * const pxPreviousWakeTime,
1215:ThirdParty/FreeRTOS/tasks.c ****                                 const TickType_t xTimeIncrement )
1216:ThirdParty/FreeRTOS/tasks.c ****     {
1217:ThirdParty/FreeRTOS/tasks.c ****         TickType_t xTimeToWake;
1218:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1219:ThirdParty/FreeRTOS/tasks.c **** 
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxPreviousWakeTime );
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
1222:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
1223:ThirdParty/FreeRTOS/tasks.c **** 
1224:ThirdParty/FreeRTOS/tasks.c ****         vTaskSuspendAll();
1225:ThirdParty/FreeRTOS/tasks.c ****         {
1226:ThirdParty/FreeRTOS/tasks.c ****             /* Minor optimisation.  The tick count cannot change in this
1227:ThirdParty/FreeRTOS/tasks.c ****              * block. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 23


1228:ThirdParty/FreeRTOS/tasks.c ****             const TickType_t xConstTickCount = xTickCount;
1229:ThirdParty/FreeRTOS/tasks.c **** 
1230:ThirdParty/FreeRTOS/tasks.c ****             /* Generate the tick time at which the task wants to wake. */
1231:ThirdParty/FreeRTOS/tasks.c ****             xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1232:ThirdParty/FreeRTOS/tasks.c **** 
1233:ThirdParty/FreeRTOS/tasks.c ****             if( xConstTickCount < *pxPreviousWakeTime )
1234:ThirdParty/FreeRTOS/tasks.c ****             {
1235:ThirdParty/FreeRTOS/tasks.c ****                 /* The tick count has overflowed since this function was
1236:ThirdParty/FreeRTOS/tasks.c ****                  * lasted called.  In this case the only time we should ever
1237:ThirdParty/FreeRTOS/tasks.c ****                  * actually delay is if the wake time has also  overflowed,
1238:ThirdParty/FreeRTOS/tasks.c ****                  * and the wake time is greater than the tick time.  When this
1239:ThirdParty/FreeRTOS/tasks.c ****                  * is the case it is as if neither time had overflowed. */
1240:ThirdParty/FreeRTOS/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1241:ThirdParty/FreeRTOS/tasks.c ****                 {
1242:ThirdParty/FreeRTOS/tasks.c ****                     xShouldDelay = pdTRUE;
1243:ThirdParty/FreeRTOS/tasks.c ****                 }
1244:ThirdParty/FreeRTOS/tasks.c ****                 else
1245:ThirdParty/FreeRTOS/tasks.c ****                 {
1246:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1247:ThirdParty/FreeRTOS/tasks.c ****                 }
1248:ThirdParty/FreeRTOS/tasks.c ****             }
1249:ThirdParty/FreeRTOS/tasks.c ****             else
1250:ThirdParty/FreeRTOS/tasks.c ****             {
1251:ThirdParty/FreeRTOS/tasks.c ****                 /* The tick time has not overflowed.  In this case we will
1252:ThirdParty/FreeRTOS/tasks.c ****                  * delay if either the wake time has overflowed, and/or the
1253:ThirdParty/FreeRTOS/tasks.c ****                  * tick time is less than the wake time. */
1254:ThirdParty/FreeRTOS/tasks.c ****                 if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1255:ThirdParty/FreeRTOS/tasks.c ****                 {
1256:ThirdParty/FreeRTOS/tasks.c ****                     xShouldDelay = pdTRUE;
1257:ThirdParty/FreeRTOS/tasks.c ****                 }
1258:ThirdParty/FreeRTOS/tasks.c ****                 else
1259:ThirdParty/FreeRTOS/tasks.c ****                 {
1260:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1261:ThirdParty/FreeRTOS/tasks.c ****                 }
1262:ThirdParty/FreeRTOS/tasks.c ****             }
1263:ThirdParty/FreeRTOS/tasks.c **** 
1264:ThirdParty/FreeRTOS/tasks.c ****             /* Update the wake time ready for the next call. */
1265:ThirdParty/FreeRTOS/tasks.c ****             *pxPreviousWakeTime = xTimeToWake;
1266:ThirdParty/FreeRTOS/tasks.c **** 
1267:ThirdParty/FreeRTOS/tasks.c ****             if( xShouldDelay != pdFALSE )
1268:ThirdParty/FreeRTOS/tasks.c ****             {
1269:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_DELAY_UNTIL( xTimeToWake );
1270:ThirdParty/FreeRTOS/tasks.c **** 
1271:ThirdParty/FreeRTOS/tasks.c ****                 /* prvAddCurrentTaskToDelayedList() needs the block time, not
1272:ThirdParty/FreeRTOS/tasks.c ****                  * the time to wake, so subtract the current tick count. */
1273:ThirdParty/FreeRTOS/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1274:ThirdParty/FreeRTOS/tasks.c ****             }
1275:ThirdParty/FreeRTOS/tasks.c ****             else
1276:ThirdParty/FreeRTOS/tasks.c ****             {
1277:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1278:ThirdParty/FreeRTOS/tasks.c ****             }
1279:ThirdParty/FreeRTOS/tasks.c ****         }
1280:ThirdParty/FreeRTOS/tasks.c ****         xAlreadyYielded = xTaskResumeAll();
1281:ThirdParty/FreeRTOS/tasks.c **** 
1282:ThirdParty/FreeRTOS/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1283:ThirdParty/FreeRTOS/tasks.c ****          * have put ourselves to sleep. */
1284:ThirdParty/FreeRTOS/tasks.c ****         if( xAlreadyYielded == pdFALSE )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 24


1285:ThirdParty/FreeRTOS/tasks.c ****         {
1286:ThirdParty/FreeRTOS/tasks.c ****             portYIELD_WITHIN_API();
1287:ThirdParty/FreeRTOS/tasks.c ****         }
1288:ThirdParty/FreeRTOS/tasks.c ****         else
1289:ThirdParty/FreeRTOS/tasks.c ****         {
1290:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1291:ThirdParty/FreeRTOS/tasks.c ****         }
1292:ThirdParty/FreeRTOS/tasks.c **** 
1293:ThirdParty/FreeRTOS/tasks.c ****         return xShouldDelay;
1294:ThirdParty/FreeRTOS/tasks.c ****     }
1295:ThirdParty/FreeRTOS/tasks.c **** 
1296:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskDelayUntil */
1297:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1298:ThirdParty/FreeRTOS/tasks.c **** 
1299:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1300:ThirdParty/FreeRTOS/tasks.c **** 
1301:ThirdParty/FreeRTOS/tasks.c ****     void vTaskDelay( const TickType_t xTicksToDelay )
1302:ThirdParty/FreeRTOS/tasks.c ****     {
1303:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
1304:ThirdParty/FreeRTOS/tasks.c **** 
1305:ThirdParty/FreeRTOS/tasks.c ****         /* A delay time of zero just forces a reschedule. */
1306:ThirdParty/FreeRTOS/tasks.c ****         if( xTicksToDelay > ( TickType_t ) 0U )
1307:ThirdParty/FreeRTOS/tasks.c ****         {
1308:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( uxSchedulerSuspended == 0 );
1309:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
1310:ThirdParty/FreeRTOS/tasks.c ****             {
1311:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_DELAY();
1312:ThirdParty/FreeRTOS/tasks.c **** 
1313:ThirdParty/FreeRTOS/tasks.c ****                 /* A task that is removed from the event list while the
1314:ThirdParty/FreeRTOS/tasks.c ****                  * scheduler is suspended will not get placed in the ready
1315:ThirdParty/FreeRTOS/tasks.c ****                  * list or removed from the blocked list until the scheduler
1316:ThirdParty/FreeRTOS/tasks.c ****                  * is resumed.
1317:ThirdParty/FreeRTOS/tasks.c ****                  *
1318:ThirdParty/FreeRTOS/tasks.c ****                  * This task cannot be in an event list as it is the currently
1319:ThirdParty/FreeRTOS/tasks.c ****                  * executing task. */
1320:ThirdParty/FreeRTOS/tasks.c ****                 prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1321:ThirdParty/FreeRTOS/tasks.c ****             }
1322:ThirdParty/FreeRTOS/tasks.c ****             xAlreadyYielded = xTaskResumeAll();
1323:ThirdParty/FreeRTOS/tasks.c ****         }
1324:ThirdParty/FreeRTOS/tasks.c ****         else
1325:ThirdParty/FreeRTOS/tasks.c ****         {
1326:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1327:ThirdParty/FreeRTOS/tasks.c ****         }
1328:ThirdParty/FreeRTOS/tasks.c **** 
1329:ThirdParty/FreeRTOS/tasks.c ****         /* Force a reschedule if xTaskResumeAll has not already done so, we may
1330:ThirdParty/FreeRTOS/tasks.c ****          * have put ourselves to sleep. */
1331:ThirdParty/FreeRTOS/tasks.c ****         if( xAlreadyYielded == pdFALSE )
1332:ThirdParty/FreeRTOS/tasks.c ****         {
1333:ThirdParty/FreeRTOS/tasks.c ****             portYIELD_WITHIN_API();
1334:ThirdParty/FreeRTOS/tasks.c ****         }
1335:ThirdParty/FreeRTOS/tasks.c ****         else
1336:ThirdParty/FreeRTOS/tasks.c ****         {
1337:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1338:ThirdParty/FreeRTOS/tasks.c ****         }
1339:ThirdParty/FreeRTOS/tasks.c ****     }
1340:ThirdParty/FreeRTOS/tasks.c **** 
1341:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelay */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 25


1342:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1343:ThirdParty/FreeRTOS/tasks.c **** 
1344:ThirdParty/FreeRTOS/tasks.c **** #if ( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDe
1345:ThirdParty/FreeRTOS/tasks.c **** 
1346:ThirdParty/FreeRTOS/tasks.c ****     eTaskState eTaskGetState( TaskHandle_t xTask )
1347:ThirdParty/FreeRTOS/tasks.c ****     {
1348:ThirdParty/FreeRTOS/tasks.c ****         eTaskState eReturn;
1349:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxStateList;
1350:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxDelayedList;
1351:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxOverflowedDelayedList;
1352:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
1353:ThirdParty/FreeRTOS/tasks.c **** 
1354:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTCB );
1355:ThirdParty/FreeRTOS/tasks.c **** 
1356:ThirdParty/FreeRTOS/tasks.c ****         if( pxTCB == pxCurrentTCB )
1357:ThirdParty/FreeRTOS/tasks.c ****         {
1358:ThirdParty/FreeRTOS/tasks.c ****             /* The task calling this function is querying its own state. */
1359:ThirdParty/FreeRTOS/tasks.c ****             eReturn = eRunning;
1360:ThirdParty/FreeRTOS/tasks.c ****         }
1361:ThirdParty/FreeRTOS/tasks.c ****         else
1362:ThirdParty/FreeRTOS/tasks.c ****         {
1363:ThirdParty/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1364:ThirdParty/FreeRTOS/tasks.c ****             {
1365:ThirdParty/FreeRTOS/tasks.c ****                 pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1366:ThirdParty/FreeRTOS/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
1367:ThirdParty/FreeRTOS/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1368:ThirdParty/FreeRTOS/tasks.c ****             }
1369:ThirdParty/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1370:ThirdParty/FreeRTOS/tasks.c **** 
1371:ThirdParty/FreeRTOS/tasks.c ****             if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1372:ThirdParty/FreeRTOS/tasks.c ****             {
1373:ThirdParty/FreeRTOS/tasks.c ****                 /* The task being queried is referenced from one of the Blocked
1374:ThirdParty/FreeRTOS/tasks.c ****                  * lists. */
1375:ThirdParty/FreeRTOS/tasks.c ****                 eReturn = eBlocked;
1376:ThirdParty/FreeRTOS/tasks.c ****             }
1377:ThirdParty/FreeRTOS/tasks.c **** 
1378:ThirdParty/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
1379:ThirdParty/FreeRTOS/tasks.c ****                 else if( pxStateList == &xSuspendedTaskList )
1380:ThirdParty/FreeRTOS/tasks.c ****                 {
1381:ThirdParty/FreeRTOS/tasks.c ****                     /* The task being queried is referenced from the suspended
1382:ThirdParty/FreeRTOS/tasks.c ****                      * list.  Is it genuinely suspended or is it blocked
1383:ThirdParty/FreeRTOS/tasks.c ****                      * indefinitely? */
1384:ThirdParty/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1385:ThirdParty/FreeRTOS/tasks.c ****                     {
1386:ThirdParty/FreeRTOS/tasks.c ****                         #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1387:ThirdParty/FreeRTOS/tasks.c ****                         {
1388:ThirdParty/FreeRTOS/tasks.c ****                             BaseType_t x;
1389:ThirdParty/FreeRTOS/tasks.c **** 
1390:ThirdParty/FreeRTOS/tasks.c ****                             /* The task does not appear on the event list item of
1391:ThirdParty/FreeRTOS/tasks.c ****                              * and of the RTOS objects, but could still be in the
1392:ThirdParty/FreeRTOS/tasks.c ****                              * blocked state if it is waiting on its notification
1393:ThirdParty/FreeRTOS/tasks.c ****                              * rather than waiting on an object.  If not, is
1394:ThirdParty/FreeRTOS/tasks.c ****                              * suspended. */
1395:ThirdParty/FreeRTOS/tasks.c ****                             eReturn = eSuspended;
1396:ThirdParty/FreeRTOS/tasks.c **** 
1397:ThirdParty/FreeRTOS/tasks.c ****                             for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1398:ThirdParty/FreeRTOS/tasks.c ****                             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 26


1399:ThirdParty/FreeRTOS/tasks.c ****                                 if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1400:ThirdParty/FreeRTOS/tasks.c ****                                 {
1401:ThirdParty/FreeRTOS/tasks.c ****                                     eReturn = eBlocked;
1402:ThirdParty/FreeRTOS/tasks.c ****                                     break;
1403:ThirdParty/FreeRTOS/tasks.c ****                                 }
1404:ThirdParty/FreeRTOS/tasks.c ****                             }
1405:ThirdParty/FreeRTOS/tasks.c ****                         }
1406:ThirdParty/FreeRTOS/tasks.c ****                         #else /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1407:ThirdParty/FreeRTOS/tasks.c ****                         {
1408:ThirdParty/FreeRTOS/tasks.c ****                             eReturn = eSuspended;
1409:ThirdParty/FreeRTOS/tasks.c ****                         }
1410:ThirdParty/FreeRTOS/tasks.c ****                         #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1411:ThirdParty/FreeRTOS/tasks.c ****                     }
1412:ThirdParty/FreeRTOS/tasks.c ****                     else
1413:ThirdParty/FreeRTOS/tasks.c ****                     {
1414:ThirdParty/FreeRTOS/tasks.c ****                         eReturn = eBlocked;
1415:ThirdParty/FreeRTOS/tasks.c ****                     }
1416:ThirdParty/FreeRTOS/tasks.c ****                 }
1417:ThirdParty/FreeRTOS/tasks.c ****             #endif /* if ( INCLUDE_vTaskSuspend == 1 ) */
1418:ThirdParty/FreeRTOS/tasks.c **** 
1419:ThirdParty/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
1420:ThirdParty/FreeRTOS/tasks.c ****                 else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1421:ThirdParty/FreeRTOS/tasks.c ****                 {
1422:ThirdParty/FreeRTOS/tasks.c ****                     /* The task being queried is referenced from the deleted
1423:ThirdParty/FreeRTOS/tasks.c ****                      * tasks list, or it is not referenced from any lists at
1424:ThirdParty/FreeRTOS/tasks.c ****                      * all. */
1425:ThirdParty/FreeRTOS/tasks.c ****                     eReturn = eDeleted;
1426:ThirdParty/FreeRTOS/tasks.c ****                 }
1427:ThirdParty/FreeRTOS/tasks.c ****             #endif
1428:ThirdParty/FreeRTOS/tasks.c **** 
1429:ThirdParty/FreeRTOS/tasks.c ****             else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer
1430:ThirdParty/FreeRTOS/tasks.c ****             {
1431:ThirdParty/FreeRTOS/tasks.c ****                 /* If the task is not in any other state, it must be in the
1432:ThirdParty/FreeRTOS/tasks.c ****                  * Ready (including pending ready) state. */
1433:ThirdParty/FreeRTOS/tasks.c ****                 eReturn = eReady;
1434:ThirdParty/FreeRTOS/tasks.c ****             }
1435:ThirdParty/FreeRTOS/tasks.c ****         }
1436:ThirdParty/FreeRTOS/tasks.c **** 
1437:ThirdParty/FreeRTOS/tasks.c ****         return eReturn;
1438:ThirdParty/FreeRTOS/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1439:ThirdParty/FreeRTOS/tasks.c **** 
1440:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1441:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1442:ThirdParty/FreeRTOS/tasks.c **** 
1443:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1444:ThirdParty/FreeRTOS/tasks.c **** 
1445:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1446:ThirdParty/FreeRTOS/tasks.c ****     {
1447:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
1448:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
1449:ThirdParty/FreeRTOS/tasks.c **** 
1450:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1451:ThirdParty/FreeRTOS/tasks.c ****         {
1452:ThirdParty/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the task
1453:ThirdParty/FreeRTOS/tasks.c ****              * that called uxTaskPriorityGet() that is being queried. */
1454:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1455:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 27


1456:ThirdParty/FreeRTOS/tasks.c ****         }
1457:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1458:ThirdParty/FreeRTOS/tasks.c **** 
1459:ThirdParty/FreeRTOS/tasks.c ****         return uxReturn;
1460:ThirdParty/FreeRTOS/tasks.c ****     }
1461:ThirdParty/FreeRTOS/tasks.c **** 
1462:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1463:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1464:ThirdParty/FreeRTOS/tasks.c **** 
1465:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1466:ThirdParty/FreeRTOS/tasks.c **** 
1467:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1468:ThirdParty/FreeRTOS/tasks.c ****     {
1469:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
1470:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn, uxSavedInterruptState;
1471:ThirdParty/FreeRTOS/tasks.c **** 
1472:ThirdParty/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1473:ThirdParty/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1474:ThirdParty/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1475:ThirdParty/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1476:ThirdParty/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1477:ThirdParty/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
1478:ThirdParty/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1479:ThirdParty/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1480:ThirdParty/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
1481:ThirdParty/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1482:ThirdParty/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1483:ThirdParty/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1484:ThirdParty/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1485:ThirdParty/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1486:ThirdParty/FreeRTOS/tasks.c ****          * provided on the following link:
1487:ThirdParty/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1488:ThirdParty/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1489:ThirdParty/FreeRTOS/tasks.c **** 
1490:ThirdParty/FreeRTOS/tasks.c ****         uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1491:ThirdParty/FreeRTOS/tasks.c ****         {
1492:ThirdParty/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1493:ThirdParty/FreeRTOS/tasks.c ****              * task that is being queried. */
1494:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1495:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
1496:ThirdParty/FreeRTOS/tasks.c ****         }
1497:ThirdParty/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1498:ThirdParty/FreeRTOS/tasks.c **** 
1499:ThirdParty/FreeRTOS/tasks.c ****         return uxReturn;
1500:ThirdParty/FreeRTOS/tasks.c ****     }
1501:ThirdParty/FreeRTOS/tasks.c **** 
1502:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1503:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1504:ThirdParty/FreeRTOS/tasks.c **** 
1505:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1506:ThirdParty/FreeRTOS/tasks.c **** 
1507:ThirdParty/FreeRTOS/tasks.c ****     void vTaskPrioritySet( TaskHandle_t xTask,
1508:ThirdParty/FreeRTOS/tasks.c ****                            UBaseType_t uxNewPriority )
1509:ThirdParty/FreeRTOS/tasks.c ****     {
1510:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1511:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1512:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 28


1513:ThirdParty/FreeRTOS/tasks.c **** 
1514:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxNewPriority < configMAX_PRIORITIES );
1515:ThirdParty/FreeRTOS/tasks.c **** 
1516:ThirdParty/FreeRTOS/tasks.c ****         /* Ensure the new priority is valid. */
1517:ThirdParty/FreeRTOS/tasks.c ****         if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1518:ThirdParty/FreeRTOS/tasks.c ****         {
1519:ThirdParty/FreeRTOS/tasks.c ****             uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1520:ThirdParty/FreeRTOS/tasks.c ****         }
1521:ThirdParty/FreeRTOS/tasks.c ****         else
1522:ThirdParty/FreeRTOS/tasks.c ****         {
1523:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1524:ThirdParty/FreeRTOS/tasks.c ****         }
1525:ThirdParty/FreeRTOS/tasks.c **** 
1526:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1527:ThirdParty/FreeRTOS/tasks.c ****         {
1528:ThirdParty/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the priority of the calling
1529:ThirdParty/FreeRTOS/tasks.c ****              * task that is being changed. */
1530:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTask );
1531:ThirdParty/FreeRTOS/tasks.c **** 
1532:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1533:ThirdParty/FreeRTOS/tasks.c **** 
1534:ThirdParty/FreeRTOS/tasks.c ****             #if ( configUSE_MUTEXES == 1 )
1535:ThirdParty/FreeRTOS/tasks.c ****             {
1536:ThirdParty/FreeRTOS/tasks.c ****                 uxCurrentBasePriority = pxTCB->uxBasePriority;
1537:ThirdParty/FreeRTOS/tasks.c ****             }
1538:ThirdParty/FreeRTOS/tasks.c ****             #else
1539:ThirdParty/FreeRTOS/tasks.c ****             {
1540:ThirdParty/FreeRTOS/tasks.c ****                 uxCurrentBasePriority = pxTCB->uxPriority;
1541:ThirdParty/FreeRTOS/tasks.c ****             }
1542:ThirdParty/FreeRTOS/tasks.c ****             #endif
1543:ThirdParty/FreeRTOS/tasks.c **** 
1544:ThirdParty/FreeRTOS/tasks.c ****             if( uxCurrentBasePriority != uxNewPriority )
1545:ThirdParty/FreeRTOS/tasks.c ****             {
1546:ThirdParty/FreeRTOS/tasks.c ****                 /* The priority change may have readied a task of higher
1547:ThirdParty/FreeRTOS/tasks.c ****                  * priority than the calling task. */
1548:ThirdParty/FreeRTOS/tasks.c ****                 if( uxNewPriority > uxCurrentBasePriority )
1549:ThirdParty/FreeRTOS/tasks.c ****                 {
1550:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB != pxCurrentTCB )
1551:ThirdParty/FreeRTOS/tasks.c ****                     {
1552:ThirdParty/FreeRTOS/tasks.c ****                         /* The priority of a task other than the currently
1553:ThirdParty/FreeRTOS/tasks.c ****                          * running task is being raised.  Is the priority being
1554:ThirdParty/FreeRTOS/tasks.c ****                          * raised above that of the running task? */
1555:ThirdParty/FreeRTOS/tasks.c ****                         if( uxNewPriority >= pxCurrentTCB->uxPriority )
1556:ThirdParty/FreeRTOS/tasks.c ****                         {
1557:ThirdParty/FreeRTOS/tasks.c ****                             xYieldRequired = pdTRUE;
1558:ThirdParty/FreeRTOS/tasks.c ****                         }
1559:ThirdParty/FreeRTOS/tasks.c ****                         else
1560:ThirdParty/FreeRTOS/tasks.c ****                         {
1561:ThirdParty/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
1562:ThirdParty/FreeRTOS/tasks.c ****                         }
1563:ThirdParty/FreeRTOS/tasks.c ****                     }
1564:ThirdParty/FreeRTOS/tasks.c ****                     else
1565:ThirdParty/FreeRTOS/tasks.c ****                     {
1566:ThirdParty/FreeRTOS/tasks.c ****                         /* The priority of the running task is being raised,
1567:ThirdParty/FreeRTOS/tasks.c ****                          * but the running task must already be the highest
1568:ThirdParty/FreeRTOS/tasks.c ****                          * priority task able to run so no yield is required. */
1569:ThirdParty/FreeRTOS/tasks.c ****                     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 29


1570:ThirdParty/FreeRTOS/tasks.c ****                 }
1571:ThirdParty/FreeRTOS/tasks.c ****                 else if( pxTCB == pxCurrentTCB )
1572:ThirdParty/FreeRTOS/tasks.c ****                 {
1573:ThirdParty/FreeRTOS/tasks.c ****                     /* Setting the priority of the running task down means
1574:ThirdParty/FreeRTOS/tasks.c ****                      * there may now be another task of higher priority that
1575:ThirdParty/FreeRTOS/tasks.c ****                      * is ready to execute. */
1576:ThirdParty/FreeRTOS/tasks.c ****                     xYieldRequired = pdTRUE;
1577:ThirdParty/FreeRTOS/tasks.c ****                 }
1578:ThirdParty/FreeRTOS/tasks.c ****                 else
1579:ThirdParty/FreeRTOS/tasks.c ****                 {
1580:ThirdParty/FreeRTOS/tasks.c ****                     /* Setting the priority of any other task down does not
1581:ThirdParty/FreeRTOS/tasks.c ****                      * require a yield as the running task must be above the
1582:ThirdParty/FreeRTOS/tasks.c ****                      * new priority of the task being modified. */
1583:ThirdParty/FreeRTOS/tasks.c ****                 }
1584:ThirdParty/FreeRTOS/tasks.c **** 
1585:ThirdParty/FreeRTOS/tasks.c ****                 /* Remember the ready list the task might be referenced from
1586:ThirdParty/FreeRTOS/tasks.c ****                  * before its uxPriority member is changed so the
1587:ThirdParty/FreeRTOS/tasks.c ****                  * taskRESET_READY_PRIORITY() macro can function correctly. */
1588:ThirdParty/FreeRTOS/tasks.c ****                 uxPriorityUsedOnEntry = pxTCB->uxPriority;
1589:ThirdParty/FreeRTOS/tasks.c **** 
1590:ThirdParty/FreeRTOS/tasks.c ****                 #if ( configUSE_MUTEXES == 1 )
1591:ThirdParty/FreeRTOS/tasks.c ****                 {
1592:ThirdParty/FreeRTOS/tasks.c ****                     /* Only change the priority being used if the task is not
1593:ThirdParty/FreeRTOS/tasks.c ****                      * currently using an inherited priority. */
1594:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1595:ThirdParty/FreeRTOS/tasks.c ****                     {
1596:ThirdParty/FreeRTOS/tasks.c ****                         pxTCB->uxPriority = uxNewPriority;
1597:ThirdParty/FreeRTOS/tasks.c ****                     }
1598:ThirdParty/FreeRTOS/tasks.c ****                     else
1599:ThirdParty/FreeRTOS/tasks.c ****                     {
1600:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1601:ThirdParty/FreeRTOS/tasks.c ****                     }
1602:ThirdParty/FreeRTOS/tasks.c **** 
1603:ThirdParty/FreeRTOS/tasks.c ****                     /* The base priority gets set whatever. */
1604:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxBasePriority = uxNewPriority;
1605:ThirdParty/FreeRTOS/tasks.c ****                 }
1606:ThirdParty/FreeRTOS/tasks.c ****                 #else /* if ( configUSE_MUTEXES == 1 ) */
1607:ThirdParty/FreeRTOS/tasks.c ****                 {
1608:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxNewPriority;
1609:ThirdParty/FreeRTOS/tasks.c ****                 }
1610:ThirdParty/FreeRTOS/tasks.c ****                 #endif /* if ( configUSE_MUTEXES == 1 ) */
1611:ThirdParty/FreeRTOS/tasks.c **** 
1612:ThirdParty/FreeRTOS/tasks.c ****                 /* Only reset the event list item value if the value is not
1613:ThirdParty/FreeRTOS/tasks.c ****                  * being used for anything else. */
1614:ThirdParty/FreeRTOS/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_V
1615:ThirdParty/FreeRTOS/tasks.c ****                 {
1616:ThirdParty/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX
1617:ThirdParty/FreeRTOS/tasks.c ****                 }
1618:ThirdParty/FreeRTOS/tasks.c ****                 else
1619:ThirdParty/FreeRTOS/tasks.c ****                 {
1620:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1621:ThirdParty/FreeRTOS/tasks.c ****                 }
1622:ThirdParty/FreeRTOS/tasks.c **** 
1623:ThirdParty/FreeRTOS/tasks.c ****                 /* If the task is in the blocked or suspended list we need do
1624:ThirdParty/FreeRTOS/tasks.c ****                  * nothing more than change its priority variable. However, if
1625:ThirdParty/FreeRTOS/tasks.c ****                  * the task is in a ready list it needs to be removed and placed
1626:ThirdParty/FreeRTOS/tasks.c ****                  * in the list appropriate to its new priority. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 30


1627:ThirdParty/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( px
1628:ThirdParty/FreeRTOS/tasks.c ****                 {
1629:ThirdParty/FreeRTOS/tasks.c ****                     /* The task is currently in its ready list - remove before
1630:ThirdParty/FreeRTOS/tasks.c ****                      * adding it to its new ready list.  As we are in a critical
1631:ThirdParty/FreeRTOS/tasks.c ****                      * section we can do this even if the scheduler is suspended. */
1632:ThirdParty/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1633:ThirdParty/FreeRTOS/tasks.c ****                     {
1634:ThirdParty/FreeRTOS/tasks.c ****                         /* It is known that the task is in its ready list so
1635:ThirdParty/FreeRTOS/tasks.c ****                          * there is no need to check again and the port level
1636:ThirdParty/FreeRTOS/tasks.c ****                          * reset macro can be called directly. */
1637:ThirdParty/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1638:ThirdParty/FreeRTOS/tasks.c ****                     }
1639:ThirdParty/FreeRTOS/tasks.c ****                     else
1640:ThirdParty/FreeRTOS/tasks.c ****                     {
1641:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1642:ThirdParty/FreeRTOS/tasks.c ****                     }
1643:ThirdParty/FreeRTOS/tasks.c **** 
1644:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1645:ThirdParty/FreeRTOS/tasks.c ****                 }
1646:ThirdParty/FreeRTOS/tasks.c ****                 else
1647:ThirdParty/FreeRTOS/tasks.c ****                 {
1648:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1649:ThirdParty/FreeRTOS/tasks.c ****                 }
1650:ThirdParty/FreeRTOS/tasks.c **** 
1651:ThirdParty/FreeRTOS/tasks.c ****                 if( xYieldRequired != pdFALSE )
1652:ThirdParty/FreeRTOS/tasks.c ****                 {
1653:ThirdParty/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
1654:ThirdParty/FreeRTOS/tasks.c ****                 }
1655:ThirdParty/FreeRTOS/tasks.c ****                 else
1656:ThirdParty/FreeRTOS/tasks.c ****                 {
1657:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1658:ThirdParty/FreeRTOS/tasks.c ****                 }
1659:ThirdParty/FreeRTOS/tasks.c **** 
1660:ThirdParty/FreeRTOS/tasks.c ****                 /* Remove compiler warning about unused variables when the port
1661:ThirdParty/FreeRTOS/tasks.c ****                  * optimised task selection is not being used. */
1662:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxPriorityUsedOnEntry;
1663:ThirdParty/FreeRTOS/tasks.c ****             }
1664:ThirdParty/FreeRTOS/tasks.c ****         }
1665:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1666:ThirdParty/FreeRTOS/tasks.c ****     }
1667:ThirdParty/FreeRTOS/tasks.c **** 
1668:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1669:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1670:ThirdParty/FreeRTOS/tasks.c **** 
1671:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1672:ThirdParty/FreeRTOS/tasks.c **** 
1673:ThirdParty/FreeRTOS/tasks.c ****     void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1674:ThirdParty/FreeRTOS/tasks.c ****     {
1675:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
1676:ThirdParty/FreeRTOS/tasks.c **** 
1677:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
1678:ThirdParty/FreeRTOS/tasks.c ****         {
1679:ThirdParty/FreeRTOS/tasks.c ****             /* If null is passed in here then it is the running task that is
1680:ThirdParty/FreeRTOS/tasks.c ****              * being suspended. */
1681:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1682:ThirdParty/FreeRTOS/tasks.c **** 
1683:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_SUSPEND( pxTCB );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 31


1684:ThirdParty/FreeRTOS/tasks.c **** 
1685:ThirdParty/FreeRTOS/tasks.c ****             /* Remove task from the ready/delayed list and place in the
1686:ThirdParty/FreeRTOS/tasks.c ****              * suspended list. */
1687:ThirdParty/FreeRTOS/tasks.c ****             if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1688:ThirdParty/FreeRTOS/tasks.c ****             {
1689:ThirdParty/FreeRTOS/tasks.c ****                 taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1690:ThirdParty/FreeRTOS/tasks.c ****             }
1691:ThirdParty/FreeRTOS/tasks.c ****             else
1692:ThirdParty/FreeRTOS/tasks.c ****             {
1693:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1694:ThirdParty/FreeRTOS/tasks.c ****             }
1695:ThirdParty/FreeRTOS/tasks.c **** 
1696:ThirdParty/FreeRTOS/tasks.c ****             /* Is the task waiting on an event also? */
1697:ThirdParty/FreeRTOS/tasks.c ****             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1698:ThirdParty/FreeRTOS/tasks.c ****             {
1699:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1700:ThirdParty/FreeRTOS/tasks.c ****             }
1701:ThirdParty/FreeRTOS/tasks.c ****             else
1702:ThirdParty/FreeRTOS/tasks.c ****             {
1703:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1704:ThirdParty/FreeRTOS/tasks.c ****             }
1705:ThirdParty/FreeRTOS/tasks.c **** 
1706:ThirdParty/FreeRTOS/tasks.c ****             vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1707:ThirdParty/FreeRTOS/tasks.c **** 
1708:ThirdParty/FreeRTOS/tasks.c ****             #if ( configUSE_TASK_NOTIFICATIONS == 1 )
1709:ThirdParty/FreeRTOS/tasks.c ****             {
1710:ThirdParty/FreeRTOS/tasks.c ****                 BaseType_t x;
1711:ThirdParty/FreeRTOS/tasks.c **** 
1712:ThirdParty/FreeRTOS/tasks.c ****                 for( x = 0; x < configTASK_NOTIFICATION_ARRAY_ENTRIES; x++ )
1713:ThirdParty/FreeRTOS/tasks.c ****                 {
1714:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->ucNotifyState[ x ] == taskWAITING_NOTIFICATION )
1715:ThirdParty/FreeRTOS/tasks.c ****                     {
1716:ThirdParty/FreeRTOS/tasks.c ****                         /* The task was blocked to wait for a notification, but is
1717:ThirdParty/FreeRTOS/tasks.c ****                          * now suspended, so no notification was received. */
1718:ThirdParty/FreeRTOS/tasks.c ****                         pxTCB->ucNotifyState[ x ] = taskNOT_WAITING_NOTIFICATION;
1719:ThirdParty/FreeRTOS/tasks.c ****                     }
1720:ThirdParty/FreeRTOS/tasks.c ****                 }
1721:ThirdParty/FreeRTOS/tasks.c ****             }
1722:ThirdParty/FreeRTOS/tasks.c ****             #endif /* if ( configUSE_TASK_NOTIFICATIONS == 1 ) */
1723:ThirdParty/FreeRTOS/tasks.c ****         }
1724:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
1725:ThirdParty/FreeRTOS/tasks.c **** 
1726:ThirdParty/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
1727:ThirdParty/FreeRTOS/tasks.c ****         {
1728:ThirdParty/FreeRTOS/tasks.c ****             /* Reset the next expected unblock time in case it referred to the
1729:ThirdParty/FreeRTOS/tasks.c ****              * task that is now in the Suspended state. */
1730:ThirdParty/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1731:ThirdParty/FreeRTOS/tasks.c ****             {
1732:ThirdParty/FreeRTOS/tasks.c ****                 prvResetNextTaskUnblockTime();
1733:ThirdParty/FreeRTOS/tasks.c ****             }
1734:ThirdParty/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1735:ThirdParty/FreeRTOS/tasks.c ****         }
1736:ThirdParty/FreeRTOS/tasks.c ****         else
1737:ThirdParty/FreeRTOS/tasks.c ****         {
1738:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1739:ThirdParty/FreeRTOS/tasks.c ****         }
1740:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 32


1741:ThirdParty/FreeRTOS/tasks.c ****         if( pxTCB == pxCurrentTCB )
1742:ThirdParty/FreeRTOS/tasks.c ****         {
1743:ThirdParty/FreeRTOS/tasks.c ****             if( xSchedulerRunning != pdFALSE )
1744:ThirdParty/FreeRTOS/tasks.c ****             {
1745:ThirdParty/FreeRTOS/tasks.c ****                 /* The current task has just been suspended. */
1746:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( uxSchedulerSuspended == 0 );
1747:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
1748:ThirdParty/FreeRTOS/tasks.c ****             }
1749:ThirdParty/FreeRTOS/tasks.c ****             else
1750:ThirdParty/FreeRTOS/tasks.c ****             {
1751:ThirdParty/FreeRTOS/tasks.c ****                 /* The scheduler is not running, but the task that was pointed
1752:ThirdParty/FreeRTOS/tasks.c ****                  * to by pxCurrentTCB has just been suspended and pxCurrentTCB
1753:ThirdParty/FreeRTOS/tasks.c ****                  * must be adjusted to point to a different task. */
1754:ThirdParty/FreeRTOS/tasks.c ****                 if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*li
1755:ThirdParty/FreeRTOS/tasks.c ****                 {
1756:ThirdParty/FreeRTOS/tasks.c ****                     /* No other tasks are ready, so set pxCurrentTCB back to
1757:ThirdParty/FreeRTOS/tasks.c ****                      * NULL so when the next task is created pxCurrentTCB will
1758:ThirdParty/FreeRTOS/tasks.c ****                      * be set to point to it no matter what its relative priority
1759:ThirdParty/FreeRTOS/tasks.c ****                      * is. */
1760:ThirdParty/FreeRTOS/tasks.c ****                     pxCurrentTCB = NULL;
1761:ThirdParty/FreeRTOS/tasks.c ****                 }
1762:ThirdParty/FreeRTOS/tasks.c ****                 else
1763:ThirdParty/FreeRTOS/tasks.c ****                 {
1764:ThirdParty/FreeRTOS/tasks.c ****                     vTaskSwitchContext();
1765:ThirdParty/FreeRTOS/tasks.c ****                 }
1766:ThirdParty/FreeRTOS/tasks.c ****             }
1767:ThirdParty/FreeRTOS/tasks.c ****         }
1768:ThirdParty/FreeRTOS/tasks.c ****         else
1769:ThirdParty/FreeRTOS/tasks.c ****         {
1770:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1771:ThirdParty/FreeRTOS/tasks.c ****         }
1772:ThirdParty/FreeRTOS/tasks.c ****     }
1773:ThirdParty/FreeRTOS/tasks.c **** 
1774:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1775:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1776:ThirdParty/FreeRTOS/tasks.c **** 
1777:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1778:ThirdParty/FreeRTOS/tasks.c **** 
1779:ThirdParty/FreeRTOS/tasks.c ****     static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1780:ThirdParty/FreeRTOS/tasks.c ****     {
  29              		.loc 1 1780 5 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1781:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
  34              		.loc 1 1781 9 view .LVU1
1782:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  35              		.loc 1 1782 9 view .LVU2
1783:ThirdParty/FreeRTOS/tasks.c **** 
1784:ThirdParty/FreeRTOS/tasks.c ****         /* Accesses xPendingReadyList so must be called from a critical
1785:ThirdParty/FreeRTOS/tasks.c ****          * section. */
1786:ThirdParty/FreeRTOS/tasks.c **** 
1787:ThirdParty/FreeRTOS/tasks.c ****         /* It does not make sense to check if the calling task is suspended. */
1788:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTask );
  36              		.loc 1 1788 9 view .LVU3
  37 0000 28B1     		cbz	r0, .L8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 33


  38              		.loc 1 1788 30 discriminator 2 view .LVU4
1789:ThirdParty/FreeRTOS/tasks.c **** 
1790:ThirdParty/FreeRTOS/tasks.c ****         /* Is the task being resumed actually in the suspended list? */
1791:ThirdParty/FreeRTOS/tasks.c ****         if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  39              		.loc 1 1791 9 discriminator 2 view .LVU5
  40              		.loc 1 1791 13 is_stmt 0 discriminator 2 view .LVU6
  41 0002 4169     		ldr	r1, [r0, #20]
  42              		.loc 1 1791 11 discriminator 2 view .LVU7
  43 0004 0C4A     		ldr	r2, .L10
  44 0006 9142     		cmp	r1, r2
  45 0008 0AD0     		beq	.L9
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  46              		.loc 1 1781 20 view .LVU8
  47 000a 0020     		movs	r0, #0
  48              	.LVL1:
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  49              		.loc 1 1781 20 view .LVU9
  50 000c 7047     		bx	lr
  51              	.LVL2:
  52              	.L8:
1788:ThirdParty/FreeRTOS/tasks.c **** 
  53              		.loc 1 1788 9 is_stmt 1 view .LVU10
  54              	.LBB155:
  55              	.LBI155:
  56              		.file 2 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
   1:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.5.1
   3:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   7:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  13:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  14:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  16:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  17:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  24:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  25:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  26:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  27:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  28:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  30:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  31:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  32:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 34


  33:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  34:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  35:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  36:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  37:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  38:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  39:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  40:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  41:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  42:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  43:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  44:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  45:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  46:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  48:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  49:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  50:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  51:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  52:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  53:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  54:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  55:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  57:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  58:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  59:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  60:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  61:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
  62:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  63:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  64:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  65:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  66:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  68:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  69:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  70:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  71:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  72:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  73:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  74:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  75:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  76:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  77:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  78:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  79:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  80:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  81:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  82:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  83:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  84:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  85:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  86:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  87:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  88:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  89:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 35


  90:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
  91:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  92:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  93:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  94:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  95:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  96:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  97:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  98:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  99:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
 100:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 101:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 102:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 103:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 104:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 105:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 106:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 107:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 109:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 110:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 111:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 112:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 113:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 114:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 115:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 116:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 117:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 118:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 119:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 120:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 121:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 122:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 123:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 124:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 125:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 126:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 127:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 128:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 130:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 131:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 132:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 133:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 134:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 135:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 136:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 137:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 139:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 140:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 141:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 142:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 143:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 144:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 145:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 146:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 36


 147:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 148:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 149:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 152:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 153:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 154:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 155:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 156:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 158:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 159:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 160:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 161:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 162:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 165:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 166:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 167:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 168:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 169:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 170:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 171:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 172:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 173:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 174:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 175:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
 176:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 178:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 179:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 181:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 182:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 183:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 184:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         else
 185:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 186:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 187:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 188:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 190:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 191:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 192:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 193:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  57              		.loc 2 194 34 view .LVU11
  58              	.LBB156:
 195:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
  59              		.loc 2 196 9 view .LVU12
 197:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
  60              		.loc 2 198 9 view .LVU13
  61              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 37


  62              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
  63 000e 4FF05003 			mov r3, #80												
  64 0012 83F31188 		msr basepri, r3											
  65 0016 BFF36F8F 		isb														
  66 001a BFF34F8F 		dsb														
  67              	
  68              	@ 0 "" 2
  69              	.LVL3:
  70              		.thumb
  71              		.syntax unified
  72              	.L3:
  73              		.loc 2 198 9 is_stmt 0 view .LVU14
  74              	.LBE156:
  75              	.LBE155:
1788:ThirdParty/FreeRTOS/tasks.c **** 
  76              		.loc 1 1788 9 is_stmt 1 discriminator 1 view .LVU15
1788:ThirdParty/FreeRTOS/tasks.c **** 
  77              		.loc 1 1788 9 discriminator 1 view .LVU16
  78 001e FEE7     		b	.L3
  79              	.L9:
1792:ThirdParty/FreeRTOS/tasks.c ****         {
1793:ThirdParty/FreeRTOS/tasks.c ****             /* Has the task already been resumed from within an ISR? */
1794:ThirdParty/FreeRTOS/tasks.c ****             if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALS
  80              		.loc 1 1794 13 view .LVU17
  81              		.loc 1 1794 17 is_stmt 0 view .LVU18
  82 0020 836A     		ldr	r3, [r0, #40]
  83              		.loc 1 1794 15 view .LVU19
  84 0022 064A     		ldr	r2, .L10+4
  85 0024 9342     		cmp	r3, r2
  86 0026 02D0     		beq	.L6
1795:ThirdParty/FreeRTOS/tasks.c ****             {
1796:ThirdParty/FreeRTOS/tasks.c ****                 /* Is it in the suspended list because it is in the Suspended
1797:ThirdParty/FreeRTOS/tasks.c ****                  * state, or because is is blocked with no timeout? */
1798:ThirdParty/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint
  87              		.loc 1 1798 17 is_stmt 1 view .LVU20
  88              		.loc 1 1798 19 is_stmt 0 view .LVU21
  89 0028 1BB1     		cbz	r3, .L7
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  90              		.loc 1 1781 20 view .LVU22
  91 002a 0020     		movs	r0, #0
  92              	.LVL4:
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  93              		.loc 1 1781 20 view .LVU23
  94 002c 7047     		bx	lr
  95              	.LVL5:
  96              	.L6:
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
  97              		.loc 1 1781 20 view .LVU24
  98 002e 0020     		movs	r0, #0
  99              	.LVL6:
1781:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
 100              		.loc 1 1781 20 view .LVU25
 101 0030 7047     		bx	lr
 102              	.LVL7:
 103              	.L7:
1799:ThirdParty/FreeRTOS/tasks.c ****                 {
1800:ThirdParty/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 38


 104              		.loc 1 1800 29 view .LVU26
 105 0032 0120     		movs	r0, #1
 106              	.LVL8:
1801:ThirdParty/FreeRTOS/tasks.c ****                 }
1802:ThirdParty/FreeRTOS/tasks.c ****                 else
1803:ThirdParty/FreeRTOS/tasks.c ****                 {
1804:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1805:ThirdParty/FreeRTOS/tasks.c ****                 }
1806:ThirdParty/FreeRTOS/tasks.c ****             }
1807:ThirdParty/FreeRTOS/tasks.c ****             else
1808:ThirdParty/FreeRTOS/tasks.c ****             {
1809:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1810:ThirdParty/FreeRTOS/tasks.c ****             }
1811:ThirdParty/FreeRTOS/tasks.c ****         }
1812:ThirdParty/FreeRTOS/tasks.c ****         else
1813:ThirdParty/FreeRTOS/tasks.c ****         {
1814:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
 107              		.loc 1 1814 37 is_stmt 1 view .LVU27
1815:ThirdParty/FreeRTOS/tasks.c ****         }
1816:ThirdParty/FreeRTOS/tasks.c **** 
1817:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
 108              		.loc 1 1817 9 view .LVU28
1818:ThirdParty/FreeRTOS/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 109              		.loc 1 1818 5 is_stmt 0 view .LVU29
 110 0034 7047     		bx	lr
 111              	.L11:
 112 0036 00BF     		.align	2
 113              	.L10:
 114 0038 00000000 		.word	xSuspendedTaskList
 115 003c 00000000 		.word	xPendingReadyList
 116              		.cfi_endproc
 117              	.LFE16:
 119              		.section	.text.prvTaskCheckFreeStackSpace,"ax",%progbits
 120              		.align	1
 121              		.syntax unified
 122              		.thumb
 123              		.thumb_func
 125              	prvTaskCheckFreeStackSpace:
 126              	.LVL9:
 127              	.LFB47:
1819:ThirdParty/FreeRTOS/tasks.c **** 
1820:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1821:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1822:ThirdParty/FreeRTOS/tasks.c **** 
1823:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1824:ThirdParty/FreeRTOS/tasks.c **** 
1825:ThirdParty/FreeRTOS/tasks.c ****     void vTaskResume( TaskHandle_t xTaskToResume )
1826:ThirdParty/FreeRTOS/tasks.c ****     {
1827:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1828:ThirdParty/FreeRTOS/tasks.c **** 
1829:ThirdParty/FreeRTOS/tasks.c ****         /* It does not make sense to resume the calling task. */
1830:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToResume );
1831:ThirdParty/FreeRTOS/tasks.c **** 
1832:ThirdParty/FreeRTOS/tasks.c ****         /* The parameter cannot be NULL as it is impossible to resume the
1833:ThirdParty/FreeRTOS/tasks.c ****          * currently executing task. */
1834:ThirdParty/FreeRTOS/tasks.c ****         if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1835:ThirdParty/FreeRTOS/tasks.c ****         {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 39


1836:ThirdParty/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
1837:ThirdParty/FreeRTOS/tasks.c ****             {
1838:ThirdParty/FreeRTOS/tasks.c ****                 if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1839:ThirdParty/FreeRTOS/tasks.c ****                 {
1840:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_RESUME( pxTCB );
1841:ThirdParty/FreeRTOS/tasks.c **** 
1842:ThirdParty/FreeRTOS/tasks.c ****                     /* The ready list can be accessed even if the scheduler is
1843:ThirdParty/FreeRTOS/tasks.c ****                      * suspended because this is inside a critical section. */
1844:ThirdParty/FreeRTOS/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1845:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1846:ThirdParty/FreeRTOS/tasks.c **** 
1847:ThirdParty/FreeRTOS/tasks.c ****                     /* A higher priority task may have just been resumed. */
1848:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1849:ThirdParty/FreeRTOS/tasks.c ****                     {
1850:ThirdParty/FreeRTOS/tasks.c ****                         /* This yield may not cause the task just resumed to run,
1851:ThirdParty/FreeRTOS/tasks.c ****                          * but will leave the lists in the correct state for the
1852:ThirdParty/FreeRTOS/tasks.c ****                          * next yield. */
1853:ThirdParty/FreeRTOS/tasks.c ****                         taskYIELD_IF_USING_PREEMPTION();
1854:ThirdParty/FreeRTOS/tasks.c ****                     }
1855:ThirdParty/FreeRTOS/tasks.c ****                     else
1856:ThirdParty/FreeRTOS/tasks.c ****                     {
1857:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1858:ThirdParty/FreeRTOS/tasks.c ****                     }
1859:ThirdParty/FreeRTOS/tasks.c ****                 }
1860:ThirdParty/FreeRTOS/tasks.c ****                 else
1861:ThirdParty/FreeRTOS/tasks.c ****                 {
1862:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
1863:ThirdParty/FreeRTOS/tasks.c ****                 }
1864:ThirdParty/FreeRTOS/tasks.c ****             }
1865:ThirdParty/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
1866:ThirdParty/FreeRTOS/tasks.c ****         }
1867:ThirdParty/FreeRTOS/tasks.c ****         else
1868:ThirdParty/FreeRTOS/tasks.c ****         {
1869:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
1870:ThirdParty/FreeRTOS/tasks.c ****         }
1871:ThirdParty/FreeRTOS/tasks.c ****     }
1872:ThirdParty/FreeRTOS/tasks.c **** 
1873:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1874:ThirdParty/FreeRTOS/tasks.c **** 
1875:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1876:ThirdParty/FreeRTOS/tasks.c **** 
1877:ThirdParty/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1878:ThirdParty/FreeRTOS/tasks.c **** 
1879:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1880:ThirdParty/FreeRTOS/tasks.c ****     {
1881:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
1882:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
1883:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
1884:ThirdParty/FreeRTOS/tasks.c **** 
1885:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToResume );
1886:ThirdParty/FreeRTOS/tasks.c **** 
1887:ThirdParty/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
1888:ThirdParty/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
1889:ThirdParty/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
1890:ThirdParty/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
1891:ThirdParty/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1892:ThirdParty/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 40


1893:ThirdParty/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1894:ThirdParty/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
1895:ThirdParty/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
1896:ThirdParty/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
1897:ThirdParty/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
1898:ThirdParty/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
1899:ThirdParty/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
1900:ThirdParty/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
1901:ThirdParty/FreeRTOS/tasks.c ****          * provided on the following link:
1902:ThirdParty/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
1903:ThirdParty/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1904:ThirdParty/FreeRTOS/tasks.c **** 
1905:ThirdParty/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1906:ThirdParty/FreeRTOS/tasks.c ****         {
1907:ThirdParty/FreeRTOS/tasks.c ****             if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1908:ThirdParty/FreeRTOS/tasks.c ****             {
1909:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_RESUME_FROM_ISR( pxTCB );
1910:ThirdParty/FreeRTOS/tasks.c **** 
1911:ThirdParty/FreeRTOS/tasks.c ****                 /* Check the ready lists can be accessed. */
1912:ThirdParty/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1913:ThirdParty/FreeRTOS/tasks.c ****                 {
1914:ThirdParty/FreeRTOS/tasks.c ****                     /* Ready lists can be accessed so move the task from the
1915:ThirdParty/FreeRTOS/tasks.c ****                      * suspended list to the ready list directly. */
1916:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1917:ThirdParty/FreeRTOS/tasks.c ****                     {
1918:ThirdParty/FreeRTOS/tasks.c ****                         xYieldRequired = pdTRUE;
1919:ThirdParty/FreeRTOS/tasks.c **** 
1920:ThirdParty/FreeRTOS/tasks.c ****                         /* Mark that a yield is pending in case the user is not
1921:ThirdParty/FreeRTOS/tasks.c ****                          * using the return value to initiate a context switch
1922:ThirdParty/FreeRTOS/tasks.c ****                          * from the ISR using portYIELD_FROM_ISR. */
1923:ThirdParty/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
1924:ThirdParty/FreeRTOS/tasks.c ****                     }
1925:ThirdParty/FreeRTOS/tasks.c ****                     else
1926:ThirdParty/FreeRTOS/tasks.c ****                     {
1927:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
1928:ThirdParty/FreeRTOS/tasks.c ****                     }
1929:ThirdParty/FreeRTOS/tasks.c **** 
1930:ThirdParty/FreeRTOS/tasks.c ****                     ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1931:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
1932:ThirdParty/FreeRTOS/tasks.c ****                 }
1933:ThirdParty/FreeRTOS/tasks.c ****                 else
1934:ThirdParty/FreeRTOS/tasks.c ****                 {
1935:ThirdParty/FreeRTOS/tasks.c ****                     /* The delayed or ready lists cannot be accessed so the task
1936:ThirdParty/FreeRTOS/tasks.c ****                      * is held in the pending ready list until the scheduler is
1937:ThirdParty/FreeRTOS/tasks.c ****                      * unsuspended. */
1938:ThirdParty/FreeRTOS/tasks.c ****                     vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1939:ThirdParty/FreeRTOS/tasks.c ****                 }
1940:ThirdParty/FreeRTOS/tasks.c ****             }
1941:ThirdParty/FreeRTOS/tasks.c ****             else
1942:ThirdParty/FreeRTOS/tasks.c ****             {
1943:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
1944:ThirdParty/FreeRTOS/tasks.c ****             }
1945:ThirdParty/FreeRTOS/tasks.c ****         }
1946:ThirdParty/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1947:ThirdParty/FreeRTOS/tasks.c **** 
1948:ThirdParty/FreeRTOS/tasks.c ****         return xYieldRequired;
1949:ThirdParty/FreeRTOS/tasks.c ****     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 41


1950:ThirdParty/FreeRTOS/tasks.c **** 
1951:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1952:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
1953:ThirdParty/FreeRTOS/tasks.c **** 
1954:ThirdParty/FreeRTOS/tasks.c **** void vTaskStartScheduler( void )
1955:ThirdParty/FreeRTOS/tasks.c **** {
1956:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
1957:ThirdParty/FreeRTOS/tasks.c **** 
1958:ThirdParty/FreeRTOS/tasks.c ****     /* Add the idle task at the lowest priority. */
1959:ThirdParty/FreeRTOS/tasks.c ****     #if ( configSUPPORT_STATIC_ALLOCATION == 1 )
1960:ThirdParty/FreeRTOS/tasks.c ****     {
1961:ThirdParty/FreeRTOS/tasks.c ****         StaticTask_t * pxIdleTaskTCBBuffer = NULL;
1962:ThirdParty/FreeRTOS/tasks.c ****         StackType_t * pxIdleTaskStackBuffer = NULL;
1963:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulIdleTaskStackSize;
1964:ThirdParty/FreeRTOS/tasks.c **** 
1965:ThirdParty/FreeRTOS/tasks.c ****         /* The Idle task is created using user provided RAM - obtain the
1966:ThirdParty/FreeRTOS/tasks.c ****          * address of the RAM then create the idle task. */
1967:ThirdParty/FreeRTOS/tasks.c ****         vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskSta
1968:ThirdParty/FreeRTOS/tasks.c ****         xIdleTaskHandle = xTaskCreateStatic( prvIdleTask,
1969:ThirdParty/FreeRTOS/tasks.c ****                                              configIDLE_TASK_NAME,
1970:ThirdParty/FreeRTOS/tasks.c ****                                              ulIdleTaskStackSize,
1971:ThirdParty/FreeRTOS/tasks.c ****                                              ( void * ) NULL,       /*lint !e961.  The cast is not 
1972:ThirdParty/FreeRTOS/tasks.c ****                                              portPRIVILEGE_BIT,     /* In effect ( tskIDLE_PRIORITY
1973:ThirdParty/FreeRTOS/tasks.c ****                                              pxIdleTaskStackBuffer,
1974:ThirdParty/FreeRTOS/tasks.c ****                                              pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, j
1975:ThirdParty/FreeRTOS/tasks.c **** 
1976:ThirdParty/FreeRTOS/tasks.c ****         if( xIdleTaskHandle != NULL )
1977:ThirdParty/FreeRTOS/tasks.c ****         {
1978:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdPASS;
1979:ThirdParty/FreeRTOS/tasks.c ****         }
1980:ThirdParty/FreeRTOS/tasks.c ****         else
1981:ThirdParty/FreeRTOS/tasks.c ****         {
1982:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdFAIL;
1983:ThirdParty/FreeRTOS/tasks.c ****         }
1984:ThirdParty/FreeRTOS/tasks.c ****     }
1985:ThirdParty/FreeRTOS/tasks.c ****     #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
1986:ThirdParty/FreeRTOS/tasks.c ****     {
1987:ThirdParty/FreeRTOS/tasks.c ****         /* The Idle task is being created using dynamically allocated RAM. */
1988:ThirdParty/FreeRTOS/tasks.c ****         xReturn = xTaskCreate( prvIdleTask,
1989:ThirdParty/FreeRTOS/tasks.c ****                                configIDLE_TASK_NAME,
1990:ThirdParty/FreeRTOS/tasks.c ****                                configMINIMAL_STACK_SIZE,
1991:ThirdParty/FreeRTOS/tasks.c ****                                ( void * ) NULL,
1992:ThirdParty/FreeRTOS/tasks.c ****                                portPRIVILEGE_BIT,  /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_
1993:ThirdParty/FreeRTOS/tasks.c ****                                &xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is
1994:ThirdParty/FreeRTOS/tasks.c ****     }
1995:ThirdParty/FreeRTOS/tasks.c ****     #endif /* configSUPPORT_STATIC_ALLOCATION */
1996:ThirdParty/FreeRTOS/tasks.c **** 
1997:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_TIMERS == 1 )
1998:ThirdParty/FreeRTOS/tasks.c ****     {
1999:ThirdParty/FreeRTOS/tasks.c ****         if( xReturn == pdPASS )
2000:ThirdParty/FreeRTOS/tasks.c ****         {
2001:ThirdParty/FreeRTOS/tasks.c ****             xReturn = xTimerCreateTimerTask();
2002:ThirdParty/FreeRTOS/tasks.c ****         }
2003:ThirdParty/FreeRTOS/tasks.c ****         else
2004:ThirdParty/FreeRTOS/tasks.c ****         {
2005:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2006:ThirdParty/FreeRTOS/tasks.c ****         }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 42


2007:ThirdParty/FreeRTOS/tasks.c ****     }
2008:ThirdParty/FreeRTOS/tasks.c ****     #endif /* configUSE_TIMERS */
2009:ThirdParty/FreeRTOS/tasks.c **** 
2010:ThirdParty/FreeRTOS/tasks.c ****     if( xReturn == pdPASS )
2011:ThirdParty/FreeRTOS/tasks.c ****     {
2012:ThirdParty/FreeRTOS/tasks.c ****         /* freertos_tasks_c_additions_init() should only be called if the user
2013:ThirdParty/FreeRTOS/tasks.c ****          * definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2014:ThirdParty/FreeRTOS/tasks.c ****          * the only macro called by the function. */
2015:ThirdParty/FreeRTOS/tasks.c ****         #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2016:ThirdParty/FreeRTOS/tasks.c ****         {
2017:ThirdParty/FreeRTOS/tasks.c ****             freertos_tasks_c_additions_init();
2018:ThirdParty/FreeRTOS/tasks.c ****         }
2019:ThirdParty/FreeRTOS/tasks.c ****         #endif
2020:ThirdParty/FreeRTOS/tasks.c **** 
2021:ThirdParty/FreeRTOS/tasks.c ****         /* Interrupts are turned off here, to ensure a tick does not occur
2022:ThirdParty/FreeRTOS/tasks.c ****          * before or during the call to xPortStartScheduler().  The stacks of
2023:ThirdParty/FreeRTOS/tasks.c ****          * the created tasks contain a status word with interrupts switched on
2024:ThirdParty/FreeRTOS/tasks.c ****          * so interrupts will automatically get re-enabled when the first task
2025:ThirdParty/FreeRTOS/tasks.c ****          * starts to run. */
2026:ThirdParty/FreeRTOS/tasks.c ****         portDISABLE_INTERRUPTS();
2027:ThirdParty/FreeRTOS/tasks.c **** 
2028:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
2029:ThirdParty/FreeRTOS/tasks.c ****         {
2030:ThirdParty/FreeRTOS/tasks.c ****             /* Switch C-Runtime's TLS Block to point to the TLS
2031:ThirdParty/FreeRTOS/tasks.c ****              * block specific to the task that will run first. */
2032:ThirdParty/FreeRTOS/tasks.c ****             configSET_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
2033:ThirdParty/FreeRTOS/tasks.c ****         }
2034:ThirdParty/FreeRTOS/tasks.c ****         #endif
2035:ThirdParty/FreeRTOS/tasks.c **** 
2036:ThirdParty/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
2037:ThirdParty/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
2038:ThirdParty/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2039:ThirdParty/FreeRTOS/tasks.c **** 
2040:ThirdParty/FreeRTOS/tasks.c ****         /* If configGENERATE_RUN_TIME_STATS is defined then the following
2041:ThirdParty/FreeRTOS/tasks.c ****          * macro must be defined to configure the timer/counter used to generate
2042:ThirdParty/FreeRTOS/tasks.c ****          * the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2043:ThirdParty/FreeRTOS/tasks.c ****          * is set to 0 and the following line fails to build then ensure you do not
2044:ThirdParty/FreeRTOS/tasks.c ****          * have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2045:ThirdParty/FreeRTOS/tasks.c ****          * FreeRTOSConfig.h file. */
2046:ThirdParty/FreeRTOS/tasks.c ****         portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2047:ThirdParty/FreeRTOS/tasks.c **** 
2048:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
2049:ThirdParty/FreeRTOS/tasks.c **** 
2050:ThirdParty/FreeRTOS/tasks.c ****         /* Setting up the timer tick is hardware specific and thus in the
2051:ThirdParty/FreeRTOS/tasks.c ****          * portable interface. */
2052:ThirdParty/FreeRTOS/tasks.c ****         xPortStartScheduler();
2053:ThirdParty/FreeRTOS/tasks.c **** 
2054:ThirdParty/FreeRTOS/tasks.c ****         /* In most cases, xPortStartScheduler() will not return. If it
2055:ThirdParty/FreeRTOS/tasks.c ****          * returns pdTRUE then there was not enough heap memory available
2056:ThirdParty/FreeRTOS/tasks.c ****          * to create either the Idle or the Timer task. If it returned
2057:ThirdParty/FreeRTOS/tasks.c ****          * pdFALSE, then the application called xTaskEndScheduler().
2058:ThirdParty/FreeRTOS/tasks.c ****          * Most ports don't implement xTaskEndScheduler() as there is
2059:ThirdParty/FreeRTOS/tasks.c ****          * nothing to return to. */
2060:ThirdParty/FreeRTOS/tasks.c ****     }
2061:ThirdParty/FreeRTOS/tasks.c ****     else
2062:ThirdParty/FreeRTOS/tasks.c ****     {
2063:ThirdParty/FreeRTOS/tasks.c ****         /* This line will only be reached if the kernel could not be started,
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 43


2064:ThirdParty/FreeRTOS/tasks.c ****          * because there was not enough FreeRTOS heap to create the idle task
2065:ThirdParty/FreeRTOS/tasks.c ****          * or the timer task. */
2066:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2067:ThirdParty/FreeRTOS/tasks.c ****     }
2068:ThirdParty/FreeRTOS/tasks.c **** 
2069:ThirdParty/FreeRTOS/tasks.c ****     /* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2070:ThirdParty/FreeRTOS/tasks.c ****      * meaning xIdleTaskHandle is not used anywhere else. */
2071:ThirdParty/FreeRTOS/tasks.c ****     ( void ) xIdleTaskHandle;
2072:ThirdParty/FreeRTOS/tasks.c **** 
2073:ThirdParty/FreeRTOS/tasks.c ****     /* OpenOCD makes use of uxTopUsedPriority for thread debugging. Prevent uxTopUsedPriority
2074:ThirdParty/FreeRTOS/tasks.c ****      * from getting optimized out as it is no longer used by the kernel. */
2075:ThirdParty/FreeRTOS/tasks.c ****     ( void ) uxTopUsedPriority;
2076:ThirdParty/FreeRTOS/tasks.c **** }
2077:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2078:ThirdParty/FreeRTOS/tasks.c **** 
2079:ThirdParty/FreeRTOS/tasks.c **** void vTaskEndScheduler( void )
2080:ThirdParty/FreeRTOS/tasks.c **** {
2081:ThirdParty/FreeRTOS/tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
2082:ThirdParty/FreeRTOS/tasks.c ****      * routine so the original ISRs can be restored if necessary.  The port
2083:ThirdParty/FreeRTOS/tasks.c ****      * layer must ensure interrupts enable  bit is left in the correct state. */
2084:ThirdParty/FreeRTOS/tasks.c ****     portDISABLE_INTERRUPTS();
2085:ThirdParty/FreeRTOS/tasks.c ****     xSchedulerRunning = pdFALSE;
2086:ThirdParty/FreeRTOS/tasks.c ****     vPortEndScheduler();
2087:ThirdParty/FreeRTOS/tasks.c **** }
2088:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2089:ThirdParty/FreeRTOS/tasks.c **** 
2090:ThirdParty/FreeRTOS/tasks.c **** void vTaskSuspendAll( void )
2091:ThirdParty/FreeRTOS/tasks.c **** {
2092:ThirdParty/FreeRTOS/tasks.c ****     /* A critical section is not required as the variable is of type
2093:ThirdParty/FreeRTOS/tasks.c ****      * BaseType_t.  Please read Richard Barry's reply in the following link to a
2094:ThirdParty/FreeRTOS/tasks.c ****      * post in the FreeRTOS support forum before reporting this as a bug! -
2095:ThirdParty/FreeRTOS/tasks.c ****      * https://goo.gl/wu4acr */
2096:ThirdParty/FreeRTOS/tasks.c **** 
2097:ThirdParty/FreeRTOS/tasks.c ****     /* portSOFTWARE_BARRIER() is only implemented for emulated/simulated ports that
2098:ThirdParty/FreeRTOS/tasks.c ****      * do not otherwise exhibit real time behaviour. */
2099:ThirdParty/FreeRTOS/tasks.c ****     portSOFTWARE_BARRIER();
2100:ThirdParty/FreeRTOS/tasks.c **** 
2101:ThirdParty/FreeRTOS/tasks.c ****     /* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2102:ThirdParty/FreeRTOS/tasks.c ****      * is used to allow calls to vTaskSuspendAll() to nest. */
2103:ThirdParty/FreeRTOS/tasks.c ****     ++uxSchedulerSuspended;
2104:ThirdParty/FreeRTOS/tasks.c **** 
2105:ThirdParty/FreeRTOS/tasks.c ****     /* Enforces ordering for ports and optimised compilers that may otherwise place
2106:ThirdParty/FreeRTOS/tasks.c ****      * the above increment elsewhere. */
2107:ThirdParty/FreeRTOS/tasks.c ****     portMEMORY_BARRIER();
2108:ThirdParty/FreeRTOS/tasks.c **** }
2109:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2110:ThirdParty/FreeRTOS/tasks.c **** 
2111:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2112:ThirdParty/FreeRTOS/tasks.c **** 
2113:ThirdParty/FreeRTOS/tasks.c ****     static TickType_t prvGetExpectedIdleTime( void )
2114:ThirdParty/FreeRTOS/tasks.c ****     {
2115:ThirdParty/FreeRTOS/tasks.c ****         TickType_t xReturn;
2116:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2117:ThirdParty/FreeRTOS/tasks.c **** 
2118:ThirdParty/FreeRTOS/tasks.c ****         /* uxHigherPriorityReadyTasks takes care of the case where
2119:ThirdParty/FreeRTOS/tasks.c ****          * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2120:ThirdParty/FreeRTOS/tasks.c ****          * task that are in the Ready state, even though the idle task is
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 44


2121:ThirdParty/FreeRTOS/tasks.c ****          * running. */
2122:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2123:ThirdParty/FreeRTOS/tasks.c ****         {
2124:ThirdParty/FreeRTOS/tasks.c ****             if( uxTopReadyPriority > tskIDLE_PRIORITY )
2125:ThirdParty/FreeRTOS/tasks.c ****             {
2126:ThirdParty/FreeRTOS/tasks.c ****                 uxHigherPriorityReadyTasks = pdTRUE;
2127:ThirdParty/FreeRTOS/tasks.c ****             }
2128:ThirdParty/FreeRTOS/tasks.c ****         }
2129:ThirdParty/FreeRTOS/tasks.c ****         #else
2130:ThirdParty/FreeRTOS/tasks.c ****         {
2131:ThirdParty/FreeRTOS/tasks.c ****             const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2132:ThirdParty/FreeRTOS/tasks.c **** 
2133:ThirdParty/FreeRTOS/tasks.c ****             /* When port optimised task selection is used the uxTopReadyPriority
2134:ThirdParty/FreeRTOS/tasks.c ****              * variable is used as a bit map.  If bits other than the least
2135:ThirdParty/FreeRTOS/tasks.c ****              * significant bit are set then there are tasks that have a priority
2136:ThirdParty/FreeRTOS/tasks.c ****              * above the idle priority that are in the Ready state.  This takes
2137:ThirdParty/FreeRTOS/tasks.c ****              * care of the case where the co-operative scheduler is in use. */
2138:ThirdParty/FreeRTOS/tasks.c ****             if( uxTopReadyPriority > uxLeastSignificantBit )
2139:ThirdParty/FreeRTOS/tasks.c ****             {
2140:ThirdParty/FreeRTOS/tasks.c ****                 uxHigherPriorityReadyTasks = pdTRUE;
2141:ThirdParty/FreeRTOS/tasks.c ****             }
2142:ThirdParty/FreeRTOS/tasks.c ****         }
2143:ThirdParty/FreeRTOS/tasks.c ****         #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */
2144:ThirdParty/FreeRTOS/tasks.c **** 
2145:ThirdParty/FreeRTOS/tasks.c ****         if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2146:ThirdParty/FreeRTOS/tasks.c ****         {
2147:ThirdParty/FreeRTOS/tasks.c ****             xReturn = 0;
2148:ThirdParty/FreeRTOS/tasks.c ****         }
2149:ThirdParty/FreeRTOS/tasks.c ****         else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2150:ThirdParty/FreeRTOS/tasks.c ****         {
2151:ThirdParty/FreeRTOS/tasks.c ****             /* There are other idle priority tasks in the ready state.  If
2152:ThirdParty/FreeRTOS/tasks.c ****              * time slicing is used then the very next tick interrupt must be
2153:ThirdParty/FreeRTOS/tasks.c ****              * processed. */
2154:ThirdParty/FreeRTOS/tasks.c ****             xReturn = 0;
2155:ThirdParty/FreeRTOS/tasks.c ****         }
2156:ThirdParty/FreeRTOS/tasks.c ****         else if( uxHigherPriorityReadyTasks != pdFALSE )
2157:ThirdParty/FreeRTOS/tasks.c ****         {
2158:ThirdParty/FreeRTOS/tasks.c ****             /* There are tasks in the Ready state that have a priority above the
2159:ThirdParty/FreeRTOS/tasks.c ****              * idle priority.  This path can only be reached if
2160:ThirdParty/FreeRTOS/tasks.c ****              * configUSE_PREEMPTION is 0. */
2161:ThirdParty/FreeRTOS/tasks.c ****             xReturn = 0;
2162:ThirdParty/FreeRTOS/tasks.c ****         }
2163:ThirdParty/FreeRTOS/tasks.c ****         else
2164:ThirdParty/FreeRTOS/tasks.c ****         {
2165:ThirdParty/FreeRTOS/tasks.c ****             xReturn = xNextTaskUnblockTime - xTickCount;
2166:ThirdParty/FreeRTOS/tasks.c ****         }
2167:ThirdParty/FreeRTOS/tasks.c **** 
2168:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
2169:ThirdParty/FreeRTOS/tasks.c ****     }
2170:ThirdParty/FreeRTOS/tasks.c **** 
2171:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2172:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2173:ThirdParty/FreeRTOS/tasks.c **** 
2174:ThirdParty/FreeRTOS/tasks.c **** BaseType_t xTaskResumeAll( void )
2175:ThirdParty/FreeRTOS/tasks.c **** {
2176:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB = NULL;
2177:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 45


2178:ThirdParty/FreeRTOS/tasks.c **** 
2179:ThirdParty/FreeRTOS/tasks.c ****     /* If uxSchedulerSuspended is zero then this function does not match a
2180:ThirdParty/FreeRTOS/tasks.c ****      * previous call to vTaskSuspendAll(). */
2181:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended );
2182:ThirdParty/FreeRTOS/tasks.c **** 
2183:ThirdParty/FreeRTOS/tasks.c ****     /* It is possible that an ISR caused a task to be removed from an event
2184:ThirdParty/FreeRTOS/tasks.c ****      * list while the scheduler was suspended.  If this was the case then the
2185:ThirdParty/FreeRTOS/tasks.c ****      * removed task will have been added to the xPendingReadyList.  Once the
2186:ThirdParty/FreeRTOS/tasks.c ****      * scheduler has been resumed it is safe to move all the pending ready
2187:ThirdParty/FreeRTOS/tasks.c ****      * tasks from this list into their appropriate ready list. */
2188:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
2189:ThirdParty/FreeRTOS/tasks.c ****     {
2190:ThirdParty/FreeRTOS/tasks.c ****         --uxSchedulerSuspended;
2191:ThirdParty/FreeRTOS/tasks.c **** 
2192:ThirdParty/FreeRTOS/tasks.c ****         if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2193:ThirdParty/FreeRTOS/tasks.c ****         {
2194:ThirdParty/FreeRTOS/tasks.c ****             if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2195:ThirdParty/FreeRTOS/tasks.c ****             {
2196:ThirdParty/FreeRTOS/tasks.c ****                 /* Move any readied tasks from the pending list into the
2197:ThirdParty/FreeRTOS/tasks.c ****                  * appropriate ready list. */
2198:ThirdParty/FreeRTOS/tasks.c ****                 while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2199:ThirdParty/FreeRTOS/tasks.c ****                 {
2200:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 vo
2201:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
2202:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
2203:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
2204:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2205:ThirdParty/FreeRTOS/tasks.c **** 
2206:ThirdParty/FreeRTOS/tasks.c ****                     /* If the moved task has a priority higher than or equal to
2207:ThirdParty/FreeRTOS/tasks.c ****                      * the current task then a yield must be performed. */
2208:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2209:ThirdParty/FreeRTOS/tasks.c ****                     {
2210:ThirdParty/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
2211:ThirdParty/FreeRTOS/tasks.c ****                     }
2212:ThirdParty/FreeRTOS/tasks.c ****                     else
2213:ThirdParty/FreeRTOS/tasks.c ****                     {
2214:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2215:ThirdParty/FreeRTOS/tasks.c ****                     }
2216:ThirdParty/FreeRTOS/tasks.c ****                 }
2217:ThirdParty/FreeRTOS/tasks.c **** 
2218:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB != NULL )
2219:ThirdParty/FreeRTOS/tasks.c ****                 {
2220:ThirdParty/FreeRTOS/tasks.c ****                     /* A task was unblocked while the scheduler was suspended,
2221:ThirdParty/FreeRTOS/tasks.c ****                      * which may have prevented the next unblock time from being
2222:ThirdParty/FreeRTOS/tasks.c ****                      * re-calculated, in which case re-calculate it now.  Mainly
2223:ThirdParty/FreeRTOS/tasks.c ****                      * important for low power tickless implementations, where
2224:ThirdParty/FreeRTOS/tasks.c ****                      * this can prevent an unnecessary exit from low power
2225:ThirdParty/FreeRTOS/tasks.c ****                      * state. */
2226:ThirdParty/FreeRTOS/tasks.c ****                     prvResetNextTaskUnblockTime();
2227:ThirdParty/FreeRTOS/tasks.c ****                 }
2228:ThirdParty/FreeRTOS/tasks.c **** 
2229:ThirdParty/FreeRTOS/tasks.c ****                 /* If any ticks occurred while the scheduler was suspended then
2230:ThirdParty/FreeRTOS/tasks.c ****                  * they should be processed now.  This ensures the tick count does
2231:ThirdParty/FreeRTOS/tasks.c ****                  * not  slip, and that any delayed tasks are resumed at the correct
2232:ThirdParty/FreeRTOS/tasks.c ****                  * time. */
2233:ThirdParty/FreeRTOS/tasks.c ****                 {
2234:ThirdParty/FreeRTOS/tasks.c ****                     TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 46


2235:ThirdParty/FreeRTOS/tasks.c **** 
2236:ThirdParty/FreeRTOS/tasks.c ****                     if( xPendedCounts > ( TickType_t ) 0U )
2237:ThirdParty/FreeRTOS/tasks.c ****                     {
2238:ThirdParty/FreeRTOS/tasks.c ****                         do
2239:ThirdParty/FreeRTOS/tasks.c ****                         {
2240:ThirdParty/FreeRTOS/tasks.c ****                             if( xTaskIncrementTick() != pdFALSE )
2241:ThirdParty/FreeRTOS/tasks.c ****                             {
2242:ThirdParty/FreeRTOS/tasks.c ****                                 xYieldPending = pdTRUE;
2243:ThirdParty/FreeRTOS/tasks.c ****                             }
2244:ThirdParty/FreeRTOS/tasks.c ****                             else
2245:ThirdParty/FreeRTOS/tasks.c ****                             {
2246:ThirdParty/FreeRTOS/tasks.c ****                                 mtCOVERAGE_TEST_MARKER();
2247:ThirdParty/FreeRTOS/tasks.c ****                             }
2248:ThirdParty/FreeRTOS/tasks.c **** 
2249:ThirdParty/FreeRTOS/tasks.c ****                             --xPendedCounts;
2250:ThirdParty/FreeRTOS/tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
2251:ThirdParty/FreeRTOS/tasks.c **** 
2252:ThirdParty/FreeRTOS/tasks.c ****                         xPendedTicks = 0;
2253:ThirdParty/FreeRTOS/tasks.c ****                     }
2254:ThirdParty/FreeRTOS/tasks.c ****                     else
2255:ThirdParty/FreeRTOS/tasks.c ****                     {
2256:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2257:ThirdParty/FreeRTOS/tasks.c ****                     }
2258:ThirdParty/FreeRTOS/tasks.c ****                 }
2259:ThirdParty/FreeRTOS/tasks.c **** 
2260:ThirdParty/FreeRTOS/tasks.c ****                 if( xYieldPending != pdFALSE )
2261:ThirdParty/FreeRTOS/tasks.c ****                 {
2262:ThirdParty/FreeRTOS/tasks.c ****                     #if ( configUSE_PREEMPTION != 0 )
2263:ThirdParty/FreeRTOS/tasks.c ****                     {
2264:ThirdParty/FreeRTOS/tasks.c ****                         xAlreadyYielded = pdTRUE;
2265:ThirdParty/FreeRTOS/tasks.c ****                     }
2266:ThirdParty/FreeRTOS/tasks.c ****                     #endif
2267:ThirdParty/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
2268:ThirdParty/FreeRTOS/tasks.c ****                 }
2269:ThirdParty/FreeRTOS/tasks.c ****                 else
2270:ThirdParty/FreeRTOS/tasks.c ****                 {
2271:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
2272:ThirdParty/FreeRTOS/tasks.c ****                 }
2273:ThirdParty/FreeRTOS/tasks.c ****             }
2274:ThirdParty/FreeRTOS/tasks.c ****         }
2275:ThirdParty/FreeRTOS/tasks.c ****         else
2276:ThirdParty/FreeRTOS/tasks.c ****         {
2277:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2278:ThirdParty/FreeRTOS/tasks.c ****         }
2279:ThirdParty/FreeRTOS/tasks.c ****     }
2280:ThirdParty/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
2281:ThirdParty/FreeRTOS/tasks.c **** 
2282:ThirdParty/FreeRTOS/tasks.c ****     return xAlreadyYielded;
2283:ThirdParty/FreeRTOS/tasks.c **** }
2284:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2285:ThirdParty/FreeRTOS/tasks.c **** 
2286:ThirdParty/FreeRTOS/tasks.c **** TickType_t xTaskGetTickCount( void )
2287:ThirdParty/FreeRTOS/tasks.c **** {
2288:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xTicks;
2289:ThirdParty/FreeRTOS/tasks.c **** 
2290:ThirdParty/FreeRTOS/tasks.c ****     /* Critical section required if running on a 16 bit processor. */
2291:ThirdParty/FreeRTOS/tasks.c ****     portTICK_TYPE_ENTER_CRITICAL();
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 47


2292:ThirdParty/FreeRTOS/tasks.c ****     {
2293:ThirdParty/FreeRTOS/tasks.c ****         xTicks = xTickCount;
2294:ThirdParty/FreeRTOS/tasks.c ****     }
2295:ThirdParty/FreeRTOS/tasks.c ****     portTICK_TYPE_EXIT_CRITICAL();
2296:ThirdParty/FreeRTOS/tasks.c **** 
2297:ThirdParty/FreeRTOS/tasks.c ****     return xTicks;
2298:ThirdParty/FreeRTOS/tasks.c **** }
2299:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2300:ThirdParty/FreeRTOS/tasks.c **** 
2301:ThirdParty/FreeRTOS/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2302:ThirdParty/FreeRTOS/tasks.c **** {
2303:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xReturn;
2304:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxSavedInterruptStatus;
2305:ThirdParty/FreeRTOS/tasks.c **** 
2306:ThirdParty/FreeRTOS/tasks.c ****     /* RTOS ports that support interrupt nesting have the concept of a maximum
2307:ThirdParty/FreeRTOS/tasks.c ****      * system call (or maximum API call) interrupt priority.  Interrupts that are
2308:ThirdParty/FreeRTOS/tasks.c ****      * above the maximum system call priority are kept permanently enabled, even
2309:ThirdParty/FreeRTOS/tasks.c ****      * when the RTOS kernel is in a critical section, but cannot make any calls to
2310:ThirdParty/FreeRTOS/tasks.c ****      * FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2311:ThirdParty/FreeRTOS/tasks.c ****      * then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2312:ThirdParty/FreeRTOS/tasks.c ****      * failure if a FreeRTOS API function is called from an interrupt that has been
2313:ThirdParty/FreeRTOS/tasks.c ****      * assigned a priority above the configured maximum system call priority.
2314:ThirdParty/FreeRTOS/tasks.c ****      * Only FreeRTOS functions that end in FromISR can be called from interrupts
2315:ThirdParty/FreeRTOS/tasks.c ****      * that have been assigned a priority at or (logically) below the maximum
2316:ThirdParty/FreeRTOS/tasks.c ****      * system call  interrupt priority.  FreeRTOS maintains a separate interrupt
2317:ThirdParty/FreeRTOS/tasks.c ****      * safe API to ensure interrupt entry is as fast and as simple as possible.
2318:ThirdParty/FreeRTOS/tasks.c ****      * More information (albeit Cortex-M specific) is provided on the following
2319:ThirdParty/FreeRTOS/tasks.c ****      * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
2320:ThirdParty/FreeRTOS/tasks.c ****     portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2321:ThirdParty/FreeRTOS/tasks.c **** 
2322:ThirdParty/FreeRTOS/tasks.c ****     uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2323:ThirdParty/FreeRTOS/tasks.c ****     {
2324:ThirdParty/FreeRTOS/tasks.c ****         xReturn = xTickCount;
2325:ThirdParty/FreeRTOS/tasks.c ****     }
2326:ThirdParty/FreeRTOS/tasks.c ****     portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2327:ThirdParty/FreeRTOS/tasks.c **** 
2328:ThirdParty/FreeRTOS/tasks.c ****     return xReturn;
2329:ThirdParty/FreeRTOS/tasks.c **** }
2330:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2331:ThirdParty/FreeRTOS/tasks.c **** 
2332:ThirdParty/FreeRTOS/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2333:ThirdParty/FreeRTOS/tasks.c **** {
2334:ThirdParty/FreeRTOS/tasks.c ****     /* A critical section is not required because the variables are of type
2335:ThirdParty/FreeRTOS/tasks.c ****      * BaseType_t. */
2336:ThirdParty/FreeRTOS/tasks.c ****     return uxCurrentNumberOfTasks;
2337:ThirdParty/FreeRTOS/tasks.c **** }
2338:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2339:ThirdParty/FreeRTOS/tasks.c **** 
2340:ThirdParty/FreeRTOS/tasks.c **** char * pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed f
2341:ThirdParty/FreeRTOS/tasks.c **** {
2342:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
2343:ThirdParty/FreeRTOS/tasks.c **** 
2344:ThirdParty/FreeRTOS/tasks.c ****     /* If null is passed in here then the name of the calling task is being
2345:ThirdParty/FreeRTOS/tasks.c ****      * queried. */
2346:ThirdParty/FreeRTOS/tasks.c ****     pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2347:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
2348:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 48


2349:ThirdParty/FreeRTOS/tasks.c **** }
2350:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2351:ThirdParty/FreeRTOS/tasks.c **** 
2352:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2353:ThirdParty/FreeRTOS/tasks.c **** 
2354:ThirdParty/FreeRTOS/tasks.c ****     static TCB_t * prvSearchForNameWithinSingleList( List_t * pxList,
2355:ThirdParty/FreeRTOS/tasks.c ****                                                      const char pcNameToQuery[] )
2356:ThirdParty/FreeRTOS/tasks.c ****     {
2357:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNextTCB;
2358:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxFirstTCB;
2359:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxReturn = NULL;
2360:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t x;
2361:ThirdParty/FreeRTOS/tasks.c ****         char cNextChar;
2362:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xBreakLoop;
2363:ThirdParty/FreeRTOS/tasks.c **** 
2364:ThirdParty/FreeRTOS/tasks.c ****         /* This function is called with the scheduler suspended. */
2365:ThirdParty/FreeRTOS/tasks.c **** 
2366:ThirdParty/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2367:ThirdParty/FreeRTOS/tasks.c ****         {
2368:ThirdParty/FreeRTOS/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
2369:ThirdParty/FreeRTOS/tasks.c **** 
2370:ThirdParty/FreeRTOS/tasks.c ****             do
2371:ThirdParty/FreeRTOS/tasks.c ****             {
2372:ThirdParty/FreeRTOS/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
2373:ThirdParty/FreeRTOS/tasks.c **** 
2374:ThirdParty/FreeRTOS/tasks.c ****                 /* Check each character in the name looking for a match or
2375:ThirdParty/FreeRTOS/tasks.c ****                  * mismatch. */
2376:ThirdParty/FreeRTOS/tasks.c ****                 xBreakLoop = pdFALSE;
2377:ThirdParty/FreeRTOS/tasks.c **** 
2378:ThirdParty/FreeRTOS/tasks.c ****                 for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2379:ThirdParty/FreeRTOS/tasks.c ****                 {
2380:ThirdParty/FreeRTOS/tasks.c ****                     cNextChar = pxNextTCB->pcTaskName[ x ];
2381:ThirdParty/FreeRTOS/tasks.c **** 
2382:ThirdParty/FreeRTOS/tasks.c ****                     if( cNextChar != pcNameToQuery[ x ] )
2383:ThirdParty/FreeRTOS/tasks.c ****                     {
2384:ThirdParty/FreeRTOS/tasks.c ****                         /* Characters didn't match. */
2385:ThirdParty/FreeRTOS/tasks.c ****                         xBreakLoop = pdTRUE;
2386:ThirdParty/FreeRTOS/tasks.c ****                     }
2387:ThirdParty/FreeRTOS/tasks.c ****                     else if( cNextChar == ( char ) 0x00 )
2388:ThirdParty/FreeRTOS/tasks.c ****                     {
2389:ThirdParty/FreeRTOS/tasks.c ****                         /* Both strings terminated, a match must have been
2390:ThirdParty/FreeRTOS/tasks.c ****                          * found. */
2391:ThirdParty/FreeRTOS/tasks.c ****                         pxReturn = pxNextTCB;
2392:ThirdParty/FreeRTOS/tasks.c ****                         xBreakLoop = pdTRUE;
2393:ThirdParty/FreeRTOS/tasks.c ****                     }
2394:ThirdParty/FreeRTOS/tasks.c ****                     else
2395:ThirdParty/FreeRTOS/tasks.c ****                     {
2396:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2397:ThirdParty/FreeRTOS/tasks.c ****                     }
2398:ThirdParty/FreeRTOS/tasks.c **** 
2399:ThirdParty/FreeRTOS/tasks.c ****                     if( xBreakLoop != pdFALSE )
2400:ThirdParty/FreeRTOS/tasks.c ****                     {
2401:ThirdParty/FreeRTOS/tasks.c ****                         break;
2402:ThirdParty/FreeRTOS/tasks.c ****                     }
2403:ThirdParty/FreeRTOS/tasks.c ****                 }
2404:ThirdParty/FreeRTOS/tasks.c **** 
2405:ThirdParty/FreeRTOS/tasks.c ****                 if( pxReturn != NULL )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 49


2406:ThirdParty/FreeRTOS/tasks.c ****                 {
2407:ThirdParty/FreeRTOS/tasks.c ****                     /* The handle has been found. */
2408:ThirdParty/FreeRTOS/tasks.c ****                     break;
2409:ThirdParty/FreeRTOS/tasks.c ****                 }
2410:ThirdParty/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
2411:ThirdParty/FreeRTOS/tasks.c ****         }
2412:ThirdParty/FreeRTOS/tasks.c ****         else
2413:ThirdParty/FreeRTOS/tasks.c ****         {
2414:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2415:ThirdParty/FreeRTOS/tasks.c ****         }
2416:ThirdParty/FreeRTOS/tasks.c **** 
2417:ThirdParty/FreeRTOS/tasks.c ****         return pxReturn;
2418:ThirdParty/FreeRTOS/tasks.c ****     }
2419:ThirdParty/FreeRTOS/tasks.c **** 
2420:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2421:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2422:ThirdParty/FreeRTOS/tasks.c **** 
2423:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2424:ThirdParty/FreeRTOS/tasks.c **** 
2425:ThirdParty/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetHandle( const char * pcNameToQuery ) /*lint !e971 Unqualified char types a
2426:ThirdParty/FreeRTOS/tasks.c ****     {
2427:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxQueue = configMAX_PRIORITIES;
2428:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2429:ThirdParty/FreeRTOS/tasks.c **** 
2430:ThirdParty/FreeRTOS/tasks.c ****         /* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2431:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2432:ThirdParty/FreeRTOS/tasks.c **** 
2433:ThirdParty/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2434:ThirdParty/FreeRTOS/tasks.c ****         {
2435:ThirdParty/FreeRTOS/tasks.c ****             /* Search the ready lists. */
2436:ThirdParty/FreeRTOS/tasks.c ****             do
2437:ThirdParty/FreeRTOS/tasks.c ****             {
2438:ThirdParty/FreeRTOS/tasks.c ****                 uxQueue--;
2439:ThirdParty/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueu
2440:ThirdParty/FreeRTOS/tasks.c **** 
2441:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB != NULL )
2442:ThirdParty/FreeRTOS/tasks.c ****                 {
2443:ThirdParty/FreeRTOS/tasks.c ****                     /* Found the handle. */
2444:ThirdParty/FreeRTOS/tasks.c ****                     break;
2445:ThirdParty/FreeRTOS/tasks.c ****                 }
2446:ThirdParty/FreeRTOS/tasks.c ****             } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as 
2447:ThirdParty/FreeRTOS/tasks.c **** 
2448:ThirdParty/FreeRTOS/tasks.c ****             /* Search the delayed lists. */
2449:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB == NULL )
2450:ThirdParty/FreeRTOS/tasks.c ****             {
2451:ThirdParty/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQ
2452:ThirdParty/FreeRTOS/tasks.c ****             }
2453:ThirdParty/FreeRTOS/tasks.c **** 
2454:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB == NULL )
2455:ThirdParty/FreeRTOS/tasks.c ****             {
2456:ThirdParty/FreeRTOS/tasks.c ****                 pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, p
2457:ThirdParty/FreeRTOS/tasks.c ****             }
2458:ThirdParty/FreeRTOS/tasks.c **** 
2459:ThirdParty/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskSuspend == 1 )
2460:ThirdParty/FreeRTOS/tasks.c ****             {
2461:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB == NULL )
2462:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 50


2463:ThirdParty/FreeRTOS/tasks.c ****                     /* Search the suspended list. */
2464:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2465:ThirdParty/FreeRTOS/tasks.c ****                 }
2466:ThirdParty/FreeRTOS/tasks.c ****             }
2467:ThirdParty/FreeRTOS/tasks.c ****             #endif
2468:ThirdParty/FreeRTOS/tasks.c **** 
2469:ThirdParty/FreeRTOS/tasks.c ****             #if ( INCLUDE_vTaskDelete == 1 )
2470:ThirdParty/FreeRTOS/tasks.c ****             {
2471:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB == NULL )
2472:ThirdParty/FreeRTOS/tasks.c ****                 {
2473:ThirdParty/FreeRTOS/tasks.c ****                     /* Search the deleted list. */
2474:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQu
2475:ThirdParty/FreeRTOS/tasks.c ****                 }
2476:ThirdParty/FreeRTOS/tasks.c ****             }
2477:ThirdParty/FreeRTOS/tasks.c ****             #endif
2478:ThirdParty/FreeRTOS/tasks.c ****         }
2479:ThirdParty/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2480:ThirdParty/FreeRTOS/tasks.c **** 
2481:ThirdParty/FreeRTOS/tasks.c ****         return pxTCB;
2482:ThirdParty/FreeRTOS/tasks.c ****     }
2483:ThirdParty/FreeRTOS/tasks.c **** 
2484:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2485:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2486:ThirdParty/FreeRTOS/tasks.c **** 
2487:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2488:ThirdParty/FreeRTOS/tasks.c **** 
2489:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray,
2490:ThirdParty/FreeRTOS/tasks.c ****                                       const UBaseType_t uxArraySize,
2491:ThirdParty/FreeRTOS/tasks.c ****                                       configRUN_TIME_COUNTER_TYPE * const pulTotalRunTime )
2492:ThirdParty/FreeRTOS/tasks.c ****     {
2493:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2494:ThirdParty/FreeRTOS/tasks.c **** 
2495:ThirdParty/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2496:ThirdParty/FreeRTOS/tasks.c ****         {
2497:ThirdParty/FreeRTOS/tasks.c ****             /* Is there a space in the array for each task in the system? */
2498:ThirdParty/FreeRTOS/tasks.c ****             if( uxArraySize >= uxCurrentNumberOfTasks )
2499:ThirdParty/FreeRTOS/tasks.c ****             {
2500:ThirdParty/FreeRTOS/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2501:ThirdParty/FreeRTOS/tasks.c ****                  * task in the Ready state. */
2502:ThirdParty/FreeRTOS/tasks.c ****                 do
2503:ThirdParty/FreeRTOS/tasks.c ****                 {
2504:ThirdParty/FreeRTOS/tasks.c ****                     uxQueue--;
2505:ThirdParty/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
2506:ThirdParty/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
2507:ThirdParty/FreeRTOS/tasks.c **** 
2508:ThirdParty/FreeRTOS/tasks.c ****                 /* Fill in an TaskStatus_t structure with information on each
2509:ThirdParty/FreeRTOS/tasks.c ****                  * task in the Blocked state. */
2510:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2511:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
2512:ThirdParty/FreeRTOS/tasks.c **** 
2513:ThirdParty/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskDelete == 1 )
2514:ThirdParty/FreeRTOS/tasks.c ****                 {
2515:ThirdParty/FreeRTOS/tasks.c ****                     /* Fill in an TaskStatus_t structure with information on
2516:ThirdParty/FreeRTOS/tasks.c ****                      * each task that has been deleted but not yet cleaned up. */
2517:ThirdParty/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTas
2518:ThirdParty/FreeRTOS/tasks.c ****                 }
2519:ThirdParty/FreeRTOS/tasks.c ****                 #endif
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 51


2520:ThirdParty/FreeRTOS/tasks.c **** 
2521:ThirdParty/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
2522:ThirdParty/FreeRTOS/tasks.c ****                 {
2523:ThirdParty/FreeRTOS/tasks.c ****                     /* Fill in an TaskStatus_t structure with information on
2524:ThirdParty/FreeRTOS/tasks.c ****                      * each task in the Suspended state. */
2525:ThirdParty/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSus
2526:ThirdParty/FreeRTOS/tasks.c ****                 }
2527:ThirdParty/FreeRTOS/tasks.c ****                 #endif
2528:ThirdParty/FreeRTOS/tasks.c **** 
2529:ThirdParty/FreeRTOS/tasks.c ****                 #if ( configGENERATE_RUN_TIME_STATS == 1 )
2530:ThirdParty/FreeRTOS/tasks.c ****                 {
2531:ThirdParty/FreeRTOS/tasks.c ****                     if( pulTotalRunTime != NULL )
2532:ThirdParty/FreeRTOS/tasks.c ****                     {
2533:ThirdParty/FreeRTOS/tasks.c ****                         #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2534:ThirdParty/FreeRTOS/tasks.c ****                             portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2535:ThirdParty/FreeRTOS/tasks.c ****                         #else
2536:ThirdParty/FreeRTOS/tasks.c ****                             *pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2537:ThirdParty/FreeRTOS/tasks.c ****                         #endif
2538:ThirdParty/FreeRTOS/tasks.c ****                     }
2539:ThirdParty/FreeRTOS/tasks.c ****                 }
2540:ThirdParty/FreeRTOS/tasks.c ****                 #else /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2541:ThirdParty/FreeRTOS/tasks.c ****                 {
2542:ThirdParty/FreeRTOS/tasks.c ****                     if( pulTotalRunTime != NULL )
2543:ThirdParty/FreeRTOS/tasks.c ****                     {
2544:ThirdParty/FreeRTOS/tasks.c ****                         *pulTotalRunTime = 0;
2545:ThirdParty/FreeRTOS/tasks.c ****                     }
2546:ThirdParty/FreeRTOS/tasks.c ****                 }
2547:ThirdParty/FreeRTOS/tasks.c ****                 #endif /* if ( configGENERATE_RUN_TIME_STATS == 1 ) */
2548:ThirdParty/FreeRTOS/tasks.c ****             }
2549:ThirdParty/FreeRTOS/tasks.c ****             else
2550:ThirdParty/FreeRTOS/tasks.c ****             {
2551:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2552:ThirdParty/FreeRTOS/tasks.c ****             }
2553:ThirdParty/FreeRTOS/tasks.c ****         }
2554:ThirdParty/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2555:ThirdParty/FreeRTOS/tasks.c **** 
2556:ThirdParty/FreeRTOS/tasks.c ****         return uxTask;
2557:ThirdParty/FreeRTOS/tasks.c ****     }
2558:ThirdParty/FreeRTOS/tasks.c **** 
2559:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2560:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2561:ThirdParty/FreeRTOS/tasks.c **** 
2562:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2563:ThirdParty/FreeRTOS/tasks.c **** 
2564:ThirdParty/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetIdleTaskHandle( void )
2565:ThirdParty/FreeRTOS/tasks.c ****     {
2566:ThirdParty/FreeRTOS/tasks.c ****         /* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2567:ThirdParty/FreeRTOS/tasks.c ****          * started, then xIdleTaskHandle will be NULL. */
2568:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xIdleTaskHandle != NULL ) );
2569:ThirdParty/FreeRTOS/tasks.c ****         return xIdleTaskHandle;
2570:ThirdParty/FreeRTOS/tasks.c ****     }
2571:ThirdParty/FreeRTOS/tasks.c **** 
2572:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2573:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2574:ThirdParty/FreeRTOS/tasks.c **** 
2575:ThirdParty/FreeRTOS/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2576:ThirdParty/FreeRTOS/tasks.c ****  * This is to ensure vTaskStepTick() is available when user defined low power mode
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 52


2577:ThirdParty/FreeRTOS/tasks.c ****  * implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2578:ThirdParty/FreeRTOS/tasks.c ****  * 1. */
2579:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2580:ThirdParty/FreeRTOS/tasks.c **** 
2581:ThirdParty/FreeRTOS/tasks.c ****     void vTaskStepTick( TickType_t xTicksToJump )
2582:ThirdParty/FreeRTOS/tasks.c ****     {
2583:ThirdParty/FreeRTOS/tasks.c ****         /* Correct the tick count value after a period during which the tick
2584:ThirdParty/FreeRTOS/tasks.c ****          * was suppressed.  Note this does *not* call the tick hook function for
2585:ThirdParty/FreeRTOS/tasks.c ****          * each stepped tick. */
2586:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2587:ThirdParty/FreeRTOS/tasks.c **** 
2588:ThirdParty/FreeRTOS/tasks.c ****         if( ( xTickCount + xTicksToJump ) == xNextTaskUnblockTime )
2589:ThirdParty/FreeRTOS/tasks.c ****         {
2590:ThirdParty/FreeRTOS/tasks.c ****             /* Arrange for xTickCount to reach xNextTaskUnblockTime in
2591:ThirdParty/FreeRTOS/tasks.c ****              * xTaskIncrementTick() when the scheduler resumes.  This ensures
2592:ThirdParty/FreeRTOS/tasks.c ****              * that any delayed tasks are resumed at the correct time. */
2593:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( uxSchedulerSuspended );
2594:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( xTicksToJump != ( TickType_t ) 0 );
2595:ThirdParty/FreeRTOS/tasks.c **** 
2596:ThirdParty/FreeRTOS/tasks.c ****             /* Prevent the tick interrupt modifying xPendedTicks simultaneously. */
2597:ThirdParty/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
2598:ThirdParty/FreeRTOS/tasks.c ****             {
2599:ThirdParty/FreeRTOS/tasks.c ****                 xPendedTicks++;
2600:ThirdParty/FreeRTOS/tasks.c ****             }
2601:ThirdParty/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
2602:ThirdParty/FreeRTOS/tasks.c ****             xTicksToJump--;
2603:ThirdParty/FreeRTOS/tasks.c ****         }
2604:ThirdParty/FreeRTOS/tasks.c ****         else
2605:ThirdParty/FreeRTOS/tasks.c ****         {
2606:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
2607:ThirdParty/FreeRTOS/tasks.c ****         }
2608:ThirdParty/FreeRTOS/tasks.c **** 
2609:ThirdParty/FreeRTOS/tasks.c ****         xTickCount += xTicksToJump;
2610:ThirdParty/FreeRTOS/tasks.c ****         traceINCREASE_TICK_COUNT( xTicksToJump );
2611:ThirdParty/FreeRTOS/tasks.c ****     }
2612:ThirdParty/FreeRTOS/tasks.c **** 
2613:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2614:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2615:ThirdParty/FreeRTOS/tasks.c **** 
2616:ThirdParty/FreeRTOS/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2617:ThirdParty/FreeRTOS/tasks.c **** {
2618:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
2619:ThirdParty/FreeRTOS/tasks.c **** 
2620:ThirdParty/FreeRTOS/tasks.c ****     /* Must not be called with the scheduler suspended as the implementation
2621:ThirdParty/FreeRTOS/tasks.c ****      * relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2622:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended == 0 );
2623:ThirdParty/FreeRTOS/tasks.c **** 
2624:ThirdParty/FreeRTOS/tasks.c ****     /* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2625:ThirdParty/FreeRTOS/tasks.c ****      * the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2626:ThirdParty/FreeRTOS/tasks.c ****     vTaskSuspendAll();
2627:ThirdParty/FreeRTOS/tasks.c **** 
2628:ThirdParty/FreeRTOS/tasks.c ****     /* Prevent the tick interrupt modifying xPendedTicks simultaneously. */
2629:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
2630:ThirdParty/FreeRTOS/tasks.c ****     {
2631:ThirdParty/FreeRTOS/tasks.c ****         xPendedTicks += xTicksToCatchUp;
2632:ThirdParty/FreeRTOS/tasks.c ****     }
2633:ThirdParty/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 53


2634:ThirdParty/FreeRTOS/tasks.c ****     xYieldOccurred = xTaskResumeAll();
2635:ThirdParty/FreeRTOS/tasks.c **** 
2636:ThirdParty/FreeRTOS/tasks.c ****     return xYieldOccurred;
2637:ThirdParty/FreeRTOS/tasks.c **** }
2638:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2639:ThirdParty/FreeRTOS/tasks.c **** 
2640:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2641:ThirdParty/FreeRTOS/tasks.c **** 
2642:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2643:ThirdParty/FreeRTOS/tasks.c ****     {
2644:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB = xTask;
2645:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
2646:ThirdParty/FreeRTOS/tasks.c **** 
2647:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxTCB );
2648:ThirdParty/FreeRTOS/tasks.c **** 
2649:ThirdParty/FreeRTOS/tasks.c ****         vTaskSuspendAll();
2650:ThirdParty/FreeRTOS/tasks.c ****         {
2651:ThirdParty/FreeRTOS/tasks.c ****             /* A task can only be prematurely removed from the Blocked state if
2652:ThirdParty/FreeRTOS/tasks.c ****              * it is actually in the Blocked state. */
2653:ThirdParty/FreeRTOS/tasks.c ****             if( eTaskGetState( xTask ) == eBlocked )
2654:ThirdParty/FreeRTOS/tasks.c ****             {
2655:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
2656:ThirdParty/FreeRTOS/tasks.c **** 
2657:ThirdParty/FreeRTOS/tasks.c ****                 /* Remove the reference to the task from the blocked list.  An
2658:ThirdParty/FreeRTOS/tasks.c ****                  * interrupt won't touch the xStateListItem because the
2659:ThirdParty/FreeRTOS/tasks.c ****                  * scheduler is suspended. */
2660:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2661:ThirdParty/FreeRTOS/tasks.c **** 
2662:ThirdParty/FreeRTOS/tasks.c ****                 /* Is the task waiting on an event also?  If so remove it from
2663:ThirdParty/FreeRTOS/tasks.c ****                  * the event list too.  Interrupts can touch the event list item,
2664:ThirdParty/FreeRTOS/tasks.c ****                  * even though the scheduler is suspended, so a critical section
2665:ThirdParty/FreeRTOS/tasks.c ****                  * is used. */
2666:ThirdParty/FreeRTOS/tasks.c ****                 taskENTER_CRITICAL();
2667:ThirdParty/FreeRTOS/tasks.c ****                 {
2668:ThirdParty/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2669:ThirdParty/FreeRTOS/tasks.c ****                     {
2670:ThirdParty/FreeRTOS/tasks.c ****                         ( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2671:ThirdParty/FreeRTOS/tasks.c **** 
2672:ThirdParty/FreeRTOS/tasks.c ****                         /* This lets the task know it was forcibly removed from the
2673:ThirdParty/FreeRTOS/tasks.c ****                          * blocked state so it should not re-evaluate its block time and
2674:ThirdParty/FreeRTOS/tasks.c ****                          * then block again. */
2675:ThirdParty/FreeRTOS/tasks.c ****                         pxTCB->ucDelayAborted = pdTRUE;
2676:ThirdParty/FreeRTOS/tasks.c ****                     }
2677:ThirdParty/FreeRTOS/tasks.c ****                     else
2678:ThirdParty/FreeRTOS/tasks.c ****                     {
2679:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2680:ThirdParty/FreeRTOS/tasks.c ****                     }
2681:ThirdParty/FreeRTOS/tasks.c ****                 }
2682:ThirdParty/FreeRTOS/tasks.c ****                 taskEXIT_CRITICAL();
2683:ThirdParty/FreeRTOS/tasks.c **** 
2684:ThirdParty/FreeRTOS/tasks.c ****                 /* Place the unblocked task into the appropriate ready list. */
2685:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
2686:ThirdParty/FreeRTOS/tasks.c **** 
2687:ThirdParty/FreeRTOS/tasks.c ****                 /* A task being unblocked cannot cause an immediate context
2688:ThirdParty/FreeRTOS/tasks.c ****                  * switch if preemption is turned off. */
2689:ThirdParty/FreeRTOS/tasks.c ****                 #if ( configUSE_PREEMPTION == 1 )
2690:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 54


2691:ThirdParty/FreeRTOS/tasks.c ****                     /* Preemption is on, but a context switch should only be
2692:ThirdParty/FreeRTOS/tasks.c ****                      * performed if the unblocked task has a priority that is
2693:ThirdParty/FreeRTOS/tasks.c ****                      * higher than the currently executing task. */
2694:ThirdParty/FreeRTOS/tasks.c ****                     if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2695:ThirdParty/FreeRTOS/tasks.c ****                     {
2696:ThirdParty/FreeRTOS/tasks.c ****                         /* Pend the yield to be performed when the scheduler
2697:ThirdParty/FreeRTOS/tasks.c ****                          * is unsuspended. */
2698:ThirdParty/FreeRTOS/tasks.c ****                         xYieldPending = pdTRUE;
2699:ThirdParty/FreeRTOS/tasks.c ****                     }
2700:ThirdParty/FreeRTOS/tasks.c ****                     else
2701:ThirdParty/FreeRTOS/tasks.c ****                     {
2702:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2703:ThirdParty/FreeRTOS/tasks.c ****                     }
2704:ThirdParty/FreeRTOS/tasks.c ****                 }
2705:ThirdParty/FreeRTOS/tasks.c ****                 #endif /* configUSE_PREEMPTION */
2706:ThirdParty/FreeRTOS/tasks.c ****             }
2707:ThirdParty/FreeRTOS/tasks.c ****             else
2708:ThirdParty/FreeRTOS/tasks.c ****             {
2709:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdFAIL;
2710:ThirdParty/FreeRTOS/tasks.c ****             }
2711:ThirdParty/FreeRTOS/tasks.c ****         }
2712:ThirdParty/FreeRTOS/tasks.c ****         ( void ) xTaskResumeAll();
2713:ThirdParty/FreeRTOS/tasks.c **** 
2714:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
2715:ThirdParty/FreeRTOS/tasks.c ****     }
2716:ThirdParty/FreeRTOS/tasks.c **** 
2717:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2718:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
2719:ThirdParty/FreeRTOS/tasks.c **** 
2720:ThirdParty/FreeRTOS/tasks.c **** BaseType_t xTaskIncrementTick( void )
2721:ThirdParty/FreeRTOS/tasks.c **** {
2722:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
2723:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xItemValue;
2724:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
2725:ThirdParty/FreeRTOS/tasks.c **** 
2726:ThirdParty/FreeRTOS/tasks.c ****     /* Called by the portable layer each time a tick interrupt occurs.
2727:ThirdParty/FreeRTOS/tasks.c ****      * Increments the tick then checks to see if the new tick value will cause any
2728:ThirdParty/FreeRTOS/tasks.c ****      * tasks to be unblocked. */
2729:ThirdParty/FreeRTOS/tasks.c ****     traceTASK_INCREMENT_TICK( xTickCount );
2730:ThirdParty/FreeRTOS/tasks.c **** 
2731:ThirdParty/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2732:ThirdParty/FreeRTOS/tasks.c ****     {
2733:ThirdParty/FreeRTOS/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this
2734:ThirdParty/FreeRTOS/tasks.c ****          * block. */
2735:ThirdParty/FreeRTOS/tasks.c ****         const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2736:ThirdParty/FreeRTOS/tasks.c **** 
2737:ThirdParty/FreeRTOS/tasks.c ****         /* Increment the RTOS tick, switching the delayed and overflowed
2738:ThirdParty/FreeRTOS/tasks.c ****          * delayed lists if it wraps to 0. */
2739:ThirdParty/FreeRTOS/tasks.c ****         xTickCount = xConstTickCount;
2740:ThirdParty/FreeRTOS/tasks.c **** 
2741:ThirdParty/FreeRTOS/tasks.c ****         if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to fa
2742:ThirdParty/FreeRTOS/tasks.c ****         {
2743:ThirdParty/FreeRTOS/tasks.c ****             taskSWITCH_DELAYED_LISTS();
2744:ThirdParty/FreeRTOS/tasks.c ****         }
2745:ThirdParty/FreeRTOS/tasks.c ****         else
2746:ThirdParty/FreeRTOS/tasks.c ****         {
2747:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 55


2748:ThirdParty/FreeRTOS/tasks.c ****         }
2749:ThirdParty/FreeRTOS/tasks.c **** 
2750:ThirdParty/FreeRTOS/tasks.c ****         /* See if this tick has made a timeout expire.  Tasks are stored in
2751:ThirdParty/FreeRTOS/tasks.c ****          * the  queue in the order of their wake time - meaning once one task
2752:ThirdParty/FreeRTOS/tasks.c ****          * has been found whose block time has not expired there is no need to
2753:ThirdParty/FreeRTOS/tasks.c ****          * look any further down the list. */
2754:ThirdParty/FreeRTOS/tasks.c ****         if( xConstTickCount >= xNextTaskUnblockTime )
2755:ThirdParty/FreeRTOS/tasks.c ****         {
2756:ThirdParty/FreeRTOS/tasks.c ****             for( ; ; )
2757:ThirdParty/FreeRTOS/tasks.c ****             {
2758:ThirdParty/FreeRTOS/tasks.c ****                 if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2759:ThirdParty/FreeRTOS/tasks.c ****                 {
2760:ThirdParty/FreeRTOS/tasks.c ****                     /* The delayed list is empty.  Set xNextTaskUnblockTime
2761:ThirdParty/FreeRTOS/tasks.c ****                      * to the maximum possible value so it is extremely
2762:ThirdParty/FreeRTOS/tasks.c ****                      * unlikely that the
2763:ThirdParty/FreeRTOS/tasks.c ****                      * if( xTickCount >= xNextTaskUnblockTime ) test will pass
2764:ThirdParty/FreeRTOS/tasks.c ****                      * next time through. */
2765:ThirdParty/FreeRTOS/tasks.c ****                     xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts
2766:ThirdParty/FreeRTOS/tasks.c ****                     break;
2767:ThirdParty/FreeRTOS/tasks.c ****                 }
2768:ThirdParty/FreeRTOS/tasks.c ****                 else
2769:ThirdParty/FreeRTOS/tasks.c ****                 {
2770:ThirdParty/FreeRTOS/tasks.c ****                     /* The delayed list is not empty, get the value of the
2771:ThirdParty/FreeRTOS/tasks.c ****                      * item at the head of the delayed list.  This is the time
2772:ThirdParty/FreeRTOS/tasks.c ****                      * at which the task at the head of the delayed list must
2773:ThirdParty/FreeRTOS/tasks.c ****                      * be removed from the Blocked state. */
2774:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * 
2775:ThirdParty/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2776:ThirdParty/FreeRTOS/tasks.c **** 
2777:ThirdParty/FreeRTOS/tasks.c ****                     if( xConstTickCount < xItemValue )
2778:ThirdParty/FreeRTOS/tasks.c ****                     {
2779:ThirdParty/FreeRTOS/tasks.c ****                         /* It is not time to unblock this item yet, but the
2780:ThirdParty/FreeRTOS/tasks.c ****                          * item value is the time at which the task at the head
2781:ThirdParty/FreeRTOS/tasks.c ****                          * of the blocked list must be removed from the Blocked
2782:ThirdParty/FreeRTOS/tasks.c ****                          * state -  so record the item value in
2783:ThirdParty/FreeRTOS/tasks.c ****                          * xNextTaskUnblockTime. */
2784:ThirdParty/FreeRTOS/tasks.c ****                         xNextTaskUnblockTime = xItemValue;
2785:ThirdParty/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
2786:ThirdParty/FreeRTOS/tasks.c ****                     }
2787:ThirdParty/FreeRTOS/tasks.c ****                     else
2788:ThirdParty/FreeRTOS/tasks.c ****                     {
2789:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2790:ThirdParty/FreeRTOS/tasks.c ****                     }
2791:ThirdParty/FreeRTOS/tasks.c **** 
2792:ThirdParty/FreeRTOS/tasks.c ****                     /* It is time to remove the item from the Blocked state. */
2793:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
2794:ThirdParty/FreeRTOS/tasks.c **** 
2795:ThirdParty/FreeRTOS/tasks.c ****                     /* Is the task waiting on an event also?  If so remove
2796:ThirdParty/FreeRTOS/tasks.c ****                      * it from the event list. */
2797:ThirdParty/FreeRTOS/tasks.c ****                     if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2798:ThirdParty/FreeRTOS/tasks.c ****                     {
2799:ThirdParty/FreeRTOS/tasks.c ****                         listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
2800:ThirdParty/FreeRTOS/tasks.c ****                     }
2801:ThirdParty/FreeRTOS/tasks.c ****                     else
2802:ThirdParty/FreeRTOS/tasks.c ****                     {
2803:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
2804:ThirdParty/FreeRTOS/tasks.c ****                     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 56


2805:ThirdParty/FreeRTOS/tasks.c **** 
2806:ThirdParty/FreeRTOS/tasks.c ****                     /* Place the unblocked task into the appropriate ready
2807:ThirdParty/FreeRTOS/tasks.c ****                      * list. */
2808:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
2809:ThirdParty/FreeRTOS/tasks.c **** 
2810:ThirdParty/FreeRTOS/tasks.c ****                     /* A task being unblocked cannot cause an immediate
2811:ThirdParty/FreeRTOS/tasks.c ****                      * context switch if preemption is turned off. */
2812:ThirdParty/FreeRTOS/tasks.c ****                     #if ( configUSE_PREEMPTION == 1 )
2813:ThirdParty/FreeRTOS/tasks.c ****                     {
2814:ThirdParty/FreeRTOS/tasks.c ****                         /* Preemption is on, but a context switch should
2815:ThirdParty/FreeRTOS/tasks.c ****                          * only be performed if the unblocked task's
2816:ThirdParty/FreeRTOS/tasks.c ****                          * priority is higher than the currently executing
2817:ThirdParty/FreeRTOS/tasks.c ****                          * task.
2818:ThirdParty/FreeRTOS/tasks.c ****                          * The case of equal priority tasks sharing
2819:ThirdParty/FreeRTOS/tasks.c ****                          * processing time (which happens when both
2820:ThirdParty/FreeRTOS/tasks.c ****                          * preemption and time slicing are on) is
2821:ThirdParty/FreeRTOS/tasks.c ****                          * handled below.*/
2822:ThirdParty/FreeRTOS/tasks.c ****                         if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2823:ThirdParty/FreeRTOS/tasks.c ****                         {
2824:ThirdParty/FreeRTOS/tasks.c ****                             xSwitchRequired = pdTRUE;
2825:ThirdParty/FreeRTOS/tasks.c ****                         }
2826:ThirdParty/FreeRTOS/tasks.c ****                         else
2827:ThirdParty/FreeRTOS/tasks.c ****                         {
2828:ThirdParty/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
2829:ThirdParty/FreeRTOS/tasks.c ****                         }
2830:ThirdParty/FreeRTOS/tasks.c ****                     }
2831:ThirdParty/FreeRTOS/tasks.c ****                     #endif /* configUSE_PREEMPTION */
2832:ThirdParty/FreeRTOS/tasks.c ****                 }
2833:ThirdParty/FreeRTOS/tasks.c ****             }
2834:ThirdParty/FreeRTOS/tasks.c ****         }
2835:ThirdParty/FreeRTOS/tasks.c **** 
2836:ThirdParty/FreeRTOS/tasks.c ****         /* Tasks of equal priority to the currently running task will share
2837:ThirdParty/FreeRTOS/tasks.c ****          * processing time (time slice) if preemption is on, and the application
2838:ThirdParty/FreeRTOS/tasks.c ****          * writer has not explicitly turned time slicing off. */
2839:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2840:ThirdParty/FreeRTOS/tasks.c ****         {
2841:ThirdParty/FreeRTOS/tasks.c ****             if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( U
2842:ThirdParty/FreeRTOS/tasks.c ****             {
2843:ThirdParty/FreeRTOS/tasks.c ****                 xSwitchRequired = pdTRUE;
2844:ThirdParty/FreeRTOS/tasks.c ****             }
2845:ThirdParty/FreeRTOS/tasks.c ****             else
2846:ThirdParty/FreeRTOS/tasks.c ****             {
2847:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2848:ThirdParty/FreeRTOS/tasks.c ****             }
2849:ThirdParty/FreeRTOS/tasks.c ****         }
2850:ThirdParty/FreeRTOS/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2851:ThirdParty/FreeRTOS/tasks.c **** 
2852:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2853:ThirdParty/FreeRTOS/tasks.c ****         {
2854:ThirdParty/FreeRTOS/tasks.c ****             /* Guard against the tick hook being called when the pended tick
2855:ThirdParty/FreeRTOS/tasks.c ****              * count is being unwound (when the scheduler is being unlocked). */
2856:ThirdParty/FreeRTOS/tasks.c ****             if( xPendedTicks == ( TickType_t ) 0 )
2857:ThirdParty/FreeRTOS/tasks.c ****             {
2858:ThirdParty/FreeRTOS/tasks.c ****                 vApplicationTickHook();
2859:ThirdParty/FreeRTOS/tasks.c ****             }
2860:ThirdParty/FreeRTOS/tasks.c ****             else
2861:ThirdParty/FreeRTOS/tasks.c ****             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 57


2862:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2863:ThirdParty/FreeRTOS/tasks.c ****             }
2864:ThirdParty/FreeRTOS/tasks.c ****         }
2865:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_TICK_HOOK */
2866:ThirdParty/FreeRTOS/tasks.c **** 
2867:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_PREEMPTION == 1 )
2868:ThirdParty/FreeRTOS/tasks.c ****         {
2869:ThirdParty/FreeRTOS/tasks.c ****             if( xYieldPending != pdFALSE )
2870:ThirdParty/FreeRTOS/tasks.c ****             {
2871:ThirdParty/FreeRTOS/tasks.c ****                 xSwitchRequired = pdTRUE;
2872:ThirdParty/FreeRTOS/tasks.c ****             }
2873:ThirdParty/FreeRTOS/tasks.c ****             else
2874:ThirdParty/FreeRTOS/tasks.c ****             {
2875:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
2876:ThirdParty/FreeRTOS/tasks.c ****             }
2877:ThirdParty/FreeRTOS/tasks.c ****         }
2878:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_PREEMPTION */
2879:ThirdParty/FreeRTOS/tasks.c ****     }
2880:ThirdParty/FreeRTOS/tasks.c ****     else
2881:ThirdParty/FreeRTOS/tasks.c ****     {
2882:ThirdParty/FreeRTOS/tasks.c ****         ++xPendedTicks;
2883:ThirdParty/FreeRTOS/tasks.c **** 
2884:ThirdParty/FreeRTOS/tasks.c ****         /* The tick hook gets called at regular intervals, even if the
2885:ThirdParty/FreeRTOS/tasks.c ****          * scheduler is locked. */
2886:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_TICK_HOOK == 1 )
2887:ThirdParty/FreeRTOS/tasks.c ****         {
2888:ThirdParty/FreeRTOS/tasks.c ****             vApplicationTickHook();
2889:ThirdParty/FreeRTOS/tasks.c ****         }
2890:ThirdParty/FreeRTOS/tasks.c ****         #endif
2891:ThirdParty/FreeRTOS/tasks.c ****     }
2892:ThirdParty/FreeRTOS/tasks.c **** 
2893:ThirdParty/FreeRTOS/tasks.c ****     return xSwitchRequired;
2894:ThirdParty/FreeRTOS/tasks.c **** }
2895:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2896:ThirdParty/FreeRTOS/tasks.c **** 
2897:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2898:ThirdParty/FreeRTOS/tasks.c **** 
2899:ThirdParty/FreeRTOS/tasks.c ****     void vTaskSetApplicationTaskTag( TaskHandle_t xTask,
2900:ThirdParty/FreeRTOS/tasks.c ****                                      TaskHookFunction_t pxHookFunction )
2901:ThirdParty/FreeRTOS/tasks.c ****     {
2902:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * xTCB;
2903:ThirdParty/FreeRTOS/tasks.c **** 
2904:ThirdParty/FreeRTOS/tasks.c ****         /* If xTask is NULL then it is the task hook of the calling task that is
2905:ThirdParty/FreeRTOS/tasks.c ****          * getting set. */
2906:ThirdParty/FreeRTOS/tasks.c ****         if( xTask == NULL )
2907:ThirdParty/FreeRTOS/tasks.c ****         {
2908:ThirdParty/FreeRTOS/tasks.c ****             xTCB = ( TCB_t * ) pxCurrentTCB;
2909:ThirdParty/FreeRTOS/tasks.c ****         }
2910:ThirdParty/FreeRTOS/tasks.c ****         else
2911:ThirdParty/FreeRTOS/tasks.c ****         {
2912:ThirdParty/FreeRTOS/tasks.c ****             xTCB = xTask;
2913:ThirdParty/FreeRTOS/tasks.c ****         }
2914:ThirdParty/FreeRTOS/tasks.c **** 
2915:ThirdParty/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2916:ThirdParty/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2917:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
2918:ThirdParty/FreeRTOS/tasks.c ****         {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 58


2919:ThirdParty/FreeRTOS/tasks.c ****             xTCB->pxTaskTag = pxHookFunction;
2920:ThirdParty/FreeRTOS/tasks.c ****         }
2921:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
2922:ThirdParty/FreeRTOS/tasks.c ****     }
2923:ThirdParty/FreeRTOS/tasks.c **** 
2924:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2925:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2926:ThirdParty/FreeRTOS/tasks.c **** 
2927:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2928:ThirdParty/FreeRTOS/tasks.c **** 
2929:ThirdParty/FreeRTOS/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2930:ThirdParty/FreeRTOS/tasks.c ****     {
2931:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2932:ThirdParty/FreeRTOS/tasks.c ****         TaskHookFunction_t xReturn;
2933:ThirdParty/FreeRTOS/tasks.c **** 
2934:ThirdParty/FreeRTOS/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2935:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2936:ThirdParty/FreeRTOS/tasks.c **** 
2937:ThirdParty/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2938:ThirdParty/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2939:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
2940:ThirdParty/FreeRTOS/tasks.c ****         {
2941:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2942:ThirdParty/FreeRTOS/tasks.c ****         }
2943:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
2944:ThirdParty/FreeRTOS/tasks.c **** 
2945:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
2946:ThirdParty/FreeRTOS/tasks.c ****     }
2947:ThirdParty/FreeRTOS/tasks.c **** 
2948:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2949:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2950:ThirdParty/FreeRTOS/tasks.c **** 
2951:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2952:ThirdParty/FreeRTOS/tasks.c **** 
2953:ThirdParty/FreeRTOS/tasks.c ****     TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2954:ThirdParty/FreeRTOS/tasks.c ****     {
2955:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
2956:ThirdParty/FreeRTOS/tasks.c ****         TaskHookFunction_t xReturn;
2957:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
2958:ThirdParty/FreeRTOS/tasks.c **** 
2959:ThirdParty/FreeRTOS/tasks.c ****         /* If xTask is NULL then set the calling task's hook. */
2960:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
2961:ThirdParty/FreeRTOS/tasks.c **** 
2962:ThirdParty/FreeRTOS/tasks.c ****         /* Save the hook function in the TCB.  A critical section is required as
2963:ThirdParty/FreeRTOS/tasks.c ****          * the value can be accessed from an interrupt. */
2964:ThirdParty/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2965:ThirdParty/FreeRTOS/tasks.c ****         {
2966:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pxTCB->pxTaskTag;
2967:ThirdParty/FreeRTOS/tasks.c ****         }
2968:ThirdParty/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2969:ThirdParty/FreeRTOS/tasks.c **** 
2970:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
2971:ThirdParty/FreeRTOS/tasks.c ****     }
2972:ThirdParty/FreeRTOS/tasks.c **** 
2973:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2974:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
2975:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 59


2976:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2977:ThirdParty/FreeRTOS/tasks.c **** 
2978:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask,
2979:ThirdParty/FreeRTOS/tasks.c ****                                              void * pvParameter )
2980:ThirdParty/FreeRTOS/tasks.c ****     {
2981:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * xTCB;
2982:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
2983:ThirdParty/FreeRTOS/tasks.c **** 
2984:ThirdParty/FreeRTOS/tasks.c ****         /* If xTask is NULL then we are calling our own task hook. */
2985:ThirdParty/FreeRTOS/tasks.c ****         if( xTask == NULL )
2986:ThirdParty/FreeRTOS/tasks.c ****         {
2987:ThirdParty/FreeRTOS/tasks.c ****             xTCB = pxCurrentTCB;
2988:ThirdParty/FreeRTOS/tasks.c ****         }
2989:ThirdParty/FreeRTOS/tasks.c ****         else
2990:ThirdParty/FreeRTOS/tasks.c ****         {
2991:ThirdParty/FreeRTOS/tasks.c ****             xTCB = xTask;
2992:ThirdParty/FreeRTOS/tasks.c ****         }
2993:ThirdParty/FreeRTOS/tasks.c **** 
2994:ThirdParty/FreeRTOS/tasks.c ****         if( xTCB->pxTaskTag != NULL )
2995:ThirdParty/FreeRTOS/tasks.c ****         {
2996:ThirdParty/FreeRTOS/tasks.c ****             xReturn = xTCB->pxTaskTag( pvParameter );
2997:ThirdParty/FreeRTOS/tasks.c ****         }
2998:ThirdParty/FreeRTOS/tasks.c ****         else
2999:ThirdParty/FreeRTOS/tasks.c ****         {
3000:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdFAIL;
3001:ThirdParty/FreeRTOS/tasks.c ****         }
3002:ThirdParty/FreeRTOS/tasks.c **** 
3003:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
3004:ThirdParty/FreeRTOS/tasks.c ****     }
3005:ThirdParty/FreeRTOS/tasks.c **** 
3006:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
3007:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3008:ThirdParty/FreeRTOS/tasks.c **** 
3009:ThirdParty/FreeRTOS/tasks.c **** void vTaskSwitchContext( void )
3010:ThirdParty/FreeRTOS/tasks.c **** {
3011:ThirdParty/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
3012:ThirdParty/FreeRTOS/tasks.c ****     {
3013:ThirdParty/FreeRTOS/tasks.c ****         /* The scheduler is currently suspended - do not allow a context
3014:ThirdParty/FreeRTOS/tasks.c ****          * switch. */
3015:ThirdParty/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3016:ThirdParty/FreeRTOS/tasks.c ****     }
3017:ThirdParty/FreeRTOS/tasks.c ****     else
3018:ThirdParty/FreeRTOS/tasks.c ****     {
3019:ThirdParty/FreeRTOS/tasks.c ****         xYieldPending = pdFALSE;
3020:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
3021:ThirdParty/FreeRTOS/tasks.c **** 
3022:ThirdParty/FreeRTOS/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3023:ThirdParty/FreeRTOS/tasks.c ****         {
3024:ThirdParty/FreeRTOS/tasks.c ****             #ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3025:ThirdParty/FreeRTOS/tasks.c ****                 portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3026:ThirdParty/FreeRTOS/tasks.c ****             #else
3027:ThirdParty/FreeRTOS/tasks.c ****                 ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3028:ThirdParty/FreeRTOS/tasks.c ****             #endif
3029:ThirdParty/FreeRTOS/tasks.c **** 
3030:ThirdParty/FreeRTOS/tasks.c ****             /* Add the amount of time the task has been running to the
3031:ThirdParty/FreeRTOS/tasks.c ****              * accumulated time so far.  The time the task started running was
3032:ThirdParty/FreeRTOS/tasks.c ****              * stored in ulTaskSwitchedInTime.  Note that there is no overflow
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 60


3033:ThirdParty/FreeRTOS/tasks.c ****              * protection here so count values are only valid until the timer
3034:ThirdParty/FreeRTOS/tasks.c ****              * overflows.  The guard against negative values is to protect
3035:ThirdParty/FreeRTOS/tasks.c ****              * against suspect run time stat counter implementations - which
3036:ThirdParty/FreeRTOS/tasks.c ****              * are provided by the application, not the kernel. */
3037:ThirdParty/FreeRTOS/tasks.c ****             if( ulTotalRunTime > ulTaskSwitchedInTime )
3038:ThirdParty/FreeRTOS/tasks.c ****             {
3039:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3040:ThirdParty/FreeRTOS/tasks.c ****             }
3041:ThirdParty/FreeRTOS/tasks.c ****             else
3042:ThirdParty/FreeRTOS/tasks.c ****             {
3043:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3044:ThirdParty/FreeRTOS/tasks.c ****             }
3045:ThirdParty/FreeRTOS/tasks.c **** 
3046:ThirdParty/FreeRTOS/tasks.c ****             ulTaskSwitchedInTime = ulTotalRunTime;
3047:ThirdParty/FreeRTOS/tasks.c ****         }
3048:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configGENERATE_RUN_TIME_STATS */
3049:ThirdParty/FreeRTOS/tasks.c **** 
3050:ThirdParty/FreeRTOS/tasks.c ****         /* Check for stack overflow, if configured. */
3051:ThirdParty/FreeRTOS/tasks.c ****         taskCHECK_FOR_STACK_OVERFLOW();
3052:ThirdParty/FreeRTOS/tasks.c **** 
3053:ThirdParty/FreeRTOS/tasks.c ****         /* Before the currently running task is switched out, save its errno. */
3054:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3055:ThirdParty/FreeRTOS/tasks.c ****         {
3056:ThirdParty/FreeRTOS/tasks.c ****             pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3057:ThirdParty/FreeRTOS/tasks.c ****         }
3058:ThirdParty/FreeRTOS/tasks.c ****         #endif
3059:ThirdParty/FreeRTOS/tasks.c **** 
3060:ThirdParty/FreeRTOS/tasks.c ****         /* Select a new task to run using either the generic C or port
3061:ThirdParty/FreeRTOS/tasks.c ****          * optimised asm code. */
3062:ThirdParty/FreeRTOS/tasks.c ****         taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with
3063:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
3064:ThirdParty/FreeRTOS/tasks.c **** 
3065:ThirdParty/FreeRTOS/tasks.c ****         /* After the new task is switched in, update the global errno. */
3066:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_POSIX_ERRNO == 1 )
3067:ThirdParty/FreeRTOS/tasks.c ****         {
3068:ThirdParty/FreeRTOS/tasks.c ****             FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3069:ThirdParty/FreeRTOS/tasks.c ****         }
3070:ThirdParty/FreeRTOS/tasks.c ****         #endif
3071:ThirdParty/FreeRTOS/tasks.c **** 
3072:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
3073:ThirdParty/FreeRTOS/tasks.c ****         {
3074:ThirdParty/FreeRTOS/tasks.c ****             /* Switch C-Runtime's TLS Block to point to the TLS
3075:ThirdParty/FreeRTOS/tasks.c ****              * Block specific to this task. */
3076:ThirdParty/FreeRTOS/tasks.c ****             configSET_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
3077:ThirdParty/FreeRTOS/tasks.c ****         }
3078:ThirdParty/FreeRTOS/tasks.c ****         #endif
3079:ThirdParty/FreeRTOS/tasks.c ****     }
3080:ThirdParty/FreeRTOS/tasks.c **** }
3081:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3082:ThirdParty/FreeRTOS/tasks.c **** 
3083:ThirdParty/FreeRTOS/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList,
3084:ThirdParty/FreeRTOS/tasks.c ****                             const TickType_t xTicksToWait )
3085:ThirdParty/FreeRTOS/tasks.c **** {
3086:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
3087:ThirdParty/FreeRTOS/tasks.c **** 
3088:ThirdParty/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3089:ThirdParty/FreeRTOS/tasks.c ****      * SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 61


3090:ThirdParty/FreeRTOS/tasks.c **** 
3091:ThirdParty/FreeRTOS/tasks.c ****     /* Place the event list item of the TCB in the appropriate event list.
3092:ThirdParty/FreeRTOS/tasks.c ****      * This is placed in the list in priority order so the highest priority task
3093:ThirdParty/FreeRTOS/tasks.c ****      * is the first to be woken by the event.
3094:ThirdParty/FreeRTOS/tasks.c ****      *
3095:ThirdParty/FreeRTOS/tasks.c ****      * Note: Lists are sorted in ascending order by ListItem_t.xItemValue.
3096:ThirdParty/FreeRTOS/tasks.c ****      * Normally, the xItemValue of a TCB's ListItem_t members is:
3097:ThirdParty/FreeRTOS/tasks.c ****      *      xItemValue = ( configMAX_PRIORITIES - uxPriority )
3098:ThirdParty/FreeRTOS/tasks.c ****      * Therefore, the event list is sorted in descending priority order.
3099:ThirdParty/FreeRTOS/tasks.c ****      *
3100:ThirdParty/FreeRTOS/tasks.c ****      * The queue that contains the event list is locked, preventing
3101:ThirdParty/FreeRTOS/tasks.c ****      * simultaneous access from interrupts. */
3102:ThirdParty/FreeRTOS/tasks.c ****     vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3103:ThirdParty/FreeRTOS/tasks.c **** 
3104:ThirdParty/FreeRTOS/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3105:ThirdParty/FreeRTOS/tasks.c **** }
3106:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3107:ThirdParty/FreeRTOS/tasks.c **** 
3108:ThirdParty/FreeRTOS/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList,
3109:ThirdParty/FreeRTOS/tasks.c ****                                      const TickType_t xItemValue,
3110:ThirdParty/FreeRTOS/tasks.c ****                                      const TickType_t xTicksToWait )
3111:ThirdParty/FreeRTOS/tasks.c **** {
3112:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
3113:ThirdParty/FreeRTOS/tasks.c **** 
3114:ThirdParty/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3115:ThirdParty/FreeRTOS/tasks.c ****      * the event groups implementation. */
3116:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended != 0 );
3117:ThirdParty/FreeRTOS/tasks.c **** 
3118:ThirdParty/FreeRTOS/tasks.c ****     /* Store the item value in the event list item.  It is safe to access the
3119:ThirdParty/FreeRTOS/tasks.c ****      * event list item here as interrupts won't access the event list item of a
3120:ThirdParty/FreeRTOS/tasks.c ****      * task that is not in the Blocked state. */
3121:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VA
3122:ThirdParty/FreeRTOS/tasks.c **** 
3123:ThirdParty/FreeRTOS/tasks.c ****     /* Place the event list item of the TCB at the end of the appropriate event
3124:ThirdParty/FreeRTOS/tasks.c ****      * list.  It is safe to access the event list here because it is part of an
3125:ThirdParty/FreeRTOS/tasks.c ****      * event group implementation - and interrupts don't access event groups
3126:ThirdParty/FreeRTOS/tasks.c ****      * directly (instead they access them indirectly by pending function calls to
3127:ThirdParty/FreeRTOS/tasks.c ****      * the task level). */
3128:ThirdParty/FreeRTOS/tasks.c ****     listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3129:ThirdParty/FreeRTOS/tasks.c **** 
3130:ThirdParty/FreeRTOS/tasks.c ****     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3131:ThirdParty/FreeRTOS/tasks.c **** }
3132:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3133:ThirdParty/FreeRTOS/tasks.c **** 
3134:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TIMERS == 1 )
3135:ThirdParty/FreeRTOS/tasks.c **** 
3136:ThirdParty/FreeRTOS/tasks.c ****     void vTaskPlaceOnEventListRestricted( List_t * const pxEventList,
3137:ThirdParty/FreeRTOS/tasks.c ****                                           TickType_t xTicksToWait,
3138:ThirdParty/FreeRTOS/tasks.c ****                                           const BaseType_t xWaitIndefinitely )
3139:ThirdParty/FreeRTOS/tasks.c ****     {
3140:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxEventList );
3141:ThirdParty/FreeRTOS/tasks.c **** 
3142:ThirdParty/FreeRTOS/tasks.c ****         /* This function should not be called by application code hence the
3143:ThirdParty/FreeRTOS/tasks.c ****          * 'Restricted' in its name.  It is not part of the public API.  It is
3144:ThirdParty/FreeRTOS/tasks.c ****          * designed for use by kernel code, and has special calling requirements -
3145:ThirdParty/FreeRTOS/tasks.c ****          * it should be called with the scheduler suspended. */
3146:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 62


3147:ThirdParty/FreeRTOS/tasks.c **** 
3148:ThirdParty/FreeRTOS/tasks.c ****         /* Place the event list item of the TCB in the appropriate event list.
3149:ThirdParty/FreeRTOS/tasks.c ****          * In this case it is assume that this is the only task that is going to
3150:ThirdParty/FreeRTOS/tasks.c ****          * be waiting on this event list, so the faster vListInsertEnd() function
3151:ThirdParty/FreeRTOS/tasks.c ****          * can be used in place of vListInsert. */
3152:ThirdParty/FreeRTOS/tasks.c ****         listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3153:ThirdParty/FreeRTOS/tasks.c **** 
3154:ThirdParty/FreeRTOS/tasks.c ****         /* If the task should block indefinitely then set the block time to a
3155:ThirdParty/FreeRTOS/tasks.c ****          * value that will be recognised as an indefinite delay inside the
3156:ThirdParty/FreeRTOS/tasks.c ****          * prvAddCurrentTaskToDelayedList() function. */
3157:ThirdParty/FreeRTOS/tasks.c ****         if( xWaitIndefinitely != pdFALSE )
3158:ThirdParty/FreeRTOS/tasks.c ****         {
3159:ThirdParty/FreeRTOS/tasks.c ****             xTicksToWait = portMAX_DELAY;
3160:ThirdParty/FreeRTOS/tasks.c ****         }
3161:ThirdParty/FreeRTOS/tasks.c **** 
3162:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3163:ThirdParty/FreeRTOS/tasks.c ****         prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3164:ThirdParty/FreeRTOS/tasks.c ****     }
3165:ThirdParty/FreeRTOS/tasks.c **** 
3166:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TIMERS */
3167:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3168:ThirdParty/FreeRTOS/tasks.c **** 
3169:ThirdParty/FreeRTOS/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3170:ThirdParty/FreeRTOS/tasks.c **** {
3171:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
3172:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
3173:ThirdParty/FreeRTOS/tasks.c **** 
3174:ThirdParty/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3175:ThirdParty/FreeRTOS/tasks.c ****      * called from a critical section within an ISR. */
3176:ThirdParty/FreeRTOS/tasks.c **** 
3177:ThirdParty/FreeRTOS/tasks.c ****     /* The event list is sorted in priority order, so the first in the list can
3178:ThirdParty/FreeRTOS/tasks.c ****      * be removed as it is known to be the highest priority.  Remove the TCB from
3179:ThirdParty/FreeRTOS/tasks.c ****      * the delayed list, and add it to the ready list.
3180:ThirdParty/FreeRTOS/tasks.c ****      *
3181:ThirdParty/FreeRTOS/tasks.c ****      * If an event is for a queue that is locked then this function will never
3182:ThirdParty/FreeRTOS/tasks.c ****      * get called - the lock count on the queue will get modified instead.  This
3183:ThirdParty/FreeRTOS/tasks.c ****      * means exclusive access to the event list is guaranteed here.
3184:ThirdParty/FreeRTOS/tasks.c ****      *
3185:ThirdParty/FreeRTOS/tasks.c ****      * This function assumes that a check has already been made to ensure that
3186:ThirdParty/FreeRTOS/tasks.c ****      * pxEventList is not empty. */
3187:ThirdParty/FreeRTOS/tasks.c ****     pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as th
3188:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
3189:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
3190:ThirdParty/FreeRTOS/tasks.c **** 
3191:ThirdParty/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3192:ThirdParty/FreeRTOS/tasks.c ****     {
3193:ThirdParty/FreeRTOS/tasks.c ****         listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
3194:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
3195:ThirdParty/FreeRTOS/tasks.c **** 
3196:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3197:ThirdParty/FreeRTOS/tasks.c ****         {
3198:ThirdParty/FreeRTOS/tasks.c ****             /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3199:ThirdParty/FreeRTOS/tasks.c ****              * might be set to the blocked task's time out time.  If the task is
3200:ThirdParty/FreeRTOS/tasks.c ****              * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3201:ThirdParty/FreeRTOS/tasks.c ****              * normally left unchanged, because it is automatically reset to a new
3202:ThirdParty/FreeRTOS/tasks.c ****              * value when the tick count equals xNextTaskUnblockTime.  However if
3203:ThirdParty/FreeRTOS/tasks.c ****              * tickless idling is used it might be more important to enter sleep mode
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 63


3204:ThirdParty/FreeRTOS/tasks.c ****              * at the earliest possible time - so reset xNextTaskUnblockTime here to
3205:ThirdParty/FreeRTOS/tasks.c ****              * ensure it is updated at the earliest possible time. */
3206:ThirdParty/FreeRTOS/tasks.c ****             prvResetNextTaskUnblockTime();
3207:ThirdParty/FreeRTOS/tasks.c ****         }
3208:ThirdParty/FreeRTOS/tasks.c ****         #endif
3209:ThirdParty/FreeRTOS/tasks.c ****     }
3210:ThirdParty/FreeRTOS/tasks.c ****     else
3211:ThirdParty/FreeRTOS/tasks.c ****     {
3212:ThirdParty/FreeRTOS/tasks.c ****         /* The delayed and ready lists cannot be accessed, so hold this task
3213:ThirdParty/FreeRTOS/tasks.c ****          * pending until the scheduler is resumed. */
3214:ThirdParty/FreeRTOS/tasks.c ****         listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3215:ThirdParty/FreeRTOS/tasks.c ****     }
3216:ThirdParty/FreeRTOS/tasks.c **** 
3217:ThirdParty/FreeRTOS/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3218:ThirdParty/FreeRTOS/tasks.c ****     {
3219:ThirdParty/FreeRTOS/tasks.c ****         /* Return true if the task removed from the event list has a higher
3220:ThirdParty/FreeRTOS/tasks.c ****          * priority than the calling task.  This allows the calling task to know if
3221:ThirdParty/FreeRTOS/tasks.c ****          * it should force a context switch now. */
3222:ThirdParty/FreeRTOS/tasks.c ****         xReturn = pdTRUE;
3223:ThirdParty/FreeRTOS/tasks.c **** 
3224:ThirdParty/FreeRTOS/tasks.c ****         /* Mark that a yield is pending in case the user is not using the
3225:ThirdParty/FreeRTOS/tasks.c ****          * "xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3226:ThirdParty/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3227:ThirdParty/FreeRTOS/tasks.c ****     }
3228:ThirdParty/FreeRTOS/tasks.c ****     else
3229:ThirdParty/FreeRTOS/tasks.c ****     {
3230:ThirdParty/FreeRTOS/tasks.c ****         xReturn = pdFALSE;
3231:ThirdParty/FreeRTOS/tasks.c ****     }
3232:ThirdParty/FreeRTOS/tasks.c **** 
3233:ThirdParty/FreeRTOS/tasks.c ****     return xReturn;
3234:ThirdParty/FreeRTOS/tasks.c **** }
3235:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3236:ThirdParty/FreeRTOS/tasks.c **** 
3237:ThirdParty/FreeRTOS/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
3238:ThirdParty/FreeRTOS/tasks.c ****                                         const TickType_t xItemValue )
3239:ThirdParty/FreeRTOS/tasks.c **** {
3240:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
3241:ThirdParty/FreeRTOS/tasks.c **** 
3242:ThirdParty/FreeRTOS/tasks.c ****     /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3243:ThirdParty/FreeRTOS/tasks.c ****      * the event flags implementation. */
3244:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( uxSchedulerSuspended != pdFALSE );
3245:ThirdParty/FreeRTOS/tasks.c **** 
3246:ThirdParty/FreeRTOS/tasks.c ****     /* Store the new item value in the event list. */
3247:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3248:ThirdParty/FreeRTOS/tasks.c **** 
3249:ThirdParty/FreeRTOS/tasks.c ****     /* Remove the event list form the event flag.  Interrupts do not access
3250:ThirdParty/FreeRTOS/tasks.c ****      * event flags. */
3251:ThirdParty/FreeRTOS/tasks.c ****     pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as th
3252:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
3253:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
3254:ThirdParty/FreeRTOS/tasks.c **** 
3255:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_TICKLESS_IDLE != 0 )
3256:ThirdParty/FreeRTOS/tasks.c ****     {
3257:ThirdParty/FreeRTOS/tasks.c ****         /* If a task is blocked on a kernel object then xNextTaskUnblockTime
3258:ThirdParty/FreeRTOS/tasks.c ****          * might be set to the blocked task's time out time.  If the task is
3259:ThirdParty/FreeRTOS/tasks.c ****          * unblocked for a reason other than a timeout xNextTaskUnblockTime is
3260:ThirdParty/FreeRTOS/tasks.c ****          * normally left unchanged, because it is automatically reset to a new
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 64


3261:ThirdParty/FreeRTOS/tasks.c ****          * value when the tick count equals xNextTaskUnblockTime.  However if
3262:ThirdParty/FreeRTOS/tasks.c ****          * tickless idling is used it might be more important to enter sleep mode
3263:ThirdParty/FreeRTOS/tasks.c ****          * at the earliest possible time - so reset xNextTaskUnblockTime here to
3264:ThirdParty/FreeRTOS/tasks.c ****          * ensure it is updated at the earliest possible time. */
3265:ThirdParty/FreeRTOS/tasks.c ****         prvResetNextTaskUnblockTime();
3266:ThirdParty/FreeRTOS/tasks.c ****     }
3267:ThirdParty/FreeRTOS/tasks.c ****     #endif
3268:ThirdParty/FreeRTOS/tasks.c **** 
3269:ThirdParty/FreeRTOS/tasks.c ****     /* Remove the task from the delayed list and add it to the ready list.  The
3270:ThirdParty/FreeRTOS/tasks.c ****      * scheduler is suspended so interrupts will not be accessing the ready
3271:ThirdParty/FreeRTOS/tasks.c ****      * lists. */
3272:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
3273:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
3274:ThirdParty/FreeRTOS/tasks.c **** 
3275:ThirdParty/FreeRTOS/tasks.c ****     if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3276:ThirdParty/FreeRTOS/tasks.c ****     {
3277:ThirdParty/FreeRTOS/tasks.c ****         /* The unblocked task has a priority above that of the calling task, so
3278:ThirdParty/FreeRTOS/tasks.c ****          * a context switch is required.  This function is called with the
3279:ThirdParty/FreeRTOS/tasks.c ****          * scheduler suspended so xYieldPending is set so the context switch
3280:ThirdParty/FreeRTOS/tasks.c ****          * occurs immediately that the scheduler is resumed (unsuspended). */
3281:ThirdParty/FreeRTOS/tasks.c ****         xYieldPending = pdTRUE;
3282:ThirdParty/FreeRTOS/tasks.c ****     }
3283:ThirdParty/FreeRTOS/tasks.c **** }
3284:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3285:ThirdParty/FreeRTOS/tasks.c **** 
3286:ThirdParty/FreeRTOS/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3287:ThirdParty/FreeRTOS/tasks.c **** {
3288:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
3289:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
3290:ThirdParty/FreeRTOS/tasks.c ****     {
3291:ThirdParty/FreeRTOS/tasks.c ****         pxTimeOut->xOverflowCount = xNumOfOverflows;
3292:ThirdParty/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
3293:ThirdParty/FreeRTOS/tasks.c ****     }
3294:ThirdParty/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
3295:ThirdParty/FreeRTOS/tasks.c **** }
3296:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3297:ThirdParty/FreeRTOS/tasks.c **** 
3298:ThirdParty/FreeRTOS/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3299:ThirdParty/FreeRTOS/tasks.c **** {
3300:ThirdParty/FreeRTOS/tasks.c ****     /* For internal use only as it does not use a critical section. */
3301:ThirdParty/FreeRTOS/tasks.c ****     pxTimeOut->xOverflowCount = xNumOfOverflows;
3302:ThirdParty/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
3303:ThirdParty/FreeRTOS/tasks.c **** }
3304:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3305:ThirdParty/FreeRTOS/tasks.c **** 
3306:ThirdParty/FreeRTOS/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
3307:ThirdParty/FreeRTOS/tasks.c ****                                  TickType_t * const pxTicksToWait )
3308:ThirdParty/FreeRTOS/tasks.c **** {
3309:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
3310:ThirdParty/FreeRTOS/tasks.c **** 
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
3312:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
3313:ThirdParty/FreeRTOS/tasks.c **** 
3314:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
3315:ThirdParty/FreeRTOS/tasks.c ****     {
3316:ThirdParty/FreeRTOS/tasks.c ****         /* Minor optimisation.  The tick count cannot change in this block. */
3317:ThirdParty/FreeRTOS/tasks.c ****         const TickType_t xConstTickCount = xTickCount;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 65


3318:ThirdParty/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3319:ThirdParty/FreeRTOS/tasks.c **** 
3320:ThirdParty/FreeRTOS/tasks.c ****         #if ( INCLUDE_xTaskAbortDelay == 1 )
3321:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3322:ThirdParty/FreeRTOS/tasks.c ****             {
3323:ThirdParty/FreeRTOS/tasks.c ****                 /* The delay was aborted, which is not the same as a time out,
3324:ThirdParty/FreeRTOS/tasks.c ****                  * but has the same result. */
3325:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucDelayAborted = pdFALSE;
3326:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
3327:ThirdParty/FreeRTOS/tasks.c ****             }
3328:ThirdParty/FreeRTOS/tasks.c ****             else
3329:ThirdParty/FreeRTOS/tasks.c ****         #endif
3330:ThirdParty/FreeRTOS/tasks.c **** 
3331:ThirdParty/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3332:ThirdParty/FreeRTOS/tasks.c ****             if( *pxTicksToWait == portMAX_DELAY )
3333:ThirdParty/FreeRTOS/tasks.c ****             {
3334:ThirdParty/FreeRTOS/tasks.c ****                 /* If INCLUDE_vTaskSuspend is set to 1 and the block time
3335:ThirdParty/FreeRTOS/tasks.c ****                  * specified is the maximum block time then the task should block
3336:ThirdParty/FreeRTOS/tasks.c ****                  * indefinitely, and therefore never time out. */
3337:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdFALSE;
3338:ThirdParty/FreeRTOS/tasks.c ****             }
3339:ThirdParty/FreeRTOS/tasks.c ****             else
3340:ThirdParty/FreeRTOS/tasks.c ****         #endif
3341:ThirdParty/FreeRTOS/tasks.c **** 
3342:ThirdParty/FreeRTOS/tasks.c ****         if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTi
3343:ThirdParty/FreeRTOS/tasks.c ****         {
3344:ThirdParty/FreeRTOS/tasks.c ****             /* The tick count is greater than the time at which
3345:ThirdParty/FreeRTOS/tasks.c ****              * vTaskSetTimeout() was called, but has also overflowed since
3346:ThirdParty/FreeRTOS/tasks.c ****              * vTaskSetTimeOut() was called.  It must have wrapped all the way
3347:ThirdParty/FreeRTOS/tasks.c ****              * around and gone past again. This passed since vTaskSetTimeout()
3348:ThirdParty/FreeRTOS/tasks.c ****              * was called. */
3349:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
3350:ThirdParty/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3351:ThirdParty/FreeRTOS/tasks.c ****         }
3352:ThirdParty/FreeRTOS/tasks.c ****         else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant wi
3353:ThirdParty/FreeRTOS/tasks.c ****         {
3354:ThirdParty/FreeRTOS/tasks.c ****             /* Not a genuine timeout. Adjust parameters for time remaining. */
3355:ThirdParty/FreeRTOS/tasks.c ****             *pxTicksToWait -= xElapsedTime;
3356:ThirdParty/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
3357:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdFALSE;
3358:ThirdParty/FreeRTOS/tasks.c ****         }
3359:ThirdParty/FreeRTOS/tasks.c ****         else
3360:ThirdParty/FreeRTOS/tasks.c ****         {
3361:ThirdParty/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
3362:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
3363:ThirdParty/FreeRTOS/tasks.c ****         }
3364:ThirdParty/FreeRTOS/tasks.c ****     }
3365:ThirdParty/FreeRTOS/tasks.c ****     taskEXIT_CRITICAL();
3366:ThirdParty/FreeRTOS/tasks.c **** 
3367:ThirdParty/FreeRTOS/tasks.c ****     return xReturn;
3368:ThirdParty/FreeRTOS/tasks.c **** }
3369:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3370:ThirdParty/FreeRTOS/tasks.c **** 
3371:ThirdParty/FreeRTOS/tasks.c **** void vTaskMissedYield( void )
3372:ThirdParty/FreeRTOS/tasks.c **** {
3373:ThirdParty/FreeRTOS/tasks.c ****     xYieldPending = pdTRUE;
3374:ThirdParty/FreeRTOS/tasks.c **** }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 66


3375:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3376:ThirdParty/FreeRTOS/tasks.c **** 
3377:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3378:ThirdParty/FreeRTOS/tasks.c **** 
3379:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3380:ThirdParty/FreeRTOS/tasks.c ****     {
3381:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
3382:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
3383:ThirdParty/FreeRTOS/tasks.c **** 
3384:ThirdParty/FreeRTOS/tasks.c ****         if( xTask != NULL )
3385:ThirdParty/FreeRTOS/tasks.c ****         {
3386:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = xTask;
3387:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxTaskNumber;
3388:ThirdParty/FreeRTOS/tasks.c ****         }
3389:ThirdParty/FreeRTOS/tasks.c ****         else
3390:ThirdParty/FreeRTOS/tasks.c ****         {
3391:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = 0U;
3392:ThirdParty/FreeRTOS/tasks.c ****         }
3393:ThirdParty/FreeRTOS/tasks.c **** 
3394:ThirdParty/FreeRTOS/tasks.c ****         return uxReturn;
3395:ThirdParty/FreeRTOS/tasks.c ****     }
3396:ThirdParty/FreeRTOS/tasks.c **** 
3397:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3398:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3399:ThirdParty/FreeRTOS/tasks.c **** 
3400:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3401:ThirdParty/FreeRTOS/tasks.c **** 
3402:ThirdParty/FreeRTOS/tasks.c ****     void vTaskSetTaskNumber( TaskHandle_t xTask,
3403:ThirdParty/FreeRTOS/tasks.c ****                              const UBaseType_t uxHandle )
3404:ThirdParty/FreeRTOS/tasks.c ****     {
3405:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3406:ThirdParty/FreeRTOS/tasks.c **** 
3407:ThirdParty/FreeRTOS/tasks.c ****         if( xTask != NULL )
3408:ThirdParty/FreeRTOS/tasks.c ****         {
3409:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = xTask;
3410:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->uxTaskNumber = uxHandle;
3411:ThirdParty/FreeRTOS/tasks.c ****         }
3412:ThirdParty/FreeRTOS/tasks.c ****     }
3413:ThirdParty/FreeRTOS/tasks.c **** 
3414:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3415:ThirdParty/FreeRTOS/tasks.c **** 
3416:ThirdParty/FreeRTOS/tasks.c **** /*
3417:ThirdParty/FreeRTOS/tasks.c ****  * -----------------------------------------------------------
3418:ThirdParty/FreeRTOS/tasks.c ****  * The Idle task.
3419:ThirdParty/FreeRTOS/tasks.c ****  * ----------------------------------------------------------
3420:ThirdParty/FreeRTOS/tasks.c ****  *
3421:ThirdParty/FreeRTOS/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3422:ThirdParty/FreeRTOS/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3423:ThirdParty/FreeRTOS/tasks.c ****  *
3424:ThirdParty/FreeRTOS/tasks.c ****  * void prvIdleTask( void *pvParameters );
3425:ThirdParty/FreeRTOS/tasks.c ****  *
3426:ThirdParty/FreeRTOS/tasks.c ****  */
3427:ThirdParty/FreeRTOS/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3428:ThirdParty/FreeRTOS/tasks.c **** {
3429:ThirdParty/FreeRTOS/tasks.c ****     /* Stop warnings. */
3430:ThirdParty/FreeRTOS/tasks.c ****     ( void ) pvParameters;
3431:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 67


3432:ThirdParty/FreeRTOS/tasks.c ****     /** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3433:ThirdParty/FreeRTOS/tasks.c ****      * SCHEDULER IS STARTED. **/
3434:ThirdParty/FreeRTOS/tasks.c **** 
3435:ThirdParty/FreeRTOS/tasks.c ****     /* In case a task that has a secure context deletes itself, in which case
3436:ThirdParty/FreeRTOS/tasks.c ****      * the idle task is responsible for deleting the task's secure context, if
3437:ThirdParty/FreeRTOS/tasks.c ****      * any. */
3438:ThirdParty/FreeRTOS/tasks.c ****     portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3439:ThirdParty/FreeRTOS/tasks.c **** 
3440:ThirdParty/FreeRTOS/tasks.c ****     for( ; ; )
3441:ThirdParty/FreeRTOS/tasks.c ****     {
3442:ThirdParty/FreeRTOS/tasks.c ****         /* See if any tasks have deleted themselves - if so then the idle task
3443:ThirdParty/FreeRTOS/tasks.c ****          * is responsible for freeing the deleted task's TCB and stack. */
3444:ThirdParty/FreeRTOS/tasks.c ****         prvCheckTasksWaitingTermination();
3445:ThirdParty/FreeRTOS/tasks.c **** 
3446:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_PREEMPTION == 0 )
3447:ThirdParty/FreeRTOS/tasks.c ****         {
3448:ThirdParty/FreeRTOS/tasks.c ****             /* If we are not using preemption we keep forcing a task switch to
3449:ThirdParty/FreeRTOS/tasks.c ****              * see if any other task has become available.  If we are using
3450:ThirdParty/FreeRTOS/tasks.c ****              * preemption we don't need to do this as any task becoming available
3451:ThirdParty/FreeRTOS/tasks.c ****              * will automatically get the processor anyway. */
3452:ThirdParty/FreeRTOS/tasks.c ****             taskYIELD();
3453:ThirdParty/FreeRTOS/tasks.c ****         }
3454:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_PREEMPTION */
3455:ThirdParty/FreeRTOS/tasks.c **** 
3456:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3457:ThirdParty/FreeRTOS/tasks.c ****         {
3458:ThirdParty/FreeRTOS/tasks.c ****             /* When using preemption tasks of equal priority will be
3459:ThirdParty/FreeRTOS/tasks.c ****              * timesliced.  If a task that is sharing the idle priority is ready
3460:ThirdParty/FreeRTOS/tasks.c ****              * to run then the idle task should yield before the end of the
3461:ThirdParty/FreeRTOS/tasks.c ****              * timeslice.
3462:ThirdParty/FreeRTOS/tasks.c ****              *
3463:ThirdParty/FreeRTOS/tasks.c ****              * A critical region is not required here as we are just reading from
3464:ThirdParty/FreeRTOS/tasks.c ****              * the list, and an occasional incorrect value will not matter.  If
3465:ThirdParty/FreeRTOS/tasks.c ****              * the ready list at the idle priority contains more than one task
3466:ThirdParty/FreeRTOS/tasks.c ****              * then a task other than the idle task is ready to execute. */
3467:ThirdParty/FreeRTOS/tasks.c ****             if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType
3468:ThirdParty/FreeRTOS/tasks.c ****             {
3469:ThirdParty/FreeRTOS/tasks.c ****                 taskYIELD();
3470:ThirdParty/FreeRTOS/tasks.c ****             }
3471:ThirdParty/FreeRTOS/tasks.c ****             else
3472:ThirdParty/FreeRTOS/tasks.c ****             {
3473:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3474:ThirdParty/FreeRTOS/tasks.c ****             }
3475:ThirdParty/FreeRTOS/tasks.c ****         }
3476:ThirdParty/FreeRTOS/tasks.c ****         #endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3477:ThirdParty/FreeRTOS/tasks.c **** 
3478:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_IDLE_HOOK == 1 )
3479:ThirdParty/FreeRTOS/tasks.c ****         {
3480:ThirdParty/FreeRTOS/tasks.c ****             extern void vApplicationIdleHook( void );
3481:ThirdParty/FreeRTOS/tasks.c **** 
3482:ThirdParty/FreeRTOS/tasks.c ****             /* Call the user defined function from within the idle task.  This
3483:ThirdParty/FreeRTOS/tasks.c ****              * allows the application designer to add background functionality
3484:ThirdParty/FreeRTOS/tasks.c ****              * without the overhead of a separate task.
3485:ThirdParty/FreeRTOS/tasks.c ****              * NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3486:ThirdParty/FreeRTOS/tasks.c ****              * CALL A FUNCTION THAT MIGHT BLOCK. */
3487:ThirdParty/FreeRTOS/tasks.c ****             vApplicationIdleHook();
3488:ThirdParty/FreeRTOS/tasks.c ****         }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 68


3489:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_IDLE_HOOK */
3490:ThirdParty/FreeRTOS/tasks.c **** 
3491:ThirdParty/FreeRTOS/tasks.c ****         /* This conditional compilation should use inequality to 0, not equality
3492:ThirdParty/FreeRTOS/tasks.c ****          * to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3493:ThirdParty/FreeRTOS/tasks.c ****          * user defined low power mode  implementations require
3494:ThirdParty/FreeRTOS/tasks.c ****          * configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3495:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_TICKLESS_IDLE != 0 )
3496:ThirdParty/FreeRTOS/tasks.c ****         {
3497:ThirdParty/FreeRTOS/tasks.c ****             TickType_t xExpectedIdleTime;
3498:ThirdParty/FreeRTOS/tasks.c **** 
3499:ThirdParty/FreeRTOS/tasks.c ****             /* It is not desirable to suspend then resume the scheduler on
3500:ThirdParty/FreeRTOS/tasks.c ****              * each iteration of the idle task.  Therefore, a preliminary
3501:ThirdParty/FreeRTOS/tasks.c ****              * test of the expected idle time is performed without the
3502:ThirdParty/FreeRTOS/tasks.c ****              * scheduler suspended.  The result here is not necessarily
3503:ThirdParty/FreeRTOS/tasks.c ****              * valid. */
3504:ThirdParty/FreeRTOS/tasks.c ****             xExpectedIdleTime = prvGetExpectedIdleTime();
3505:ThirdParty/FreeRTOS/tasks.c **** 
3506:ThirdParty/FreeRTOS/tasks.c ****             if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3507:ThirdParty/FreeRTOS/tasks.c ****             {
3508:ThirdParty/FreeRTOS/tasks.c ****                 vTaskSuspendAll();
3509:ThirdParty/FreeRTOS/tasks.c ****                 {
3510:ThirdParty/FreeRTOS/tasks.c ****                     /* Now the scheduler is suspended, the expected idle
3511:ThirdParty/FreeRTOS/tasks.c ****                      * time can be sampled again, and this time its value can
3512:ThirdParty/FreeRTOS/tasks.c ****                      * be used. */
3513:ThirdParty/FreeRTOS/tasks.c ****                     configASSERT( xNextTaskUnblockTime >= xTickCount );
3514:ThirdParty/FreeRTOS/tasks.c ****                     xExpectedIdleTime = prvGetExpectedIdleTime();
3515:ThirdParty/FreeRTOS/tasks.c **** 
3516:ThirdParty/FreeRTOS/tasks.c ****                     /* Define the following macro to set xExpectedIdleTime to 0
3517:ThirdParty/FreeRTOS/tasks.c ****                      * if the application does not want
3518:ThirdParty/FreeRTOS/tasks.c ****                      * portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3519:ThirdParty/FreeRTOS/tasks.c ****                     configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3520:ThirdParty/FreeRTOS/tasks.c **** 
3521:ThirdParty/FreeRTOS/tasks.c ****                     if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3522:ThirdParty/FreeRTOS/tasks.c ****                     {
3523:ThirdParty/FreeRTOS/tasks.c ****                         traceLOW_POWER_IDLE_BEGIN();
3524:ThirdParty/FreeRTOS/tasks.c ****                         portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3525:ThirdParty/FreeRTOS/tasks.c ****                         traceLOW_POWER_IDLE_END();
3526:ThirdParty/FreeRTOS/tasks.c ****                     }
3527:ThirdParty/FreeRTOS/tasks.c ****                     else
3528:ThirdParty/FreeRTOS/tasks.c ****                     {
3529:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
3530:ThirdParty/FreeRTOS/tasks.c ****                     }
3531:ThirdParty/FreeRTOS/tasks.c ****                 }
3532:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) xTaskResumeAll();
3533:ThirdParty/FreeRTOS/tasks.c ****             }
3534:ThirdParty/FreeRTOS/tasks.c ****             else
3535:ThirdParty/FreeRTOS/tasks.c ****             {
3536:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3537:ThirdParty/FreeRTOS/tasks.c ****             }
3538:ThirdParty/FreeRTOS/tasks.c ****         }
3539:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configUSE_TICKLESS_IDLE */
3540:ThirdParty/FreeRTOS/tasks.c ****     }
3541:ThirdParty/FreeRTOS/tasks.c **** }
3542:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3543:ThirdParty/FreeRTOS/tasks.c **** 
3544:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
3545:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 69


3546:ThirdParty/FreeRTOS/tasks.c ****     eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3547:ThirdParty/FreeRTOS/tasks.c ****     {
3548:ThirdParty/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3549:ThirdParty/FreeRTOS/tasks.c ****             /* The idle task exists in addition to the application tasks. */
3550:ThirdParty/FreeRTOS/tasks.c ****             const UBaseType_t uxNonApplicationTasks = 1;
3551:ThirdParty/FreeRTOS/tasks.c ****         #endif /* INCLUDE_vTaskSuspend */
3552:ThirdParty/FreeRTOS/tasks.c **** 
3553:ThirdParty/FreeRTOS/tasks.c ****         eSleepModeStatus eReturn = eStandardSleep;
3554:ThirdParty/FreeRTOS/tasks.c **** 
3555:ThirdParty/FreeRTOS/tasks.c ****         /* This function must be called from a critical section. */
3556:ThirdParty/FreeRTOS/tasks.c **** 
3557:ThirdParty/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3558:ThirdParty/FreeRTOS/tasks.c ****         {
3559:ThirdParty/FreeRTOS/tasks.c ****             /* A task was made ready while the scheduler was suspended. */
3560:ThirdParty/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3561:ThirdParty/FreeRTOS/tasks.c ****         }
3562:ThirdParty/FreeRTOS/tasks.c ****         else if( xYieldPending != pdFALSE )
3563:ThirdParty/FreeRTOS/tasks.c ****         {
3564:ThirdParty/FreeRTOS/tasks.c ****             /* A yield was pended while the scheduler was suspended. */
3565:ThirdParty/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3566:ThirdParty/FreeRTOS/tasks.c ****         }
3567:ThirdParty/FreeRTOS/tasks.c ****         else if( xPendedTicks != 0 )
3568:ThirdParty/FreeRTOS/tasks.c ****         {
3569:ThirdParty/FreeRTOS/tasks.c ****             /* A tick interrupt has already occurred but was held pending
3570:ThirdParty/FreeRTOS/tasks.c ****              * because the scheduler is suspended. */
3571:ThirdParty/FreeRTOS/tasks.c ****             eReturn = eAbortSleep;
3572:ThirdParty/FreeRTOS/tasks.c ****         }
3573:ThirdParty/FreeRTOS/tasks.c **** 
3574:ThirdParty/FreeRTOS/tasks.c ****         #if ( INCLUDE_vTaskSuspend == 1 )
3575:ThirdParty/FreeRTOS/tasks.c ****             else if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - u
3576:ThirdParty/FreeRTOS/tasks.c ****             {
3577:ThirdParty/FreeRTOS/tasks.c ****                 /* If all the tasks are in the suspended list (which might mean they
3578:ThirdParty/FreeRTOS/tasks.c ****                  * have an infinite block time rather than actually being suspended)
3579:ThirdParty/FreeRTOS/tasks.c ****                  * then it is safe to turn all clocks off and just wait for external
3580:ThirdParty/FreeRTOS/tasks.c ****                  * interrupts. */
3581:ThirdParty/FreeRTOS/tasks.c ****                 eReturn = eNoTasksWaitingTimeout;
3582:ThirdParty/FreeRTOS/tasks.c ****             }
3583:ThirdParty/FreeRTOS/tasks.c ****         #endif /* INCLUDE_vTaskSuspend */
3584:ThirdParty/FreeRTOS/tasks.c ****         else
3585:ThirdParty/FreeRTOS/tasks.c ****         {
3586:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
3587:ThirdParty/FreeRTOS/tasks.c ****         }
3588:ThirdParty/FreeRTOS/tasks.c **** 
3589:ThirdParty/FreeRTOS/tasks.c ****         return eReturn;
3590:ThirdParty/FreeRTOS/tasks.c ****     }
3591:ThirdParty/FreeRTOS/tasks.c **** 
3592:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3593:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3594:ThirdParty/FreeRTOS/tasks.c **** 
3595:ThirdParty/FreeRTOS/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3596:ThirdParty/FreeRTOS/tasks.c **** 
3597:ThirdParty/FreeRTOS/tasks.c ****     void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet,
3598:ThirdParty/FreeRTOS/tasks.c ****                                             BaseType_t xIndex,
3599:ThirdParty/FreeRTOS/tasks.c ****                                             void * pvValue )
3600:ThirdParty/FreeRTOS/tasks.c ****     {
3601:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3602:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 70


3603:ThirdParty/FreeRTOS/tasks.c ****         if( ( xIndex >= 0 ) &&
3604:ThirdParty/FreeRTOS/tasks.c ****             ( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS ) )
3605:ThirdParty/FreeRTOS/tasks.c ****         {
3606:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToSet );
3607:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB != NULL );
3608:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3609:ThirdParty/FreeRTOS/tasks.c ****         }
3610:ThirdParty/FreeRTOS/tasks.c ****     }
3611:ThirdParty/FreeRTOS/tasks.c **** 
3612:ThirdParty/FreeRTOS/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3613:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3614:ThirdParty/FreeRTOS/tasks.c **** 
3615:ThirdParty/FreeRTOS/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3616:ThirdParty/FreeRTOS/tasks.c **** 
3617:ThirdParty/FreeRTOS/tasks.c ****     void * pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery,
3618:ThirdParty/FreeRTOS/tasks.c ****                                                BaseType_t xIndex )
3619:ThirdParty/FreeRTOS/tasks.c ****     {
3620:ThirdParty/FreeRTOS/tasks.c ****         void * pvReturn = NULL;
3621:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3622:ThirdParty/FreeRTOS/tasks.c **** 
3623:ThirdParty/FreeRTOS/tasks.c ****         if( ( xIndex >= 0 ) &&
3624:ThirdParty/FreeRTOS/tasks.c ****             ( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS ) )
3625:ThirdParty/FreeRTOS/tasks.c ****         {
3626:ThirdParty/FreeRTOS/tasks.c ****             pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3627:ThirdParty/FreeRTOS/tasks.c ****             pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3628:ThirdParty/FreeRTOS/tasks.c ****         }
3629:ThirdParty/FreeRTOS/tasks.c ****         else
3630:ThirdParty/FreeRTOS/tasks.c ****         {
3631:ThirdParty/FreeRTOS/tasks.c ****             pvReturn = NULL;
3632:ThirdParty/FreeRTOS/tasks.c ****         }
3633:ThirdParty/FreeRTOS/tasks.c **** 
3634:ThirdParty/FreeRTOS/tasks.c ****         return pvReturn;
3635:ThirdParty/FreeRTOS/tasks.c ****     }
3636:ThirdParty/FreeRTOS/tasks.c **** 
3637:ThirdParty/FreeRTOS/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3638:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3639:ThirdParty/FreeRTOS/tasks.c **** 
3640:ThirdParty/FreeRTOS/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3641:ThirdParty/FreeRTOS/tasks.c **** 
3642:ThirdParty/FreeRTOS/tasks.c ****     void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify,
3643:ThirdParty/FreeRTOS/tasks.c ****                                   const MemoryRegion_t * const xRegions )
3644:ThirdParty/FreeRTOS/tasks.c ****     {
3645:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3646:ThirdParty/FreeRTOS/tasks.c **** 
3647:ThirdParty/FreeRTOS/tasks.c ****         /* If null is passed in here then we are modifying the MPU settings of
3648:ThirdParty/FreeRTOS/tasks.c ****          * the calling task. */
3649:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTaskToModify );
3650:ThirdParty/FreeRTOS/tasks.c **** 
3651:ThirdParty/FreeRTOS/tasks.c ****         vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3652:ThirdParty/FreeRTOS/tasks.c ****     }
3653:ThirdParty/FreeRTOS/tasks.c **** 
3654:ThirdParty/FreeRTOS/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3655:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3656:ThirdParty/FreeRTOS/tasks.c **** 
3657:ThirdParty/FreeRTOS/tasks.c **** static void prvInitialiseTaskLists( void )
3658:ThirdParty/FreeRTOS/tasks.c **** {
3659:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 71


3660:ThirdParty/FreeRTOS/tasks.c **** 
3661:ThirdParty/FreeRTOS/tasks.c ****     for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPrio
3662:ThirdParty/FreeRTOS/tasks.c ****     {
3663:ThirdParty/FreeRTOS/tasks.c ****         vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3664:ThirdParty/FreeRTOS/tasks.c ****     }
3665:ThirdParty/FreeRTOS/tasks.c **** 
3666:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList1 );
3667:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList2 );
3668:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
3669:ThirdParty/FreeRTOS/tasks.c **** 
3670:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3671:ThirdParty/FreeRTOS/tasks.c ****     {
3672:ThirdParty/FreeRTOS/tasks.c ****         vListInitialise( &xTasksWaitingTermination );
3673:ThirdParty/FreeRTOS/tasks.c ****     }
3674:ThirdParty/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3675:ThirdParty/FreeRTOS/tasks.c **** 
3676:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
3677:ThirdParty/FreeRTOS/tasks.c ****     {
3678:ThirdParty/FreeRTOS/tasks.c ****         vListInitialise( &xSuspendedTaskList );
3679:ThirdParty/FreeRTOS/tasks.c ****     }
3680:ThirdParty/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
3681:ThirdParty/FreeRTOS/tasks.c **** 
3682:ThirdParty/FreeRTOS/tasks.c ****     /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3683:ThirdParty/FreeRTOS/tasks.c ****      * using list2. */
3684:ThirdParty/FreeRTOS/tasks.c ****     pxDelayedTaskList = &xDelayedTaskList1;
3685:ThirdParty/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
3686:ThirdParty/FreeRTOS/tasks.c **** }
3687:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3688:ThirdParty/FreeRTOS/tasks.c **** 
3689:ThirdParty/FreeRTOS/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3690:ThirdParty/FreeRTOS/tasks.c **** {
3691:ThirdParty/FreeRTOS/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3692:ThirdParty/FreeRTOS/tasks.c **** 
3693:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskDelete == 1 )
3694:ThirdParty/FreeRTOS/tasks.c ****     {
3695:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3696:ThirdParty/FreeRTOS/tasks.c **** 
3697:ThirdParty/FreeRTOS/tasks.c ****         /* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3698:ThirdParty/FreeRTOS/tasks.c ****          * being called too often in the idle task. */
3699:ThirdParty/FreeRTOS/tasks.c ****         while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3700:ThirdParty/FreeRTOS/tasks.c ****         {
3701:ThirdParty/FreeRTOS/tasks.c ****             taskENTER_CRITICAL();
3702:ThirdParty/FreeRTOS/tasks.c ****             {
3703:ThirdParty/FreeRTOS/tasks.c ****                 pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079
3704:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3705:ThirdParty/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
3706:ThirdParty/FreeRTOS/tasks.c ****                 --uxDeletedTasksWaitingCleanUp;
3707:ThirdParty/FreeRTOS/tasks.c ****             }
3708:ThirdParty/FreeRTOS/tasks.c ****             taskEXIT_CRITICAL();
3709:ThirdParty/FreeRTOS/tasks.c **** 
3710:ThirdParty/FreeRTOS/tasks.c ****             prvDeleteTCB( pxTCB );
3711:ThirdParty/FreeRTOS/tasks.c ****         }
3712:ThirdParty/FreeRTOS/tasks.c ****     }
3713:ThirdParty/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskDelete */
3714:ThirdParty/FreeRTOS/tasks.c **** }
3715:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3716:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 72


3717:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3718:ThirdParty/FreeRTOS/tasks.c **** 
3719:ThirdParty/FreeRTOS/tasks.c ****     void vTaskGetInfo( TaskHandle_t xTask,
3720:ThirdParty/FreeRTOS/tasks.c ****                        TaskStatus_t * pxTaskStatus,
3721:ThirdParty/FreeRTOS/tasks.c ****                        BaseType_t xGetFreeStackSpace,
3722:ThirdParty/FreeRTOS/tasks.c ****                        eTaskState eState )
3723:ThirdParty/FreeRTOS/tasks.c ****     {
3724:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3725:ThirdParty/FreeRTOS/tasks.c **** 
3726:ThirdParty/FreeRTOS/tasks.c ****         /* xTask is NULL then get the state of the calling task. */
3727:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3728:ThirdParty/FreeRTOS/tasks.c **** 
3729:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3730:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
3731:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3732:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
3733:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
3734:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->pxTopOfStack = pxTCB->pxTopOfStack;
3735:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->pxEndOfStack = pxTCB->pxEndOfStack;
3736:ThirdParty/FreeRTOS/tasks.c ****         #endif
3737:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3738:ThirdParty/FreeRTOS/tasks.c **** 
3739:ThirdParty/FreeRTOS/tasks.c ****         #if ( configUSE_MUTEXES == 1 )
3740:ThirdParty/FreeRTOS/tasks.c ****         {
3741:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3742:ThirdParty/FreeRTOS/tasks.c ****         }
3743:ThirdParty/FreeRTOS/tasks.c ****         #else
3744:ThirdParty/FreeRTOS/tasks.c ****         {
3745:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->uxBasePriority = 0;
3746:ThirdParty/FreeRTOS/tasks.c ****         }
3747:ThirdParty/FreeRTOS/tasks.c ****         #endif
3748:ThirdParty/FreeRTOS/tasks.c **** 
3749:ThirdParty/FreeRTOS/tasks.c ****         #if ( configGENERATE_RUN_TIME_STATS == 1 )
3750:ThirdParty/FreeRTOS/tasks.c ****         {
3751:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3752:ThirdParty/FreeRTOS/tasks.c ****         }
3753:ThirdParty/FreeRTOS/tasks.c ****         #else
3754:ThirdParty/FreeRTOS/tasks.c ****         {
3755:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->ulRunTimeCounter = ( configRUN_TIME_COUNTER_TYPE ) 0;
3756:ThirdParty/FreeRTOS/tasks.c ****         }
3757:ThirdParty/FreeRTOS/tasks.c ****         #endif
3758:ThirdParty/FreeRTOS/tasks.c **** 
3759:ThirdParty/FreeRTOS/tasks.c ****         /* Obtaining the task state is a little fiddly, so is only done if the
3760:ThirdParty/FreeRTOS/tasks.c ****          * value of eState passed into this function is eInvalid - otherwise the
3761:ThirdParty/FreeRTOS/tasks.c ****          * state is just set to whatever is passed in. */
3762:ThirdParty/FreeRTOS/tasks.c ****         if( eState != eInvalid )
3763:ThirdParty/FreeRTOS/tasks.c ****         {
3764:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB == pxCurrentTCB )
3765:ThirdParty/FreeRTOS/tasks.c ****             {
3766:ThirdParty/FreeRTOS/tasks.c ****                 pxTaskStatus->eCurrentState = eRunning;
3767:ThirdParty/FreeRTOS/tasks.c ****             }
3768:ThirdParty/FreeRTOS/tasks.c ****             else
3769:ThirdParty/FreeRTOS/tasks.c ****             {
3770:ThirdParty/FreeRTOS/tasks.c ****                 pxTaskStatus->eCurrentState = eState;
3771:ThirdParty/FreeRTOS/tasks.c **** 
3772:ThirdParty/FreeRTOS/tasks.c ****                 #if ( INCLUDE_vTaskSuspend == 1 )
3773:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 73


3774:ThirdParty/FreeRTOS/tasks.c ****                     /* If the task is in the suspended list then there is a
3775:ThirdParty/FreeRTOS/tasks.c ****                      *  chance it is actually just blocked indefinitely - so really
3776:ThirdParty/FreeRTOS/tasks.c ****                      *  it should be reported as being in the Blocked state. */
3777:ThirdParty/FreeRTOS/tasks.c ****                     if( eState == eSuspended )
3778:ThirdParty/FreeRTOS/tasks.c ****                     {
3779:ThirdParty/FreeRTOS/tasks.c ****                         vTaskSuspendAll();
3780:ThirdParty/FreeRTOS/tasks.c ****                         {
3781:ThirdParty/FreeRTOS/tasks.c ****                             if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3782:ThirdParty/FreeRTOS/tasks.c ****                             {
3783:ThirdParty/FreeRTOS/tasks.c ****                                 pxTaskStatus->eCurrentState = eBlocked;
3784:ThirdParty/FreeRTOS/tasks.c ****                             }
3785:ThirdParty/FreeRTOS/tasks.c ****                         }
3786:ThirdParty/FreeRTOS/tasks.c ****                         ( void ) xTaskResumeAll();
3787:ThirdParty/FreeRTOS/tasks.c ****                     }
3788:ThirdParty/FreeRTOS/tasks.c ****                 }
3789:ThirdParty/FreeRTOS/tasks.c ****                 #endif /* INCLUDE_vTaskSuspend */
3790:ThirdParty/FreeRTOS/tasks.c ****             }
3791:ThirdParty/FreeRTOS/tasks.c ****         }
3792:ThirdParty/FreeRTOS/tasks.c ****         else
3793:ThirdParty/FreeRTOS/tasks.c ****         {
3794:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3795:ThirdParty/FreeRTOS/tasks.c ****         }
3796:ThirdParty/FreeRTOS/tasks.c **** 
3797:ThirdParty/FreeRTOS/tasks.c ****         /* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3798:ThirdParty/FreeRTOS/tasks.c ****          * parameter is provided to allow it to be skipped. */
3799:ThirdParty/FreeRTOS/tasks.c ****         if( xGetFreeStackSpace != pdFALSE )
3800:ThirdParty/FreeRTOS/tasks.c ****         {
3801:ThirdParty/FreeRTOS/tasks.c ****             #if ( portSTACK_GROWTH > 0 )
3802:ThirdParty/FreeRTOS/tasks.c ****             {
3803:ThirdParty/FreeRTOS/tasks.c ****                 pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTC
3804:ThirdParty/FreeRTOS/tasks.c ****             }
3805:ThirdParty/FreeRTOS/tasks.c ****             #else
3806:ThirdParty/FreeRTOS/tasks.c ****             {
3807:ThirdParty/FreeRTOS/tasks.c ****                 pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTC
3808:ThirdParty/FreeRTOS/tasks.c ****             }
3809:ThirdParty/FreeRTOS/tasks.c ****             #endif
3810:ThirdParty/FreeRTOS/tasks.c ****         }
3811:ThirdParty/FreeRTOS/tasks.c ****         else
3812:ThirdParty/FreeRTOS/tasks.c ****         {
3813:ThirdParty/FreeRTOS/tasks.c ****             pxTaskStatus->usStackHighWaterMark = 0;
3814:ThirdParty/FreeRTOS/tasks.c ****         }
3815:ThirdParty/FreeRTOS/tasks.c ****     }
3816:ThirdParty/FreeRTOS/tasks.c **** 
3817:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3818:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3819:ThirdParty/FreeRTOS/tasks.c **** 
3820:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3821:ThirdParty/FreeRTOS/tasks.c **** 
3822:ThirdParty/FreeRTOS/tasks.c ****     static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t * pxTaskStatusArray,
3823:ThirdParty/FreeRTOS/tasks.c ****                                                      List_t * pxList,
3824:ThirdParty/FreeRTOS/tasks.c ****                                                      eTaskState eState )
3825:ThirdParty/FreeRTOS/tasks.c ****     {
3826:ThirdParty/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB;
3827:ThirdParty/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxFirstTCB;
3828:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0;
3829:ThirdParty/FreeRTOS/tasks.c **** 
3830:ThirdParty/FreeRTOS/tasks.c ****         if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 74


3831:ThirdParty/FreeRTOS/tasks.c ****         {
3832:ThirdParty/FreeRTOS/tasks.c ****             listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this
3833:ThirdParty/FreeRTOS/tasks.c **** 
3834:ThirdParty/FreeRTOS/tasks.c ****             /* Populate an TaskStatus_t structure within the
3835:ThirdParty/FreeRTOS/tasks.c ****              * pxTaskStatusArray array for each task that is referenced from
3836:ThirdParty/FreeRTOS/tasks.c ****              * pxList.  See the definition of TaskStatus_t in task.h for the
3837:ThirdParty/FreeRTOS/tasks.c ****              * meaning of each TaskStatus_t structure member. */
3838:ThirdParty/FreeRTOS/tasks.c ****             do
3839:ThirdParty/FreeRTOS/tasks.c ****             {
3840:ThirdParty/FreeRTOS/tasks.c ****                 listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as t
3841:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
3842:ThirdParty/FreeRTOS/tasks.c ****                 uxTask++;
3843:ThirdParty/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
3844:ThirdParty/FreeRTOS/tasks.c ****         }
3845:ThirdParty/FreeRTOS/tasks.c ****         else
3846:ThirdParty/FreeRTOS/tasks.c ****         {
3847:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
3848:ThirdParty/FreeRTOS/tasks.c ****         }
3849:ThirdParty/FreeRTOS/tasks.c **** 
3850:ThirdParty/FreeRTOS/tasks.c ****         return uxTask;
3851:ThirdParty/FreeRTOS/tasks.c ****     }
3852:ThirdParty/FreeRTOS/tasks.c **** 
3853:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3854:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3855:ThirdParty/FreeRTOS/tasks.c **** 
3856:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3857:ThirdParty/FreeRTOS/tasks.c **** 
3858:ThirdParty/FreeRTOS/tasks.c ****     static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3859:ThirdParty/FreeRTOS/tasks.c ****     {
 128              		.loc 1 3859 5 is_stmt 1 view -0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
3860:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulCount = 0U;
 133              		.loc 1 3860 9 view .LVU31
3861:ThirdParty/FreeRTOS/tasks.c **** 
3862:ThirdParty/FreeRTOS/tasks.c ****         while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
 134              		.loc 1 3862 9 view .LVU32
3860:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulCount = 0U;
 135              		.loc 1 3860 18 is_stmt 0 view .LVU33
 136 0000 0023     		movs	r3, #0
 137              		.loc 1 3862 14 view .LVU34
 138 0002 01E0     		b	.L13
 139              	.LVL10:
 140              	.L14:
3863:ThirdParty/FreeRTOS/tasks.c ****         {
3864:ThirdParty/FreeRTOS/tasks.c ****             pucStackByte -= portSTACK_GROWTH;
 141              		.loc 1 3864 13 is_stmt 1 view .LVU35
 142              		.loc 1 3864 26 is_stmt 0 view .LVU36
 143 0004 0130     		adds	r0, r0, #1
 144              	.LVL11:
3865:ThirdParty/FreeRTOS/tasks.c ****             ulCount++;
 145              		.loc 1 3865 13 is_stmt 1 view .LVU37
 146              		.loc 1 3865 20 is_stmt 0 view .LVU38
 147 0006 0133     		adds	r3, r3, #1
 148              	.LVL12:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 75


 149              	.L13:
3862:ThirdParty/FreeRTOS/tasks.c ****         {
 150              		.loc 1 3862 30 is_stmt 1 view .LVU39
3862:ThirdParty/FreeRTOS/tasks.c ****         {
 151              		.loc 1 3862 16 is_stmt 0 view .LVU40
 152 0008 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
3862:ThirdParty/FreeRTOS/tasks.c ****         {
 153              		.loc 1 3862 30 view .LVU41
 154 000a A52A     		cmp	r2, #165
 155 000c FAD0     		beq	.L14
3866:ThirdParty/FreeRTOS/tasks.c ****         }
3867:ThirdParty/FreeRTOS/tasks.c **** 
3868:ThirdParty/FreeRTOS/tasks.c ****         ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on sma
 156              		.loc 1 3868 9 is_stmt 1 view .LVU42
 157              	.LVL13:
3869:ThirdParty/FreeRTOS/tasks.c **** 
3870:ThirdParty/FreeRTOS/tasks.c ****         return ( configSTACK_DEPTH_TYPE ) ulCount;
 158              		.loc 1 3870 9 view .LVU43
3871:ThirdParty/FreeRTOS/tasks.c ****     }
 159              		.loc 1 3871 5 is_stmt 0 view .LVU44
 160 000e C3F38F00 		ubfx	r0, r3, #2, #16
 161              	.LVL14:
 162              		.loc 1 3871 5 view .LVU45
 163 0012 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE47:
 167              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 168              		.align	1
 169              		.syntax unified
 170              		.thumb
 171              		.thumb_func
 173              	prvResetNextTaskUnblockTime:
 174              	.LFB49:
3872:ThirdParty/FreeRTOS/tasks.c **** 
3873:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3874:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3875:ThirdParty/FreeRTOS/tasks.c **** 
3876:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3877:ThirdParty/FreeRTOS/tasks.c **** 
3878:ThirdParty/FreeRTOS/tasks.c **** /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3879:ThirdParty/FreeRTOS/tasks.c ****  * same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3880:ThirdParty/FreeRTOS/tasks.c ****  * user to determine the return type.  It gets around the problem of the value
3881:ThirdParty/FreeRTOS/tasks.c ****  * overflowing on 8-bit types without breaking backward compatibility for
3882:ThirdParty/FreeRTOS/tasks.c ****  * applications that expect an 8-bit return type. */
3883:ThirdParty/FreeRTOS/tasks.c ****     configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3884:ThirdParty/FreeRTOS/tasks.c ****     {
3885:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3886:ThirdParty/FreeRTOS/tasks.c ****         uint8_t * pucEndOfStack;
3887:ThirdParty/FreeRTOS/tasks.c ****         configSTACK_DEPTH_TYPE uxReturn;
3888:ThirdParty/FreeRTOS/tasks.c **** 
3889:ThirdParty/FreeRTOS/tasks.c ****         /* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3890:ThirdParty/FreeRTOS/tasks.c ****          * the same except for their return type.  Using configSTACK_DEPTH_TYPE
3891:ThirdParty/FreeRTOS/tasks.c ****          * allows the user to determine the return type.  It gets around the
3892:ThirdParty/FreeRTOS/tasks.c ****          * problem of the value overflowing on 8-bit types without breaking
3893:ThirdParty/FreeRTOS/tasks.c ****          * backward compatibility for applications that expect an 8-bit return
3894:ThirdParty/FreeRTOS/tasks.c ****          * type. */
3895:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 76


3896:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3897:ThirdParty/FreeRTOS/tasks.c **** 
3898:ThirdParty/FreeRTOS/tasks.c ****         #if portSTACK_GROWTH < 0
3899:ThirdParty/FreeRTOS/tasks.c ****         {
3900:ThirdParty/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3901:ThirdParty/FreeRTOS/tasks.c ****         }
3902:ThirdParty/FreeRTOS/tasks.c ****         #else
3903:ThirdParty/FreeRTOS/tasks.c ****         {
3904:ThirdParty/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3905:ThirdParty/FreeRTOS/tasks.c ****         }
3906:ThirdParty/FreeRTOS/tasks.c ****         #endif
3907:ThirdParty/FreeRTOS/tasks.c **** 
3908:ThirdParty/FreeRTOS/tasks.c ****         uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3909:ThirdParty/FreeRTOS/tasks.c **** 
3910:ThirdParty/FreeRTOS/tasks.c ****         return uxReturn;
3911:ThirdParty/FreeRTOS/tasks.c ****     }
3912:ThirdParty/FreeRTOS/tasks.c **** 
3913:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3914:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3915:ThirdParty/FreeRTOS/tasks.c **** 
3916:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3917:ThirdParty/FreeRTOS/tasks.c **** 
3918:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3919:ThirdParty/FreeRTOS/tasks.c ****     {
3920:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
3921:ThirdParty/FreeRTOS/tasks.c ****         uint8_t * pucEndOfStack;
3922:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
3923:ThirdParty/FreeRTOS/tasks.c **** 
3924:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
3925:ThirdParty/FreeRTOS/tasks.c **** 
3926:ThirdParty/FreeRTOS/tasks.c ****         #if portSTACK_GROWTH < 0
3927:ThirdParty/FreeRTOS/tasks.c ****         {
3928:ThirdParty/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3929:ThirdParty/FreeRTOS/tasks.c ****         }
3930:ThirdParty/FreeRTOS/tasks.c ****         #else
3931:ThirdParty/FreeRTOS/tasks.c ****         {
3932:ThirdParty/FreeRTOS/tasks.c ****             pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3933:ThirdParty/FreeRTOS/tasks.c ****         }
3934:ThirdParty/FreeRTOS/tasks.c ****         #endif
3935:ThirdParty/FreeRTOS/tasks.c **** 
3936:ThirdParty/FreeRTOS/tasks.c ****         uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3937:ThirdParty/FreeRTOS/tasks.c **** 
3938:ThirdParty/FreeRTOS/tasks.c ****         return uxReturn;
3939:ThirdParty/FreeRTOS/tasks.c ****     }
3940:ThirdParty/FreeRTOS/tasks.c **** 
3941:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3942:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3943:ThirdParty/FreeRTOS/tasks.c **** 
3944:ThirdParty/FreeRTOS/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3945:ThirdParty/FreeRTOS/tasks.c **** 
3946:ThirdParty/FreeRTOS/tasks.c ****     static void prvDeleteTCB( TCB_t * pxTCB )
3947:ThirdParty/FreeRTOS/tasks.c ****     {
3948:ThirdParty/FreeRTOS/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
3949:ThirdParty/FreeRTOS/tasks.c ****          * above the vPortFree() calls.  The call is also used by ports/demos that
3950:ThirdParty/FreeRTOS/tasks.c ****          * want to allocate and clean RAM statically. */
3951:ThirdParty/FreeRTOS/tasks.c ****         portCLEAN_UP_TCB( pxTCB );
3952:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 77


3953:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configUSE_NEWLIB_REENTRANT == 1 ) || ( configUSE_C_RUNTIME_TLS_SUPPORT == 1 ) )
3954:ThirdParty/FreeRTOS/tasks.c ****         {
3955:ThirdParty/FreeRTOS/tasks.c ****             /* Free up the memory allocated for the task's TLS Block. */
3956:ThirdParty/FreeRTOS/tasks.c ****             configDEINIT_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
3957:ThirdParty/FreeRTOS/tasks.c ****         }
3958:ThirdParty/FreeRTOS/tasks.c ****         #endif
3959:ThirdParty/FreeRTOS/tasks.c **** 
3960:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 )
3961:ThirdParty/FreeRTOS/tasks.c ****         {
3962:ThirdParty/FreeRTOS/tasks.c ****             /* The task can only have been allocated dynamically - free both
3963:ThirdParty/FreeRTOS/tasks.c ****              * the stack and TCB. */
3964:ThirdParty/FreeRTOS/tasks.c ****             vPortFreeStack( pxTCB->pxStack );
3965:ThirdParty/FreeRTOS/tasks.c ****             vPortFree( pxTCB );
3966:ThirdParty/FreeRTOS/tasks.c ****         }
3967:ThirdParty/FreeRTOS/tasks.c ****         #elif ( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been
3968:ThirdParty/FreeRTOS/tasks.c ****         {
3969:ThirdParty/FreeRTOS/tasks.c ****             /* The task could have been allocated statically or dynamically, so
3970:ThirdParty/FreeRTOS/tasks.c ****              * check what was statically allocated before trying to free the
3971:ThirdParty/FreeRTOS/tasks.c ****              * memory. */
3972:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3973:ThirdParty/FreeRTOS/tasks.c ****             {
3974:ThirdParty/FreeRTOS/tasks.c ****                 /* Both the stack and TCB were allocated dynamically, so both
3975:ThirdParty/FreeRTOS/tasks.c ****                  * must be freed. */
3976:ThirdParty/FreeRTOS/tasks.c ****                 vPortFreeStack( pxTCB->pxStack );
3977:ThirdParty/FreeRTOS/tasks.c ****                 vPortFree( pxTCB );
3978:ThirdParty/FreeRTOS/tasks.c ****             }
3979:ThirdParty/FreeRTOS/tasks.c ****             else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3980:ThirdParty/FreeRTOS/tasks.c ****             {
3981:ThirdParty/FreeRTOS/tasks.c ****                 /* Only the stack was statically allocated, so the TCB is the
3982:ThirdParty/FreeRTOS/tasks.c ****                  * only memory that must be freed. */
3983:ThirdParty/FreeRTOS/tasks.c ****                 vPortFree( pxTCB );
3984:ThirdParty/FreeRTOS/tasks.c ****             }
3985:ThirdParty/FreeRTOS/tasks.c ****             else
3986:ThirdParty/FreeRTOS/tasks.c ****             {
3987:ThirdParty/FreeRTOS/tasks.c ****                 /* Neither the stack nor the TCB were allocated dynamically, so
3988:ThirdParty/FreeRTOS/tasks.c ****                  * nothing needs to be freed. */
3989:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB
3990:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
3991:ThirdParty/FreeRTOS/tasks.c ****             }
3992:ThirdParty/FreeRTOS/tasks.c ****         }
3993:ThirdParty/FreeRTOS/tasks.c ****         #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3994:ThirdParty/FreeRTOS/tasks.c ****     }
3995:ThirdParty/FreeRTOS/tasks.c **** 
3996:ThirdParty/FreeRTOS/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3997:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
3998:ThirdParty/FreeRTOS/tasks.c **** 
3999:ThirdParty/FreeRTOS/tasks.c **** static void prvResetNextTaskUnblockTime( void )
4000:ThirdParty/FreeRTOS/tasks.c **** {
 175              		.loc 1 4000 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
4001:ThirdParty/FreeRTOS/tasks.c ****     if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 180              		.loc 1 4001 5 view .LVU47
 181              		.loc 1 4001 9 is_stmt 0 view .LVU48
 182 0000 074B     		ldr	r3, .L18
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 78


 183 0002 1B68     		ldr	r3, [r3]
 184 0004 1B68     		ldr	r3, [r3]
 185              		.loc 1 4001 7 view .LVU49
 186 0006 23B9     		cbnz	r3, .L16
4002:ThirdParty/FreeRTOS/tasks.c ****     {
4003:ThirdParty/FreeRTOS/tasks.c ****         /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
4004:ThirdParty/FreeRTOS/tasks.c ****          * the maximum possible value so it is  extremely unlikely that the
4005:ThirdParty/FreeRTOS/tasks.c ****          * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
4006:ThirdParty/FreeRTOS/tasks.c ****          * there is an item in the delayed list. */
4007:ThirdParty/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = portMAX_DELAY;
 187              		.loc 1 4007 9 is_stmt 1 view .LVU50
 188              		.loc 1 4007 30 is_stmt 0 view .LVU51
 189 0008 064B     		ldr	r3, .L18+4
 190 000a 4FF0FF32 		mov	r2, #-1
 191 000e 1A60     		str	r2, [r3]
 192 0010 7047     		bx	lr
 193              	.L16:
4008:ThirdParty/FreeRTOS/tasks.c ****     }
4009:ThirdParty/FreeRTOS/tasks.c ****     else
4010:ThirdParty/FreeRTOS/tasks.c ****     {
4011:ThirdParty/FreeRTOS/tasks.c ****         /* The new current delayed list is not empty, get the value of
4012:ThirdParty/FreeRTOS/tasks.c ****          * the item at the head of the delayed list.  This is the time at
4013:ThirdParty/FreeRTOS/tasks.c ****          * which the task at the head of the delayed list should be removed
4014:ThirdParty/FreeRTOS/tasks.c ****          * from the Blocked state. */
4015:ThirdParty/FreeRTOS/tasks.c ****         xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 194              		.loc 1 4015 9 is_stmt 1 view .LVU52
 195              		.loc 1 4015 32 is_stmt 0 view .LVU53
 196 0012 034B     		ldr	r3, .L18
 197 0014 1B68     		ldr	r3, [r3]
 198 0016 DB68     		ldr	r3, [r3, #12]
 199 0018 1A68     		ldr	r2, [r3]
 200              		.loc 1 4015 30 view .LVU54
 201 001a 024B     		ldr	r3, .L18+4
 202 001c 1A60     		str	r2, [r3]
4016:ThirdParty/FreeRTOS/tasks.c ****     }
4017:ThirdParty/FreeRTOS/tasks.c **** }
 203              		.loc 1 4017 1 view .LVU55
 204 001e 7047     		bx	lr
 205              	.L19:
 206              		.align	2
 207              	.L18:
 208 0020 00000000 		.word	pxDelayedTaskList
 209 0024 00000000 		.word	xNextTaskUnblockTime
 210              		.cfi_endproc
 211              	.LFE49:
 213              		.section	.text.prvDeleteTCB,"ax",%progbits
 214              		.align	1
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 219              	prvDeleteTCB:
 220              	.LVL15:
 221              	.LFB48:
3947:ThirdParty/FreeRTOS/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
 222              		.loc 1 3947 5 is_stmt 1 view -0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 79


 225              		@ frame_needed = 0, uses_anonymous_args = 0
3947:ThirdParty/FreeRTOS/tasks.c ****         /* This call is required specifically for the TriCore port.  It must be
 226              		.loc 1 3947 5 is_stmt 0 view .LVU57
 227 0000 10B5     		push	{r4, lr}
 228              	.LCFI0:
 229              		.cfi_def_cfa_offset 8
 230              		.cfi_offset 4, -8
 231              		.cfi_offset 14, -4
 232 0002 0446     		mov	r4, r0
3951:ThirdParty/FreeRTOS/tasks.c **** 
 233              		.loc 1 3951 9 is_stmt 1 view .LVU58
3964:ThirdParty/FreeRTOS/tasks.c ****             vPortFree( pxTCB );
 234              		.loc 1 3964 13 view .LVU59
 235 0004 006B     		ldr	r0, [r0, #48]
 236              	.LVL16:
3964:ThirdParty/FreeRTOS/tasks.c ****             vPortFree( pxTCB );
 237              		.loc 1 3964 13 is_stmt 0 view .LVU60
 238 0006 FFF7FEFF 		bl	vPortFree
 239              	.LVL17:
3965:ThirdParty/FreeRTOS/tasks.c ****         }
 240              		.loc 1 3965 13 is_stmt 1 view .LVU61
 241 000a 2046     		mov	r0, r4
 242 000c FFF7FEFF 		bl	vPortFree
 243              	.LVL18:
3994:ThirdParty/FreeRTOS/tasks.c **** 
 244              		.loc 1 3994 5 is_stmt 0 view .LVU62
 245 0010 10BD     		pop	{r4, pc}
3994:ThirdParty/FreeRTOS/tasks.c **** 
 246              		.loc 1 3994 5 view .LVU63
 247              		.cfi_endproc
 248              	.LFE48:
 250              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	prvInitialiseNewTask:
 257              	.LVL19:
 258              	.LFB6:
 824:ThirdParty/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 259              		.loc 1 824 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 16, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 824:ThirdParty/FreeRTOS/tasks.c ****     StackType_t * pxTopOfStack;
 263              		.loc 1 824 1 is_stmt 0 view .LVU65
 264 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 265              	.LCFI1:
 266              		.cfi_def_cfa_offset 32
 267              		.cfi_offset 3, -32
 268              		.cfi_offset 4, -28
 269              		.cfi_offset 5, -24
 270              		.cfi_offset 6, -20
 271              		.cfi_offset 7, -16
 272              		.cfi_offset 8, -12
 273              		.cfi_offset 9, -8
 274              		.cfi_offset 14, -4
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 80


 275 0004 8046     		mov	r8, r0
 276 0006 0D46     		mov	r5, r1
 277 0008 1646     		mov	r6, r2
 278 000a 9946     		mov	r9, r3
 279 000c 089F     		ldr	r7, [sp, #32]
 280 000e 0A9C     		ldr	r4, [sp, #40]
 825:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t x;
 281              		.loc 1 825 5 is_stmt 1 view .LVU66
 826:ThirdParty/FreeRTOS/tasks.c **** 
 282              		.loc 1 826 5 view .LVU67
 847:ThirdParty/FreeRTOS/tasks.c ****     }
 283              		.loc 1 847 9 view .LVU68
 847:ThirdParty/FreeRTOS/tasks.c ****     }
 284              		.loc 1 847 18 is_stmt 0 view .LVU69
 285 0010 9200     		lsls	r2, r2, #2
 286              	.LVL20:
 847:ThirdParty/FreeRTOS/tasks.c ****     }
 287              		.loc 1 847 18 view .LVU70
 288 0012 A521     		movs	r1, #165
 289              	.LVL21:
 847:ThirdParty/FreeRTOS/tasks.c ****     }
 290              		.loc 1 847 18 view .LVU71
 291 0014 206B     		ldr	r0, [r4, #48]
 292              	.LVL22:
 847:ThirdParty/FreeRTOS/tasks.c ****     }
 293              		.loc 1 847 18 view .LVU72
 294 0016 FFF7FEFF 		bl	memset
 295              	.LVL23:
 857:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 296              		.loc 1 857 9 is_stmt 1 view .LVU73
 857:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 297              		.loc 1 857 35 is_stmt 0 view .LVU74
 298 001a 226B     		ldr	r2, [r4, #48]
 857:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 299              		.loc 1 857 44 view .LVU75
 300 001c 06F18043 		add	r3, r6, #1073741824
 301 0020 013B     		subs	r3, r3, #1
 857:ThirdParty/FreeRTOS/tasks.c ****         pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( port
 302              		.loc 1 857 22 view .LVU76
 303 0022 02EB8302 		add	r2, r2, r3, lsl #2
 304              	.LVL24:
 858:ThirdParty/FreeRTOS/tasks.c **** 
 305              		.loc 1 858 9 is_stmt 1 view .LVU77
 858:ThirdParty/FreeRTOS/tasks.c **** 
 306              		.loc 1 858 87 is_stmt 0 view .LVU78
 307 0026 22F00706 		bic	r6, r2, #7
 308              	.LVL25:
 861:ThirdParty/FreeRTOS/tasks.c **** 
 309              		.loc 1 861 9 is_stmt 1 view .LVU79
 861:ThirdParty/FreeRTOS/tasks.c **** 
 310              		.loc 1 861 130 view .LVU80
 885:ThirdParty/FreeRTOS/tasks.c ****     {
 311              		.loc 1 885 5 view .LVU81
 885:ThirdParty/FreeRTOS/tasks.c ****     {
 312              		.loc 1 885 7 is_stmt 0 view .LVU82
 313 002a 65B1     		cbz	r5, .L24
 887:ThirdParty/FreeRTOS/tasks.c ****         {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 81


 314              		.loc 1 887 16 view .LVU83
 315 002c 0022     		movs	r2, #0
 316              	.LVL26:
 317              	.L23:
 887:ThirdParty/FreeRTOS/tasks.c ****         {
 318              		.loc 1 887 39 is_stmt 1 discriminator 1 view .LVU84
 319 002e 092A     		cmp	r2, #9
 320 0030 06D8     		bhi	.L25
 889:ThirdParty/FreeRTOS/tasks.c **** 
 321              		.loc 1 889 13 view .LVU85
 889:ThirdParty/FreeRTOS/tasks.c **** 
 322              		.loc 1 889 47 is_stmt 0 view .LVU86
 323 0032 AB5C     		ldrb	r3, [r5, r2]	@ zero_extendqisi2
 889:ThirdParty/FreeRTOS/tasks.c **** 
 324              		.loc 1 889 39 view .LVU87
 325 0034 A118     		adds	r1, r4, r2
 326 0036 81F83430 		strb	r3, [r1, #52]
 894:ThirdParty/FreeRTOS/tasks.c ****             {
 327              		.loc 1 894 13 is_stmt 1 view .LVU88
 894:ThirdParty/FreeRTOS/tasks.c ****             {
 328              		.loc 1 894 15 is_stmt 0 view .LVU89
 329 003a 0BB1     		cbz	r3, .L25
 900:ThirdParty/FreeRTOS/tasks.c ****             }
 330              		.loc 1 900 41 is_stmt 1 discriminator 2 view .LVU90
 887:ThirdParty/FreeRTOS/tasks.c ****         {
 331              		.loc 1 887 83 discriminator 2 view .LVU91
 332 003c 0132     		adds	r2, r2, #1
 333              	.LVL27:
 887:ThirdParty/FreeRTOS/tasks.c ****         {
 334              		.loc 1 887 83 is_stmt 0 discriminator 2 view .LVU92
 335 003e F6E7     		b	.L23
 336              	.L25:
 906:ThirdParty/FreeRTOS/tasks.c ****     }
 337              		.loc 1 906 9 is_stmt 1 view .LVU93
 906:ThirdParty/FreeRTOS/tasks.c ****     }
 338              		.loc 1 906 61 is_stmt 0 view .LVU94
 339 0040 0023     		movs	r3, #0
 340 0042 84F83D30 		strb	r3, [r4, #61]
 341              	.LVL28:
 342              	.L24:
 910:ThirdParty/FreeRTOS/tasks.c ****     }
 343              		.loc 1 910 33 is_stmt 1 view .LVU95
 914:ThirdParty/FreeRTOS/tasks.c **** 
 344              		.loc 1 914 5 view .LVU96
 345 0046 042F     		cmp	r7, #4
 346 0048 08D9     		bls	.L27
 914:ThirdParty/FreeRTOS/tasks.c **** 
 347              		.loc 1 914 5 view .LVU97
 348              	.LBB157:
 349              	.LBI157:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 350              		.loc 2 194 34 view .LVU98
 351              	.LBB158:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 352              		.loc 2 196 9 view .LVU99
 353              		.loc 2 198 9 view .LVU100
 354              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 82


 355              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 356 004a 4FF05003 			mov r3, #80												
 357 004e 83F31188 		msr basepri, r3											
 358 0052 BFF36F8F 		isb														
 359 0056 BFF34F8F 		dsb														
 360              	
 361              	@ 0 "" 2
 362              	.LVL29:
 363              		.thumb
 364              		.syntax unified
 365              	.L28:
 366              		.loc 2 198 9 is_stmt 0 view .LVU101
 367              	.LBE158:
 368              	.LBE157:
 914:ThirdParty/FreeRTOS/tasks.c **** 
 369              		.loc 1 914 5 is_stmt 1 discriminator 2 view .LVU102
 914:ThirdParty/FreeRTOS/tasks.c **** 
 370              		.loc 1 914 5 discriminator 2 view .LVU103
 371 005a FEE7     		b	.L28
 372              	.L27:
 914:ThirdParty/FreeRTOS/tasks.c **** 
 373              		.loc 1 914 54 view .LVU104
 916:ThirdParty/FreeRTOS/tasks.c ****     {
 374              		.loc 1 916 5 view .LVU105
 375              	.LVL30:
 922:ThirdParty/FreeRTOS/tasks.c ****     }
 376              		.loc 1 922 33 view .LVU106
 925:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 377              		.loc 1 925 5 view .LVU107
 925:ThirdParty/FreeRTOS/tasks.c ****     #if ( configUSE_MUTEXES == 1 )
 378              		.loc 1 925 26 is_stmt 0 view .LVU108
 379 005c E762     		str	r7, [r4, #44]
 928:ThirdParty/FreeRTOS/tasks.c ****     }
 380              		.loc 1 928 9 is_stmt 1 view .LVU109
 928:ThirdParty/FreeRTOS/tasks.c ****     }
 381              		.loc 1 928 34 is_stmt 0 view .LVU110
 382 005e A764     		str	r7, [r4, #72]
 932:ThirdParty/FreeRTOS/tasks.c ****     vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 383              		.loc 1 932 5 is_stmt 1 view .LVU111
 384 0060 201D     		adds	r0, r4, #4
 385 0062 FFF7FEFF 		bl	vListInitialiseItem
 386              	.LVL31:
 933:ThirdParty/FreeRTOS/tasks.c **** 
 387              		.loc 1 933 5 view .LVU112
 388 0066 04F11800 		add	r0, r4, #24
 389 006a FFF7FEFF 		bl	vListInitialiseItem
 390              	.LVL32:
 937:ThirdParty/FreeRTOS/tasks.c **** 
 391              		.loc 1 937 5 view .LVU113
 392 006e 2461     		str	r4, [r4, #16]
 940:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 393              		.loc 1 940 5 view .LVU114
 394 0070 C7F10507 		rsb	r7, r7, #5
 395              	.LVL33:
 940:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 396              		.loc 1 940 5 is_stmt 0 view .LVU115
 397 0074 A761     		str	r7, [r4, #24]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 83


 941:ThirdParty/FreeRTOS/tasks.c **** 
 398              		.loc 1 941 5 is_stmt 1 view .LVU116
 399 0076 6462     		str	r4, [r4, #36]
 950:ThirdParty/FreeRTOS/tasks.c ****     }
 400              		.loc 1 950 9 view .LVU117
1007:ThirdParty/FreeRTOS/tasks.c ****         }
 401              		.loc 1 1007 13 view .LVU118
1007:ThirdParty/FreeRTOS/tasks.c ****         }
 402              		.loc 1 1007 38 is_stmt 0 view .LVU119
 403 0078 4A46     		mov	r2, r9
 404 007a 4146     		mov	r1, r8
 405 007c 3046     		mov	r0, r6
 406 007e FFF7FEFF 		bl	pxPortInitialiseStack
 407              	.LVL34:
1007:ThirdParty/FreeRTOS/tasks.c ****         }
 408              		.loc 1 1007 36 view .LVU120
 409 0082 2060     		str	r0, [r4]
1013:ThirdParty/FreeRTOS/tasks.c ****     {
 410              		.loc 1 1013 5 is_stmt 1 view .LVU121
1013:ThirdParty/FreeRTOS/tasks.c ****     {
 411              		.loc 1 1013 7 is_stmt 0 view .LVU122
 412 0084 099B     		ldr	r3, [sp, #36]
 413 0086 03B1     		cbz	r3, .L22
1017:ThirdParty/FreeRTOS/tasks.c ****     }
 414              		.loc 1 1017 9 is_stmt 1 view .LVU123
1017:ThirdParty/FreeRTOS/tasks.c ****     }
 415              		.loc 1 1017 24 is_stmt 0 view .LVU124
 416 0088 1C60     		str	r4, [r3]
1021:ThirdParty/FreeRTOS/tasks.c ****     }
 417              		.loc 1 1021 33 is_stmt 1 view .LVU125
 418              	.L22:
1023:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 419              		.loc 1 1023 1 is_stmt 0 view .LVU126
 420 008a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
1023:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 421              		.loc 1 1023 1 view .LVU127
 422              		.cfi_endproc
 423              	.LFE6:
 425              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 426              		.align	1
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 431              	prvInitialiseTaskLists:
 432              	.LFB43:
3658:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxPriority;
 433              		.loc 1 3658 1 is_stmt 1 view -0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437 0000 38B5     		push	{r3, r4, r5, lr}
 438              	.LCFI2:
 439              		.cfi_def_cfa_offset 16
 440              		.cfi_offset 3, -16
 441              		.cfi_offset 4, -12
 442              		.cfi_offset 5, -8
 443              		.cfi_offset 14, -4
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 84


3659:ThirdParty/FreeRTOS/tasks.c **** 
 444              		.loc 1 3659 5 view .LVU129
3661:ThirdParty/FreeRTOS/tasks.c ****     {
 445              		.loc 1 3661 5 view .LVU130
 446              	.LVL35:
3661:ThirdParty/FreeRTOS/tasks.c ****     {
 447              		.loc 1 3661 21 is_stmt 0 view .LVU131
 448 0002 0024     		movs	r4, #0
3661:ThirdParty/FreeRTOS/tasks.c ****     {
 449              		.loc 1 3661 5 view .LVU132
 450 0004 07E0     		b	.L33
 451              	.LVL36:
 452              	.L34:
3663:ThirdParty/FreeRTOS/tasks.c ****     }
 453              		.loc 1 3663 9 is_stmt 1 discriminator 3 view .LVU133
 454 0006 04EB8402 		add	r2, r4, r4, lsl #2
 455 000a 9300     		lsls	r3, r2, #2
 456 000c 0E48     		ldr	r0, .L36
 457 000e 1844     		add	r0, r0, r3
 458 0010 FFF7FEFF 		bl	vListInitialise
 459              	.LVL37:
3661:ThirdParty/FreeRTOS/tasks.c ****     {
 460              		.loc 1 3661 104 discriminator 3 view .LVU134
 461 0014 0134     		adds	r4, r4, #1
 462              	.LVL38:
 463              	.L33:
3661:ThirdParty/FreeRTOS/tasks.c ****     {
 464              		.loc 1 3661 54 discriminator 1 view .LVU135
 465 0016 042C     		cmp	r4, #4
 466 0018 F5D9     		bls	.L34
3666:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xDelayedTaskList2 );
 467              		.loc 1 3666 5 view .LVU136
 468 001a 0C4D     		ldr	r5, .L36+4
 469 001c 2846     		mov	r0, r5
 470 001e FFF7FEFF 		bl	vListInitialise
 471              	.LVL39:
3667:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
 472              		.loc 1 3667 5 view .LVU137
 473 0022 0B4C     		ldr	r4, .L36+8
 474              	.LVL40:
3667:ThirdParty/FreeRTOS/tasks.c ****     vListInitialise( &xPendingReadyList );
 475              		.loc 1 3667 5 is_stmt 0 view .LVU138
 476 0024 2046     		mov	r0, r4
 477 0026 FFF7FEFF 		bl	vListInitialise
 478              	.LVL41:
3668:ThirdParty/FreeRTOS/tasks.c **** 
 479              		.loc 1 3668 5 is_stmt 1 view .LVU139
 480 002a 0A48     		ldr	r0, .L36+12
 481 002c FFF7FEFF 		bl	vListInitialise
 482              	.LVL42:
3672:ThirdParty/FreeRTOS/tasks.c ****     }
 483              		.loc 1 3672 9 view .LVU140
 484 0030 0948     		ldr	r0, .L36+16
 485 0032 FFF7FEFF 		bl	vListInitialise
 486              	.LVL43:
3678:ThirdParty/FreeRTOS/tasks.c ****     }
 487              		.loc 1 3678 9 view .LVU141
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 85


 488 0036 0948     		ldr	r0, .L36+20
 489 0038 FFF7FEFF 		bl	vListInitialise
 490              	.LVL44:
3684:ThirdParty/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
 491              		.loc 1 3684 5 view .LVU142
3684:ThirdParty/FreeRTOS/tasks.c ****     pxOverflowDelayedTaskList = &xDelayedTaskList2;
 492              		.loc 1 3684 23 is_stmt 0 view .LVU143
 493 003c 084B     		ldr	r3, .L36+24
 494 003e 1D60     		str	r5, [r3]
3685:ThirdParty/FreeRTOS/tasks.c **** }
 495              		.loc 1 3685 5 is_stmt 1 view .LVU144
3685:ThirdParty/FreeRTOS/tasks.c **** }
 496              		.loc 1 3685 31 is_stmt 0 view .LVU145
 497 0040 084B     		ldr	r3, .L36+28
 498 0042 1C60     		str	r4, [r3]
3686:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 499              		.loc 1 3686 1 view .LVU146
 500 0044 38BD     		pop	{r3, r4, r5, pc}
 501              	.L37:
 502 0046 00BF     		.align	2
 503              	.L36:
 504 0048 00000000 		.word	pxReadyTasksLists
 505 004c 00000000 		.word	xDelayedTaskList1
 506 0050 00000000 		.word	xDelayedTaskList2
 507 0054 00000000 		.word	xPendingReadyList
 508 0058 00000000 		.word	xTasksWaitingTermination
 509 005c 00000000 		.word	xSuspendedTaskList
 510 0060 00000000 		.word	pxDelayedTaskList
 511 0064 00000000 		.word	pxOverflowDelayedTaskList
 512              		.cfi_endproc
 513              	.LFE43:
 515              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 516              		.align	1
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 521              	prvAddNewTaskToReadyList:
 522              	.LVL45:
 523              	.LFB7:
1027:ThirdParty/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
 524              		.loc 1 1027 1 is_stmt 1 view -0
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 0
 527              		@ frame_needed = 0, uses_anonymous_args = 0
1027:ThirdParty/FreeRTOS/tasks.c ****     /* Ensure interrupts don't access the task lists while the lists are being
 528              		.loc 1 1027 1 is_stmt 0 view .LVU148
 529 0000 10B5     		push	{r4, lr}
 530              	.LCFI3:
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 4, -8
 533              		.cfi_offset 14, -4
 534 0002 0446     		mov	r4, r0
1030:ThirdParty/FreeRTOS/tasks.c ****     {
 535              		.loc 1 1030 5 is_stmt 1 view .LVU149
 536 0004 FFF7FEFF 		bl	vPortEnterCritical
 537              	.LVL46:
1032:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 86


 538              		.loc 1 1032 9 view .LVU150
1032:ThirdParty/FreeRTOS/tasks.c **** 
 539              		.loc 1 1032 31 is_stmt 0 view .LVU151
 540 0008 294A     		ldr	r2, .L45
 541 000a 1368     		ldr	r3, [r2]
 542 000c 0133     		adds	r3, r3, #1
 543 000e 1360     		str	r3, [r2]
1034:ThirdParty/FreeRTOS/tasks.c ****         {
 544              		.loc 1 1034 9 is_stmt 1 view .LVU152
1034:ThirdParty/FreeRTOS/tasks.c ****         {
 545              		.loc 1 1034 26 is_stmt 0 view .LVU153
 546 0010 284B     		ldr	r3, .L45+4
 547 0012 1B68     		ldr	r3, [r3]
1034:ThirdParty/FreeRTOS/tasks.c ****         {
 548              		.loc 1 1034 11 view .LVU154
 549 0014 5BB1     		cbz	r3, .L43
1057:ThirdParty/FreeRTOS/tasks.c ****             {
 550              		.loc 1 1057 13 is_stmt 1 view .LVU155
1057:ThirdParty/FreeRTOS/tasks.c ****             {
 551              		.loc 1 1057 35 is_stmt 0 view .LVU156
 552 0016 284B     		ldr	r3, .L45+8
 553 0018 1B68     		ldr	r3, [r3]
1057:ThirdParty/FreeRTOS/tasks.c ****             {
 554              		.loc 1 1057 15 view .LVU157
 555 001a 6BB9     		cbnz	r3, .L40
1059:ThirdParty/FreeRTOS/tasks.c ****                 {
 556              		.loc 1 1059 17 is_stmt 1 view .LVU158
1059:ThirdParty/FreeRTOS/tasks.c ****                 {
 557              		.loc 1 1059 33 is_stmt 0 view .LVU159
 558 001c 254B     		ldr	r3, .L45+4
 559 001e 1B68     		ldr	r3, [r3]
 560 0020 DA6A     		ldr	r2, [r3, #44]
1059:ThirdParty/FreeRTOS/tasks.c ****                 {
 561              		.loc 1 1059 57 view .LVU160
 562 0022 E36A     		ldr	r3, [r4, #44]
1059:ThirdParty/FreeRTOS/tasks.c ****                 {
 563              		.loc 1 1059 19 view .LVU161
 564 0024 9A42     		cmp	r2, r3
 565 0026 07D8     		bhi	.L40
1061:ThirdParty/FreeRTOS/tasks.c ****                 }
 566              		.loc 1 1061 21 is_stmt 1 view .LVU162
1061:ThirdParty/FreeRTOS/tasks.c ****                 }
 567              		.loc 1 1061 34 is_stmt 0 view .LVU163
 568 0028 224B     		ldr	r3, .L45+4
 569 002a 1C60     		str	r4, [r3]
 570 002c 04E0     		b	.L40
 571              	.L43:
1038:ThirdParty/FreeRTOS/tasks.c **** 
 572              		.loc 1 1038 13 is_stmt 1 view .LVU164
1038:ThirdParty/FreeRTOS/tasks.c **** 
 573              		.loc 1 1038 26 is_stmt 0 view .LVU165
 574 002e 214B     		ldr	r3, .L45+4
 575 0030 1C60     		str	r4, [r3]
1040:ThirdParty/FreeRTOS/tasks.c ****             {
 576              		.loc 1 1040 13 is_stmt 1 view .LVU166
1040:ThirdParty/FreeRTOS/tasks.c ****             {
 577              		.loc 1 1040 40 is_stmt 0 view .LVU167
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 87


 578 0032 1368     		ldr	r3, [r2]
1040:ThirdParty/FreeRTOS/tasks.c ****             {
 579              		.loc 1 1040 15 view .LVU168
 580 0034 012B     		cmp	r3, #1
 581 0036 37D0     		beq	.L44
 582              	.L40:
1070:ThirdParty/FreeRTOS/tasks.c ****             }
 583              		.loc 1 1070 41 is_stmt 1 view .LVU169
1074:ThirdParty/FreeRTOS/tasks.c **** 
 584              		.loc 1 1074 9 view .LVU170
1074:ThirdParty/FreeRTOS/tasks.c **** 
 585              		.loc 1 1074 21 is_stmt 0 view .LVU171
 586 0038 204A     		ldr	r2, .L45+12
 587 003a 1368     		ldr	r3, [r2]
 588 003c 0133     		adds	r3, r3, #1
 589 003e 1360     		str	r3, [r2]
1079:ThirdParty/FreeRTOS/tasks.c ****         }
 590              		.loc 1 1079 13 is_stmt 1 view .LVU172
1079:ThirdParty/FreeRTOS/tasks.c ****         }
 591              		.loc 1 1079 35 is_stmt 0 view .LVU173
 592 0040 2364     		str	r3, [r4, #64]
1082:ThirdParty/FreeRTOS/tasks.c **** 
 593              		.loc 1 1082 37 is_stmt 1 view .LVU174
1084:ThirdParty/FreeRTOS/tasks.c **** 
 594              		.loc 1 1084 9 view .LVU175
1084:ThirdParty/FreeRTOS/tasks.c **** 
 595              		.loc 1 1084 9 view .LVU176
 596 0042 E36A     		ldr	r3, [r4, #44]
 597 0044 0122     		movs	r2, #1
 598 0046 9A40     		lsls	r2, r2, r3
 599 0048 1D49     		ldr	r1, .L45+16
 600 004a 0868     		ldr	r0, [r1]
 601 004c 0243     		orrs	r2, r2, r0
 602 004e 0A60     		str	r2, [r1]
 603              	.LBB159:
1084:ThirdParty/FreeRTOS/tasks.c **** 
 604              		.loc 1 1084 9 view .LVU177
 605 0050 1C4A     		ldr	r2, .L45+20
 606 0052 03EB8303 		add	r3, r3, r3, lsl #2
 607 0056 02EB8303 		add	r3, r2, r3, lsl #2
 608 005a 5B68     		ldr	r3, [r3, #4]
 609              	.LVL47:
1084:ThirdParty/FreeRTOS/tasks.c **** 
 610              		.loc 1 1084 9 view .LVU178
1084:ThirdParty/FreeRTOS/tasks.c **** 
 611              		.loc 1 1084 9 view .LVU179
1084:ThirdParty/FreeRTOS/tasks.c **** 
 612              		.loc 1 1084 9 view .LVU180
 613 005c A360     		str	r3, [r4, #8]
1084:ThirdParty/FreeRTOS/tasks.c **** 
 614              		.loc 1 1084 9 view .LVU181
 615 005e 9868     		ldr	r0, [r3, #8]
 616 0060 E060     		str	r0, [r4, #12]
1084:ThirdParty/FreeRTOS/tasks.c **** 
 617              		.loc 1 1084 9 view .LVU182
 618 0062 211D     		adds	r1, r4, #4
 619 0064 4160     		str	r1, [r0, #4]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 88


1084:ThirdParty/FreeRTOS/tasks.c **** 
 620              		.loc 1 1084 9 view .LVU183
 621 0066 9960     		str	r1, [r3, #8]
1084:ThirdParty/FreeRTOS/tasks.c **** 
 622              		.loc 1 1084 9 view .LVU184
 623 0068 E36A     		ldr	r3, [r4, #44]
 624              	.LVL48:
1084:ThirdParty/FreeRTOS/tasks.c **** 
 625              		.loc 1 1084 9 is_stmt 0 view .LVU185
 626 006a 03EB8301 		add	r1, r3, r3, lsl #2
 627 006e 8800     		lsls	r0, r1, #2
 628 0070 02EB8101 		add	r1, r2, r1, lsl #2
 629 0074 6161     		str	r1, [r4, #20]
1084:ThirdParty/FreeRTOS/tasks.c **** 
 630              		.loc 1 1084 9 is_stmt 1 view .LVU186
 631 0076 1158     		ldr	r1, [r2, r0]
 632 0078 0131     		adds	r1, r1, #1
 633 007a 1150     		str	r1, [r2, r0]
 634              	.LBE159:
1084:ThirdParty/FreeRTOS/tasks.c **** 
 635              		.loc 1 1084 9 view .LVU187
1084:ThirdParty/FreeRTOS/tasks.c **** 
 636              		.loc 1 1084 42 view .LVU188
1086:ThirdParty/FreeRTOS/tasks.c ****     }
 637              		.loc 1 1086 9 view .LVU189
1088:ThirdParty/FreeRTOS/tasks.c **** 
 638              		.loc 1 1088 5 view .LVU190
 639 007c FFF7FEFF 		bl	vPortExitCritical
 640              	.LVL49:
1090:ThirdParty/FreeRTOS/tasks.c ****     {
 641              		.loc 1 1090 5 view .LVU191
1090:ThirdParty/FreeRTOS/tasks.c ****     {
 642              		.loc 1 1090 27 is_stmt 0 view .LVU192
 643 0080 0D4B     		ldr	r3, .L45+8
 644 0082 1B68     		ldr	r3, [r3]
1090:ThirdParty/FreeRTOS/tasks.c ****     {
 645              		.loc 1 1090 7 view .LVU193
 646 0084 7BB1     		cbz	r3, .L38
1094:ThirdParty/FreeRTOS/tasks.c ****         {
 647              		.loc 1 1094 9 is_stmt 1 view .LVU194
1094:ThirdParty/FreeRTOS/tasks.c ****         {
 648              		.loc 1 1094 25 is_stmt 0 view .LVU195
 649 0086 0B4B     		ldr	r3, .L45+4
 650 0088 1B68     		ldr	r3, [r3]
 651 008a DA6A     		ldr	r2, [r3, #44]
1094:ThirdParty/FreeRTOS/tasks.c ****         {
 652              		.loc 1 1094 48 view .LVU196
 653 008c E36A     		ldr	r3, [r4, #44]
1094:ThirdParty/FreeRTOS/tasks.c ****         {
 654              		.loc 1 1094 11 view .LVU197
 655 008e 9A42     		cmp	r2, r3
 656 0090 09D2     		bcs	.L38
1096:ThirdParty/FreeRTOS/tasks.c ****         }
 657              		.loc 1 1096 13 is_stmt 1 view .LVU198
 658 0092 4FF0E023 		mov	r3, #-536813568
 659 0096 4FF08052 		mov	r2, #268435456
 660 009a C3F8042D 		str	r2, [r3, #3332]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 89


1096:ThirdParty/FreeRTOS/tasks.c ****         }
 661              		.loc 1 1096 13 view .LVU199
 662              		.syntax unified
 663              	@ 1096 "ThirdParty/FreeRTOS/tasks.c" 1
 664 009e BFF34F8F 		dsb
 665              	@ 0 "" 2
1096:ThirdParty/FreeRTOS/tasks.c ****         }
 666              		.loc 1 1096 13 view .LVU200
 667              	@ 1096 "ThirdParty/FreeRTOS/tasks.c" 1
 668 00a2 BFF36F8F 		isb
 669              	@ 0 "" 2
1096:ThirdParty/FreeRTOS/tasks.c ****         }
 670              		.loc 1 1096 44 view .LVU201
1105:ThirdParty/FreeRTOS/tasks.c ****     }
 671              		.loc 1 1105 33 view .LVU202
 672              		.thumb
 673              		.syntax unified
 674              	.L38:
1107:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 675              		.loc 1 1107 1 is_stmt 0 view .LVU203
 676 00a6 10BD     		pop	{r4, pc}
 677              	.LVL50:
 678              	.L44:
1045:ThirdParty/FreeRTOS/tasks.c ****             }
 679              		.loc 1 1045 17 is_stmt 1 view .LVU204
 680 00a8 FFF7FEFF 		bl	prvInitialiseTaskLists
 681              	.LVL51:
 682 00ac C4E7     		b	.L40
 683              	.L46:
 684 00ae 00BF     		.align	2
 685              	.L45:
 686 00b0 00000000 		.word	uxCurrentNumberOfTasks
 687 00b4 00000000 		.word	pxCurrentTCB
 688 00b8 00000000 		.word	xSchedulerRunning
 689 00bc 00000000 		.word	uxTaskNumber
 690 00c0 00000000 		.word	uxTopReadyPriority
 691 00c4 00000000 		.word	pxReadyTasksLists
 692              		.cfi_endproc
 693              	.LFE7:
 695              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 696              		.align	1
 697              		.syntax unified
 698              		.thumb
 699              		.thumb_func
 701              	prvCheckTasksWaitingTermination:
 702              	.LFB44:
3690:ThirdParty/FreeRTOS/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
 703              		.loc 1 3690 1 view -0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707              	.LBB160:
3695:ThirdParty/FreeRTOS/tasks.c **** 
 708              		.loc 1 3695 9 view .LVU206
3699:ThirdParty/FreeRTOS/tasks.c ****         {
 709              		.loc 1 3699 9 view .LVU207
3699:ThirdParty/FreeRTOS/tasks.c ****         {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 90


 710              		.loc 1 3699 45 view .LVU208
 711 0000 0F4B     		ldr	r3, .L54
 712 0002 1B68     		ldr	r3, [r3]
 713 0004 D3B1     		cbz	r3, .L53
 714              	.LBE160:
3690:ThirdParty/FreeRTOS/tasks.c ****     /** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
 715              		.loc 1 3690 1 is_stmt 0 view .LVU209
 716 0006 10B5     		push	{r4, lr}
 717              	.LCFI4:
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 4, -8
 720              		.cfi_offset 14, -4
 721              	.L49:
 722              	.LBB161:
3701:ThirdParty/FreeRTOS/tasks.c ****             {
 723              		.loc 1 3701 13 is_stmt 1 view .LVU210
 724 0008 FFF7FEFF 		bl	vPortEnterCritical
 725              	.LVL52:
3703:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 726              		.loc 1 3703 17 view .LVU211
3703:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 727              		.loc 1 3703 25 is_stmt 0 view .LVU212
 728 000c 0D4B     		ldr	r3, .L54+4
 729 000e DB68     		ldr	r3, [r3, #12]
3703:ThirdParty/FreeRTOS/tasks.c ****                 ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 730              		.loc 1 3703 23 view .LVU213
 731 0010 DC68     		ldr	r4, [r3, #12]
 732              	.LVL53:
3704:ThirdParty/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
 733              		.loc 1 3704 17 is_stmt 1 view .LVU214
3704:ThirdParty/FreeRTOS/tasks.c ****                 --uxCurrentNumberOfTasks;
 734              		.loc 1 3704 26 is_stmt 0 view .LVU215
 735 0012 201D     		adds	r0, r4, #4
 736 0014 FFF7FEFF 		bl	uxListRemove
 737              	.LVL54:
3705:ThirdParty/FreeRTOS/tasks.c ****                 --uxDeletedTasksWaitingCleanUp;
 738              		.loc 1 3705 17 is_stmt 1 view .LVU216
 739 0018 0B4A     		ldr	r2, .L54+8
 740 001a 1368     		ldr	r3, [r2]
 741 001c 013B     		subs	r3, r3, #1
 742 001e 1360     		str	r3, [r2]
3706:ThirdParty/FreeRTOS/tasks.c ****             }
 743              		.loc 1 3706 17 view .LVU217
 744 0020 074A     		ldr	r2, .L54
 745 0022 1368     		ldr	r3, [r2]
 746 0024 013B     		subs	r3, r3, #1
 747 0026 1360     		str	r3, [r2]
3708:ThirdParty/FreeRTOS/tasks.c **** 
 748              		.loc 1 3708 13 view .LVU218
 749 0028 FFF7FEFF 		bl	vPortExitCritical
 750              	.LVL55:
3710:ThirdParty/FreeRTOS/tasks.c ****         }
 751              		.loc 1 3710 13 view .LVU219
 752 002c 2046     		mov	r0, r4
 753 002e FFF7FEFF 		bl	prvDeleteTCB
 754              	.LVL56:
3699:ThirdParty/FreeRTOS/tasks.c ****         {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 91


 755              		.loc 1 3699 45 view .LVU220
 756 0032 034B     		ldr	r3, .L54
 757 0034 1B68     		ldr	r3, [r3]
 758 0036 002B     		cmp	r3, #0
 759 0038 E6D1     		bne	.L49
 760              	.LBE161:
3714:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 761              		.loc 1 3714 1 is_stmt 0 view .LVU221
 762 003a 10BD     		pop	{r4, pc}
 763              	.LVL57:
 764              	.L53:
 765              	.LCFI5:
 766              		.cfi_def_cfa_offset 0
 767              		.cfi_restore 4
 768              		.cfi_restore 14
3714:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 769              		.loc 1 3714 1 view .LVU222
 770 003c 7047     		bx	lr
 771              	.L55:
 772 003e 00BF     		.align	2
 773              	.L54:
 774 0040 00000000 		.word	uxDeletedTasksWaitingCleanUp
 775 0044 00000000 		.word	xTasksWaitingTermination
 776 0048 00000000 		.word	uxCurrentNumberOfTasks
 777              		.cfi_endproc
 778              	.LFE44:
 780              		.section	.text.prvIdleTask,"ax",%progbits
 781              		.align	1
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 786              	prvIdleTask:
 787              	.LFB42:
3428:ThirdParty/FreeRTOS/tasks.c ****     /* Stop warnings. */
 788              		.loc 1 3428 1 is_stmt 1 view -0
 789              		.cfi_startproc
 790              		@ Volatile: function does not return.
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 0, uses_anonymous_args = 0
 793              	.LVL58:
3428:ThirdParty/FreeRTOS/tasks.c ****     /* Stop warnings. */
 794              		.loc 1 3428 1 is_stmt 0 view .LVU224
 795 0000 08B5     		push	{r3, lr}
 796              	.LCFI6:
 797              		.cfi_def_cfa_offset 8
 798              		.cfi_offset 3, -8
 799              		.cfi_offset 14, -4
 800              	.LVL59:
 801              	.L57:
3430:ThirdParty/FreeRTOS/tasks.c **** 
 802              		.loc 1 3430 5 is_stmt 1 view .LVU225
3438:ThirdParty/FreeRTOS/tasks.c **** 
 803              		.loc 1 3438 67 view .LVU226
3440:ThirdParty/FreeRTOS/tasks.c ****     {
 804              		.loc 1 3440 5 view .LVU227
3444:ThirdParty/FreeRTOS/tasks.c **** 
 805              		.loc 1 3444 9 view .LVU228
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 92


 806 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 807              	.LVL60:
3467:ThirdParty/FreeRTOS/tasks.c ****             {
 808              		.loc 1 3467 13 view .LVU229
3467:ThirdParty/FreeRTOS/tasks.c ****             {
 809              		.loc 1 3467 17 is_stmt 0 view .LVU230
 810 0006 074B     		ldr	r3, .L60
 811 0008 1B68     		ldr	r3, [r3]
3467:ThirdParty/FreeRTOS/tasks.c ****             {
 812              		.loc 1 3467 15 view .LVU231
 813 000a 012B     		cmp	r3, #1
 814 000c F9D9     		bls	.L57
3469:ThirdParty/FreeRTOS/tasks.c ****             }
 815              		.loc 1 3469 17 is_stmt 1 view .LVU232
 816 000e 4FF0E023 		mov	r3, #-536813568
 817 0012 4FF08052 		mov	r2, #268435456
 818 0016 C3F8042D 		str	r2, [r3, #3332]
3469:ThirdParty/FreeRTOS/tasks.c ****             }
 819              		.loc 1 3469 17 view .LVU233
 820              		.syntax unified
 821              	@ 3469 "ThirdParty/FreeRTOS/tasks.c" 1
 822 001a BFF34F8F 		dsb
 823              	@ 0 "" 2
3469:ThirdParty/FreeRTOS/tasks.c ****             }
 824              		.loc 1 3469 17 view .LVU234
 825              	@ 3469 "ThirdParty/FreeRTOS/tasks.c" 1
 826 001e BFF36F8F 		isb
 827              	@ 0 "" 2
3469:ThirdParty/FreeRTOS/tasks.c ****             }
 828              		.loc 1 3469 28 view .LVU235
 829              		.thumb
 830              		.syntax unified
 831 0022 EEE7     		b	.L57
 832              	.L61:
 833              		.align	2
 834              	.L60:
 835 0024 00000000 		.word	pxReadyTasksLists
 836              		.cfi_endproc
 837              	.LFE42:
 839              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 840              		.align	1
 841              		.syntax unified
 842              		.thumb
 843              		.thumb_func
 845              	prvAddCurrentTaskToDelayedList:
 846              	.LVL61:
 847              	.LFB64:
4018:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4019:ThirdParty/FreeRTOS/tasks.c **** 
4020:ThirdParty/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
4021:ThirdParty/FreeRTOS/tasks.c **** 
4022:ThirdParty/FreeRTOS/tasks.c ****     TaskHandle_t xTaskGetCurrentTaskHandle( void )
4023:ThirdParty/FreeRTOS/tasks.c ****     {
4024:ThirdParty/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
4025:ThirdParty/FreeRTOS/tasks.c **** 
4026:ThirdParty/FreeRTOS/tasks.c ****         /* A critical section is not required as this is not called from
4027:ThirdParty/FreeRTOS/tasks.c ****          * an interrupt and the current TCB will always be the same for any
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 93


4028:ThirdParty/FreeRTOS/tasks.c ****          * individual execution thread. */
4029:ThirdParty/FreeRTOS/tasks.c ****         xReturn = pxCurrentTCB;
4030:ThirdParty/FreeRTOS/tasks.c **** 
4031:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
4032:ThirdParty/FreeRTOS/tasks.c ****     }
4033:ThirdParty/FreeRTOS/tasks.c **** 
4034:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
4035:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4036:ThirdParty/FreeRTOS/tasks.c **** 
4037:ThirdParty/FreeRTOS/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
4038:ThirdParty/FreeRTOS/tasks.c **** 
4039:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskGetSchedulerState( void )
4040:ThirdParty/FreeRTOS/tasks.c ****     {
4041:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
4042:ThirdParty/FreeRTOS/tasks.c **** 
4043:ThirdParty/FreeRTOS/tasks.c ****         if( xSchedulerRunning == pdFALSE )
4044:ThirdParty/FreeRTOS/tasks.c ****         {
4045:ThirdParty/FreeRTOS/tasks.c ****             xReturn = taskSCHEDULER_NOT_STARTED;
4046:ThirdParty/FreeRTOS/tasks.c ****         }
4047:ThirdParty/FreeRTOS/tasks.c ****         else
4048:ThirdParty/FreeRTOS/tasks.c ****         {
4049:ThirdParty/FreeRTOS/tasks.c ****             if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4050:ThirdParty/FreeRTOS/tasks.c ****             {
4051:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = taskSCHEDULER_RUNNING;
4052:ThirdParty/FreeRTOS/tasks.c ****             }
4053:ThirdParty/FreeRTOS/tasks.c ****             else
4054:ThirdParty/FreeRTOS/tasks.c ****             {
4055:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = taskSCHEDULER_SUSPENDED;
4056:ThirdParty/FreeRTOS/tasks.c ****             }
4057:ThirdParty/FreeRTOS/tasks.c ****         }
4058:ThirdParty/FreeRTOS/tasks.c **** 
4059:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
4060:ThirdParty/FreeRTOS/tasks.c ****     }
4061:ThirdParty/FreeRTOS/tasks.c **** 
4062:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4063:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4064:ThirdParty/FreeRTOS/tasks.c **** 
4065:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4066:ThirdParty/FreeRTOS/tasks.c **** 
4067:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4068:ThirdParty/FreeRTOS/tasks.c ****     {
4069:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4070:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
4071:ThirdParty/FreeRTOS/tasks.c **** 
4072:ThirdParty/FreeRTOS/tasks.c ****         /* If the mutex was given back by an interrupt while the queue was
4073:ThirdParty/FreeRTOS/tasks.c ****          * locked then the mutex holder might now be NULL.  _RB_ Is this still
4074:ThirdParty/FreeRTOS/tasks.c ****          * needed as interrupts can no longer use mutexes? */
4075:ThirdParty/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
4076:ThirdParty/FreeRTOS/tasks.c ****         {
4077:ThirdParty/FreeRTOS/tasks.c ****             /* If the holder of the mutex has a priority below the priority of
4078:ThirdParty/FreeRTOS/tasks.c ****              * the task attempting to obtain the mutex then it will temporarily
4079:ThirdParty/FreeRTOS/tasks.c ****              * inherit the priority of the task attempting to obtain the mutex. */
4080:ThirdParty/FreeRTOS/tasks.c ****             if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4081:ThirdParty/FreeRTOS/tasks.c ****             {
4082:ThirdParty/FreeRTOS/tasks.c ****                 /* Adjust the mutex holder state to account for its new
4083:ThirdParty/FreeRTOS/tasks.c ****                  * priority.  Only reset the event list item value if the value is
4084:ThirdParty/FreeRTOS/tasks.c ****                  * not being used for anything else. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 94


4085:ThirdParty/FreeRTOS/tasks.c ****                 if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_
4086:ThirdParty/FreeRTOS/tasks.c ****                 {
4087:ThirdParty/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) 
4088:ThirdParty/FreeRTOS/tasks.c ****                 }
4089:ThirdParty/FreeRTOS/tasks.c ****                 else
4090:ThirdParty/FreeRTOS/tasks.c ****                 {
4091:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4092:ThirdParty/FreeRTOS/tasks.c ****                 }
4093:ThirdParty/FreeRTOS/tasks.c **** 
4094:ThirdParty/FreeRTOS/tasks.c ****                 /* If the task being modified is in the ready state it will need
4095:ThirdParty/FreeRTOS/tasks.c ****                  * to be moved into a new list. */
4096:ThirdParty/FreeRTOS/tasks.c ****                 if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] )
4097:ThirdParty/FreeRTOS/tasks.c ****                 {
4098:ThirdParty/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 
4099:ThirdParty/FreeRTOS/tasks.c ****                     {
4100:ThirdParty/FreeRTOS/tasks.c ****                         /* It is known that the task is in its ready list so
4101:ThirdParty/FreeRTOS/tasks.c ****                          * there is no need to check again and the port level
4102:ThirdParty/FreeRTOS/tasks.c ****                          * reset macro can be called directly. */
4103:ThirdParty/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority 
4104:ThirdParty/FreeRTOS/tasks.c ****                     }
4105:ThirdParty/FreeRTOS/tasks.c ****                     else
4106:ThirdParty/FreeRTOS/tasks.c ****                     {
4107:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4108:ThirdParty/FreeRTOS/tasks.c ****                     }
4109:ThirdParty/FreeRTOS/tasks.c **** 
4110:ThirdParty/FreeRTOS/tasks.c ****                     /* Inherit the priority before being moved into the new list. */
4111:ThirdParty/FreeRTOS/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4112:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
4113:ThirdParty/FreeRTOS/tasks.c ****                 }
4114:ThirdParty/FreeRTOS/tasks.c ****                 else
4115:ThirdParty/FreeRTOS/tasks.c ****                 {
4116:ThirdParty/FreeRTOS/tasks.c ****                     /* Just inherit the priority. */
4117:ThirdParty/FreeRTOS/tasks.c ****                     pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4118:ThirdParty/FreeRTOS/tasks.c ****                 }
4119:ThirdParty/FreeRTOS/tasks.c **** 
4120:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4121:ThirdParty/FreeRTOS/tasks.c **** 
4122:ThirdParty/FreeRTOS/tasks.c ****                 /* Inheritance occurred. */
4123:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
4124:ThirdParty/FreeRTOS/tasks.c ****             }
4125:ThirdParty/FreeRTOS/tasks.c ****             else
4126:ThirdParty/FreeRTOS/tasks.c ****             {
4127:ThirdParty/FreeRTOS/tasks.c ****                 if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4128:ThirdParty/FreeRTOS/tasks.c ****                 {
4129:ThirdParty/FreeRTOS/tasks.c ****                     /* The base priority of the mutex holder is lower than the
4130:ThirdParty/FreeRTOS/tasks.c ****                      * priority of the task attempting to take the mutex, but the
4131:ThirdParty/FreeRTOS/tasks.c ****                      * current priority of the mutex holder is not lower than the
4132:ThirdParty/FreeRTOS/tasks.c ****                      * priority of the task attempting to take the mutex.
4133:ThirdParty/FreeRTOS/tasks.c ****                      * Therefore the mutex holder must have already inherited a
4134:ThirdParty/FreeRTOS/tasks.c ****                      * priority, but inheritance would have occurred if that had
4135:ThirdParty/FreeRTOS/tasks.c ****                      * not been the case. */
4136:ThirdParty/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
4137:ThirdParty/FreeRTOS/tasks.c ****                 }
4138:ThirdParty/FreeRTOS/tasks.c ****                 else
4139:ThirdParty/FreeRTOS/tasks.c ****                 {
4140:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4141:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 95


4142:ThirdParty/FreeRTOS/tasks.c ****             }
4143:ThirdParty/FreeRTOS/tasks.c ****         }
4144:ThirdParty/FreeRTOS/tasks.c ****         else
4145:ThirdParty/FreeRTOS/tasks.c ****         {
4146:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4147:ThirdParty/FreeRTOS/tasks.c ****         }
4148:ThirdParty/FreeRTOS/tasks.c **** 
4149:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
4150:ThirdParty/FreeRTOS/tasks.c ****     }
4151:ThirdParty/FreeRTOS/tasks.c **** 
4152:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4153:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4154:ThirdParty/FreeRTOS/tasks.c **** 
4155:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4156:ThirdParty/FreeRTOS/tasks.c **** 
4157:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4158:ThirdParty/FreeRTOS/tasks.c ****     {
4159:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4160:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
4161:ThirdParty/FreeRTOS/tasks.c **** 
4162:ThirdParty/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
4163:ThirdParty/FreeRTOS/tasks.c ****         {
4164:ThirdParty/FreeRTOS/tasks.c ****             /* A task can only have an inherited priority if it holds the mutex.
4165:ThirdParty/FreeRTOS/tasks.c ****              * If the mutex is held by a task then it cannot be given from an
4166:ThirdParty/FreeRTOS/tasks.c ****              * interrupt, and if a mutex is given by the holding task then it must
4167:ThirdParty/FreeRTOS/tasks.c ****              * be the running state task. */
4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB == pxCurrentTCB );
4169:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4170:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
4171:ThirdParty/FreeRTOS/tasks.c **** 
4172:ThirdParty/FreeRTOS/tasks.c ****             /* Has the holder of the mutex inherited the priority of another
4173:ThirdParty/FreeRTOS/tasks.c ****              * task? */
4174:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4175:ThirdParty/FreeRTOS/tasks.c ****             {
4176:ThirdParty/FreeRTOS/tasks.c ****                 /* Only disinherit if no other mutexes are held. */
4177:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4178:ThirdParty/FreeRTOS/tasks.c ****                 {
4179:ThirdParty/FreeRTOS/tasks.c ****                     /* A task can only have an inherited priority if it holds
4180:ThirdParty/FreeRTOS/tasks.c ****                      * the mutex.  If the mutex is held by a task then it cannot be
4181:ThirdParty/FreeRTOS/tasks.c ****                      * given from an interrupt, and if a mutex is given by the
4182:ThirdParty/FreeRTOS/tasks.c ****                      * holding task then it must be the running state task.  Remove
4183:ThirdParty/FreeRTOS/tasks.c ****                      * the holding task from the ready list. */
4184:ThirdParty/FreeRTOS/tasks.c ****                     if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4185:ThirdParty/FreeRTOS/tasks.c ****                     {
4186:ThirdParty/FreeRTOS/tasks.c ****                         portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4187:ThirdParty/FreeRTOS/tasks.c ****                     }
4188:ThirdParty/FreeRTOS/tasks.c ****                     else
4189:ThirdParty/FreeRTOS/tasks.c ****                     {
4190:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4191:ThirdParty/FreeRTOS/tasks.c ****                     }
4192:ThirdParty/FreeRTOS/tasks.c **** 
4193:ThirdParty/FreeRTOS/tasks.c ****                     /* Disinherit the priority before adding the task into the
4194:ThirdParty/FreeRTOS/tasks.c ****                      * new  ready list. */
4195:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4196:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = pxTCB->uxBasePriority;
4197:ThirdParty/FreeRTOS/tasks.c **** 
4198:ThirdParty/FreeRTOS/tasks.c ****                     /* Reset the event list item value.  It cannot be in use for
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 96


4199:ThirdParty/FreeRTOS/tasks.c ****                      * any other purpose if this task is running, and it must be
4200:ThirdParty/FreeRTOS/tasks.c ****                      * running to give back the mutex. */
4201:ThirdParty/FreeRTOS/tasks.c ****                     listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_P
4202:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
4203:ThirdParty/FreeRTOS/tasks.c **** 
4204:ThirdParty/FreeRTOS/tasks.c ****                     /* Return true to indicate that a context switch is required.
4205:ThirdParty/FreeRTOS/tasks.c ****                      * This is only actually required in the corner case whereby
4206:ThirdParty/FreeRTOS/tasks.c ****                      * multiple mutexes were held and the mutexes were given back
4207:ThirdParty/FreeRTOS/tasks.c ****                      * in an order different to that in which they were taken.
4208:ThirdParty/FreeRTOS/tasks.c ****                      * If a context switch did not occur when the first mutex was
4209:ThirdParty/FreeRTOS/tasks.c ****                      * returned, even if a task was waiting on it, then a context
4210:ThirdParty/FreeRTOS/tasks.c ****                      * switch should occur when the last mutex is returned whether
4211:ThirdParty/FreeRTOS/tasks.c ****                      * a task is waiting on it or not. */
4212:ThirdParty/FreeRTOS/tasks.c ****                     xReturn = pdTRUE;
4213:ThirdParty/FreeRTOS/tasks.c ****                 }
4214:ThirdParty/FreeRTOS/tasks.c ****                 else
4215:ThirdParty/FreeRTOS/tasks.c ****                 {
4216:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4217:ThirdParty/FreeRTOS/tasks.c ****                 }
4218:ThirdParty/FreeRTOS/tasks.c ****             }
4219:ThirdParty/FreeRTOS/tasks.c ****             else
4220:ThirdParty/FreeRTOS/tasks.c ****             {
4221:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4222:ThirdParty/FreeRTOS/tasks.c ****             }
4223:ThirdParty/FreeRTOS/tasks.c ****         }
4224:ThirdParty/FreeRTOS/tasks.c ****         else
4225:ThirdParty/FreeRTOS/tasks.c ****         {
4226:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4227:ThirdParty/FreeRTOS/tasks.c ****         }
4228:ThirdParty/FreeRTOS/tasks.c **** 
4229:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
4230:ThirdParty/FreeRTOS/tasks.c ****     }
4231:ThirdParty/FreeRTOS/tasks.c **** 
4232:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4233:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4234:ThirdParty/FreeRTOS/tasks.c **** 
4235:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4236:ThirdParty/FreeRTOS/tasks.c **** 
4237:ThirdParty/FreeRTOS/tasks.c ****     void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder,
4238:ThirdParty/FreeRTOS/tasks.c ****                                               UBaseType_t uxHighestPriorityWaitingTask )
4239:ThirdParty/FreeRTOS/tasks.c ****     {
4240:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
4241:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4242:ThirdParty/FreeRTOS/tasks.c ****         const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4243:ThirdParty/FreeRTOS/tasks.c **** 
4244:ThirdParty/FreeRTOS/tasks.c ****         if( pxMutexHolder != NULL )
4245:ThirdParty/FreeRTOS/tasks.c ****         {
4246:ThirdParty/FreeRTOS/tasks.c ****             /* If pxMutexHolder is not NULL then the holder must hold at least
4247:ThirdParty/FreeRTOS/tasks.c ****              * one mutex. */
4248:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
4249:ThirdParty/FreeRTOS/tasks.c **** 
4250:ThirdParty/FreeRTOS/tasks.c ****             /* Determine the priority to which the priority of the task that
4251:ThirdParty/FreeRTOS/tasks.c ****              * holds the mutex should be set.  This will be the greater of the
4252:ThirdParty/FreeRTOS/tasks.c ****              * holding task's base priority and the priority of the highest
4253:ThirdParty/FreeRTOS/tasks.c ****              * priority task that is waiting to obtain the mutex. */
4254:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4255:ThirdParty/FreeRTOS/tasks.c ****             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 97


4256:ThirdParty/FreeRTOS/tasks.c ****                 uxPriorityToUse = uxHighestPriorityWaitingTask;
4257:ThirdParty/FreeRTOS/tasks.c ****             }
4258:ThirdParty/FreeRTOS/tasks.c ****             else
4259:ThirdParty/FreeRTOS/tasks.c ****             {
4260:ThirdParty/FreeRTOS/tasks.c ****                 uxPriorityToUse = pxTCB->uxBasePriority;
4261:ThirdParty/FreeRTOS/tasks.c ****             }
4262:ThirdParty/FreeRTOS/tasks.c **** 
4263:ThirdParty/FreeRTOS/tasks.c ****             /* Does the priority need to change? */
4264:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB->uxPriority != uxPriorityToUse )
4265:ThirdParty/FreeRTOS/tasks.c ****             {
4266:ThirdParty/FreeRTOS/tasks.c ****                 /* Only disinherit if no other mutexes are held.  This is a
4267:ThirdParty/FreeRTOS/tasks.c ****                  * simplification in the priority inheritance implementation.  If
4268:ThirdParty/FreeRTOS/tasks.c ****                  * the task that holds the mutex is also holding other mutexes then
4269:ThirdParty/FreeRTOS/tasks.c ****                  * the other mutexes may have caused the priority inheritance. */
4270:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4271:ThirdParty/FreeRTOS/tasks.c ****                 {
4272:ThirdParty/FreeRTOS/tasks.c ****                     /* If a task has timed out because it already holds the
4273:ThirdParty/FreeRTOS/tasks.c ****                      * mutex it was trying to obtain then it cannot of inherited
4274:ThirdParty/FreeRTOS/tasks.c ****                      * its own priority. */
4275:ThirdParty/FreeRTOS/tasks.c ****                     configASSERT( pxTCB != pxCurrentTCB );
4276:ThirdParty/FreeRTOS/tasks.c **** 
4277:ThirdParty/FreeRTOS/tasks.c ****                     /* Disinherit the priority, remembering the previous
4278:ThirdParty/FreeRTOS/tasks.c ****                      * priority to facilitate determining the subject task's
4279:ThirdParty/FreeRTOS/tasks.c ****                      * state. */
4280:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_PRIORITY_DISINHERIT( pxTCB, uxPriorityToUse );
4281:ThirdParty/FreeRTOS/tasks.c ****                     uxPriorityUsedOnEntry = pxTCB->uxPriority;
4282:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxPriorityToUse;
4283:ThirdParty/FreeRTOS/tasks.c **** 
4284:ThirdParty/FreeRTOS/tasks.c ****                     /* Only reset the event list item value if the value is not
4285:ThirdParty/FreeRTOS/tasks.c ****                      * being used for anything else. */
4286:ThirdParty/FreeRTOS/tasks.c ****                     if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_IT
4287:ThirdParty/FreeRTOS/tasks.c ****                     {
4288:ThirdParty/FreeRTOS/tasks.c ****                         listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configM
4289:ThirdParty/FreeRTOS/tasks.c ****                     }
4290:ThirdParty/FreeRTOS/tasks.c ****                     else
4291:ThirdParty/FreeRTOS/tasks.c ****                     {
4292:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4293:ThirdParty/FreeRTOS/tasks.c ****                     }
4294:ThirdParty/FreeRTOS/tasks.c **** 
4295:ThirdParty/FreeRTOS/tasks.c ****                     /* If the running task is not the task that holds the mutex
4296:ThirdParty/FreeRTOS/tasks.c ****                      * then the task that holds the mutex could be in either the
4297:ThirdParty/FreeRTOS/tasks.c ****                      * Ready, Blocked or Suspended states.  Only remove the task
4298:ThirdParty/FreeRTOS/tasks.c ****                      * from its current state list if it is in the Ready state as
4299:ThirdParty/FreeRTOS/tasks.c ****                      * the task's priority is going to change and there is one
4300:ThirdParty/FreeRTOS/tasks.c ****                      * Ready list per priority. */
4301:ThirdParty/FreeRTOS/tasks.c ****                     if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &
4302:ThirdParty/FreeRTOS/tasks.c ****                     {
4303:ThirdParty/FreeRTOS/tasks.c ****                         if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4304:ThirdParty/FreeRTOS/tasks.c ****                         {
4305:ThirdParty/FreeRTOS/tasks.c ****                             /* It is known that the task is in its ready list so
4306:ThirdParty/FreeRTOS/tasks.c ****                              * there is no need to check again and the port level
4307:ThirdParty/FreeRTOS/tasks.c ****                              * reset macro can be called directly. */
4308:ThirdParty/FreeRTOS/tasks.c ****                             portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4309:ThirdParty/FreeRTOS/tasks.c ****                         }
4310:ThirdParty/FreeRTOS/tasks.c ****                         else
4311:ThirdParty/FreeRTOS/tasks.c ****                         {
4312:ThirdParty/FreeRTOS/tasks.c ****                             mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 98


4313:ThirdParty/FreeRTOS/tasks.c ****                         }
4314:ThirdParty/FreeRTOS/tasks.c **** 
4315:ThirdParty/FreeRTOS/tasks.c ****                         prvAddTaskToReadyList( pxTCB );
4316:ThirdParty/FreeRTOS/tasks.c ****                     }
4317:ThirdParty/FreeRTOS/tasks.c ****                     else
4318:ThirdParty/FreeRTOS/tasks.c ****                     {
4319:ThirdParty/FreeRTOS/tasks.c ****                         mtCOVERAGE_TEST_MARKER();
4320:ThirdParty/FreeRTOS/tasks.c ****                     }
4321:ThirdParty/FreeRTOS/tasks.c ****                 }
4322:ThirdParty/FreeRTOS/tasks.c ****                 else
4323:ThirdParty/FreeRTOS/tasks.c ****                 {
4324:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4325:ThirdParty/FreeRTOS/tasks.c ****                 }
4326:ThirdParty/FreeRTOS/tasks.c ****             }
4327:ThirdParty/FreeRTOS/tasks.c ****             else
4328:ThirdParty/FreeRTOS/tasks.c ****             {
4329:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4330:ThirdParty/FreeRTOS/tasks.c ****             }
4331:ThirdParty/FreeRTOS/tasks.c ****         }
4332:ThirdParty/FreeRTOS/tasks.c ****         else
4333:ThirdParty/FreeRTOS/tasks.c ****         {
4334:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4335:ThirdParty/FreeRTOS/tasks.c ****         }
4336:ThirdParty/FreeRTOS/tasks.c ****     }
4337:ThirdParty/FreeRTOS/tasks.c **** 
4338:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4339:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4340:ThirdParty/FreeRTOS/tasks.c **** 
4341:ThirdParty/FreeRTOS/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4342:ThirdParty/FreeRTOS/tasks.c **** 
4343:ThirdParty/FreeRTOS/tasks.c ****     void vTaskEnterCritical( void )
4344:ThirdParty/FreeRTOS/tasks.c ****     {
4345:ThirdParty/FreeRTOS/tasks.c ****         portDISABLE_INTERRUPTS();
4346:ThirdParty/FreeRTOS/tasks.c **** 
4347:ThirdParty/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4348:ThirdParty/FreeRTOS/tasks.c ****         {
4349:ThirdParty/FreeRTOS/tasks.c ****             ( pxCurrentTCB->uxCriticalNesting )++;
4350:ThirdParty/FreeRTOS/tasks.c **** 
4351:ThirdParty/FreeRTOS/tasks.c ****             /* This is not the interrupt safe version of the enter critical
4352:ThirdParty/FreeRTOS/tasks.c ****              * function so  assert() if it is being called from an interrupt
4353:ThirdParty/FreeRTOS/tasks.c ****              * context.  Only API functions that end in "FromISR" can be used in an
4354:ThirdParty/FreeRTOS/tasks.c ****              * interrupt.  Only assert if the critical nesting count is 1 to
4355:ThirdParty/FreeRTOS/tasks.c ****              * protect against recursive calls if the assert function also uses a
4356:ThirdParty/FreeRTOS/tasks.c ****              * critical section. */
4357:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting == 1 )
4358:ThirdParty/FreeRTOS/tasks.c ****             {
4359:ThirdParty/FreeRTOS/tasks.c ****                 portASSERT_IF_IN_ISR();
4360:ThirdParty/FreeRTOS/tasks.c ****             }
4361:ThirdParty/FreeRTOS/tasks.c ****         }
4362:ThirdParty/FreeRTOS/tasks.c ****         else
4363:ThirdParty/FreeRTOS/tasks.c ****         {
4364:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4365:ThirdParty/FreeRTOS/tasks.c ****         }
4366:ThirdParty/FreeRTOS/tasks.c ****     }
4367:ThirdParty/FreeRTOS/tasks.c **** 
4368:ThirdParty/FreeRTOS/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4369:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 99


4370:ThirdParty/FreeRTOS/tasks.c **** 
4371:ThirdParty/FreeRTOS/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4372:ThirdParty/FreeRTOS/tasks.c **** 
4373:ThirdParty/FreeRTOS/tasks.c ****     void vTaskExitCritical( void )
4374:ThirdParty/FreeRTOS/tasks.c ****     {
4375:ThirdParty/FreeRTOS/tasks.c ****         if( xSchedulerRunning != pdFALSE )
4376:ThirdParty/FreeRTOS/tasks.c ****         {
4377:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->uxCriticalNesting > 0U )
4378:ThirdParty/FreeRTOS/tasks.c ****             {
4379:ThirdParty/FreeRTOS/tasks.c ****                 ( pxCurrentTCB->uxCriticalNesting )--;
4380:ThirdParty/FreeRTOS/tasks.c **** 
4381:ThirdParty/FreeRTOS/tasks.c ****                 if( pxCurrentTCB->uxCriticalNesting == 0U )
4382:ThirdParty/FreeRTOS/tasks.c ****                 {
4383:ThirdParty/FreeRTOS/tasks.c ****                     portENABLE_INTERRUPTS();
4384:ThirdParty/FreeRTOS/tasks.c ****                 }
4385:ThirdParty/FreeRTOS/tasks.c ****                 else
4386:ThirdParty/FreeRTOS/tasks.c ****                 {
4387:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4388:ThirdParty/FreeRTOS/tasks.c ****                 }
4389:ThirdParty/FreeRTOS/tasks.c ****             }
4390:ThirdParty/FreeRTOS/tasks.c ****             else
4391:ThirdParty/FreeRTOS/tasks.c ****             {
4392:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4393:ThirdParty/FreeRTOS/tasks.c ****             }
4394:ThirdParty/FreeRTOS/tasks.c ****         }
4395:ThirdParty/FreeRTOS/tasks.c ****         else
4396:ThirdParty/FreeRTOS/tasks.c ****         {
4397:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4398:ThirdParty/FreeRTOS/tasks.c ****         }
4399:ThirdParty/FreeRTOS/tasks.c ****     }
4400:ThirdParty/FreeRTOS/tasks.c **** 
4401:ThirdParty/FreeRTOS/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4402:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4403:ThirdParty/FreeRTOS/tasks.c **** 
4404:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 )
4405:ThirdParty/FreeRTOS/tasks.c **** 
4406:ThirdParty/FreeRTOS/tasks.c ****     static char * prvWriteNameToBuffer( char * pcBuffer,
4407:ThirdParty/FreeRTOS/tasks.c ****                                         const char * pcTaskName )
4408:ThirdParty/FreeRTOS/tasks.c ****     {
4409:ThirdParty/FreeRTOS/tasks.c ****         size_t x;
4410:ThirdParty/FreeRTOS/tasks.c **** 
4411:ThirdParty/FreeRTOS/tasks.c ****         /* Start by copying the entire string. */
4412:ThirdParty/FreeRTOS/tasks.c ****         strcpy( pcBuffer, pcTaskName );
4413:ThirdParty/FreeRTOS/tasks.c **** 
4414:ThirdParty/FreeRTOS/tasks.c ****         /* Pad the end of the string with spaces to ensure columns line up when
4415:ThirdParty/FreeRTOS/tasks.c ****          * printed out. */
4416:ThirdParty/FreeRTOS/tasks.c ****         for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4417:ThirdParty/FreeRTOS/tasks.c ****         {
4418:ThirdParty/FreeRTOS/tasks.c ****             pcBuffer[ x ] = ' ';
4419:ThirdParty/FreeRTOS/tasks.c ****         }
4420:ThirdParty/FreeRTOS/tasks.c **** 
4421:ThirdParty/FreeRTOS/tasks.c ****         /* Terminate. */
4422:ThirdParty/FreeRTOS/tasks.c ****         pcBuffer[ x ] = ( char ) 0x00;
4423:ThirdParty/FreeRTOS/tasks.c **** 
4424:ThirdParty/FreeRTOS/tasks.c ****         /* Return the new end of string. */
4425:ThirdParty/FreeRTOS/tasks.c ****         return &( pcBuffer[ x ] );
4426:ThirdParty/FreeRTOS/tasks.c ****     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 100


4427:ThirdParty/FreeRTOS/tasks.c **** 
4428:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4429:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4430:ThirdParty/FreeRTOS/tasks.c **** 
4431:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4432:ThirdParty/FreeRTOS/tasks.c **** 
4433:ThirdParty/FreeRTOS/tasks.c ****     void vTaskList( char * pcWriteBuffer )
4434:ThirdParty/FreeRTOS/tasks.c ****     {
4435:ThirdParty/FreeRTOS/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4436:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxArraySize, x;
4437:ThirdParty/FreeRTOS/tasks.c ****         char cStatus;
4438:ThirdParty/FreeRTOS/tasks.c **** 
4439:ThirdParty/FreeRTOS/tasks.c ****         /*
4440:ThirdParty/FreeRTOS/tasks.c ****          * PLEASE NOTE:
4441:ThirdParty/FreeRTOS/tasks.c ****          *
4442:ThirdParty/FreeRTOS/tasks.c ****          * This function is provided for convenience only, and is used by many
4443:ThirdParty/FreeRTOS/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4444:ThirdParty/FreeRTOS/tasks.c ****          * scheduler.
4445:ThirdParty/FreeRTOS/tasks.c ****          *
4446:ThirdParty/FreeRTOS/tasks.c ****          * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4447:ThirdParty/FreeRTOS/tasks.c ****          * uxTaskGetSystemState() output into a human readable table that
4448:ThirdParty/FreeRTOS/tasks.c ****          * displays task: names, states, priority, stack usage and task number.
4449:ThirdParty/FreeRTOS/tasks.c ****          * Stack usage specified as the number of unused StackType_t words stack can hold
4450:ThirdParty/FreeRTOS/tasks.c ****          * on top of stack - not the number of bytes.
4451:ThirdParty/FreeRTOS/tasks.c ****          *
4452:ThirdParty/FreeRTOS/tasks.c ****          * vTaskList() has a dependency on the sprintf() C library function that
4453:ThirdParty/FreeRTOS/tasks.c ****          * might bloat the code size, use a lot of stack, and provide different
4454:ThirdParty/FreeRTOS/tasks.c ****          * results on different platforms.  An alternative, tiny, third party,
4455:ThirdParty/FreeRTOS/tasks.c ****          * and limited functionality implementation of sprintf() is provided in
4456:ThirdParty/FreeRTOS/tasks.c ****          * many of the FreeRTOS/Demo sub-directories in a file called
4457:ThirdParty/FreeRTOS/tasks.c ****          * printf-stdarg.c (note printf-stdarg.c does not provide a full
4458:ThirdParty/FreeRTOS/tasks.c ****          * snprintf() implementation!).
4459:ThirdParty/FreeRTOS/tasks.c ****          *
4460:ThirdParty/FreeRTOS/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4461:ThirdParty/FreeRTOS/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4462:ThirdParty/FreeRTOS/tasks.c ****          * through a call to vTaskList().
4463:ThirdParty/FreeRTOS/tasks.c ****          */
4464:ThirdParty/FreeRTOS/tasks.c **** 
4465:ThirdParty/FreeRTOS/tasks.c **** 
4466:ThirdParty/FreeRTOS/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4467:ThirdParty/FreeRTOS/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4468:ThirdParty/FreeRTOS/tasks.c **** 
4469:ThirdParty/FreeRTOS/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4470:ThirdParty/FreeRTOS/tasks.c ****          * function is executing. */
4471:ThirdParty/FreeRTOS/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4472:ThirdParty/FreeRTOS/tasks.c **** 
4473:ThirdParty/FreeRTOS/tasks.c ****         /* Allocate an array index for each task.  NOTE!  if
4474:ThirdParty/FreeRTOS/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4475:ThirdParty/FreeRTOS/tasks.c ****          * equate to NULL. */
4476:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4477:ThirdParty/FreeRTOS/tasks.c **** 
4478:ThirdParty/FreeRTOS/tasks.c ****         if( pxTaskStatusArray != NULL )
4479:ThirdParty/FreeRTOS/tasks.c ****         {
4480:ThirdParty/FreeRTOS/tasks.c ****             /* Generate the (binary) data. */
4481:ThirdParty/FreeRTOS/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4482:ThirdParty/FreeRTOS/tasks.c **** 
4483:ThirdParty/FreeRTOS/tasks.c ****             /* Create a human readable table from the binary data. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 101


4484:ThirdParty/FreeRTOS/tasks.c ****             for( x = 0; x < uxArraySize; x++ )
4485:ThirdParty/FreeRTOS/tasks.c ****             {
4486:ThirdParty/FreeRTOS/tasks.c ****                 switch( pxTaskStatusArray[ x ].eCurrentState )
4487:ThirdParty/FreeRTOS/tasks.c ****                 {
4488:ThirdParty/FreeRTOS/tasks.c ****                     case eRunning:
4489:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = tskRUNNING_CHAR;
4490:ThirdParty/FreeRTOS/tasks.c ****                         break;
4491:ThirdParty/FreeRTOS/tasks.c **** 
4492:ThirdParty/FreeRTOS/tasks.c ****                     case eReady:
4493:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = tskREADY_CHAR;
4494:ThirdParty/FreeRTOS/tasks.c ****                         break;
4495:ThirdParty/FreeRTOS/tasks.c **** 
4496:ThirdParty/FreeRTOS/tasks.c ****                     case eBlocked:
4497:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = tskBLOCKED_CHAR;
4498:ThirdParty/FreeRTOS/tasks.c ****                         break;
4499:ThirdParty/FreeRTOS/tasks.c **** 
4500:ThirdParty/FreeRTOS/tasks.c ****                     case eSuspended:
4501:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = tskSUSPENDED_CHAR;
4502:ThirdParty/FreeRTOS/tasks.c ****                         break;
4503:ThirdParty/FreeRTOS/tasks.c **** 
4504:ThirdParty/FreeRTOS/tasks.c ****                     case eDeleted:
4505:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = tskDELETED_CHAR;
4506:ThirdParty/FreeRTOS/tasks.c ****                         break;
4507:ThirdParty/FreeRTOS/tasks.c **** 
4508:ThirdParty/FreeRTOS/tasks.c ****                     case eInvalid: /* Fall through. */
4509:ThirdParty/FreeRTOS/tasks.c ****                     default:       /* Should not get here, but it is included
4510:ThirdParty/FreeRTOS/tasks.c ****                                     * to prevent static checking errors. */
4511:ThirdParty/FreeRTOS/tasks.c ****                         cStatus = ( char ) 0x00;
4512:ThirdParty/FreeRTOS/tasks.c ****                         break;
4513:ThirdParty/FreeRTOS/tasks.c ****                 }
4514:ThirdParty/FreeRTOS/tasks.c **** 
4515:ThirdParty/FreeRTOS/tasks.c ****                 /* Write the task name to the string, padding with spaces so it
4516:ThirdParty/FreeRTOS/tasks.c ****                  * can be printed in tabular form more easily. */
4517:ThirdParty/FreeRTOS/tasks.c ****                 pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskN
4518:ThirdParty/FreeRTOS/tasks.c **** 
4519:ThirdParty/FreeRTOS/tasks.c ****                 /* Write the rest of the string. */
4520:ThirdParty/FreeRTOS/tasks.c ****                 sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskSta
4521:ThirdParty/FreeRTOS/tasks.c ****                 pcWriteBuffer += strlen( pcWriteBuffer );                                          
4522:ThirdParty/FreeRTOS/tasks.c ****             }
4523:ThirdParty/FreeRTOS/tasks.c **** 
4524:ThirdParty/FreeRTOS/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4525:ThirdParty/FreeRTOS/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4526:ThirdParty/FreeRTOS/tasks.c ****             vPortFree( pxTaskStatusArray );
4527:ThirdParty/FreeRTOS/tasks.c ****         }
4528:ThirdParty/FreeRTOS/tasks.c ****         else
4529:ThirdParty/FreeRTOS/tasks.c ****         {
4530:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4531:ThirdParty/FreeRTOS/tasks.c ****         }
4532:ThirdParty/FreeRTOS/tasks.c ****     }
4533:ThirdParty/FreeRTOS/tasks.c **** 
4534:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4535:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
4536:ThirdParty/FreeRTOS/tasks.c **** 
4537:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4538:ThirdParty/FreeRTOS/tasks.c **** 
4539:ThirdParty/FreeRTOS/tasks.c ****     void vTaskGetRunTimeStats( char * pcWriteBuffer )
4540:ThirdParty/FreeRTOS/tasks.c ****     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 102


4541:ThirdParty/FreeRTOS/tasks.c ****         TaskStatus_t * pxTaskStatusArray;
4542:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxArraySize, x;
4543:ThirdParty/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulTotalTime, ulStatsAsPercentage;
4544:ThirdParty/FreeRTOS/tasks.c **** 
4545:ThirdParty/FreeRTOS/tasks.c ****         /*
4546:ThirdParty/FreeRTOS/tasks.c ****          * PLEASE NOTE:
4547:ThirdParty/FreeRTOS/tasks.c ****          *
4548:ThirdParty/FreeRTOS/tasks.c ****          * This function is provided for convenience only, and is used by many
4549:ThirdParty/FreeRTOS/tasks.c ****          * of the demo applications.  Do not consider it to be part of the
4550:ThirdParty/FreeRTOS/tasks.c ****          * scheduler.
4551:ThirdParty/FreeRTOS/tasks.c ****          *
4552:ThirdParty/FreeRTOS/tasks.c ****          * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4553:ThirdParty/FreeRTOS/tasks.c ****          * of the uxTaskGetSystemState() output into a human readable table that
4554:ThirdParty/FreeRTOS/tasks.c ****          * displays the amount of time each task has spent in the Running state
4555:ThirdParty/FreeRTOS/tasks.c ****          * in both absolute and percentage terms.
4556:ThirdParty/FreeRTOS/tasks.c ****          *
4557:ThirdParty/FreeRTOS/tasks.c ****          * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4558:ThirdParty/FreeRTOS/tasks.c ****          * function that might bloat the code size, use a lot of stack, and
4559:ThirdParty/FreeRTOS/tasks.c ****          * provide different results on different platforms.  An alternative,
4560:ThirdParty/FreeRTOS/tasks.c ****          * tiny, third party, and limited functionality implementation of
4561:ThirdParty/FreeRTOS/tasks.c ****          * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4562:ThirdParty/FreeRTOS/tasks.c ****          * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4563:ThirdParty/FreeRTOS/tasks.c ****          * a full snprintf() implementation!).
4564:ThirdParty/FreeRTOS/tasks.c ****          *
4565:ThirdParty/FreeRTOS/tasks.c ****          * It is recommended that production systems call uxTaskGetSystemState()
4566:ThirdParty/FreeRTOS/tasks.c ****          * directly to get access to raw stats data, rather than indirectly
4567:ThirdParty/FreeRTOS/tasks.c ****          * through a call to vTaskGetRunTimeStats().
4568:ThirdParty/FreeRTOS/tasks.c ****          */
4569:ThirdParty/FreeRTOS/tasks.c **** 
4570:ThirdParty/FreeRTOS/tasks.c ****         /* Make sure the write buffer does not contain a string. */
4571:ThirdParty/FreeRTOS/tasks.c ****         *pcWriteBuffer = ( char ) 0x00;
4572:ThirdParty/FreeRTOS/tasks.c **** 
4573:ThirdParty/FreeRTOS/tasks.c ****         /* Take a snapshot of the number of tasks in case it changes while this
4574:ThirdParty/FreeRTOS/tasks.c ****          * function is executing. */
4575:ThirdParty/FreeRTOS/tasks.c ****         uxArraySize = uxCurrentNumberOfTasks;
4576:ThirdParty/FreeRTOS/tasks.c **** 
4577:ThirdParty/FreeRTOS/tasks.c ****         /* Allocate an array index for each task.  NOTE!  If
4578:ThirdParty/FreeRTOS/tasks.c ****          * configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4579:ThirdParty/FreeRTOS/tasks.c ****          * equate to NULL. */
4580:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint
4581:ThirdParty/FreeRTOS/tasks.c **** 
4582:ThirdParty/FreeRTOS/tasks.c ****         if( pxTaskStatusArray != NULL )
4583:ThirdParty/FreeRTOS/tasks.c ****         {
4584:ThirdParty/FreeRTOS/tasks.c ****             /* Generate the (binary) data. */
4585:ThirdParty/FreeRTOS/tasks.c ****             uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4586:ThirdParty/FreeRTOS/tasks.c **** 
4587:ThirdParty/FreeRTOS/tasks.c ****             /* For percentage calculations. */
4588:ThirdParty/FreeRTOS/tasks.c ****             ulTotalTime /= 100UL;
4589:ThirdParty/FreeRTOS/tasks.c **** 
4590:ThirdParty/FreeRTOS/tasks.c ****             /* Avoid divide by zero errors. */
4591:ThirdParty/FreeRTOS/tasks.c ****             if( ulTotalTime > 0UL )
4592:ThirdParty/FreeRTOS/tasks.c ****             {
4593:ThirdParty/FreeRTOS/tasks.c ****                 /* Create a human readable table from the binary data. */
4594:ThirdParty/FreeRTOS/tasks.c ****                 for( x = 0; x < uxArraySize; x++ )
4595:ThirdParty/FreeRTOS/tasks.c ****                 {
4596:ThirdParty/FreeRTOS/tasks.c ****                     /* What percentage of the total run time has the task used?
4597:ThirdParty/FreeRTOS/tasks.c ****                      * This will always be rounded down to the nearest integer.
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 103


4598:ThirdParty/FreeRTOS/tasks.c ****                      * ulTotalRunTime has already been divided by 100. */
4599:ThirdParty/FreeRTOS/tasks.c ****                     ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4600:ThirdParty/FreeRTOS/tasks.c **** 
4601:ThirdParty/FreeRTOS/tasks.c ****                     /* Write the task name to the string, padding with
4602:ThirdParty/FreeRTOS/tasks.c ****                      * spaces so it can be printed in tabular form more
4603:ThirdParty/FreeRTOS/tasks.c ****                      * easily. */
4604:ThirdParty/FreeRTOS/tasks.c ****                     pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcT
4605:ThirdParty/FreeRTOS/tasks.c **** 
4606:ThirdParty/FreeRTOS/tasks.c ****                     if( ulStatsAsPercentage > 0UL )
4607:ThirdParty/FreeRTOS/tasks.c ****                     {
4608:ThirdParty/FreeRTOS/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4609:ThirdParty/FreeRTOS/tasks.c ****                         {
4610:ThirdParty/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ul
4611:ThirdParty/FreeRTOS/tasks.c ****                         }
4612:ThirdParty/FreeRTOS/tasks.c ****                         #else
4613:ThirdParty/FreeRTOS/tasks.c ****                         {
4614:ThirdParty/FreeRTOS/tasks.c ****                             /* sizeof( int ) == sizeof( long ) so a smaller
4615:ThirdParty/FreeRTOS/tasks.c ****                              * printf() library can be used. */
4616:ThirdParty/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStat
4617:ThirdParty/FreeRTOS/tasks.c ****                         }
4618:ThirdParty/FreeRTOS/tasks.c ****                         #endif
4619:ThirdParty/FreeRTOS/tasks.c ****                     }
4620:ThirdParty/FreeRTOS/tasks.c ****                     else
4621:ThirdParty/FreeRTOS/tasks.c ****                     {
4622:ThirdParty/FreeRTOS/tasks.c ****                         /* If the percentage is zero here then the task has
4623:ThirdParty/FreeRTOS/tasks.c ****                          * consumed less than 1% of the total run time. */
4624:ThirdParty/FreeRTOS/tasks.c ****                         #ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4625:ThirdParty/FreeRTOS/tasks.c ****                         {
4626:ThirdParty/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulR
4627:ThirdParty/FreeRTOS/tasks.c ****                         }
4628:ThirdParty/FreeRTOS/tasks.c ****                         #else
4629:ThirdParty/FreeRTOS/tasks.c ****                         {
4630:ThirdParty/FreeRTOS/tasks.c ****                             /* sizeof( int ) == sizeof( long ) so a smaller
4631:ThirdParty/FreeRTOS/tasks.c ****                              * printf() library can be used. */
4632:ThirdParty/FreeRTOS/tasks.c ****                             sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStat
4633:ThirdParty/FreeRTOS/tasks.c ****                         }
4634:ThirdParty/FreeRTOS/tasks.c ****                         #endif
4635:ThirdParty/FreeRTOS/tasks.c ****                     }
4636:ThirdParty/FreeRTOS/tasks.c **** 
4637:ThirdParty/FreeRTOS/tasks.c ****                     pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok o
4638:ThirdParty/FreeRTOS/tasks.c ****                 }
4639:ThirdParty/FreeRTOS/tasks.c ****             }
4640:ThirdParty/FreeRTOS/tasks.c ****             else
4641:ThirdParty/FreeRTOS/tasks.c ****             {
4642:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4643:ThirdParty/FreeRTOS/tasks.c ****             }
4644:ThirdParty/FreeRTOS/tasks.c **** 
4645:ThirdParty/FreeRTOS/tasks.c ****             /* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4646:ThirdParty/FreeRTOS/tasks.c ****              * is 0 then vPortFree() will be #defined to nothing. */
4647:ThirdParty/FreeRTOS/tasks.c ****             vPortFree( pxTaskStatusArray );
4648:ThirdParty/FreeRTOS/tasks.c ****         }
4649:ThirdParty/FreeRTOS/tasks.c ****         else
4650:ThirdParty/FreeRTOS/tasks.c ****         {
4651:ThirdParty/FreeRTOS/tasks.c ****             mtCOVERAGE_TEST_MARKER();
4652:ThirdParty/FreeRTOS/tasks.c ****         }
4653:ThirdParty/FreeRTOS/tasks.c ****     }
4654:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 104


4655:ThirdParty/FreeRTOS/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4656:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4657:ThirdParty/FreeRTOS/tasks.c **** 
4658:ThirdParty/FreeRTOS/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4659:ThirdParty/FreeRTOS/tasks.c **** {
4660:ThirdParty/FreeRTOS/tasks.c ****     TickType_t uxReturn;
4661:ThirdParty/FreeRTOS/tasks.c **** 
4662:ThirdParty/FreeRTOS/tasks.c ****     uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4663:ThirdParty/FreeRTOS/tasks.c **** 
4664:ThirdParty/FreeRTOS/tasks.c ****     /* Reset the event list item to its normal value - so it can be used with
4665:ThirdParty/FreeRTOS/tasks.c ****      * queues and semaphores. */
4666:ThirdParty/FreeRTOS/tasks.c ****     listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITI
4667:ThirdParty/FreeRTOS/tasks.c **** 
4668:ThirdParty/FreeRTOS/tasks.c ****     return uxReturn;
4669:ThirdParty/FreeRTOS/tasks.c **** }
4670:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4671:ThirdParty/FreeRTOS/tasks.c **** 
4672:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4673:ThirdParty/FreeRTOS/tasks.c **** 
4674:ThirdParty/FreeRTOS/tasks.c ****     TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4675:ThirdParty/FreeRTOS/tasks.c ****     {
4676:ThirdParty/FreeRTOS/tasks.c ****         /* If xSemaphoreCreateMutex() is called before any tasks have been created
4677:ThirdParty/FreeRTOS/tasks.c ****          * then pxCurrentTCB will be NULL. */
4678:ThirdParty/FreeRTOS/tasks.c ****         if( pxCurrentTCB != NULL )
4679:ThirdParty/FreeRTOS/tasks.c ****         {
4680:ThirdParty/FreeRTOS/tasks.c ****             ( pxCurrentTCB->uxMutexesHeld )++;
4681:ThirdParty/FreeRTOS/tasks.c ****         }
4682:ThirdParty/FreeRTOS/tasks.c **** 
4683:ThirdParty/FreeRTOS/tasks.c ****         return pxCurrentTCB;
4684:ThirdParty/FreeRTOS/tasks.c ****     }
4685:ThirdParty/FreeRTOS/tasks.c **** 
4686:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_MUTEXES */
4687:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4688:ThirdParty/FreeRTOS/tasks.c **** 
4689:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4690:ThirdParty/FreeRTOS/tasks.c **** 
4691:ThirdParty/FreeRTOS/tasks.c ****     uint32_t ulTaskGenericNotifyTake( UBaseType_t uxIndexToWait,
4692:ThirdParty/FreeRTOS/tasks.c ****                                       BaseType_t xClearCountOnExit,
4693:ThirdParty/FreeRTOS/tasks.c ****                                       TickType_t xTicksToWait )
4694:ThirdParty/FreeRTOS/tasks.c ****     {
4695:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulReturn;
4696:ThirdParty/FreeRTOS/tasks.c **** 
4697:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4698:ThirdParty/FreeRTOS/tasks.c **** 
4699:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4700:ThirdParty/FreeRTOS/tasks.c ****         {
4701:ThirdParty/FreeRTOS/tasks.c ****             /* Only block if the notification count is not already non-zero. */
4702:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] == 0UL )
4703:ThirdParty/FreeRTOS/tasks.c ****             {
4704:ThirdParty/FreeRTOS/tasks.c ****                 /* Mark this task as waiting for a notification. */
4705:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4706:ThirdParty/FreeRTOS/tasks.c **** 
4707:ThirdParty/FreeRTOS/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
4708:ThirdParty/FreeRTOS/tasks.c ****                 {
4709:ThirdParty/FreeRTOS/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4710:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
4711:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 105


4712:ThirdParty/FreeRTOS/tasks.c ****                     /* All ports are written to allow a yield in a critical
4713:ThirdParty/FreeRTOS/tasks.c ****                      * section (some will yield immediately, others wait until the
4714:ThirdParty/FreeRTOS/tasks.c ****                      * critical section exits) - but it is not something that
4715:ThirdParty/FreeRTOS/tasks.c ****                      * application code should ever do. */
4716:ThirdParty/FreeRTOS/tasks.c ****                     portYIELD_WITHIN_API();
4717:ThirdParty/FreeRTOS/tasks.c ****                 }
4718:ThirdParty/FreeRTOS/tasks.c ****                 else
4719:ThirdParty/FreeRTOS/tasks.c ****                 {
4720:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4721:ThirdParty/FreeRTOS/tasks.c ****                 }
4722:ThirdParty/FreeRTOS/tasks.c ****             }
4723:ThirdParty/FreeRTOS/tasks.c ****             else
4724:ThirdParty/FreeRTOS/tasks.c ****             {
4725:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4726:ThirdParty/FreeRTOS/tasks.c ****             }
4727:ThirdParty/FreeRTOS/tasks.c ****         }
4728:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4729:ThirdParty/FreeRTOS/tasks.c **** 
4730:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4731:ThirdParty/FreeRTOS/tasks.c ****         {
4732:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_TAKE( uxIndexToWait );
4733:ThirdParty/FreeRTOS/tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4734:ThirdParty/FreeRTOS/tasks.c **** 
4735:ThirdParty/FreeRTOS/tasks.c ****             if( ulReturn != 0UL )
4736:ThirdParty/FreeRTOS/tasks.c ****             {
4737:ThirdParty/FreeRTOS/tasks.c ****                 if( xClearCountOnExit != pdFALSE )
4738:ThirdParty/FreeRTOS/tasks.c ****                 {
4739:ThirdParty/FreeRTOS/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = 0UL;
4740:ThirdParty/FreeRTOS/tasks.c ****                 }
4741:ThirdParty/FreeRTOS/tasks.c ****                 else
4742:ThirdParty/FreeRTOS/tasks.c ****                 {
4743:ThirdParty/FreeRTOS/tasks.c ****                     pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] = ulReturn - ( uint32_t ) 1;
4744:ThirdParty/FreeRTOS/tasks.c ****                 }
4745:ThirdParty/FreeRTOS/tasks.c ****             }
4746:ThirdParty/FreeRTOS/tasks.c ****             else
4747:ThirdParty/FreeRTOS/tasks.c ****             {
4748:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4749:ThirdParty/FreeRTOS/tasks.c ****             }
4750:ThirdParty/FreeRTOS/tasks.c **** 
4751:ThirdParty/FreeRTOS/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4752:ThirdParty/FreeRTOS/tasks.c ****         }
4753:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4754:ThirdParty/FreeRTOS/tasks.c **** 
4755:ThirdParty/FreeRTOS/tasks.c ****         return ulReturn;
4756:ThirdParty/FreeRTOS/tasks.c ****     }
4757:ThirdParty/FreeRTOS/tasks.c **** 
4758:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4759:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4760:ThirdParty/FreeRTOS/tasks.c **** 
4761:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4762:ThirdParty/FreeRTOS/tasks.c **** 
4763:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyWait( UBaseType_t uxIndexToWait,
4764:ThirdParty/FreeRTOS/tasks.c ****                                        uint32_t ulBitsToClearOnEntry,
4765:ThirdParty/FreeRTOS/tasks.c ****                                        uint32_t ulBitsToClearOnExit,
4766:ThirdParty/FreeRTOS/tasks.c ****                                        uint32_t * pulNotificationValue,
4767:ThirdParty/FreeRTOS/tasks.c ****                                        TickType_t xTicksToWait )
4768:ThirdParty/FreeRTOS/tasks.c ****     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 106


4769:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
4770:ThirdParty/FreeRTOS/tasks.c **** 
4771:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToWait < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4772:ThirdParty/FreeRTOS/tasks.c **** 
4773:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4774:ThirdParty/FreeRTOS/tasks.c ****         {
4775:ThirdParty/FreeRTOS/tasks.c ****             /* Only block if a notification is not already pending. */
4776:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4777:ThirdParty/FreeRTOS/tasks.c ****             {
4778:ThirdParty/FreeRTOS/tasks.c ****                 /* Clear bits in the task's notification value as bits may get
4779:ThirdParty/FreeRTOS/tasks.c ****                  * set  by the notifying task or interrupt.  This can be used to
4780:ThirdParty/FreeRTOS/tasks.c ****                  * clear the value to zero. */
4781:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnEntry;
4782:ThirdParty/FreeRTOS/tasks.c **** 
4783:ThirdParty/FreeRTOS/tasks.c ****                 /* Mark this task as waiting for a notification. */
4784:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskWAITING_NOTIFICATION;
4785:ThirdParty/FreeRTOS/tasks.c **** 
4786:ThirdParty/FreeRTOS/tasks.c ****                 if( xTicksToWait > ( TickType_t ) 0 )
4787:ThirdParty/FreeRTOS/tasks.c ****                 {
4788:ThirdParty/FreeRTOS/tasks.c ****                     prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4789:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
4790:ThirdParty/FreeRTOS/tasks.c **** 
4791:ThirdParty/FreeRTOS/tasks.c ****                     /* All ports are written to allow a yield in a critical
4792:ThirdParty/FreeRTOS/tasks.c ****                      * section (some will yield immediately, others wait until the
4793:ThirdParty/FreeRTOS/tasks.c ****                      * critical section exits) - but it is not something that
4794:ThirdParty/FreeRTOS/tasks.c ****                      * application code should ever do. */
4795:ThirdParty/FreeRTOS/tasks.c ****                     portYIELD_WITHIN_API();
4796:ThirdParty/FreeRTOS/tasks.c ****                 }
4797:ThirdParty/FreeRTOS/tasks.c ****                 else
4798:ThirdParty/FreeRTOS/tasks.c ****                 {
4799:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4800:ThirdParty/FreeRTOS/tasks.c ****                 }
4801:ThirdParty/FreeRTOS/tasks.c ****             }
4802:ThirdParty/FreeRTOS/tasks.c ****             else
4803:ThirdParty/FreeRTOS/tasks.c ****             {
4804:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4805:ThirdParty/FreeRTOS/tasks.c ****             }
4806:ThirdParty/FreeRTOS/tasks.c ****         }
4807:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4808:ThirdParty/FreeRTOS/tasks.c **** 
4809:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4810:ThirdParty/FreeRTOS/tasks.c ****         {
4811:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_WAIT( uxIndexToWait );
4812:ThirdParty/FreeRTOS/tasks.c **** 
4813:ThirdParty/FreeRTOS/tasks.c ****             if( pulNotificationValue != NULL )
4814:ThirdParty/FreeRTOS/tasks.c ****             {
4815:ThirdParty/FreeRTOS/tasks.c ****                 /* Output the current notification value, which may or may not
4816:ThirdParty/FreeRTOS/tasks.c ****                  * have changed. */
4817:ThirdParty/FreeRTOS/tasks.c ****                 *pulNotificationValue = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
4818:ThirdParty/FreeRTOS/tasks.c ****             }
4819:ThirdParty/FreeRTOS/tasks.c **** 
4820:ThirdParty/FreeRTOS/tasks.c ****             /* If ucNotifyValue is set then either the task never entered the
4821:ThirdParty/FreeRTOS/tasks.c ****              * blocked state (because a notification was already pending) or the
4822:ThirdParty/FreeRTOS/tasks.c ****              * task unblocked because of a notification.  Otherwise the task
4823:ThirdParty/FreeRTOS/tasks.c ****              * unblocked because of a timeout. */
4824:ThirdParty/FreeRTOS/tasks.c ****             if( pxCurrentTCB->ucNotifyState[ uxIndexToWait ] != taskNOTIFICATION_RECEIVED )
4825:ThirdParty/FreeRTOS/tasks.c ****             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 107


4826:ThirdParty/FreeRTOS/tasks.c ****                 /* A notification was not received. */
4827:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdFALSE;
4828:ThirdParty/FreeRTOS/tasks.c ****             }
4829:ThirdParty/FreeRTOS/tasks.c ****             else
4830:ThirdParty/FreeRTOS/tasks.c ****             {
4831:ThirdParty/FreeRTOS/tasks.c ****                 /* A notification was already pending or a notification was
4832:ThirdParty/FreeRTOS/tasks.c ****                  * received while the task was waiting. */
4833:ThirdParty/FreeRTOS/tasks.c ****                 pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ] &= ~ulBitsToClearOnExit;
4834:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
4835:ThirdParty/FreeRTOS/tasks.c ****             }
4836:ThirdParty/FreeRTOS/tasks.c **** 
4837:ThirdParty/FreeRTOS/tasks.c ****             pxCurrentTCB->ucNotifyState[ uxIndexToWait ] = taskNOT_WAITING_NOTIFICATION;
4838:ThirdParty/FreeRTOS/tasks.c ****         }
4839:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4840:ThirdParty/FreeRTOS/tasks.c **** 
4841:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
4842:ThirdParty/FreeRTOS/tasks.c ****     }
4843:ThirdParty/FreeRTOS/tasks.c **** 
4844:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4845:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4846:ThirdParty/FreeRTOS/tasks.c **** 
4847:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4848:ThirdParty/FreeRTOS/tasks.c **** 
4849:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
4850:ThirdParty/FreeRTOS/tasks.c ****                                    UBaseType_t uxIndexToNotify,
4851:ThirdParty/FreeRTOS/tasks.c ****                                    uint32_t ulValue,
4852:ThirdParty/FreeRTOS/tasks.c ****                                    eNotifyAction eAction,
4853:ThirdParty/FreeRTOS/tasks.c ****                                    uint32_t * pulPreviousNotificationValue )
4854:ThirdParty/FreeRTOS/tasks.c ****     {
4855:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
4856:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
4857:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
4858:ThirdParty/FreeRTOS/tasks.c **** 
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4860:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
4861:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
4862:ThirdParty/FreeRTOS/tasks.c **** 
4863:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
4864:ThirdParty/FreeRTOS/tasks.c ****         {
4865:ThirdParty/FreeRTOS/tasks.c ****             if( pulPreviousNotificationValue != NULL )
4866:ThirdParty/FreeRTOS/tasks.c ****             {
4867:ThirdParty/FreeRTOS/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
4868:ThirdParty/FreeRTOS/tasks.c ****             }
4869:ThirdParty/FreeRTOS/tasks.c **** 
4870:ThirdParty/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
4871:ThirdParty/FreeRTOS/tasks.c **** 
4872:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
4873:ThirdParty/FreeRTOS/tasks.c **** 
4874:ThirdParty/FreeRTOS/tasks.c ****             switch( eAction )
4875:ThirdParty/FreeRTOS/tasks.c ****             {
4876:ThirdParty/FreeRTOS/tasks.c ****                 case eSetBits:
4877:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
4878:ThirdParty/FreeRTOS/tasks.c ****                     break;
4879:ThirdParty/FreeRTOS/tasks.c **** 
4880:ThirdParty/FreeRTOS/tasks.c ****                 case eIncrement:
4881:ThirdParty/FreeRTOS/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
4882:ThirdParty/FreeRTOS/tasks.c ****                     break;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 108


4883:ThirdParty/FreeRTOS/tasks.c **** 
4884:ThirdParty/FreeRTOS/tasks.c ****                 case eSetValueWithOverwrite:
4885:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
4886:ThirdParty/FreeRTOS/tasks.c ****                     break;
4887:ThirdParty/FreeRTOS/tasks.c **** 
4888:ThirdParty/FreeRTOS/tasks.c ****                 case eSetValueWithoutOverwrite:
4889:ThirdParty/FreeRTOS/tasks.c **** 
4890:ThirdParty/FreeRTOS/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4891:ThirdParty/FreeRTOS/tasks.c ****                     {
4892:ThirdParty/FreeRTOS/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
4893:ThirdParty/FreeRTOS/tasks.c ****                     }
4894:ThirdParty/FreeRTOS/tasks.c ****                     else
4895:ThirdParty/FreeRTOS/tasks.c ****                     {
4896:ThirdParty/FreeRTOS/tasks.c ****                         /* The value could not be written to the task. */
4897:ThirdParty/FreeRTOS/tasks.c ****                         xReturn = pdFAIL;
4898:ThirdParty/FreeRTOS/tasks.c ****                     }
4899:ThirdParty/FreeRTOS/tasks.c **** 
4900:ThirdParty/FreeRTOS/tasks.c ****                     break;
4901:ThirdParty/FreeRTOS/tasks.c **** 
4902:ThirdParty/FreeRTOS/tasks.c ****                 case eNoAction:
4903:ThirdParty/FreeRTOS/tasks.c **** 
4904:ThirdParty/FreeRTOS/tasks.c ****                     /* The task is being notified without its notify value being
4905:ThirdParty/FreeRTOS/tasks.c ****                      * updated. */
4906:ThirdParty/FreeRTOS/tasks.c ****                     break;
4907:ThirdParty/FreeRTOS/tasks.c **** 
4908:ThirdParty/FreeRTOS/tasks.c ****                 default:
4909:ThirdParty/FreeRTOS/tasks.c **** 
4910:ThirdParty/FreeRTOS/tasks.c ****                     /* Should not get here if all enums are handled.
4911:ThirdParty/FreeRTOS/tasks.c ****                      * Artificially force an assert by testing a value the
4912:ThirdParty/FreeRTOS/tasks.c ****                      * compiler can't assume is const. */
4913:ThirdParty/FreeRTOS/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
4914:ThirdParty/FreeRTOS/tasks.c **** 
4915:ThirdParty/FreeRTOS/tasks.c ****                     break;
4916:ThirdParty/FreeRTOS/tasks.c ****             }
4917:ThirdParty/FreeRTOS/tasks.c **** 
4918:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_NOTIFY( uxIndexToNotify );
4919:ThirdParty/FreeRTOS/tasks.c **** 
4920:ThirdParty/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
4921:ThirdParty/FreeRTOS/tasks.c ****              * notification then unblock it now. */
4922:ThirdParty/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4923:ThirdParty/FreeRTOS/tasks.c ****             {
4924:ThirdParty/FreeRTOS/tasks.c ****                 listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
4925:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
4926:ThirdParty/FreeRTOS/tasks.c **** 
4927:ThirdParty/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
4928:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4929:ThirdParty/FreeRTOS/tasks.c **** 
4930:ThirdParty/FreeRTOS/tasks.c ****                 #if ( configUSE_TICKLESS_IDLE != 0 )
4931:ThirdParty/FreeRTOS/tasks.c ****                 {
4932:ThirdParty/FreeRTOS/tasks.c ****                     /* If a task is blocked waiting for a notification then
4933:ThirdParty/FreeRTOS/tasks.c ****                      * xNextTaskUnblockTime might be set to the blocked task's time
4934:ThirdParty/FreeRTOS/tasks.c ****                      * out time.  If the task is unblocked for a reason other than
4935:ThirdParty/FreeRTOS/tasks.c ****                      * a timeout xNextTaskUnblockTime is normally left unchanged,
4936:ThirdParty/FreeRTOS/tasks.c ****                      * because it will automatically get reset to a new value when
4937:ThirdParty/FreeRTOS/tasks.c ****                      * the tick count equals xNextTaskUnblockTime.  However if
4938:ThirdParty/FreeRTOS/tasks.c ****                      * tickless idling is used it might be more important to enter
4939:ThirdParty/FreeRTOS/tasks.c ****                      * sleep mode at the earliest possible time - so reset
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 109


4940:ThirdParty/FreeRTOS/tasks.c ****                      * xNextTaskUnblockTime here to ensure it is updated at the
4941:ThirdParty/FreeRTOS/tasks.c ****                      * earliest possible time. */
4942:ThirdParty/FreeRTOS/tasks.c ****                     prvResetNextTaskUnblockTime();
4943:ThirdParty/FreeRTOS/tasks.c ****                 }
4944:ThirdParty/FreeRTOS/tasks.c ****                 #endif
4945:ThirdParty/FreeRTOS/tasks.c **** 
4946:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4947:ThirdParty/FreeRTOS/tasks.c ****                 {
4948:ThirdParty/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
4949:ThirdParty/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
4950:ThirdParty/FreeRTOS/tasks.c ****                     taskYIELD_IF_USING_PREEMPTION();
4951:ThirdParty/FreeRTOS/tasks.c ****                 }
4952:ThirdParty/FreeRTOS/tasks.c ****                 else
4953:ThirdParty/FreeRTOS/tasks.c ****                 {
4954:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
4955:ThirdParty/FreeRTOS/tasks.c ****                 }
4956:ThirdParty/FreeRTOS/tasks.c ****             }
4957:ThirdParty/FreeRTOS/tasks.c ****             else
4958:ThirdParty/FreeRTOS/tasks.c ****             {
4959:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
4960:ThirdParty/FreeRTOS/tasks.c ****             }
4961:ThirdParty/FreeRTOS/tasks.c ****         }
4962:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
4963:ThirdParty/FreeRTOS/tasks.c **** 
4964:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
4965:ThirdParty/FreeRTOS/tasks.c ****     }
4966:ThirdParty/FreeRTOS/tasks.c **** 
4967:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4968:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
4969:ThirdParty/FreeRTOS/tasks.c **** 
4970:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
4971:ThirdParty/FreeRTOS/tasks.c **** 
4972:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify,
4973:ThirdParty/FreeRTOS/tasks.c ****                                           UBaseType_t uxIndexToNotify,
4974:ThirdParty/FreeRTOS/tasks.c ****                                           uint32_t ulValue,
4975:ThirdParty/FreeRTOS/tasks.c ****                                           eNotifyAction eAction,
4976:ThirdParty/FreeRTOS/tasks.c ****                                           uint32_t * pulPreviousNotificationValue,
4977:ThirdParty/FreeRTOS/tasks.c ****                                           BaseType_t * pxHigherPriorityTaskWoken )
4978:ThirdParty/FreeRTOS/tasks.c ****     {
4979:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
4980:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
4981:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
4982:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
4983:ThirdParty/FreeRTOS/tasks.c **** 
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
4985:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
4986:ThirdParty/FreeRTOS/tasks.c **** 
4987:ThirdParty/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
4988:ThirdParty/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
4989:ThirdParty/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
4990:ThirdParty/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
4991:ThirdParty/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4992:ThirdParty/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
4993:ThirdParty/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4994:ThirdParty/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
4995:ThirdParty/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
4996:ThirdParty/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 110


4997:ThirdParty/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
4998:ThirdParty/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
4999:ThirdParty/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
5000:ThirdParty/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
5001:ThirdParty/FreeRTOS/tasks.c ****          * provided on the following link:
5002:ThirdParty/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
5003:ThirdParty/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5004:ThirdParty/FreeRTOS/tasks.c **** 
5005:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
5006:ThirdParty/FreeRTOS/tasks.c **** 
5007:ThirdParty/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5008:ThirdParty/FreeRTOS/tasks.c ****         {
5009:ThirdParty/FreeRTOS/tasks.c ****             if( pulPreviousNotificationValue != NULL )
5010:ThirdParty/FreeRTOS/tasks.c ****             {
5011:ThirdParty/FreeRTOS/tasks.c ****                 *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
5012:ThirdParty/FreeRTOS/tasks.c ****             }
5013:ThirdParty/FreeRTOS/tasks.c **** 
5014:ThirdParty/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
5015:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
5016:ThirdParty/FreeRTOS/tasks.c **** 
5017:ThirdParty/FreeRTOS/tasks.c ****             switch( eAction )
5018:ThirdParty/FreeRTOS/tasks.c ****             {
5019:ThirdParty/FreeRTOS/tasks.c ****                 case eSetBits:
5020:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
5021:ThirdParty/FreeRTOS/tasks.c ****                     break;
5022:ThirdParty/FreeRTOS/tasks.c **** 
5023:ThirdParty/FreeRTOS/tasks.c ****                 case eIncrement:
5024:ThirdParty/FreeRTOS/tasks.c ****                     ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5025:ThirdParty/FreeRTOS/tasks.c ****                     break;
5026:ThirdParty/FreeRTOS/tasks.c **** 
5027:ThirdParty/FreeRTOS/tasks.c ****                 case eSetValueWithOverwrite:
5028:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5029:ThirdParty/FreeRTOS/tasks.c ****                     break;
5030:ThirdParty/FreeRTOS/tasks.c **** 
5031:ThirdParty/FreeRTOS/tasks.c ****                 case eSetValueWithoutOverwrite:
5032:ThirdParty/FreeRTOS/tasks.c **** 
5033:ThirdParty/FreeRTOS/tasks.c ****                     if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
5034:ThirdParty/FreeRTOS/tasks.c ****                     {
5035:ThirdParty/FreeRTOS/tasks.c ****                         pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
5036:ThirdParty/FreeRTOS/tasks.c ****                     }
5037:ThirdParty/FreeRTOS/tasks.c ****                     else
5038:ThirdParty/FreeRTOS/tasks.c ****                     {
5039:ThirdParty/FreeRTOS/tasks.c ****                         /* The value could not be written to the task. */
5040:ThirdParty/FreeRTOS/tasks.c ****                         xReturn = pdFAIL;
5041:ThirdParty/FreeRTOS/tasks.c ****                     }
5042:ThirdParty/FreeRTOS/tasks.c **** 
5043:ThirdParty/FreeRTOS/tasks.c ****                     break;
5044:ThirdParty/FreeRTOS/tasks.c **** 
5045:ThirdParty/FreeRTOS/tasks.c ****                 case eNoAction:
5046:ThirdParty/FreeRTOS/tasks.c **** 
5047:ThirdParty/FreeRTOS/tasks.c ****                     /* The task is being notified without its notify value being
5048:ThirdParty/FreeRTOS/tasks.c ****                      * updated. */
5049:ThirdParty/FreeRTOS/tasks.c ****                     break;
5050:ThirdParty/FreeRTOS/tasks.c **** 
5051:ThirdParty/FreeRTOS/tasks.c ****                 default:
5052:ThirdParty/FreeRTOS/tasks.c **** 
5053:ThirdParty/FreeRTOS/tasks.c ****                     /* Should not get here if all enums are handled.
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 111


5054:ThirdParty/FreeRTOS/tasks.c ****                      * Artificially force an assert by testing a value the
5055:ThirdParty/FreeRTOS/tasks.c ****                      * compiler can't assume is const. */
5056:ThirdParty/FreeRTOS/tasks.c ****                     configASSERT( xTickCount == ( TickType_t ) 0 );
5057:ThirdParty/FreeRTOS/tasks.c ****                     break;
5058:ThirdParty/FreeRTOS/tasks.c ****             }
5059:ThirdParty/FreeRTOS/tasks.c **** 
5060:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_FROM_ISR( uxIndexToNotify );
5061:ThirdParty/FreeRTOS/tasks.c **** 
5062:ThirdParty/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5063:ThirdParty/FreeRTOS/tasks.c ****              * notification then unblock it now. */
5064:ThirdParty/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5065:ThirdParty/FreeRTOS/tasks.c ****             {
5066:ThirdParty/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
5067:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5068:ThirdParty/FreeRTOS/tasks.c **** 
5069:ThirdParty/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5070:ThirdParty/FreeRTOS/tasks.c ****                 {
5071:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
5072:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
5073:ThirdParty/FreeRTOS/tasks.c ****                 }
5074:ThirdParty/FreeRTOS/tasks.c ****                 else
5075:ThirdParty/FreeRTOS/tasks.c ****                 {
5076:ThirdParty/FreeRTOS/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
5077:ThirdParty/FreeRTOS/tasks.c ****                      * this task pending until the scheduler is resumed. */
5078:ThirdParty/FreeRTOS/tasks.c ****                     listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5079:ThirdParty/FreeRTOS/tasks.c ****                 }
5080:ThirdParty/FreeRTOS/tasks.c **** 
5081:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5082:ThirdParty/FreeRTOS/tasks.c ****                 {
5083:ThirdParty/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
5084:ThirdParty/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
5085:ThirdParty/FreeRTOS/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5086:ThirdParty/FreeRTOS/tasks.c ****                     {
5087:ThirdParty/FreeRTOS/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5088:ThirdParty/FreeRTOS/tasks.c ****                     }
5089:ThirdParty/FreeRTOS/tasks.c **** 
5090:ThirdParty/FreeRTOS/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5091:ThirdParty/FreeRTOS/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter to an ISR
5092:ThirdParty/FreeRTOS/tasks.c ****                      * safe FreeRTOS function. */
5093:ThirdParty/FreeRTOS/tasks.c ****                     xYieldPending = pdTRUE;
5094:ThirdParty/FreeRTOS/tasks.c ****                 }
5095:ThirdParty/FreeRTOS/tasks.c ****                 else
5096:ThirdParty/FreeRTOS/tasks.c ****                 {
5097:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5098:ThirdParty/FreeRTOS/tasks.c ****                 }
5099:ThirdParty/FreeRTOS/tasks.c ****             }
5100:ThirdParty/FreeRTOS/tasks.c ****         }
5101:ThirdParty/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5102:ThirdParty/FreeRTOS/tasks.c **** 
5103:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
5104:ThirdParty/FreeRTOS/tasks.c ****     }
5105:ThirdParty/FreeRTOS/tasks.c **** 
5106:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5107:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5108:ThirdParty/FreeRTOS/tasks.c **** 
5109:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5110:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 112


5111:ThirdParty/FreeRTOS/tasks.c ****     void vTaskGenericNotifyGiveFromISR( TaskHandle_t xTaskToNotify,
5112:ThirdParty/FreeRTOS/tasks.c ****                                         UBaseType_t uxIndexToNotify,
5113:ThirdParty/FreeRTOS/tasks.c ****                                         BaseType_t * pxHigherPriorityTaskWoken )
5114:ThirdParty/FreeRTOS/tasks.c ****     {
5115:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5116:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
5117:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
5118:ThirdParty/FreeRTOS/tasks.c **** 
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
5120:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
5121:ThirdParty/FreeRTOS/tasks.c **** 
5122:ThirdParty/FreeRTOS/tasks.c ****         /* RTOS ports that support interrupt nesting have the concept of a
5123:ThirdParty/FreeRTOS/tasks.c ****          * maximum  system call (or maximum API call) interrupt priority.
5124:ThirdParty/FreeRTOS/tasks.c ****          * Interrupts that are  above the maximum system call priority are keep
5125:ThirdParty/FreeRTOS/tasks.c ****          * permanently enabled, even when the RTOS kernel is in a critical section,
5126:ThirdParty/FreeRTOS/tasks.c ****          * but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5127:ThirdParty/FreeRTOS/tasks.c ****          * is defined in FreeRTOSConfig.h then
5128:ThirdParty/FreeRTOS/tasks.c ****          * portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5129:ThirdParty/FreeRTOS/tasks.c ****          * failure if a FreeRTOS API function is called from an interrupt that has
5130:ThirdParty/FreeRTOS/tasks.c ****          * been assigned a priority above the configured maximum system call
5131:ThirdParty/FreeRTOS/tasks.c ****          * priority.  Only FreeRTOS functions that end in FromISR can be called
5132:ThirdParty/FreeRTOS/tasks.c ****          * from interrupts  that have been assigned a priority at or (logically)
5133:ThirdParty/FreeRTOS/tasks.c ****          * below the maximum system call interrupt priority.  FreeRTOS maintains a
5134:ThirdParty/FreeRTOS/tasks.c ****          * separate interrupt safe API to ensure interrupt entry is as fast and as
5135:ThirdParty/FreeRTOS/tasks.c ****          * simple as possible.  More information (albeit Cortex-M specific) is
5136:ThirdParty/FreeRTOS/tasks.c ****          * provided on the following link:
5137:ThirdParty/FreeRTOS/tasks.c ****          * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
5138:ThirdParty/FreeRTOS/tasks.c ****         portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5139:ThirdParty/FreeRTOS/tasks.c **** 
5140:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
5141:ThirdParty/FreeRTOS/tasks.c **** 
5142:ThirdParty/FreeRTOS/tasks.c ****         uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5143:ThirdParty/FreeRTOS/tasks.c ****         {
5144:ThirdParty/FreeRTOS/tasks.c ****             ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
5145:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
5146:ThirdParty/FreeRTOS/tasks.c **** 
5147:ThirdParty/FreeRTOS/tasks.c ****             /* 'Giving' is equivalent to incrementing a count in a counting
5148:ThirdParty/FreeRTOS/tasks.c ****              * semaphore. */
5149:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
5150:ThirdParty/FreeRTOS/tasks.c **** 
5151:ThirdParty/FreeRTOS/tasks.c ****             traceTASK_NOTIFY_GIVE_FROM_ISR( uxIndexToNotify );
5152:ThirdParty/FreeRTOS/tasks.c **** 
5153:ThirdParty/FreeRTOS/tasks.c ****             /* If the task is in the blocked state specifically to wait for a
5154:ThirdParty/FreeRTOS/tasks.c ****              * notification then unblock it now. */
5155:ThirdParty/FreeRTOS/tasks.c ****             if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5156:ThirdParty/FreeRTOS/tasks.c ****             {
5157:ThirdParty/FreeRTOS/tasks.c ****                 /* The task should not have been on an event list. */
5158:ThirdParty/FreeRTOS/tasks.c ****                 configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5159:ThirdParty/FreeRTOS/tasks.c **** 
5160:ThirdParty/FreeRTOS/tasks.c ****                 if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5161:ThirdParty/FreeRTOS/tasks.c ****                 {
5162:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
5163:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
5164:ThirdParty/FreeRTOS/tasks.c ****                 }
5165:ThirdParty/FreeRTOS/tasks.c ****                 else
5166:ThirdParty/FreeRTOS/tasks.c ****                 {
5167:ThirdParty/FreeRTOS/tasks.c ****                     /* The delayed and ready lists cannot be accessed, so hold
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 113


5168:ThirdParty/FreeRTOS/tasks.c ****                      * this task pending until the scheduler is resumed. */
5169:ThirdParty/FreeRTOS/tasks.c ****                     listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5170:ThirdParty/FreeRTOS/tasks.c ****                 }
5171:ThirdParty/FreeRTOS/tasks.c **** 
5172:ThirdParty/FreeRTOS/tasks.c ****                 if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5173:ThirdParty/FreeRTOS/tasks.c ****                 {
5174:ThirdParty/FreeRTOS/tasks.c ****                     /* The notified task has a priority above the currently
5175:ThirdParty/FreeRTOS/tasks.c ****                      * executing task so a yield is required. */
5176:ThirdParty/FreeRTOS/tasks.c ****                     if( pxHigherPriorityTaskWoken != NULL )
5177:ThirdParty/FreeRTOS/tasks.c ****                     {
5178:ThirdParty/FreeRTOS/tasks.c ****                         *pxHigherPriorityTaskWoken = pdTRUE;
5179:ThirdParty/FreeRTOS/tasks.c ****                     }
5180:ThirdParty/FreeRTOS/tasks.c **** 
5181:ThirdParty/FreeRTOS/tasks.c ****                     /* Mark that a yield is pending in case the user is not
5182:ThirdParty/FreeRTOS/tasks.c ****                      * using the "xHigherPriorityTaskWoken" parameter in an ISR
5183:ThirdParty/FreeRTOS/tasks.c ****                      * safe FreeRTOS function. */
5184:ThirdParty/FreeRTOS/tasks.c ****                     xYieldPending = pdTRUE;
5185:ThirdParty/FreeRTOS/tasks.c ****                 }
5186:ThirdParty/FreeRTOS/tasks.c ****                 else
5187:ThirdParty/FreeRTOS/tasks.c ****                 {
5188:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5189:ThirdParty/FreeRTOS/tasks.c ****                 }
5190:ThirdParty/FreeRTOS/tasks.c ****             }
5191:ThirdParty/FreeRTOS/tasks.c ****         }
5192:ThirdParty/FreeRTOS/tasks.c ****         portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5193:ThirdParty/FreeRTOS/tasks.c ****     }
5194:ThirdParty/FreeRTOS/tasks.c **** 
5195:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5196:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5197:ThirdParty/FreeRTOS/tasks.c **** 
5198:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5199:ThirdParty/FreeRTOS/tasks.c **** 
5200:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xTaskGenericNotifyStateClear( TaskHandle_t xTask,
5201:ThirdParty/FreeRTOS/tasks.c ****                                              UBaseType_t uxIndexToClear )
5202:ThirdParty/FreeRTOS/tasks.c ****     {
5203:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5204:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
5205:ThirdParty/FreeRTOS/tasks.c **** 
5206:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToClear < configTASK_NOTIFICATION_ARRAY_ENTRIES );
5207:ThirdParty/FreeRTOS/tasks.c **** 
5208:ThirdParty/FreeRTOS/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5209:ThirdParty/FreeRTOS/tasks.c ****          * its notification state cleared. */
5210:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5211:ThirdParty/FreeRTOS/tasks.c **** 
5212:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
5213:ThirdParty/FreeRTOS/tasks.c ****         {
5214:ThirdParty/FreeRTOS/tasks.c ****             if( pxTCB->ucNotifyState[ uxIndexToClear ] == taskNOTIFICATION_RECEIVED )
5215:ThirdParty/FreeRTOS/tasks.c ****             {
5216:ThirdParty/FreeRTOS/tasks.c ****                 pxTCB->ucNotifyState[ uxIndexToClear ] = taskNOT_WAITING_NOTIFICATION;
5217:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
5218:ThirdParty/FreeRTOS/tasks.c ****             }
5219:ThirdParty/FreeRTOS/tasks.c ****             else
5220:ThirdParty/FreeRTOS/tasks.c ****             {
5221:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdFAIL;
5222:ThirdParty/FreeRTOS/tasks.c ****             }
5223:ThirdParty/FreeRTOS/tasks.c ****         }
5224:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 114


5225:ThirdParty/FreeRTOS/tasks.c **** 
5226:ThirdParty/FreeRTOS/tasks.c ****         return xReturn;
5227:ThirdParty/FreeRTOS/tasks.c ****     }
5228:ThirdParty/FreeRTOS/tasks.c **** 
5229:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5230:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5231:ThirdParty/FreeRTOS/tasks.c **** 
5232:ThirdParty/FreeRTOS/tasks.c **** #if ( configUSE_TASK_NOTIFICATIONS == 1 )
5233:ThirdParty/FreeRTOS/tasks.c **** 
5234:ThirdParty/FreeRTOS/tasks.c ****     uint32_t ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
5235:ThirdParty/FreeRTOS/tasks.c ****                                             UBaseType_t uxIndexToClear,
5236:ThirdParty/FreeRTOS/tasks.c ****                                             uint32_t ulBitsToClear )
5237:ThirdParty/FreeRTOS/tasks.c ****     {
5238:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
5239:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulReturn;
5240:ThirdParty/FreeRTOS/tasks.c **** 
5241:ThirdParty/FreeRTOS/tasks.c ****         /* If null is passed in here then it is the calling task that is having
5242:ThirdParty/FreeRTOS/tasks.c ****          * its notification state cleared. */
5243:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = prvGetTCBFromHandle( xTask );
5244:ThirdParty/FreeRTOS/tasks.c **** 
5245:ThirdParty/FreeRTOS/tasks.c ****         taskENTER_CRITICAL();
5246:ThirdParty/FreeRTOS/tasks.c ****         {
5247:ThirdParty/FreeRTOS/tasks.c ****             /* Return the notification as it was before the bits were cleared,
5248:ThirdParty/FreeRTOS/tasks.c ****              * then clear the bit mask. */
5249:ThirdParty/FreeRTOS/tasks.c ****             ulReturn = pxTCB->ulNotifiedValue[ uxIndexToClear ];
5250:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
5251:ThirdParty/FreeRTOS/tasks.c ****         }
5252:ThirdParty/FreeRTOS/tasks.c ****         taskEXIT_CRITICAL();
5253:ThirdParty/FreeRTOS/tasks.c **** 
5254:ThirdParty/FreeRTOS/tasks.c ****         return ulReturn;
5255:ThirdParty/FreeRTOS/tasks.c ****     }
5256:ThirdParty/FreeRTOS/tasks.c **** 
5257:ThirdParty/FreeRTOS/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5258:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5259:ThirdParty/FreeRTOS/tasks.c **** 
5260:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5261:ThirdParty/FreeRTOS/tasks.c **** 
5262:ThirdParty/FreeRTOS/tasks.c ****     configRUN_TIME_COUNTER_TYPE ulTaskGetIdleRunTimeCounter( void )
5263:ThirdParty/FreeRTOS/tasks.c ****     {
5264:ThirdParty/FreeRTOS/tasks.c ****         return xIdleTaskHandle->ulRunTimeCounter;
5265:ThirdParty/FreeRTOS/tasks.c ****     }
5266:ThirdParty/FreeRTOS/tasks.c **** 
5267:ThirdParty/FreeRTOS/tasks.c **** #endif
5268:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5269:ThirdParty/FreeRTOS/tasks.c **** 
5270:ThirdParty/FreeRTOS/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5271:ThirdParty/FreeRTOS/tasks.c **** 
5272:ThirdParty/FreeRTOS/tasks.c ****     configRUN_TIME_COUNTER_TYPE ulTaskGetIdleRunTimePercent( void )
5273:ThirdParty/FreeRTOS/tasks.c ****     {
5274:ThirdParty/FreeRTOS/tasks.c ****         configRUN_TIME_COUNTER_TYPE ulTotalTime, ulReturn;
5275:ThirdParty/FreeRTOS/tasks.c **** 
5276:ThirdParty/FreeRTOS/tasks.c ****         ulTotalTime = portGET_RUN_TIME_COUNTER_VALUE();
5277:ThirdParty/FreeRTOS/tasks.c **** 
5278:ThirdParty/FreeRTOS/tasks.c ****         /* For percentage calculations. */
5279:ThirdParty/FreeRTOS/tasks.c ****         ulTotalTime /= ( configRUN_TIME_COUNTER_TYPE ) 100;
5280:ThirdParty/FreeRTOS/tasks.c **** 
5281:ThirdParty/FreeRTOS/tasks.c ****         /* Avoid divide by zero errors. */
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 115


5282:ThirdParty/FreeRTOS/tasks.c ****         if( ulTotalTime > ( configRUN_TIME_COUNTER_TYPE ) 0 )
5283:ThirdParty/FreeRTOS/tasks.c ****         {
5284:ThirdParty/FreeRTOS/tasks.c ****             ulReturn = xIdleTaskHandle->ulRunTimeCounter / ulTotalTime;
5285:ThirdParty/FreeRTOS/tasks.c ****         }
5286:ThirdParty/FreeRTOS/tasks.c ****         else
5287:ThirdParty/FreeRTOS/tasks.c ****         {
5288:ThirdParty/FreeRTOS/tasks.c ****             ulReturn = 0;
5289:ThirdParty/FreeRTOS/tasks.c ****         }
5290:ThirdParty/FreeRTOS/tasks.c **** 
5291:ThirdParty/FreeRTOS/tasks.c ****         return ulReturn;
5292:ThirdParty/FreeRTOS/tasks.c ****     }
5293:ThirdParty/FreeRTOS/tasks.c **** 
5294:ThirdParty/FreeRTOS/tasks.c **** #endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) 
5295:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
5296:ThirdParty/FreeRTOS/tasks.c **** 
5297:ThirdParty/FreeRTOS/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
5298:ThirdParty/FreeRTOS/tasks.c ****                                             const BaseType_t xCanBlockIndefinitely )
5299:ThirdParty/FreeRTOS/tasks.c **** {
 848              		.loc 1 5299 1 view -0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 0
 851              		@ frame_needed = 0, uses_anonymous_args = 0
 852              		.loc 1 5299 1 is_stmt 0 view .LVU237
 853 0000 70B5     		push	{r4, r5, r6, lr}
 854              	.LCFI7:
 855              		.cfi_def_cfa_offset 16
 856              		.cfi_offset 4, -16
 857              		.cfi_offset 5, -12
 858              		.cfi_offset 6, -8
 859              		.cfi_offset 14, -4
 860 0002 0446     		mov	r4, r0
 861 0004 0D46     		mov	r5, r1
5300:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xTimeToWake;
 862              		.loc 1 5300 5 is_stmt 1 view .LVU238
5301:ThirdParty/FreeRTOS/tasks.c ****     const TickType_t xConstTickCount = xTickCount;
 863              		.loc 1 5301 5 view .LVU239
 864              		.loc 1 5301 22 is_stmt 0 view .LVU240
 865 0006 234B     		ldr	r3, .L69
 866 0008 1E68     		ldr	r6, [r3]
 867              	.LVL62:
5302:ThirdParty/FreeRTOS/tasks.c **** 
5303:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_xTaskAbortDelay == 1 )
5304:ThirdParty/FreeRTOS/tasks.c ****     {
5305:ThirdParty/FreeRTOS/tasks.c ****         /* About to enter a delayed list, so ensure the ucDelayAborted flag is
5306:ThirdParty/FreeRTOS/tasks.c ****          * reset to pdFALSE so it can be detected as having been set to pdTRUE
5307:ThirdParty/FreeRTOS/tasks.c ****          * when the task leaves the Blocked state. */
5308:ThirdParty/FreeRTOS/tasks.c ****         pxCurrentTCB->ucDelayAborted = pdFALSE;
5309:ThirdParty/FreeRTOS/tasks.c ****     }
5310:ThirdParty/FreeRTOS/tasks.c ****     #endif
5311:ThirdParty/FreeRTOS/tasks.c **** 
5312:ThirdParty/FreeRTOS/tasks.c ****     /* Remove the task from the ready list before adding it to the blocked list
5313:ThirdParty/FreeRTOS/tasks.c ****      * as the same list item is used for both lists. */
5314:ThirdParty/FreeRTOS/tasks.c ****     if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 868              		.loc 1 5314 5 is_stmt 1 view .LVU241
 869              		.loc 1 5314 38 is_stmt 0 view .LVU242
 870 000a 234B     		ldr	r3, .L69+4
 871 000c 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 116


 872              	.LVL63:
 873              		.loc 1 5314 9 view .LVU243
 874 000e 0430     		adds	r0, r0, #4
 875 0010 FFF7FEFF 		bl	uxListRemove
 876              	.LVL64:
 877              		.loc 1 5314 7 view .LVU244
 878 0014 48B9     		cbnz	r0, .L63
5315:ThirdParty/FreeRTOS/tasks.c ****     {
5316:ThirdParty/FreeRTOS/tasks.c ****         /* The current task must be in a ready list, so there is no need to
5317:ThirdParty/FreeRTOS/tasks.c ****          * check, and the port reset macro can be called directly. */
5318:ThirdParty/FreeRTOS/tasks.c ****         portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCu
 879              		.loc 1 5318 9 is_stmt 1 view .LVU245
 880 0016 204B     		ldr	r3, .L69+4
 881 0018 1B68     		ldr	r3, [r3]
 882 001a DB6A     		ldr	r3, [r3, #44]
 883 001c 0122     		movs	r2, #1
 884 001e 9A40     		lsls	r2, r2, r3
 885 0020 1E49     		ldr	r1, .L69+8
 886 0022 0B68     		ldr	r3, [r1]
 887 0024 23EA0203 		bic	r3, r3, r2
 888 0028 0B60     		str	r3, [r1]
 889              	.L63:
5319:ThirdParty/FreeRTOS/tasks.c ****     }
5320:ThirdParty/FreeRTOS/tasks.c ****     else
5321:ThirdParty/FreeRTOS/tasks.c ****     {
5322:ThirdParty/FreeRTOS/tasks.c ****         mtCOVERAGE_TEST_MARKER();
 890              		.loc 1 5322 33 view .LVU246
5323:ThirdParty/FreeRTOS/tasks.c ****     }
5324:ThirdParty/FreeRTOS/tasks.c **** 
5325:ThirdParty/FreeRTOS/tasks.c ****     #if ( INCLUDE_vTaskSuspend == 1 )
5326:ThirdParty/FreeRTOS/tasks.c ****     {
5327:ThirdParty/FreeRTOS/tasks.c ****         if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 891              		.loc 1 5327 9 view .LVU247
 892              		.loc 1 5327 11 is_stmt 0 view .LVU248
 893 002a B4F1FF3F 		cmp	r4, #-1
 894 002e 0DD0     		beq	.L68
 895              	.L64:
5328:ThirdParty/FreeRTOS/tasks.c ****         {
5329:ThirdParty/FreeRTOS/tasks.c ****             /* Add the task to the suspended task list instead of a delayed task
5330:ThirdParty/FreeRTOS/tasks.c ****              * list to ensure it is not woken by a timing event.  It will block
5331:ThirdParty/FreeRTOS/tasks.c ****              * indefinitely. */
5332:ThirdParty/FreeRTOS/tasks.c ****             listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5333:ThirdParty/FreeRTOS/tasks.c ****         }
5334:ThirdParty/FreeRTOS/tasks.c ****         else
5335:ThirdParty/FreeRTOS/tasks.c ****         {
5336:ThirdParty/FreeRTOS/tasks.c ****             /* Calculate the time at which the task should be woken if the event
5337:ThirdParty/FreeRTOS/tasks.c ****              * does not occur.  This may overflow but this doesn't matter, the
5338:ThirdParty/FreeRTOS/tasks.c ****              * kernel will manage it correctly. */
5339:ThirdParty/FreeRTOS/tasks.c ****             xTimeToWake = xConstTickCount + xTicksToWait;
 896              		.loc 1 5339 13 is_stmt 1 view .LVU249
 897              		.loc 1 5339 25 is_stmt 0 view .LVU250
 898 0030 3444     		add	r4, r4, r6
 899              	.LVL65:
5340:ThirdParty/FreeRTOS/tasks.c **** 
5341:ThirdParty/FreeRTOS/tasks.c ****             /* The list item will be inserted in wake time order. */
5342:ThirdParty/FreeRTOS/tasks.c ****             listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 900              		.loc 1 5342 13 is_stmt 1 view .LVU251
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 117


 901 0032 194B     		ldr	r3, .L69+4
 902 0034 1B68     		ldr	r3, [r3]
 903 0036 5C60     		str	r4, [r3, #4]
5343:ThirdParty/FreeRTOS/tasks.c **** 
5344:ThirdParty/FreeRTOS/tasks.c ****             if( xTimeToWake < xConstTickCount )
 904              		.loc 1 5344 13 view .LVU252
 905              		.loc 1 5344 15 is_stmt 0 view .LVU253
 906 0038 A642     		cmp	r6, r4
 907 003a 1DD9     		bls	.L66
5345:ThirdParty/FreeRTOS/tasks.c ****             {
5346:ThirdParty/FreeRTOS/tasks.c ****                 /* Wake time has overflowed.  Place this item in the overflow
5347:ThirdParty/FreeRTOS/tasks.c ****                  * list. */
5348:ThirdParty/FreeRTOS/tasks.c ****                 vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 908              		.loc 1 5348 17 is_stmt 1 view .LVU254
 909 003c 184B     		ldr	r3, .L69+12
 910 003e 1868     		ldr	r0, [r3]
 911              		.loc 1 5348 72 is_stmt 0 view .LVU255
 912 0040 154B     		ldr	r3, .L69+4
 913 0042 1968     		ldr	r1, [r3]
 914              		.loc 1 5348 17 view .LVU256
 915 0044 0431     		adds	r1, r1, #4
 916 0046 FFF7FEFF 		bl	vListInsert
 917              	.LVL66:
 918              	.L62:
5349:ThirdParty/FreeRTOS/tasks.c ****             }
5350:ThirdParty/FreeRTOS/tasks.c ****             else
5351:ThirdParty/FreeRTOS/tasks.c ****             {
5352:ThirdParty/FreeRTOS/tasks.c ****                 /* The wake time has not overflowed, so the current block list
5353:ThirdParty/FreeRTOS/tasks.c ****                  * is used. */
5354:ThirdParty/FreeRTOS/tasks.c ****                 vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5355:ThirdParty/FreeRTOS/tasks.c **** 
5356:ThirdParty/FreeRTOS/tasks.c ****                 /* If the task entering the blocked state was placed at the
5357:ThirdParty/FreeRTOS/tasks.c ****                  * head of the list of blocked tasks then xNextTaskUnblockTime
5358:ThirdParty/FreeRTOS/tasks.c ****                  * needs to be updated too. */
5359:ThirdParty/FreeRTOS/tasks.c ****                 if( xTimeToWake < xNextTaskUnblockTime )
5360:ThirdParty/FreeRTOS/tasks.c ****                 {
5361:ThirdParty/FreeRTOS/tasks.c ****                     xNextTaskUnblockTime = xTimeToWake;
5362:ThirdParty/FreeRTOS/tasks.c ****                 }
5363:ThirdParty/FreeRTOS/tasks.c ****                 else
5364:ThirdParty/FreeRTOS/tasks.c ****                 {
5365:ThirdParty/FreeRTOS/tasks.c ****                     mtCOVERAGE_TEST_MARKER();
5366:ThirdParty/FreeRTOS/tasks.c ****                 }
5367:ThirdParty/FreeRTOS/tasks.c ****             }
5368:ThirdParty/FreeRTOS/tasks.c ****         }
5369:ThirdParty/FreeRTOS/tasks.c ****     }
5370:ThirdParty/FreeRTOS/tasks.c ****     #else /* INCLUDE_vTaskSuspend */
5371:ThirdParty/FreeRTOS/tasks.c ****     {
5372:ThirdParty/FreeRTOS/tasks.c ****         /* Calculate the time at which the task should be woken if the event
5373:ThirdParty/FreeRTOS/tasks.c ****          * does not occur.  This may overflow but this doesn't matter, the kernel
5374:ThirdParty/FreeRTOS/tasks.c ****          * will manage it correctly. */
5375:ThirdParty/FreeRTOS/tasks.c ****         xTimeToWake = xConstTickCount + xTicksToWait;
5376:ThirdParty/FreeRTOS/tasks.c **** 
5377:ThirdParty/FreeRTOS/tasks.c ****         /* The list item will be inserted in wake time order. */
5378:ThirdParty/FreeRTOS/tasks.c ****         listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5379:ThirdParty/FreeRTOS/tasks.c **** 
5380:ThirdParty/FreeRTOS/tasks.c ****         if( xTimeToWake < xConstTickCount )
5381:ThirdParty/FreeRTOS/tasks.c ****         {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 118


5382:ThirdParty/FreeRTOS/tasks.c ****             /* Wake time has overflowed.  Place this item in the overflow list. */
5383:ThirdParty/FreeRTOS/tasks.c ****             vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5384:ThirdParty/FreeRTOS/tasks.c ****         }
5385:ThirdParty/FreeRTOS/tasks.c ****         else
5386:ThirdParty/FreeRTOS/tasks.c ****         {
5387:ThirdParty/FreeRTOS/tasks.c ****             /* The wake time has not overflowed, so the current block list is used. */
5388:ThirdParty/FreeRTOS/tasks.c ****             vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5389:ThirdParty/FreeRTOS/tasks.c **** 
5390:ThirdParty/FreeRTOS/tasks.c ****             /* If the task entering the blocked state was placed at the head of the
5391:ThirdParty/FreeRTOS/tasks.c ****              * list of blocked tasks then xNextTaskUnblockTime needs to be updated
5392:ThirdParty/FreeRTOS/tasks.c ****              * too. */
5393:ThirdParty/FreeRTOS/tasks.c ****             if( xTimeToWake < xNextTaskUnblockTime )
5394:ThirdParty/FreeRTOS/tasks.c ****             {
5395:ThirdParty/FreeRTOS/tasks.c ****                 xNextTaskUnblockTime = xTimeToWake;
5396:ThirdParty/FreeRTOS/tasks.c ****             }
5397:ThirdParty/FreeRTOS/tasks.c ****             else
5398:ThirdParty/FreeRTOS/tasks.c ****             {
5399:ThirdParty/FreeRTOS/tasks.c ****                 mtCOVERAGE_TEST_MARKER();
5400:ThirdParty/FreeRTOS/tasks.c ****             }
5401:ThirdParty/FreeRTOS/tasks.c ****         }
5402:ThirdParty/FreeRTOS/tasks.c **** 
5403:ThirdParty/FreeRTOS/tasks.c ****         /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5404:ThirdParty/FreeRTOS/tasks.c ****         ( void ) xCanBlockIndefinitely;
5405:ThirdParty/FreeRTOS/tasks.c ****     }
5406:ThirdParty/FreeRTOS/tasks.c ****     #endif /* INCLUDE_vTaskSuspend */
5407:ThirdParty/FreeRTOS/tasks.c **** }
 919              		.loc 1 5407 1 view .LVU257
 920 004a 70BD     		pop	{r4, r5, r6, pc}
 921              	.LVL67:
 922              	.L68:
5327:ThirdParty/FreeRTOS/tasks.c ****         {
 923              		.loc 1 5327 47 discriminator 1 view .LVU258
 924 004c 002D     		cmp	r5, #0
 925 004e EFD0     		beq	.L64
 926              	.LBB162:
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 927              		.loc 1 5332 13 is_stmt 1 view .LVU259
 928 0050 144A     		ldr	r2, .L69+16
 929 0052 5168     		ldr	r1, [r2, #4]
 930              	.LVL68:
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 931              		.loc 1 5332 13 view .LVU260
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 932              		.loc 1 5332 13 view .LVU261
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 933              		.loc 1 5332 13 view .LVU262
 934 0054 104B     		ldr	r3, .L69+4
 935 0056 1868     		ldr	r0, [r3]
 936 0058 8160     		str	r1, [r0, #8]
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 937              		.loc 1 5332 13 view .LVU263
 938 005a 1868     		ldr	r0, [r3]
 939 005c 8C68     		ldr	r4, [r1, #8]
 940              	.LVL69:
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 941              		.loc 1 5332 13 is_stmt 0 view .LVU264
 942 005e C460     		str	r4, [r0, #12]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 119


5332:ThirdParty/FreeRTOS/tasks.c ****         }
 943              		.loc 1 5332 13 is_stmt 1 view .LVU265
 944 0060 1868     		ldr	r0, [r3]
 945 0062 0430     		adds	r0, r0, #4
 946 0064 6060     		str	r0, [r4, #4]
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 947              		.loc 1 5332 13 view .LVU266
 948 0066 1868     		ldr	r0, [r3]
 949 0068 0430     		adds	r0, r0, #4
 950 006a 8860     		str	r0, [r1, #8]
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 951              		.loc 1 5332 13 view .LVU267
 952 006c 1B68     		ldr	r3, [r3]
 953 006e 5A61     		str	r2, [r3, #20]
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 954              		.loc 1 5332 13 view .LVU268
 955 0070 1368     		ldr	r3, [r2]
 956 0072 0133     		adds	r3, r3, #1
 957 0074 1360     		str	r3, [r2]
 958              	.LBE162:
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 959              		.loc 1 5332 85 view .LVU269
5332:ThirdParty/FreeRTOS/tasks.c ****         }
 960              		.loc 1 5332 13 is_stmt 0 view .LVU270
 961 0076 E8E7     		b	.L62
 962              	.LVL70:
 963              	.L66:
5354:ThirdParty/FreeRTOS/tasks.c **** 
 964              		.loc 1 5354 17 is_stmt 1 view .LVU271
 965 0078 0B4B     		ldr	r3, .L69+20
 966 007a 1868     		ldr	r0, [r3]
5354:ThirdParty/FreeRTOS/tasks.c **** 
 967              		.loc 1 5354 64 is_stmt 0 view .LVU272
 968 007c 064B     		ldr	r3, .L69+4
 969 007e 1968     		ldr	r1, [r3]
5354:ThirdParty/FreeRTOS/tasks.c **** 
 970              		.loc 1 5354 17 view .LVU273
 971 0080 0431     		adds	r1, r1, #4
 972 0082 FFF7FEFF 		bl	vListInsert
 973              	.LVL71:
5359:ThirdParty/FreeRTOS/tasks.c ****                 {
 974              		.loc 1 5359 17 is_stmt 1 view .LVU274
5359:ThirdParty/FreeRTOS/tasks.c ****                 {
 975              		.loc 1 5359 33 is_stmt 0 view .LVU275
 976 0086 094B     		ldr	r3, .L69+24
 977 0088 1B68     		ldr	r3, [r3]
5359:ThirdParty/FreeRTOS/tasks.c ****                 {
 978              		.loc 1 5359 19 view .LVU276
 979 008a A342     		cmp	r3, r4
 980 008c DDD9     		bls	.L62
5361:ThirdParty/FreeRTOS/tasks.c ****                 }
 981              		.loc 1 5361 21 is_stmt 1 view .LVU277
5361:ThirdParty/FreeRTOS/tasks.c ****                 }
 982              		.loc 1 5361 42 is_stmt 0 view .LVU278
 983 008e 074B     		ldr	r3, .L69+24
 984 0090 1C60     		str	r4, [r3]
5365:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 120


 985              		.loc 1 5365 45 is_stmt 1 view .LVU279
 986              		.loc 1 5407 1 is_stmt 0 view .LVU280
 987 0092 DAE7     		b	.L62
 988              	.L70:
 989              		.align	2
 990              	.L69:
 991 0094 00000000 		.word	xTickCount
 992 0098 00000000 		.word	pxCurrentTCB
 993 009c 00000000 		.word	uxTopReadyPriority
 994 00a0 00000000 		.word	pxOverflowDelayedTaskList
 995 00a4 00000000 		.word	xSuspendedTaskList
 996 00a8 00000000 		.word	pxDelayedTaskList
 997 00ac 00000000 		.word	xNextTaskUnblockTime
 998              		.cfi_endproc
 999              	.LFE64:
 1001              		.section	.text.xTaskCreate,"ax",%progbits
 1002              		.align	1
 1003              		.global	xTaskCreate
 1004              		.syntax unified
 1005              		.thumb
 1006              		.thumb_func
 1008              	xTaskCreate:
 1009              	.LVL72:
 1010              	.LFB5:
 727:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 1011              		.loc 1 727 5 is_stmt 1 view -0
 1012              		.cfi_startproc
 1013              		@ args = 8, pretend = 0, frame = 0
 1014              		@ frame_needed = 0, uses_anonymous_args = 0
 727:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxNewTCB;
 1015              		.loc 1 727 5 is_stmt 0 view .LVU282
 1016 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1017              	.LCFI8:
 1018              		.cfi_def_cfa_offset 28
 1019              		.cfi_offset 4, -28
 1020              		.cfi_offset 5, -24
 1021              		.cfi_offset 6, -20
 1022              		.cfi_offset 7, -16
 1023              		.cfi_offset 8, -12
 1024              		.cfi_offset 9, -8
 1025              		.cfi_offset 14, -4
 1026 0004 85B0     		sub	sp, sp, #20
 1027              	.LCFI9:
 1028              		.cfi_def_cfa_offset 48
 1029 0006 0746     		mov	r7, r0
 1030 0008 8846     		mov	r8, r1
 1031 000a 1446     		mov	r4, r2
 1032 000c 1E46     		mov	r6, r3
 728:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 1033              		.loc 1 728 9 is_stmt 1 view .LVU283
 729:ThirdParty/FreeRTOS/tasks.c **** 
 1034              		.loc 1 729 9 view .LVU284
 1035              	.LBB163:
 760:ThirdParty/FreeRTOS/tasks.c **** 
 1036              		.loc 1 760 13 view .LVU285
 763:ThirdParty/FreeRTOS/tasks.c **** 
 1037              		.loc 1 763 13 view .LVU286
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 121


 763:ThirdParty/FreeRTOS/tasks.c **** 
 1038              		.loc 1 763 23 is_stmt 0 view .LVU287
 1039 000e 9000     		lsls	r0, r2, #2
 1040              	.LVL73:
 763:ThirdParty/FreeRTOS/tasks.c **** 
 1041              		.loc 1 763 23 view .LVU288
 1042 0010 FFF7FEFF 		bl	pvPortMalloc
 1043              	.LVL74:
 765:ThirdParty/FreeRTOS/tasks.c ****             {
 1044              		.loc 1 765 13 is_stmt 1 view .LVU289
 765:ThirdParty/FreeRTOS/tasks.c ****             {
 1045              		.loc 1 765 15 is_stmt 0 view .LVU290
 1046 0014 18B3     		cbz	r0, .L74
 1047 0016 8146     		mov	r9, r0
 768:ThirdParty/FreeRTOS/tasks.c **** 
 1048              		.loc 1 768 17 is_stmt 1 view .LVU291
 768:ThirdParty/FreeRTOS/tasks.c **** 
 1049              		.loc 1 768 40 is_stmt 0 view .LVU292
 1050 0018 5820     		movs	r0, #88
 1051              	.LVL75:
 768:ThirdParty/FreeRTOS/tasks.c **** 
 1052              		.loc 1 768 40 view .LVU293
 1053 001a FFF7FEFF 		bl	pvPortMalloc
 1054              	.LVL76:
 770:ThirdParty/FreeRTOS/tasks.c ****                 {
 1055              		.loc 1 770 17 is_stmt 1 view .LVU294
 770:ThirdParty/FreeRTOS/tasks.c ****                 {
 1056              		.loc 1 770 19 is_stmt 0 view .LVU295
 1057 001e 0546     		mov	r5, r0
 1058 0020 B8B1     		cbz	r0, .L73
 772:ThirdParty/FreeRTOS/tasks.c **** 
 1059              		.loc 1 772 21 is_stmt 1 view .LVU296
 1060 0022 5822     		movs	r2, #88
 1061 0024 0021     		movs	r1, #0
 1062 0026 FFF7FEFF 		bl	memset
 1063              	.LVL77:
 775:ThirdParty/FreeRTOS/tasks.c ****                 }
 1064              		.loc 1 775 21 view .LVU297
 775:ThirdParty/FreeRTOS/tasks.c ****                 }
 1065              		.loc 1 775 39 is_stmt 0 view .LVU298
 1066 002a C5F83090 		str	r9, [r5, #48]
 775:ThirdParty/FreeRTOS/tasks.c ****                 }
 1067              		.loc 1 775 39 view .LVU299
 1068              	.LBE163:
 791:ThirdParty/FreeRTOS/tasks.c ****         {
 1069              		.loc 1 791 9 is_stmt 1 view .LVU300
 801:ThirdParty/FreeRTOS/tasks.c ****             prvAddNewTaskToReadyList( pxNewTCB );
 1070              		.loc 1 801 13 view .LVU301
 1071 002e 0023     		movs	r3, #0
 1072 0030 0393     		str	r3, [sp, #12]
 1073 0032 0295     		str	r5, [sp, #8]
 1074 0034 0D9B     		ldr	r3, [sp, #52]
 1075 0036 0193     		str	r3, [sp, #4]
 1076 0038 0C9B     		ldr	r3, [sp, #48]
 1077 003a 0093     		str	r3, [sp]
 1078 003c 3346     		mov	r3, r6
 1079 003e 2246     		mov	r2, r4
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 122


 1080 0040 4146     		mov	r1, r8
 1081 0042 3846     		mov	r0, r7
 1082 0044 FFF7FEFF 		bl	prvInitialiseNewTask
 1083              	.LVL78:
 802:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdPASS;
 1084              		.loc 1 802 13 view .LVU302
 1085 0048 2846     		mov	r0, r5
 1086 004a FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1087              	.LVL79:
 803:ThirdParty/FreeRTOS/tasks.c ****         }
 1088              		.loc 1 803 13 view .LVU303
 803:ThirdParty/FreeRTOS/tasks.c ****         }
 1089              		.loc 1 803 21 is_stmt 0 view .LVU304
 1090 004e 0120     		movs	r0, #1
 1091 0050 07E0     		b	.L71
 1092              	.LVL80:
 1093              	.L73:
 1094              	.LBB164:
 781:ThirdParty/FreeRTOS/tasks.c ****                 }
 1095              		.loc 1 781 21 is_stmt 1 view .LVU305
 1096 0052 4846     		mov	r0, r9
 1097              	.LVL81:
 781:ThirdParty/FreeRTOS/tasks.c ****                 }
 1098              		.loc 1 781 21 is_stmt 0 view .LVU306
 1099 0054 FFF7FEFF 		bl	vPortFree
 1100              	.LVL82:
 781:ThirdParty/FreeRTOS/tasks.c ****                 }
 1101              		.loc 1 781 21 view .LVU307
 1102              	.LBE164:
 791:ThirdParty/FreeRTOS/tasks.c ****         {
 1103              		.loc 1 791 9 is_stmt 1 view .LVU308
 807:ThirdParty/FreeRTOS/tasks.c ****         }
 1104              		.loc 1 807 21 is_stmt 0 view .LVU309
 1105 0058 4FF0FF30 		mov	r0, #-1
 1106 005c 01E0     		b	.L71
 1107              	.LVL83:
 1108              	.L74:
 807:ThirdParty/FreeRTOS/tasks.c ****         }
 1109              		.loc 1 807 21 view .LVU310
 1110 005e 4FF0FF30 		mov	r0, #-1
 1111              	.LVL84:
 810:ThirdParty/FreeRTOS/tasks.c ****     }
 1112              		.loc 1 810 9 is_stmt 1 view .LVU311
 1113              	.L71:
 811:ThirdParty/FreeRTOS/tasks.c **** 
 1114              		.loc 1 811 5 is_stmt 0 view .LVU312
 1115 0062 05B0     		add	sp, sp, #20
 1116              	.LCFI10:
 1117              		.cfi_def_cfa_offset 28
 1118              		@ sp needed
 1119 0064 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 811:ThirdParty/FreeRTOS/tasks.c **** 
 1120              		.loc 1 811 5 view .LVU313
 1121              		.cfi_endproc
 1122              	.LFE5:
 1124              		.section	.text.vTaskDelete,"ax",%progbits
 1125              		.align	1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 123


 1126              		.global	vTaskDelete
 1127              		.syntax unified
 1128              		.thumb
 1129              		.thumb_func
 1131              	vTaskDelete:
 1132              	.LVL85:
 1133              	.LFB8:
1113:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1134              		.loc 1 1113 5 is_stmt 1 view -0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
1113:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1138              		.loc 1 1113 5 is_stmt 0 view .LVU315
 1139 0000 38B5     		push	{r3, r4, r5, lr}
 1140              	.LCFI11:
 1141              		.cfi_def_cfa_offset 16
 1142              		.cfi_offset 3, -16
 1143              		.cfi_offset 4, -12
 1144              		.cfi_offset 5, -8
 1145              		.cfi_offset 14, -4
 1146 0002 0446     		mov	r4, r0
1114:ThirdParty/FreeRTOS/tasks.c **** 
 1147              		.loc 1 1114 9 is_stmt 1 view .LVU316
1116:ThirdParty/FreeRTOS/tasks.c ****         {
 1148              		.loc 1 1116 9 view .LVU317
 1149 0004 FFF7FEFF 		bl	vPortEnterCritical
 1150              	.LVL86:
1120:ThirdParty/FreeRTOS/tasks.c **** 
 1151              		.loc 1 1120 13 view .LVU318
1120:ThirdParty/FreeRTOS/tasks.c **** 
 1152              		.loc 1 1120 21 is_stmt 0 view .LVU319
 1153 0008 002C     		cmp	r4, #0
 1154 000a 38D0     		beq	.L87
 1155              	.LVL87:
 1156              	.L77:
1123:ThirdParty/FreeRTOS/tasks.c ****             {
 1157              		.loc 1 1123 13 is_stmt 1 discriminator 4 view .LVU320
1123:ThirdParty/FreeRTOS/tasks.c ****             {
 1158              		.loc 1 1123 17 is_stmt 0 discriminator 4 view .LVU321
 1159 000c 251D     		adds	r5, r4, #4
 1160 000e 2846     		mov	r0, r5
 1161 0010 FFF7FEFF 		bl	uxListRemove
 1162              	.LVL88:
1123:ThirdParty/FreeRTOS/tasks.c ****             {
 1163              		.loc 1 1123 15 discriminator 4 view .LVU322
 1164 0014 70B9     		cbnz	r0, .L78
1125:ThirdParty/FreeRTOS/tasks.c ****             }
 1165              		.loc 1 1125 17 is_stmt 1 view .LVU323
 1166 0016 E26A     		ldr	r2, [r4, #44]
 1167 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1168 001c 9B00     		lsls	r3, r3, #2
 1169 001e 2949     		ldr	r1, .L90
 1170 0020 CB58     		ldr	r3, [r1, r3]
 1171 0022 3BB9     		cbnz	r3, .L78
1125:ThirdParty/FreeRTOS/tasks.c ****             }
 1172              		.loc 1 1125 17 discriminator 1 view .LVU324
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 124


 1173 0024 0123     		movs	r3, #1
 1174 0026 03FA02F2 		lsl	r2, r3, r2
 1175 002a 2749     		ldr	r1, .L90+4
 1176 002c 0B68     		ldr	r3, [r1]
 1177 002e 23EA0203 		bic	r3, r3, r2
 1178 0032 0B60     		str	r3, [r1]
 1179              	.L78:
1129:ThirdParty/FreeRTOS/tasks.c ****             }
 1180              		.loc 1 1129 41 view .LVU325
1133:ThirdParty/FreeRTOS/tasks.c ****             {
 1181              		.loc 1 1133 13 view .LVU326
1133:ThirdParty/FreeRTOS/tasks.c ****             {
 1182              		.loc 1 1133 17 is_stmt 0 view .LVU327
 1183 0034 A36A     		ldr	r3, [r4, #40]
1133:ThirdParty/FreeRTOS/tasks.c ****             {
 1184              		.loc 1 1133 15 view .LVU328
 1185 0036 1BB1     		cbz	r3, .L79
1135:ThirdParty/FreeRTOS/tasks.c ****             }
 1186              		.loc 1 1135 17 is_stmt 1 view .LVU329
1135:ThirdParty/FreeRTOS/tasks.c ****             }
 1187              		.loc 1 1135 26 is_stmt 0 view .LVU330
 1188 0038 04F11800 		add	r0, r4, #24
 1189 003c FFF7FEFF 		bl	uxListRemove
 1190              	.LVL89:
 1191              	.L79:
1139:ThirdParty/FreeRTOS/tasks.c ****             }
 1192              		.loc 1 1139 41 is_stmt 1 view .LVU331
1146:ThirdParty/FreeRTOS/tasks.c **** 
 1193              		.loc 1 1146 13 view .LVU332
1146:ThirdParty/FreeRTOS/tasks.c **** 
 1194              		.loc 1 1146 25 is_stmt 0 view .LVU333
 1195 0040 224A     		ldr	r2, .L90+8
 1196 0042 1368     		ldr	r3, [r2]
 1197 0044 0133     		adds	r3, r3, #1
 1198 0046 1360     		str	r3, [r2]
1148:ThirdParty/FreeRTOS/tasks.c ****             {
 1199              		.loc 1 1148 13 is_stmt 1 view .LVU334
1148:ThirdParty/FreeRTOS/tasks.c ****             {
 1200              		.loc 1 1148 23 is_stmt 0 view .LVU335
 1201 0048 214B     		ldr	r3, .L90+12
 1202 004a 1B68     		ldr	r3, [r3]
1148:ThirdParty/FreeRTOS/tasks.c ****             {
 1203              		.loc 1 1148 15 view .LVU336
 1204 004c A342     		cmp	r3, r4
 1205 004e 19D0     		beq	.L88
1175:ThirdParty/FreeRTOS/tasks.c ****                 traceTASK_DELETE( pxTCB );
 1206              		.loc 1 1175 17 is_stmt 1 view .LVU337
 1207 0050 204A     		ldr	r2, .L90+16
 1208 0052 1368     		ldr	r3, [r2]
 1209 0054 013B     		subs	r3, r3, #1
 1210 0056 1360     		str	r3, [r2]
1176:ThirdParty/FreeRTOS/tasks.c **** 
 1211              		.loc 1 1176 42 view .LVU338
1180:ThirdParty/FreeRTOS/tasks.c ****             }
 1212              		.loc 1 1180 17 view .LVU339
 1213 0058 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1214              	.LVL90:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 125


 1215              	.L81:
1183:ThirdParty/FreeRTOS/tasks.c **** 
 1216              		.loc 1 1183 9 view .LVU340
 1217 005c FFF7FEFF 		bl	vPortExitCritical
 1218              	.LVL91:
1188:ThirdParty/FreeRTOS/tasks.c ****         {
 1219              		.loc 1 1188 9 view .LVU341
1188:ThirdParty/FreeRTOS/tasks.c ****         {
 1220              		.loc 1 1188 19 is_stmt 0 view .LVU342
 1221 0060 1B4B     		ldr	r3, .L90+12
 1222 0062 1B68     		ldr	r3, [r3]
1188:ThirdParty/FreeRTOS/tasks.c ****         {
 1223              		.loc 1 1188 11 view .LVU343
 1224 0064 A342     		cmp	r3, r4
 1225 0066 02D0     		beq	.L82
1190:ThirdParty/FreeRTOS/tasks.c ****         }
 1226              		.loc 1 1190 13 is_stmt 1 view .LVU344
 1227 0068 2046     		mov	r0, r4
 1228 006a FFF7FEFF 		bl	prvDeleteTCB
 1229              	.LVL92:
 1230              	.L82:
1195:ThirdParty/FreeRTOS/tasks.c ****         {
 1231              		.loc 1 1195 9 view .LVU345
1195:ThirdParty/FreeRTOS/tasks.c ****         {
 1232              		.loc 1 1195 31 is_stmt 0 view .LVU346
 1233 006e 1A4B     		ldr	r3, .L90+20
 1234 0070 1B68     		ldr	r3, [r3]
1195:ThirdParty/FreeRTOS/tasks.c ****         {
 1235              		.loc 1 1195 11 view .LVU347
 1236 0072 1BB1     		cbz	r3, .L76
1197:ThirdParty/FreeRTOS/tasks.c ****             {
 1237              		.loc 1 1197 13 is_stmt 1 view .LVU348
1197:ThirdParty/FreeRTOS/tasks.c ****             {
 1238              		.loc 1 1197 23 is_stmt 0 view .LVU349
 1239 0074 164B     		ldr	r3, .L90+12
 1240 0076 1B68     		ldr	r3, [r3]
1197:ThirdParty/FreeRTOS/tasks.c ****             {
 1241              		.loc 1 1197 15 view .LVU350
 1242 0078 A342     		cmp	r3, r4
 1243 007a 0CD0     		beq	.L89
 1244              	.L76:
1207:ThirdParty/FreeRTOS/tasks.c **** 
 1245              		.loc 1 1207 5 view .LVU351
 1246 007c 38BD     		pop	{r3, r4, r5, pc}
 1247              	.LVL93:
 1248              	.L87:
1120:ThirdParty/FreeRTOS/tasks.c **** 
 1249              		.loc 1 1120 21 discriminator 1 view .LVU352
 1250 007e 144B     		ldr	r3, .L90+12
 1251 0080 1C68     		ldr	r4, [r3]
 1252              	.LVL94:
1120:ThirdParty/FreeRTOS/tasks.c **** 
 1253              		.loc 1 1120 21 discriminator 1 view .LVU353
 1254 0082 C3E7     		b	.L77
 1255              	.LVL95:
 1256              	.L88:
1155:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 126


 1257              		.loc 1 1155 17 is_stmt 1 view .LVU354
 1258 0084 2946     		mov	r1, r5
 1259 0086 1548     		ldr	r0, .L90+24
 1260 0088 FFF7FEFF 		bl	vListInsertEnd
 1261              	.LVL96:
1160:ThirdParty/FreeRTOS/tasks.c **** 
 1262              		.loc 1 1160 17 view .LVU355
 1263 008c 144A     		ldr	r2, .L90+28
 1264 008e 1368     		ldr	r3, [r2]
 1265 0090 0133     		adds	r3, r3, #1
 1266 0092 1360     		str	r3, [r2]
1164:ThirdParty/FreeRTOS/tasks.c **** 
 1267              		.loc 1 1164 42 view .LVU356
1171:ThirdParty/FreeRTOS/tasks.c ****             }
 1268              		.loc 1 1171 66 view .LVU357
 1269 0094 E2E7     		b	.L81
 1270              	.L89:
1199:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1271              		.loc 1 1199 17 view .LVU358
 1272 0096 134B     		ldr	r3, .L90+32
 1273 0098 1B68     		ldr	r3, [r3]
 1274 009a 43B1     		cbz	r3, .L84
1199:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1275              		.loc 1 1199 17 view .LVU359
 1276              	.LBB165:
 1277              	.LBI165:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1278              		.loc 2 194 34 view .LVU360
 1279              	.LBB166:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1280              		.loc 2 196 9 view .LVU361
 1281              		.loc 2 198 9 view .LVU362
 1282              		.syntax unified
 1283              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1284 009c 4FF05003 			mov r3, #80												
 1285 00a0 83F31188 		msr basepri, r3											
 1286 00a4 BFF36F8F 		isb														
 1287 00a8 BFF34F8F 		dsb														
 1288              	
 1289              	@ 0 "" 2
 1290              	.LVL97:
 1291              		.thumb
 1292              		.syntax unified
 1293              	.L85:
 1294              		.loc 2 198 9 is_stmt 0 view .LVU363
 1295              	.LBE166:
 1296              	.LBE165:
1199:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1297              		.loc 1 1199 17 is_stmt 1 discriminator 1 view .LVU364
1199:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1298              		.loc 1 1199 17 discriminator 1 view .LVU365
 1299 00ac FEE7     		b	.L85
 1300              	.L84:
1199:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 1301              		.loc 1 1199 58 discriminator 2 view .LVU366
1200:ThirdParty/FreeRTOS/tasks.c ****             }
 1302              		.loc 1 1200 17 discriminator 2 view .LVU367
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 127


 1303 00ae 4FF0E023 		mov	r3, #-536813568
 1304 00b2 4FF08052 		mov	r2, #268435456
 1305 00b6 C3F8042D 		str	r2, [r3, #3332]
1200:ThirdParty/FreeRTOS/tasks.c ****             }
 1306              		.loc 1 1200 17 discriminator 2 view .LVU368
 1307              		.syntax unified
 1308              	@ 1200 "ThirdParty/FreeRTOS/tasks.c" 1
 1309 00ba BFF34F8F 		dsb
 1310              	@ 0 "" 2
1200:ThirdParty/FreeRTOS/tasks.c ****             }
 1311              		.loc 1 1200 17 discriminator 2 view .LVU369
 1312              	@ 1200 "ThirdParty/FreeRTOS/tasks.c" 1
 1313 00be BFF36F8F 		isb
 1314              	@ 0 "" 2
1200:ThirdParty/FreeRTOS/tasks.c ****             }
 1315              		.loc 1 1200 39 discriminator 2 view .LVU370
1204:ThirdParty/FreeRTOS/tasks.c ****             }
 1316              		.loc 1 1204 41 discriminator 2 view .LVU371
1207:ThirdParty/FreeRTOS/tasks.c **** 
 1317              		.loc 1 1207 5 is_stmt 0 discriminator 2 view .LVU372
 1318              		.thumb
 1319              		.syntax unified
 1320 00c2 DBE7     		b	.L76
 1321              	.L91:
 1322              		.align	2
 1323              	.L90:
 1324 00c4 00000000 		.word	pxReadyTasksLists
 1325 00c8 00000000 		.word	uxTopReadyPriority
 1326 00cc 00000000 		.word	uxTaskNumber
 1327 00d0 00000000 		.word	pxCurrentTCB
 1328 00d4 00000000 		.word	uxCurrentNumberOfTasks
 1329 00d8 00000000 		.word	xSchedulerRunning
 1330 00dc 00000000 		.word	xTasksWaitingTermination
 1331 00e0 00000000 		.word	uxDeletedTasksWaitingCleanUp
 1332 00e4 00000000 		.word	uxSchedulerSuspended
 1333              		.cfi_endproc
 1334              	.LFE8:
 1336              		.section	.text.eTaskGetState,"ax",%progbits
 1337              		.align	1
 1338              		.global	eTaskGetState
 1339              		.syntax unified
 1340              		.thumb
 1341              		.thumb_func
 1343              	eTaskGetState:
 1344              	.LVL98:
 1345              	.LFB11:
1347:ThirdParty/FreeRTOS/tasks.c ****         eTaskState eReturn;
 1346              		.loc 1 1347 5 is_stmt 1 view -0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
1347:ThirdParty/FreeRTOS/tasks.c ****         eTaskState eReturn;
 1350              		.loc 1 1347 5 is_stmt 0 view .LVU374
 1351 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1352              	.LCFI12:
 1353              		.cfi_def_cfa_offset 24
 1354              		.cfi_offset 3, -24
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 128


 1355              		.cfi_offset 4, -20
 1356              		.cfi_offset 5, -16
 1357              		.cfi_offset 6, -12
 1358              		.cfi_offset 7, -8
 1359              		.cfi_offset 14, -4
1348:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxStateList;
 1360              		.loc 1 1348 9 is_stmt 1 view .LVU375
1349:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxDelayedList;
 1361              		.loc 1 1349 9 view .LVU376
1350:ThirdParty/FreeRTOS/tasks.c ****         List_t const * pxOverflowedDelayedList;
 1362              		.loc 1 1350 9 view .LVU377
1351:ThirdParty/FreeRTOS/tasks.c ****         const TCB_t * const pxTCB = xTask;
 1363              		.loc 1 1351 9 view .LVU378
1352:ThirdParty/FreeRTOS/tasks.c **** 
 1364              		.loc 1 1352 9 view .LVU379
 1365              	.LVL99:
1354:ThirdParty/FreeRTOS/tasks.c **** 
 1366              		.loc 1 1354 9 view .LVU380
 1367 0002 D0B1     		cbz	r0, .L107
 1368 0004 0446     		mov	r4, r0
1354:ThirdParty/FreeRTOS/tasks.c **** 
 1369              		.loc 1 1354 30 discriminator 2 view .LVU381
1356:ThirdParty/FreeRTOS/tasks.c ****         {
 1370              		.loc 1 1356 9 discriminator 2 view .LVU382
1356:ThirdParty/FreeRTOS/tasks.c ****         {
 1371              		.loc 1 1356 19 is_stmt 0 discriminator 2 view .LVU383
 1372 0006 204B     		ldr	r3, .L110
 1373 0008 1B68     		ldr	r3, [r3]
1356:ThirdParty/FreeRTOS/tasks.c ****         {
 1374              		.loc 1 1356 11 discriminator 2 view .LVU384
 1375 000a 8342     		cmp	r3, r0
 1376 000c 31D0     		beq	.L99
1363:ThirdParty/FreeRTOS/tasks.c ****             {
 1377              		.loc 1 1363 13 is_stmt 1 view .LVU385
 1378 000e FFF7FEFF 		bl	vPortEnterCritical
 1379              	.LVL100:
1365:ThirdParty/FreeRTOS/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
 1380              		.loc 1 1365 17 view .LVU386
1365:ThirdParty/FreeRTOS/tasks.c ****                 pxDelayedList = pxDelayedTaskList;
 1381              		.loc 1 1365 29 is_stmt 0 view .LVU387
 1382 0012 6569     		ldr	r5, [r4, #20]
 1383              	.LVL101:
1366:ThirdParty/FreeRTOS/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 1384              		.loc 1 1366 17 is_stmt 1 view .LVU388
1366:ThirdParty/FreeRTOS/tasks.c ****                 pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 1385              		.loc 1 1366 31 is_stmt 0 view .LVU389
 1386 0014 1D4B     		ldr	r3, .L110+4
 1387 0016 1E68     		ldr	r6, [r3]
 1388              	.LVL102:
1367:ThirdParty/FreeRTOS/tasks.c ****             }
 1389              		.loc 1 1367 17 is_stmt 1 view .LVU390
1367:ThirdParty/FreeRTOS/tasks.c ****             }
 1390              		.loc 1 1367 41 is_stmt 0 view .LVU391
 1391 0018 1D4B     		ldr	r3, .L110+8
 1392 001a 1F68     		ldr	r7, [r3]
 1393              	.LVL103:
1369:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 129


 1394              		.loc 1 1369 13 is_stmt 1 view .LVU392
 1395 001c FFF7FEFF 		bl	vPortExitCritical
 1396              	.LVL104:
1371:ThirdParty/FreeRTOS/tasks.c ****             {
 1397              		.loc 1 1371 13 view .LVU393
1371:ThirdParty/FreeRTOS/tasks.c ****             {
 1398              		.loc 1 1371 15 is_stmt 0 view .LVU394
 1399 0020 B542     		cmp	r5, r6
 1400 0022 28D0     		beq	.L100
1371:ThirdParty/FreeRTOS/tasks.c ****             {
 1401              		.loc 1 1371 50 discriminator 1 view .LVU395
 1402 0024 BD42     		cmp	r5, r7
 1403 0026 28D0     		beq	.L101
1379:ThirdParty/FreeRTOS/tasks.c ****                 {
 1404              		.loc 1 1379 22 is_stmt 1 view .LVU396
1379:ThirdParty/FreeRTOS/tasks.c ****                 {
 1405              		.loc 1 1379 24 is_stmt 0 view .LVU397
 1406 0028 1A4B     		ldr	r3, .L110+12
 1407 002a 9D42     		cmp	r5, r3
 1408 002c 0ED0     		beq	.L108
1420:ThirdParty/FreeRTOS/tasks.c ****                 {
 1409              		.loc 1 1420 22 is_stmt 1 view .LVU398
1420:ThirdParty/FreeRTOS/tasks.c ****                 {
 1410              		.loc 1 1420 24 is_stmt 0 view .LVU399
 1411 002e 1A4B     		ldr	r3, .L110+16
 1412 0030 9D42     		cmp	r5, r3
 1413 0032 26D0     		beq	.L104
1420:ThirdParty/FreeRTOS/tasks.c ****                 {
 1414              		.loc 1 1420 71 discriminator 1 view .LVU400
 1415 0034 DDB1     		cbz	r5, .L109
1433:ThirdParty/FreeRTOS/tasks.c ****             }
 1416              		.loc 1 1433 25 view .LVU401
 1417 0036 0120     		movs	r0, #1
 1418 0038 1CE0     		b	.L95
 1419              	.LVL105:
 1420              	.L107:
1354:ThirdParty/FreeRTOS/tasks.c **** 
 1421              		.loc 1 1354 9 is_stmt 1 view .LVU402
 1422              	.LBB167:
 1423              	.LBI167:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1424              		.loc 2 194 34 view .LVU403
 1425              	.LBB168:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1426              		.loc 2 196 9 view .LVU404
 1427              		.loc 2 198 9 view .LVU405
 1428              		.syntax unified
 1429              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1430 003a 4FF05003 			mov r3, #80												
 1431 003e 83F31188 		msr basepri, r3											
 1432 0042 BFF36F8F 		isb														
 1433 0046 BFF34F8F 		dsb														
 1434              	
 1435              	@ 0 "" 2
 1436              	.LVL106:
 1437              		.thumb
 1438              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 130


 1439              	.L94:
 1440              		.loc 2 198 9 is_stmt 0 view .LVU406
 1441              	.LBE168:
 1442              	.LBE167:
1354:ThirdParty/FreeRTOS/tasks.c **** 
 1443              		.loc 1 1354 9 is_stmt 1 discriminator 1 view .LVU407
1354:ThirdParty/FreeRTOS/tasks.c **** 
 1444              		.loc 1 1354 9 discriminator 1 view .LVU408
 1445 004a FEE7     		b	.L94
 1446              	.LVL107:
 1447              	.L108:
1384:ThirdParty/FreeRTOS/tasks.c ****                     {
 1448              		.loc 1 1384 21 view .LVU409
1384:ThirdParty/FreeRTOS/tasks.c ****                     {
 1449              		.loc 1 1384 25 is_stmt 0 view .LVU410
 1450 004c A36A     		ldr	r3, [r4, #40]
1384:ThirdParty/FreeRTOS/tasks.c ****                     {
 1451              		.loc 1 1384 23 view .LVU411
 1452 004e 4BB1     		cbz	r3, .L102
1414:ThirdParty/FreeRTOS/tasks.c ****                     }
 1453              		.loc 1 1414 33 view .LVU412
 1454 0050 0220     		movs	r0, #2
 1455 0052 0FE0     		b	.L95
 1456              	.LVL108:
 1457              	.L98:
 1458              	.LBB169:
1399:ThirdParty/FreeRTOS/tasks.c ****                                 {
 1459              		.loc 1 1399 33 is_stmt 1 view .LVU413
1399:ThirdParty/FreeRTOS/tasks.c ****                                 {
 1460              		.loc 1 1399 57 is_stmt 0 view .LVU414
 1461 0054 E218     		adds	r2, r4, r3
 1462 0056 92F85420 		ldrb	r2, [r2, #84]	@ zero_extendqisi2
 1463 005a D2B2     		uxtb	r2, r2
1399:ThirdParty/FreeRTOS/tasks.c ****                                 {
 1464              		.loc 1 1399 35 view .LVU415
 1465 005c 012A     		cmp	r2, #1
 1466 005e 0ED0     		beq	.L103
1397:ThirdParty/FreeRTOS/tasks.c ****                             {
 1467              		.loc 1 1397 85 is_stmt 1 discriminator 2 view .LVU416
 1468 0060 0133     		adds	r3, r3, #1
 1469              	.LVL109:
1397:ThirdParty/FreeRTOS/tasks.c ****                             {
 1470              		.loc 1 1397 85 is_stmt 0 discriminator 2 view .LVU417
 1471 0062 00E0     		b	.L97
 1472              	.LVL110:
 1473              	.L102:
1397:ThirdParty/FreeRTOS/tasks.c ****                             {
 1474              		.loc 1 1397 36 view .LVU418
 1475 0064 0023     		movs	r3, #0
 1476              	.L97:
 1477              	.LVL111:
1397:ThirdParty/FreeRTOS/tasks.c ****                             {
 1478              		.loc 1 1397 43 is_stmt 1 discriminator 1 view .LVU419
 1479 0066 002B     		cmp	r3, #0
 1480 0068 F4DD     		ble	.L98
1395:ThirdParty/FreeRTOS/tasks.c **** 
 1481              		.loc 1 1395 37 is_stmt 0 view .LVU420
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 131


 1482 006a 0320     		movs	r0, #3
 1483 006c 02E0     		b	.L95
 1484              	.LVL112:
 1485              	.L109:
1395:ThirdParty/FreeRTOS/tasks.c **** 
 1486              		.loc 1 1395 37 view .LVU421
 1487              	.LBE169:
1425:ThirdParty/FreeRTOS/tasks.c ****                 }
 1488              		.loc 1 1425 29 view .LVU422
 1489 006e 0420     		movs	r0, #4
 1490 0070 00E0     		b	.L95
 1491              	.LVL113:
 1492              	.L99:
1359:ThirdParty/FreeRTOS/tasks.c ****         }
 1493              		.loc 1 1359 21 view .LVU423
 1494 0072 0020     		movs	r0, #0
 1495              	.LVL114:
 1496              	.L95:
1437:ThirdParty/FreeRTOS/tasks.c ****     } /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1497              		.loc 1 1437 9 is_stmt 1 view .LVU424
1438:ThirdParty/FreeRTOS/tasks.c **** 
 1498              		.loc 1 1438 5 is_stmt 0 view .LVU425
 1499 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1500              	.LVL115:
 1501              	.L100:
1375:ThirdParty/FreeRTOS/tasks.c ****             }
 1502              		.loc 1 1375 25 view .LVU426
 1503 0076 0220     		movs	r0, #2
 1504 0078 FCE7     		b	.L95
 1505              	.L101:
 1506 007a 0220     		movs	r0, #2
 1507 007c FAE7     		b	.L95
 1508              	.LVL116:
 1509              	.L103:
 1510              	.LBB170:
1401:ThirdParty/FreeRTOS/tasks.c ****                                     break;
 1511              		.loc 1 1401 45 view .LVU427
 1512 007e 0220     		movs	r0, #2
 1513 0080 F8E7     		b	.L95
 1514              	.LVL117:
 1515              	.L104:
1401:ThirdParty/FreeRTOS/tasks.c ****                                     break;
 1516              		.loc 1 1401 45 view .LVU428
 1517              	.LBE170:
1425:ThirdParty/FreeRTOS/tasks.c ****                 }
 1518              		.loc 1 1425 29 view .LVU429
 1519 0082 0420     		movs	r0, #4
 1520 0084 F6E7     		b	.L95
 1521              	.L111:
 1522 0086 00BF     		.align	2
 1523              	.L110:
 1524 0088 00000000 		.word	pxCurrentTCB
 1525 008c 00000000 		.word	pxDelayedTaskList
 1526 0090 00000000 		.word	pxOverflowDelayedTaskList
 1527 0094 00000000 		.word	xSuspendedTaskList
 1528 0098 00000000 		.word	xTasksWaitingTermination
 1529              		.cfi_endproc
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 132


 1530              	.LFE11:
 1532              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1533              		.align	1
 1534              		.global	uxTaskPriorityGet
 1535              		.syntax unified
 1536              		.thumb
 1537              		.thumb_func
 1539              	uxTaskPriorityGet:
 1540              	.LVL118:
 1541              	.LFB12:
1446:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1542              		.loc 1 1446 5 is_stmt 1 view -0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
1446:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1546              		.loc 1 1446 5 is_stmt 0 view .LVU431
 1547 0000 10B5     		push	{r4, lr}
 1548              	.LCFI13:
 1549              		.cfi_def_cfa_offset 8
 1550              		.cfi_offset 4, -8
 1551              		.cfi_offset 14, -4
 1552 0002 0446     		mov	r4, r0
1447:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
 1553              		.loc 1 1447 9 is_stmt 1 view .LVU432
1448:ThirdParty/FreeRTOS/tasks.c **** 
 1554              		.loc 1 1448 9 view .LVU433
1450:ThirdParty/FreeRTOS/tasks.c ****         {
 1555              		.loc 1 1450 9 view .LVU434
 1556 0004 FFF7FEFF 		bl	vPortEnterCritical
 1557              	.LVL119:
1454:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1558              		.loc 1 1454 13 view .LVU435
1454:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1559              		.loc 1 1454 21 is_stmt 0 view .LVU436
 1560 0008 24B1     		cbz	r4, .L115
 1561              	.LVL120:
 1562              	.L113:
1455:ThirdParty/FreeRTOS/tasks.c ****         }
 1563              		.loc 1 1455 13 is_stmt 1 discriminator 4 view .LVU437
1455:ThirdParty/FreeRTOS/tasks.c ****         }
 1564              		.loc 1 1455 22 is_stmt 0 discriminator 4 view .LVU438
 1565 000a E46A     		ldr	r4, [r4, #44]
 1566              	.LVL121:
1457:ThirdParty/FreeRTOS/tasks.c **** 
 1567              		.loc 1 1457 9 is_stmt 1 discriminator 4 view .LVU439
 1568 000c FFF7FEFF 		bl	vPortExitCritical
 1569              	.LVL122:
1459:ThirdParty/FreeRTOS/tasks.c ****     }
 1570              		.loc 1 1459 9 discriminator 4 view .LVU440
1460:ThirdParty/FreeRTOS/tasks.c **** 
 1571              		.loc 1 1460 5 is_stmt 0 discriminator 4 view .LVU441
 1572 0010 2046     		mov	r0, r4
 1573 0012 10BD     		pop	{r4, pc}
 1574              	.LVL123:
 1575              	.L115:
1454:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 133


 1576              		.loc 1 1454 21 discriminator 1 view .LVU442
 1577 0014 014B     		ldr	r3, .L116
 1578 0016 1C68     		ldr	r4, [r3]
 1579              	.LVL124:
1454:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1580              		.loc 1 1454 21 discriminator 1 view .LVU443
 1581 0018 F7E7     		b	.L113
 1582              	.L117:
 1583 001a 00BF     		.align	2
 1584              	.L116:
 1585 001c 00000000 		.word	pxCurrentTCB
 1586              		.cfi_endproc
 1587              	.LFE12:
 1589              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1590              		.align	1
 1591              		.global	uxTaskPriorityGetFromISR
 1592              		.syntax unified
 1593              		.thumb
 1594              		.thumb_func
 1596              	uxTaskPriorityGetFromISR:
 1597              	.LVL125:
 1598              	.LFB13:
1468:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1599              		.loc 1 1468 5 is_stmt 1 view -0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
1468:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 1603              		.loc 1 1468 5 is_stmt 0 view .LVU445
 1604 0000 10B5     		push	{r4, lr}
 1605              	.LCFI14:
 1606              		.cfi_def_cfa_offset 8
 1607              		.cfi_offset 4, -8
 1608              		.cfi_offset 14, -4
 1609 0002 0446     		mov	r4, r0
1469:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn, uxSavedInterruptState;
 1610              		.loc 1 1469 9 is_stmt 1 view .LVU446
1470:ThirdParty/FreeRTOS/tasks.c **** 
 1611              		.loc 1 1470 9 view .LVU447
1488:ThirdParty/FreeRTOS/tasks.c **** 
 1612              		.loc 1 1488 9 view .LVU448
 1613 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1614              	.LVL126:
1490:ThirdParty/FreeRTOS/tasks.c ****         {
 1615              		.loc 1 1490 9 view .LVU449
 1616              	.LBB171:
 1617              	.LBI171:
 199:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 200:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %0, %1												\n"\
 201:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %0											\n"\
 202:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 203:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 204:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 205:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 206:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 207:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 208:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 134


 209:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1618              		.loc 2 210 38 view .LVU450
 1619              	.LBB172:
 211:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1620              		.loc 2 212 9 view .LVU451
 213:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1621              		.loc 2 214 9 view .LVU452
 1622              		.syntax unified
 1623              	@ 214 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1624 0008 EFF31183 			mrs r3, basepri											
 1625 000c 4FF05002 		mov r2, #80												
 1626 0010 82F31188 		msr basepri, r2											
 1627 0014 BFF36F8F 		isb														
 1628 0018 BFF34F8F 		dsb														
 1629              	
 1630              	@ 0 "" 2
 1631              	.LVL127:
 215:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 216:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mrs %0, basepri											\n"\
 217:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	mov %1, %2												\n"\
 218:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	msr basepri, %1											\n"\
 219:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	isb														\n"\
 220:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             "	dsb														\n"\
 221:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             : "=r" ( ulOriginalBASEPRI ), "=r" ( ulNewBASEPRI ) : "i" ( configMAX_SYSCALL_INTERRUPT
 222:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         );
 223:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 224:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* This return will not be reached but is necessary to prevent compiler
 225:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * warnings. */
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return ulOriginalBASEPRI;
 1632              		.loc 2 226 9 view .LVU453
 1633              		.loc 2 226 9 is_stmt 0 view .LVU454
 1634              		.thumb
 1635              		.syntax unified
 1636              	.LBE172:
 1637              	.LBE171:
1494:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1638              		.loc 1 1494 13 is_stmt 1 view .LVU455
1494:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1639              		.loc 1 1494 21 is_stmt 0 view .LVU456
 1640 001c 1CB1     		cbz	r4, .L121
 1641              	.LVL128:
 1642              	.L119:
1495:ThirdParty/FreeRTOS/tasks.c ****         }
 1643              		.loc 1 1495 13 is_stmt 1 discriminator 4 view .LVU457
1495:ThirdParty/FreeRTOS/tasks.c ****         }
 1644              		.loc 1 1495 22 is_stmt 0 discriminator 4 view .LVU458
 1645 001e E06A     		ldr	r0, [r4, #44]
 1646              	.LVL129:
1497:ThirdParty/FreeRTOS/tasks.c **** 
 1647              		.loc 1 1497 9 is_stmt 1 discriminator 4 view .LVU459
 1648              	.LBB173:
 1649              	.LBI173:
 227:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 228:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 135


 229:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1650              		.loc 2 230 34 discriminator 4 view .LVU460
 1651              	.LBB174:
 231:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 232:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
 1652              		.loc 2 232 9 discriminator 4 view .LVU461
 1653              		.syntax unified
 1654              	@ 232 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1655 0020 83F31188 			msr basepri, r3	
 1656              	@ 0 "" 2
 1657              		.thumb
 1658              		.syntax unified
 1659              	.LBE174:
 1660              	.LBE173:
1499:ThirdParty/FreeRTOS/tasks.c ****     }
 1661              		.loc 1 1499 9 discriminator 4 view .LVU462
1500:ThirdParty/FreeRTOS/tasks.c **** 
 1662              		.loc 1 1500 5 is_stmt 0 discriminator 4 view .LVU463
 1663 0024 10BD     		pop	{r4, pc}
 1664              	.LVL130:
 1665              	.L121:
1494:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1666              		.loc 1 1494 21 discriminator 1 view .LVU464
 1667 0026 014A     		ldr	r2, .L122
 1668 0028 1468     		ldr	r4, [r2]
 1669              	.LVL131:
1494:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxPriority;
 1670              		.loc 1 1494 21 discriminator 1 view .LVU465
 1671 002a F8E7     		b	.L119
 1672              	.L123:
 1673              		.align	2
 1674              	.L122:
 1675 002c 00000000 		.word	pxCurrentTCB
 1676              		.cfi_endproc
 1677              	.LFE13:
 1679              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1680              		.align	1
 1681              		.global	vTaskPrioritySet
 1682              		.syntax unified
 1683              		.thumb
 1684              		.thumb_func
 1686              	vTaskPrioritySet:
 1687              	.LVL132:
 1688              	.LFB14:
1509:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1689              		.loc 1 1509 5 is_stmt 1 view -0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 0
 1692              		@ frame_needed = 0, uses_anonymous_args = 0
1509:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 1693              		.loc 1 1509 5 is_stmt 0 view .LVU467
 1694 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1695              	.LCFI15:
 1696              		.cfi_def_cfa_offset 24
 1697              		.cfi_offset 3, -24
 1698              		.cfi_offset 4, -20
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 136


 1699              		.cfi_offset 5, -16
 1700              		.cfi_offset 6, -12
 1701              		.cfi_offset 7, -8
 1702              		.cfi_offset 14, -4
1510:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1703              		.loc 1 1510 9 is_stmt 1 view .LVU468
1511:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 1704              		.loc 1 1511 9 view .LVU469
1512:ThirdParty/FreeRTOS/tasks.c **** 
 1705              		.loc 1 1512 9 view .LVU470
 1706              	.LVL133:
1514:ThirdParty/FreeRTOS/tasks.c **** 
 1707              		.loc 1 1514 9 view .LVU471
 1708 0002 0429     		cmp	r1, #4
 1709 0004 08D9     		bls	.L125
1514:ThirdParty/FreeRTOS/tasks.c **** 
 1710              		.loc 1 1514 9 view .LVU472
 1711              	.LBB175:
 1712              	.LBI175:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 1713              		.loc 2 194 34 view .LVU473
 1714              	.LBB176:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 1715              		.loc 2 196 9 view .LVU474
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1716              		.loc 2 198 9 view .LVU475
 1717              		.syntax unified
 1718              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 1719 0006 4FF05003 			mov r3, #80												
 1720 000a 83F31188 		msr basepri, r3											
 1721 000e BFF36F8F 		isb														
 1722 0012 BFF34F8F 		dsb														
 1723              	
 1724              	@ 0 "" 2
 1725              	.LVL134:
 1726              		.thumb
 1727              		.syntax unified
 1728              	.L126:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 1729              		.loc 2 198 9 is_stmt 0 view .LVU476
 1730              	.LBE176:
 1731              	.LBE175:
1514:ThirdParty/FreeRTOS/tasks.c **** 
 1732              		.loc 1 1514 9 is_stmt 1 discriminator 1 view .LVU477
1514:ThirdParty/FreeRTOS/tasks.c **** 
 1733              		.loc 1 1514 9 discriminator 1 view .LVU478
 1734 0016 FEE7     		b	.L126
 1735              	.L125:
 1736 0018 0446     		mov	r4, r0
 1737 001a 0D46     		mov	r5, r1
1514:ThirdParty/FreeRTOS/tasks.c **** 
 1738              		.loc 1 1514 61 view .LVU479
1517:ThirdParty/FreeRTOS/tasks.c ****         {
 1739              		.loc 1 1517 9 view .LVU480
 1740              	.LVL135:
1523:ThirdParty/FreeRTOS/tasks.c ****         }
 1741              		.loc 1 1523 37 view .LVU481
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 137


1526:ThirdParty/FreeRTOS/tasks.c ****         {
 1742              		.loc 1 1526 9 view .LVU482
 1743 001c FFF7FEFF 		bl	vPortEnterCritical
 1744              	.LVL136:
1530:ThirdParty/FreeRTOS/tasks.c **** 
 1745              		.loc 1 1530 13 view .LVU483
1530:ThirdParty/FreeRTOS/tasks.c **** 
 1746              		.loc 1 1530 21 is_stmt 0 view .LVU484
 1747 0020 74B1     		cbz	r4, .L139
 1748              	.LVL137:
 1749              	.L127:
1532:ThirdParty/FreeRTOS/tasks.c **** 
 1750              		.loc 1 1532 59 is_stmt 1 discriminator 4 view .LVU485
1536:ThirdParty/FreeRTOS/tasks.c ****             }
 1751              		.loc 1 1536 17 discriminator 4 view .LVU486
1536:ThirdParty/FreeRTOS/tasks.c ****             }
 1752              		.loc 1 1536 39 is_stmt 0 discriminator 4 view .LVU487
 1753 0022 A36C     		ldr	r3, [r4, #72]
 1754              	.LVL138:
1544:ThirdParty/FreeRTOS/tasks.c ****             {
 1755              		.loc 1 1544 13 is_stmt 1 discriminator 4 view .LVU488
1544:ThirdParty/FreeRTOS/tasks.c ****             {
 1756              		.loc 1 1544 15 is_stmt 0 discriminator 4 view .LVU489
 1757 0024 9D42     		cmp	r5, r3
 1758 0026 30D0     		beq	.L128
1548:ThirdParty/FreeRTOS/tasks.c ****                 {
 1759              		.loc 1 1548 17 is_stmt 1 view .LVU490
1548:ThirdParty/FreeRTOS/tasks.c ****                 {
 1760              		.loc 1 1548 19 is_stmt 0 view .LVU491
 1761 0028 0DD9     		bls	.L129
1550:ThirdParty/FreeRTOS/tasks.c ****                     {
 1762              		.loc 1 1550 21 is_stmt 1 view .LVU492
1550:ThirdParty/FreeRTOS/tasks.c ****                     {
 1763              		.loc 1 1550 31 is_stmt 0 view .LVU493
 1764 002a 324A     		ldr	r2, .L142
 1765 002c 1268     		ldr	r2, [r2]
1550:ThirdParty/FreeRTOS/tasks.c ****                     {
 1766              		.loc 1 1550 23 view .LVU494
 1767 002e A242     		cmp	r2, r4
 1768 0030 2ED0     		beq	.L135
1555:ThirdParty/FreeRTOS/tasks.c ****                         {
 1769              		.loc 1 1555 25 is_stmt 1 view .LVU495
1555:ThirdParty/FreeRTOS/tasks.c ****                         {
 1770              		.loc 1 1555 58 is_stmt 0 view .LVU496
 1771 0032 304A     		ldr	r2, .L142
 1772 0034 1268     		ldr	r2, [r2]
 1773 0036 D26A     		ldr	r2, [r2, #44]
1555:ThirdParty/FreeRTOS/tasks.c ****                         {
 1774              		.loc 1 1555 27 view .LVU497
 1775 0038 AA42     		cmp	r2, r5
 1776 003a 2BD9     		bls	.L136
1512:ThirdParty/FreeRTOS/tasks.c **** 
 1777              		.loc 1 1512 20 view .LVU498
 1778 003c 0027     		movs	r7, #0
 1779 003e 07E0     		b	.L130
 1780              	.LVL139:
 1781              	.L139:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 138


1530:ThirdParty/FreeRTOS/tasks.c **** 
 1782              		.loc 1 1530 21 discriminator 1 view .LVU499
 1783 0040 2C4B     		ldr	r3, .L142
 1784 0042 1C68     		ldr	r4, [r3]
 1785              	.LVL140:
1530:ThirdParty/FreeRTOS/tasks.c **** 
 1786              		.loc 1 1530 21 discriminator 1 view .LVU500
 1787 0044 EDE7     		b	.L127
 1788              	.LVL141:
 1789              	.L129:
1571:ThirdParty/FreeRTOS/tasks.c ****                 {
 1790              		.loc 1 1571 22 is_stmt 1 view .LVU501
1571:ThirdParty/FreeRTOS/tasks.c ****                 {
 1791              		.loc 1 1571 32 is_stmt 0 view .LVU502
 1792 0046 2B4A     		ldr	r2, .L142
 1793 0048 1268     		ldr	r2, [r2]
1571:ThirdParty/FreeRTOS/tasks.c ****                 {
 1794              		.loc 1 1571 24 view .LVU503
 1795 004a A242     		cmp	r2, r4
 1796 004c 24D0     		beq	.L137
1512:ThirdParty/FreeRTOS/tasks.c **** 
 1797              		.loc 1 1512 20 view .LVU504
 1798 004e 0027     		movs	r7, #0
 1799              	.L130:
 1800              	.LVL142:
1583:ThirdParty/FreeRTOS/tasks.c **** 
 1801              		.loc 1 1583 17 is_stmt 1 view .LVU505
1588:ThirdParty/FreeRTOS/tasks.c **** 
 1802              		.loc 1 1588 17 view .LVU506
1588:ThirdParty/FreeRTOS/tasks.c **** 
 1803              		.loc 1 1588 39 is_stmt 0 view .LVU507
 1804 0050 E66A     		ldr	r6, [r4, #44]
 1805              	.LVL143:
1594:ThirdParty/FreeRTOS/tasks.c ****                     {
 1806              		.loc 1 1594 21 is_stmt 1 view .LVU508
1594:ThirdParty/FreeRTOS/tasks.c ****                     {
 1807              		.loc 1 1594 23 is_stmt 0 view .LVU509
 1808 0052 B342     		cmp	r3, r6
 1809 0054 22D0     		beq	.L140
 1810              	.L131:
1600:ThirdParty/FreeRTOS/tasks.c ****                     }
 1811              		.loc 1 1600 49 is_stmt 1 view .LVU510
1604:ThirdParty/FreeRTOS/tasks.c ****                 }
 1812              		.loc 1 1604 21 view .LVU511
1604:ThirdParty/FreeRTOS/tasks.c ****                 }
 1813              		.loc 1 1604 43 is_stmt 0 view .LVU512
 1814 0056 A564     		str	r5, [r4, #72]
1614:ThirdParty/FreeRTOS/tasks.c ****                 {
 1815              		.loc 1 1614 17 is_stmt 1 view .LVU513
1614:ThirdParty/FreeRTOS/tasks.c ****                 {
 1816              		.loc 1 1614 23 is_stmt 0 view .LVU514
 1817 0058 A369     		ldr	r3, [r4, #24]
 1818              	.LVL144:
1614:ThirdParty/FreeRTOS/tasks.c ****                 {
 1819              		.loc 1 1614 19 view .LVU515
 1820 005a 002B     		cmp	r3, #0
 1821 005c 02DB     		blt	.L132
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 139


1616:ThirdParty/FreeRTOS/tasks.c ****                 }
 1822              		.loc 1 1616 21 is_stmt 1 view .LVU516
 1823 005e C5F10505 		rsb	r5, r5, #5
 1824              	.LVL145:
1616:ThirdParty/FreeRTOS/tasks.c ****                 }
 1825              		.loc 1 1616 21 is_stmt 0 view .LVU517
 1826 0062 A561     		str	r5, [r4, #24]
 1827              	.L132:
1620:ThirdParty/FreeRTOS/tasks.c ****                 }
 1828              		.loc 1 1620 45 is_stmt 1 view .LVU518
1627:ThirdParty/FreeRTOS/tasks.c ****                 {
 1829              		.loc 1 1627 17 view .LVU519
1627:ThirdParty/FreeRTOS/tasks.c ****                 {
 1830              		.loc 1 1627 21 is_stmt 0 view .LVU520
 1831 0064 6169     		ldr	r1, [r4, #20]
 1832 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1833 006a 234B     		ldr	r3, .L142+4
 1834 006c 03EB8203 		add	r3, r3, r2, lsl #2
1627:ThirdParty/FreeRTOS/tasks.c ****                 {
 1835              		.loc 1 1627 19 view .LVU521
 1836 0070 9942     		cmp	r1, r3
 1837 0072 15D0     		beq	.L141
 1838              	.LVL146:
 1839              	.L133:
1648:ThirdParty/FreeRTOS/tasks.c ****                 }
 1840              		.loc 1 1648 45 is_stmt 1 view .LVU522
1651:ThirdParty/FreeRTOS/tasks.c ****                 {
 1841              		.loc 1 1651 17 view .LVU523
1651:ThirdParty/FreeRTOS/tasks.c ****                 {
 1842              		.loc 1 1651 19 is_stmt 0 view .LVU524
 1843 0074 4FB1     		cbz	r7, .L128
1653:ThirdParty/FreeRTOS/tasks.c ****                 }
 1844              		.loc 1 1653 21 is_stmt 1 view .LVU525
 1845 0076 4FF0E023 		mov	r3, #-536813568
 1846 007a 4FF08052 		mov	r2, #268435456
 1847 007e C3F8042D 		str	r2, [r3, #3332]
1653:ThirdParty/FreeRTOS/tasks.c ****                 }
 1848              		.loc 1 1653 21 view .LVU526
 1849              		.syntax unified
 1850              	@ 1653 "ThirdParty/FreeRTOS/tasks.c" 1
 1851 0082 BFF34F8F 		dsb
 1852              	@ 0 "" 2
1653:ThirdParty/FreeRTOS/tasks.c ****                 }
 1853              		.loc 1 1653 21 view .LVU527
 1854              	@ 1653 "ThirdParty/FreeRTOS/tasks.c" 1
 1855 0086 BFF36F8F 		isb
 1856              	@ 0 "" 2
1653:ThirdParty/FreeRTOS/tasks.c ****                 }
 1857              		.loc 1 1653 52 view .LVU528
 1858              	.LVL147:
 1859              		.thumb
 1860              		.syntax unified
 1861              	.L128:
1657:ThirdParty/FreeRTOS/tasks.c ****                 }
 1862              		.loc 1 1657 45 view .LVU529
1662:ThirdParty/FreeRTOS/tasks.c ****             }
 1863              		.loc 1 1662 17 view .LVU530
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 140


1665:ThirdParty/FreeRTOS/tasks.c ****     }
 1864              		.loc 1 1665 9 view .LVU531
 1865 008a FFF7FEFF 		bl	vPortExitCritical
 1866              	.LVL148:
1666:ThirdParty/FreeRTOS/tasks.c **** 
 1867              		.loc 1 1666 5 is_stmt 0 view .LVU532
 1868 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1869              	.LVL149:
 1870              	.L135:
1512:ThirdParty/FreeRTOS/tasks.c **** 
 1871              		.loc 1 1512 20 view .LVU533
 1872 0090 0027     		movs	r7, #0
 1873 0092 DDE7     		b	.L130
 1874              	.L136:
1557:ThirdParty/FreeRTOS/tasks.c ****                         }
 1875              		.loc 1 1557 44 view .LVU534
 1876 0094 0127     		movs	r7, #1
 1877 0096 DBE7     		b	.L130
 1878              	.L137:
1576:ThirdParty/FreeRTOS/tasks.c ****                 }
 1879              		.loc 1 1576 36 view .LVU535
 1880 0098 0127     		movs	r7, #1
 1881 009a D9E7     		b	.L130
 1882              	.LVL150:
 1883              	.L140:
1596:ThirdParty/FreeRTOS/tasks.c ****                     }
 1884              		.loc 1 1596 25 is_stmt 1 view .LVU536
1596:ThirdParty/FreeRTOS/tasks.c ****                     }
 1885              		.loc 1 1596 43 is_stmt 0 view .LVU537
 1886 009c E562     		str	r5, [r4, #44]
 1887 009e DAE7     		b	.L131
 1888              	.LVL151:
 1889              	.L141:
1632:ThirdParty/FreeRTOS/tasks.c ****                     {
 1890              		.loc 1 1632 21 is_stmt 1 view .LVU538
1632:ThirdParty/FreeRTOS/tasks.c ****                     {
 1891              		.loc 1 1632 25 is_stmt 0 view .LVU539
 1892 00a0 251D     		adds	r5, r4, #4
 1893 00a2 2846     		mov	r0, r5
 1894 00a4 FFF7FEFF 		bl	uxListRemove
 1895              	.LVL152:
1632:ThirdParty/FreeRTOS/tasks.c ****                     {
 1896              		.loc 1 1632 23 view .LVU540
 1897 00a8 30B9     		cbnz	r0, .L134
1637:ThirdParty/FreeRTOS/tasks.c ****                     }
 1898              		.loc 1 1637 25 is_stmt 1 view .LVU541
 1899 00aa 0122     		movs	r2, #1
 1900 00ac B240     		lsls	r2, r2, r6
 1901 00ae 1349     		ldr	r1, .L142+8
 1902 00b0 0B68     		ldr	r3, [r1]
 1903 00b2 23EA0203 		bic	r3, r3, r2
 1904 00b6 0B60     		str	r3, [r1]
 1905              	.L134:
1641:ThirdParty/FreeRTOS/tasks.c ****                     }
 1906              		.loc 1 1641 49 view .LVU542
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1907              		.loc 1 1644 21 view .LVU543
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 141


1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1908              		.loc 1 1644 21 view .LVU544
 1909 00b8 E36A     		ldr	r3, [r4, #44]
 1910 00ba 0122     		movs	r2, #1
 1911 00bc 9A40     		lsls	r2, r2, r3
 1912 00be 0F49     		ldr	r1, .L142+8
 1913 00c0 0868     		ldr	r0, [r1]
 1914 00c2 0243     		orrs	r2, r2, r0
 1915 00c4 0A60     		str	r2, [r1]
 1916              	.LBB177:
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1917              		.loc 1 1644 21 view .LVU545
 1918 00c6 0C4A     		ldr	r2, .L142+4
 1919 00c8 03EB8303 		add	r3, r3, r3, lsl #2
 1920 00cc 02EB8303 		add	r3, r2, r3, lsl #2
 1921 00d0 5B68     		ldr	r3, [r3, #4]
 1922              	.LVL153:
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1923              		.loc 1 1644 21 view .LVU546
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1924              		.loc 1 1644 21 view .LVU547
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1925              		.loc 1 1644 21 view .LVU548
 1926 00d2 A360     		str	r3, [r4, #8]
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1927              		.loc 1 1644 21 view .LVU549
 1928 00d4 9968     		ldr	r1, [r3, #8]
 1929 00d6 E160     		str	r1, [r4, #12]
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1930              		.loc 1 1644 21 view .LVU550
 1931 00d8 4D60     		str	r5, [r1, #4]
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1932              		.loc 1 1644 21 view .LVU551
 1933 00da 9D60     		str	r5, [r3, #8]
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1934              		.loc 1 1644 21 view .LVU552
 1935 00dc E36A     		ldr	r3, [r4, #44]
 1936              	.LVL154:
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1937              		.loc 1 1644 21 is_stmt 0 view .LVU553
 1938 00de 03EB8301 		add	r1, r3, r3, lsl #2
 1939 00e2 8800     		lsls	r0, r1, #2
 1940 00e4 02EB8101 		add	r1, r2, r1, lsl #2
 1941 00e8 6161     		str	r1, [r4, #20]
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1942              		.loc 1 1644 21 is_stmt 1 view .LVU554
 1943 00ea 1158     		ldr	r1, [r2, r0]
 1944 00ec 0131     		adds	r1, r1, #1
 1945 00ee 1150     		str	r1, [r2, r0]
 1946              	.LBE177:
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1947              		.loc 1 1644 21 view .LVU555
1644:ThirdParty/FreeRTOS/tasks.c ****                 }
 1948              		.loc 1 1644 51 view .LVU556
 1949 00f0 C0E7     		b	.L133
 1950              	.L143:
 1951 00f2 00BF     		.align	2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 142


 1952              	.L142:
 1953 00f4 00000000 		.word	pxCurrentTCB
 1954 00f8 00000000 		.word	pxReadyTasksLists
 1955 00fc 00000000 		.word	uxTopReadyPriority
 1956              		.cfi_endproc
 1957              	.LFE14:
 1959              		.section	.text.vTaskResume,"ax",%progbits
 1960              		.align	1
 1961              		.global	vTaskResume
 1962              		.syntax unified
 1963              		.thumb
 1964              		.thumb_func
 1966              	vTaskResume:
 1967              	.LVL155:
 1968              	.LFB17:
1826:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1969              		.loc 1 1826 5 view -0
 1970              		.cfi_startproc
 1971              		@ args = 0, pretend = 0, frame = 0
 1972              		@ frame_needed = 0, uses_anonymous_args = 0
1826:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 1973              		.loc 1 1826 5 is_stmt 0 view .LVU558
 1974 0000 38B5     		push	{r3, r4, r5, lr}
 1975              	.LCFI16:
 1976              		.cfi_def_cfa_offset 16
 1977              		.cfi_offset 3, -16
 1978              		.cfi_offset 4, -12
 1979              		.cfi_offset 5, -8
 1980              		.cfi_offset 14, -4
1827:ThirdParty/FreeRTOS/tasks.c **** 
 1981              		.loc 1 1827 9 is_stmt 1 view .LVU559
 1982              	.LVL156:
1830:ThirdParty/FreeRTOS/tasks.c **** 
 1983              		.loc 1 1830 9 view .LVU560
 1984 0002 68B1     		cbz	r0, .L150
 1985 0004 0446     		mov	r4, r0
1830:ThirdParty/FreeRTOS/tasks.c **** 
 1986              		.loc 1 1830 38 discriminator 2 view .LVU561
1834:ThirdParty/FreeRTOS/tasks.c ****         {
 1987              		.loc 1 1834 9 discriminator 2 view .LVU562
1834:ThirdParty/FreeRTOS/tasks.c ****         {
 1988              		.loc 1 1834 21 is_stmt 0 discriminator 2 view .LVU563
 1989 0006 234B     		ldr	r3, .L152
 1990 0008 1B68     		ldr	r3, [r3]
1834:ThirdParty/FreeRTOS/tasks.c ****         {
 1991              		.loc 1 1834 11 discriminator 2 view .LVU564
 1992 000a 8342     		cmp	r3, r0
 1993 000c 07D0     		beq	.L144
1836:ThirdParty/FreeRTOS/tasks.c ****             {
 1994              		.loc 1 1836 13 is_stmt 1 view .LVU565
 1995 000e FFF7FEFF 		bl	vPortEnterCritical
 1996              	.LVL157:
1838:ThirdParty/FreeRTOS/tasks.c ****                 {
 1997              		.loc 1 1838 17 view .LVU566
1838:ThirdParty/FreeRTOS/tasks.c ****                 {
 1998              		.loc 1 1838 21 is_stmt 0 view .LVU567
 1999 0012 2046     		mov	r0, r4
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 143


 2000 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2001              	.LVL158:
1838:ThirdParty/FreeRTOS/tasks.c ****                 {
 2002              		.loc 1 1838 19 view .LVU568
 2003 0018 58B9     		cbnz	r0, .L151
 2004              	.L148:
1862:ThirdParty/FreeRTOS/tasks.c ****                 }
 2005              		.loc 1 1862 45 is_stmt 1 view .LVU569
1865:ThirdParty/FreeRTOS/tasks.c ****         }
 2006              		.loc 1 1865 13 view .LVU570
 2007 001a FFF7FEFF 		bl	vPortExitCritical
 2008              	.LVL159:
1869:ThirdParty/FreeRTOS/tasks.c ****         }
 2009              		.loc 1 1869 37 view .LVU571
 2010              	.L144:
1871:ThirdParty/FreeRTOS/tasks.c **** 
 2011              		.loc 1 1871 5 is_stmt 0 view .LVU572
 2012 001e 38BD     		pop	{r3, r4, r5, pc}
 2013              	.LVL160:
 2014              	.L150:
1830:ThirdParty/FreeRTOS/tasks.c **** 
 2015              		.loc 1 1830 9 is_stmt 1 view .LVU573
 2016              	.LBB178:
 2017              	.LBI178:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2018              		.loc 2 194 34 view .LVU574
 2019              	.LBB179:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2020              		.loc 2 196 9 view .LVU575
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2021              		.loc 2 198 9 view .LVU576
 2022              		.syntax unified
 2023              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2024 0020 4FF05003 			mov r3, #80												
 2025 0024 83F31188 		msr basepri, r3											
 2026 0028 BFF36F8F 		isb														
 2027 002c BFF34F8F 		dsb														
 2028              	
 2029              	@ 0 "" 2
 2030              	.LVL161:
 2031              		.thumb
 2032              		.syntax unified
 2033              	.L146:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2034              		.loc 2 198 9 is_stmt 0 view .LVU577
 2035              	.LBE179:
 2036              	.LBE178:
1830:ThirdParty/FreeRTOS/tasks.c **** 
 2037              		.loc 1 1830 9 is_stmt 1 discriminator 1 view .LVU578
1830:ThirdParty/FreeRTOS/tasks.c **** 
 2038              		.loc 1 1830 9 discriminator 1 view .LVU579
 2039 0030 FEE7     		b	.L146
 2040              	.LVL162:
 2041              	.L151:
1840:ThirdParty/FreeRTOS/tasks.c **** 
 2042              		.loc 1 1840 46 view .LVU580
1844:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 144


 2043              		.loc 1 1844 21 view .LVU581
1844:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2044              		.loc 1 1844 30 is_stmt 0 view .LVU582
 2045 0032 251D     		adds	r5, r4, #4
 2046 0034 2846     		mov	r0, r5
 2047 0036 FFF7FEFF 		bl	uxListRemove
 2048              	.LVL163:
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2049              		.loc 1 1845 21 is_stmt 1 view .LVU583
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2050              		.loc 1 1845 21 view .LVU584
 2051 003a E36A     		ldr	r3, [r4, #44]
 2052 003c 0122     		movs	r2, #1
 2053 003e 9A40     		lsls	r2, r2, r3
 2054 0040 1549     		ldr	r1, .L152+4
 2055 0042 0868     		ldr	r0, [r1]
 2056 0044 0243     		orrs	r2, r2, r0
 2057 0046 0A60     		str	r2, [r1]
 2058              	.LBB180:
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2059              		.loc 1 1845 21 view .LVU585
 2060 0048 144A     		ldr	r2, .L152+8
 2061 004a 03EB8303 		add	r3, r3, r3, lsl #2
 2062 004e 02EB8303 		add	r3, r2, r3, lsl #2
 2063 0052 5B68     		ldr	r3, [r3, #4]
 2064              	.LVL164:
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2065              		.loc 1 1845 21 view .LVU586
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2066              		.loc 1 1845 21 view .LVU587
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2067              		.loc 1 1845 21 view .LVU588
 2068 0054 A360     		str	r3, [r4, #8]
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2069              		.loc 1 1845 21 view .LVU589
 2070 0056 9968     		ldr	r1, [r3, #8]
 2071 0058 E160     		str	r1, [r4, #12]
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2072              		.loc 1 1845 21 view .LVU590
 2073 005a 4D60     		str	r5, [r1, #4]
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2074              		.loc 1 1845 21 view .LVU591
 2075 005c 9D60     		str	r5, [r3, #8]
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2076              		.loc 1 1845 21 view .LVU592
 2077 005e E36A     		ldr	r3, [r4, #44]
 2078              	.LVL165:
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2079              		.loc 1 1845 21 is_stmt 0 view .LVU593
 2080 0060 03EB8301 		add	r1, r3, r3, lsl #2
 2081 0064 8800     		lsls	r0, r1, #2
 2082 0066 02EB8101 		add	r1, r2, r1, lsl #2
 2083 006a 6161     		str	r1, [r4, #20]
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2084              		.loc 1 1845 21 is_stmt 1 view .LVU594
 2085 006c 1158     		ldr	r1, [r2, r0]
 2086 006e 0131     		adds	r1, r1, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 145


 2087 0070 1150     		str	r1, [r2, r0]
 2088              	.LBE180:
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2089              		.loc 1 1845 21 view .LVU595
1845:ThirdParty/FreeRTOS/tasks.c **** 
 2090              		.loc 1 1845 51 view .LVU596
1848:ThirdParty/FreeRTOS/tasks.c ****                     {
 2091              		.loc 1 1848 21 view .LVU597
1848:ThirdParty/FreeRTOS/tasks.c ****                     {
 2092              		.loc 1 1848 30 is_stmt 0 view .LVU598
 2093 0072 E26A     		ldr	r2, [r4, #44]
1848:ThirdParty/FreeRTOS/tasks.c ****                     {
 2094              		.loc 1 1848 58 view .LVU599
 2095 0074 074B     		ldr	r3, .L152
 2096 0076 1B68     		ldr	r3, [r3]
 2097 0078 DB6A     		ldr	r3, [r3, #44]
1848:ThirdParty/FreeRTOS/tasks.c ****                     {
 2098              		.loc 1 1848 23 view .LVU600
 2099 007a 9A42     		cmp	r2, r3
 2100 007c CDD3     		bcc	.L148
1853:ThirdParty/FreeRTOS/tasks.c ****                     }
 2101              		.loc 1 1853 25 is_stmt 1 view .LVU601
 2102 007e 4FF0E023 		mov	r3, #-536813568
 2103 0082 4FF08052 		mov	r2, #268435456
 2104 0086 C3F8042D 		str	r2, [r3, #3332]
1853:ThirdParty/FreeRTOS/tasks.c ****                     }
 2105              		.loc 1 1853 25 view .LVU602
 2106              		.syntax unified
 2107              	@ 1853 "ThirdParty/FreeRTOS/tasks.c" 1
 2108 008a BFF34F8F 		dsb
 2109              	@ 0 "" 2
1853:ThirdParty/FreeRTOS/tasks.c ****                     }
 2110              		.loc 1 1853 25 view .LVU603
 2111              	@ 1853 "ThirdParty/FreeRTOS/tasks.c" 1
 2112 008e BFF36F8F 		isb
 2113              	@ 0 "" 2
1853:ThirdParty/FreeRTOS/tasks.c ****                     }
 2114              		.loc 1 1853 56 view .LVU604
 2115              		.thumb
 2116              		.syntax unified
 2117 0092 C2E7     		b	.L148
 2118              	.L153:
 2119              		.align	2
 2120              	.L152:
 2121 0094 00000000 		.word	pxCurrentTCB
 2122 0098 00000000 		.word	uxTopReadyPriority
 2123 009c 00000000 		.word	pxReadyTasksLists
 2124              		.cfi_endproc
 2125              	.LFE17:
 2127              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2128              		.align	1
 2129              		.global	xTaskResumeFromISR
 2130              		.syntax unified
 2131              		.thumb
 2132              		.thumb_func
 2134              	xTaskResumeFromISR:
 2135              	.LVL166:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 146


 2136              	.LFB18:
1880:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 2137              		.loc 1 1880 5 view -0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 0, uses_anonymous_args = 0
1880:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xYieldRequired = pdFALSE;
 2141              		.loc 1 1880 5 is_stmt 0 view .LVU606
 2142 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2143              	.LCFI17:
 2144              		.cfi_def_cfa_offset 24
 2145              		.cfi_offset 3, -24
 2146              		.cfi_offset 4, -20
 2147              		.cfi_offset 5, -16
 2148              		.cfi_offset 6, -12
 2149              		.cfi_offset 7, -8
 2150              		.cfi_offset 14, -4
1881:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 2151              		.loc 1 1881 9 is_stmt 1 view .LVU607
 2152              	.LVL167:
1882:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 2153              		.loc 1 1882 9 view .LVU608
1883:ThirdParty/FreeRTOS/tasks.c **** 
 2154              		.loc 1 1883 9 view .LVU609
1885:ThirdParty/FreeRTOS/tasks.c **** 
 2155              		.loc 1 1885 9 view .LVU610
 2156 0002 0028     		cmp	r0, #0
 2157 0004 43D0     		beq	.L162
 2158 0006 0446     		mov	r4, r0
1885:ThirdParty/FreeRTOS/tasks.c **** 
 2159              		.loc 1 1885 38 discriminator 2 view .LVU611
1903:ThirdParty/FreeRTOS/tasks.c **** 
 2160              		.loc 1 1903 9 discriminator 2 view .LVU612
 2161 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2162              	.LVL168:
1905:ThirdParty/FreeRTOS/tasks.c ****         {
 2163              		.loc 1 1905 9 discriminator 2 view .LVU613
 2164              	.LBB181:
 2165              	.LBI181:
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2166              		.loc 2 210 38 discriminator 2 view .LVU614
 2167              	.LBB182:
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2168              		.loc 2 212 9 discriminator 2 view .LVU615
 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2169              		.loc 2 214 9 discriminator 2 view .LVU616
 2170              		.syntax unified
 2171              	@ 214 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2172 000c EFF31185 			mrs r5, basepri											
 2173 0010 4FF05003 		mov r3, #80												
 2174 0014 83F31188 		msr basepri, r3											
 2175 0018 BFF36F8F 		isb														
 2176 001c BFF34F8F 		dsb														
 2177              	
 2178              	@ 0 "" 2
 2179              	.LVL169:
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 147


 2180              		.loc 2 226 9 discriminator 2 view .LVU617
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 2181              		.loc 2 226 9 is_stmt 0 discriminator 2 view .LVU618
 2182              		.thumb
 2183              		.syntax unified
 2184              	.LBE182:
 2185              	.LBE181:
1907:ThirdParty/FreeRTOS/tasks.c ****             {
 2186              		.loc 1 1907 13 is_stmt 1 discriminator 2 view .LVU619
1907:ThirdParty/FreeRTOS/tasks.c ****             {
 2187              		.loc 1 1907 17 is_stmt 0 discriminator 2 view .LVU620
 2188 0020 2046     		mov	r0, r4
 2189 0022 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2190              	.LVL170:
1907:ThirdParty/FreeRTOS/tasks.c ****             {
 2191              		.loc 1 1907 15 discriminator 2 view .LVU621
 2192 0026 0646     		mov	r6, r0
 2193 0028 0028     		cmp	r0, #0
 2194 002a 2CD0     		beq	.L157
1909:ThirdParty/FreeRTOS/tasks.c **** 
 2195              		.loc 1 1909 51 is_stmt 1 view .LVU622
1912:ThirdParty/FreeRTOS/tasks.c ****                 {
 2196              		.loc 1 1912 17 view .LVU623
1912:ThirdParty/FreeRTOS/tasks.c ****                 {
 2197              		.loc 1 1912 42 is_stmt 0 view .LVU624
 2198 002c 214B     		ldr	r3, .L163
 2199 002e 1B68     		ldr	r3, [r3]
1912:ThirdParty/FreeRTOS/tasks.c ****                 {
 2200              		.loc 1 1912 19 view .LVU625
 2201 0030 002B     		cmp	r3, #0
 2202 0032 37D1     		bne	.L158
1916:ThirdParty/FreeRTOS/tasks.c ****                     {
 2203              		.loc 1 1916 21 is_stmt 1 view .LVU626
1916:ThirdParty/FreeRTOS/tasks.c ****                     {
 2204              		.loc 1 1916 30 is_stmt 0 view .LVU627
 2205 0034 E26A     		ldr	r2, [r4, #44]
1916:ThirdParty/FreeRTOS/tasks.c ****                     {
 2206              		.loc 1 1916 58 view .LVU628
 2207 0036 204B     		ldr	r3, .L163+4
 2208 0038 1B68     		ldr	r3, [r3]
 2209 003a DB6A     		ldr	r3, [r3, #44]
1916:ThirdParty/FreeRTOS/tasks.c ****                     {
 2210              		.loc 1 1916 23 view .LVU629
 2211 003c 9A42     		cmp	r2, r3
 2212 003e 2FD3     		bcc	.L160
1918:ThirdParty/FreeRTOS/tasks.c **** 
 2213              		.loc 1 1918 25 is_stmt 1 view .LVU630
 2214              	.LVL171:
1923:ThirdParty/FreeRTOS/tasks.c ****                     }
 2215              		.loc 1 1923 25 view .LVU631
1923:ThirdParty/FreeRTOS/tasks.c ****                     }
 2216              		.loc 1 1923 39 is_stmt 0 view .LVU632
 2217 0040 0126     		movs	r6, #1
 2218 0042 1E4B     		ldr	r3, .L163+8
 2219 0044 1E60     		str	r6, [r3]
 2220              	.LVL172:
 2221              	.L159:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 148


1927:ThirdParty/FreeRTOS/tasks.c ****                     }
 2222              		.loc 1 1927 49 is_stmt 1 view .LVU633
1930:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2223              		.loc 1 1930 21 view .LVU634
1930:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 2224              		.loc 1 1930 30 is_stmt 0 view .LVU635
 2225 0046 271D     		adds	r7, r4, #4
 2226 0048 3846     		mov	r0, r7
 2227 004a FFF7FEFF 		bl	uxListRemove
 2228              	.LVL173:
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2229              		.loc 1 1931 21 is_stmt 1 view .LVU636
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2230              		.loc 1 1931 21 view .LVU637
 2231 004e E36A     		ldr	r3, [r4, #44]
 2232 0050 0122     		movs	r2, #1
 2233 0052 9A40     		lsls	r2, r2, r3
 2234 0054 1A49     		ldr	r1, .L163+12
 2235 0056 0868     		ldr	r0, [r1]
 2236 0058 0243     		orrs	r2, r2, r0
 2237 005a 0A60     		str	r2, [r1]
 2238              	.LBB183:
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2239              		.loc 1 1931 21 view .LVU638
 2240 005c 194A     		ldr	r2, .L163+16
 2241 005e 03EB8303 		add	r3, r3, r3, lsl #2
 2242 0062 02EB8303 		add	r3, r2, r3, lsl #2
 2243 0066 5B68     		ldr	r3, [r3, #4]
 2244              	.LVL174:
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2245              		.loc 1 1931 21 view .LVU639
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2246              		.loc 1 1931 21 view .LVU640
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2247              		.loc 1 1931 21 view .LVU641
 2248 0068 A360     		str	r3, [r4, #8]
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2249              		.loc 1 1931 21 view .LVU642
 2250 006a 9968     		ldr	r1, [r3, #8]
 2251 006c E160     		str	r1, [r4, #12]
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2252              		.loc 1 1931 21 view .LVU643
 2253 006e 4F60     		str	r7, [r1, #4]
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2254              		.loc 1 1931 21 view .LVU644
 2255 0070 9F60     		str	r7, [r3, #8]
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2256              		.loc 1 1931 21 view .LVU645
 2257 0072 E36A     		ldr	r3, [r4, #44]
 2258              	.LVL175:
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2259              		.loc 1 1931 21 is_stmt 0 view .LVU646
 2260 0074 03EB8301 		add	r1, r3, r3, lsl #2
 2261 0078 8800     		lsls	r0, r1, #2
 2262 007a 02EB8101 		add	r1, r2, r1, lsl #2
 2263 007e 6161     		str	r1, [r4, #20]
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 149


 2264              		.loc 1 1931 21 is_stmt 1 view .LVU647
 2265 0080 1158     		ldr	r1, [r2, r0]
 2266 0082 0131     		adds	r1, r1, #1
 2267 0084 1150     		str	r1, [r2, r0]
 2268              	.LBE183:
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2269              		.loc 1 1931 21 view .LVU648
1931:ThirdParty/FreeRTOS/tasks.c ****                 }
 2270              		.loc 1 1931 51 view .LVU649
 2271              	.LVL176:
 2272              	.L157:
1943:ThirdParty/FreeRTOS/tasks.c ****             }
 2273              		.loc 1 1943 41 view .LVU650
1946:ThirdParty/FreeRTOS/tasks.c **** 
 2274              		.loc 1 1946 9 view .LVU651
 2275              	.LBB184:
 2276              	.LBI184:
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2277              		.loc 2 230 34 view .LVU652
 2278              	.LBB185:
 2279              		.loc 2 232 9 view .LVU653
 2280              		.syntax unified
 2281              	@ 232 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2282 0086 85F31188 			msr basepri, r5	
 2283              	@ 0 "" 2
 2284              		.thumb
 2285              		.syntax unified
 2286              	.LBE185:
 2287              	.LBE184:
1948:ThirdParty/FreeRTOS/tasks.c ****     }
 2288              		.loc 1 1948 9 view .LVU654
1949:ThirdParty/FreeRTOS/tasks.c **** 
 2289              		.loc 1 1949 5 is_stmt 0 view .LVU655
 2290 008a 3046     		mov	r0, r6
 2291 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2292              	.LVL177:
 2293              	.L162:
1885:ThirdParty/FreeRTOS/tasks.c **** 
 2294              		.loc 1 1885 9 is_stmt 1 view .LVU656
 2295              	.LBB186:
 2296              	.LBI186:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2297              		.loc 2 194 34 view .LVU657
 2298              	.LBB187:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2299              		.loc 2 196 9 view .LVU658
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2300              		.loc 2 198 9 view .LVU659
 2301              		.syntax unified
 2302              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2303 008e 4FF05003 			mov r3, #80												
 2304 0092 83F31188 		msr basepri, r3											
 2305 0096 BFF36F8F 		isb														
 2306 009a BFF34F8F 		dsb														
 2307              	
 2308              	@ 0 "" 2
 2309              	.LVL178:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 150


 2310              		.thumb
 2311              		.syntax unified
 2312              	.L156:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2313              		.loc 2 198 9 is_stmt 0 view .LVU660
 2314              	.LBE187:
 2315              	.LBE186:
1885:ThirdParty/FreeRTOS/tasks.c **** 
 2316              		.loc 1 1885 9 is_stmt 1 discriminator 1 view .LVU661
1885:ThirdParty/FreeRTOS/tasks.c **** 
 2317              		.loc 1 1885 9 discriminator 1 view .LVU662
 2318 009e FEE7     		b	.L156
 2319              	.LVL179:
 2320              	.L160:
1881:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 2321              		.loc 1 1881 20 is_stmt 0 view .LVU663
 2322 00a0 0026     		movs	r6, #0
 2323 00a2 D0E7     		b	.L159
 2324              	.L158:
1938:ThirdParty/FreeRTOS/tasks.c ****                 }
 2325              		.loc 1 1938 21 is_stmt 1 view .LVU664
 2326 00a4 04F11801 		add	r1, r4, #24
 2327 00a8 0748     		ldr	r0, .L163+20
 2328 00aa FFF7FEFF 		bl	vListInsertEnd
 2329              	.LVL180:
1881:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = xTaskToResume;
 2330              		.loc 1 1881 20 is_stmt 0 view .LVU665
 2331 00ae 0026     		movs	r6, #0
 2332 00b0 E9E7     		b	.L157
 2333              	.L164:
 2334 00b2 00BF     		.align	2
 2335              	.L163:
 2336 00b4 00000000 		.word	uxSchedulerSuspended
 2337 00b8 00000000 		.word	pxCurrentTCB
 2338 00bc 00000000 		.word	xYieldPending
 2339 00c0 00000000 		.word	uxTopReadyPriority
 2340 00c4 00000000 		.word	pxReadyTasksLists
 2341 00c8 00000000 		.word	xPendingReadyList
 2342              		.cfi_endproc
 2343              	.LFE18:
 2345              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2346              		.align	2
 2347              	.LC0:
 2348 0000 49444C45 		.ascii	"IDLE\000"
 2348      00
 2349              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2350              		.align	1
 2351              		.global	vTaskStartScheduler
 2352              		.syntax unified
 2353              		.thumb
 2354              		.thumb_func
 2356              	vTaskStartScheduler:
 2357              	.LFB19:
1955:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 2358              		.loc 1 1955 1 is_stmt 1 view -0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 151


 2361              		@ frame_needed = 0, uses_anonymous_args = 0
 2362 0000 00B5     		push	{lr}
 2363              	.LCFI18:
 2364              		.cfi_def_cfa_offset 4
 2365              		.cfi_offset 14, -4
 2366 0002 83B0     		sub	sp, sp, #12
 2367              	.LCFI19:
 2368              		.cfi_def_cfa_offset 16
1956:ThirdParty/FreeRTOS/tasks.c **** 
 2369              		.loc 1 1956 5 view .LVU667
1988:ThirdParty/FreeRTOS/tasks.c ****                                configIDLE_TASK_NAME,
 2370              		.loc 1 1988 9 view .LVU668
1988:ThirdParty/FreeRTOS/tasks.c ****                                configIDLE_TASK_NAME,
 2371              		.loc 1 1988 19 is_stmt 0 view .LVU669
 2372 0004 1A4B     		ldr	r3, .L172
 2373 0006 0193     		str	r3, [sp, #4]
 2374 0008 0023     		movs	r3, #0
 2375 000a 0093     		str	r3, [sp]
 2376 000c 8222     		movs	r2, #130
 2377 000e 1949     		ldr	r1, .L172+4
 2378 0010 1948     		ldr	r0, .L172+8
 2379 0012 FFF7FEFF 		bl	xTaskCreate
 2380              	.LVL181:
1999:ThirdParty/FreeRTOS/tasks.c ****         {
 2381              		.loc 1 1999 9 is_stmt 1 view .LVU670
1999:ThirdParty/FreeRTOS/tasks.c ****         {
 2382              		.loc 1 1999 11 is_stmt 0 view .LVU671
 2383 0016 0128     		cmp	r0, #1
 2384 0018 07D0     		beq	.L170
 2385              	.L166:
 2386              	.LVL182:
2066:ThirdParty/FreeRTOS/tasks.c ****     }
 2387              		.loc 1 2066 9 is_stmt 1 view .LVU672
 2388 001a B0F1FF3F 		cmp	r0, #-1
 2389 001e 1DD0     		beq	.L171
 2390              	.L167:
2066:ThirdParty/FreeRTOS/tasks.c ****     }
 2391              		.loc 1 2066 73 discriminator 2 view .LVU673
2071:ThirdParty/FreeRTOS/tasks.c **** 
 2392              		.loc 1 2071 5 discriminator 2 view .LVU674
2075:ThirdParty/FreeRTOS/tasks.c **** }
 2393              		.loc 1 2075 5 discriminator 2 view .LVU675
 2394 0020 164B     		ldr	r3, .L172+12
 2395 0022 1B68     		ldr	r3, [r3]
2076:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2396              		.loc 1 2076 1 is_stmt 0 discriminator 2 view .LVU676
 2397 0024 03B0     		add	sp, sp, #12
 2398              	.LCFI20:
 2399              		.cfi_remember_state
 2400              		.cfi_def_cfa_offset 4
 2401              		@ sp needed
 2402 0026 5DF804FB 		ldr	pc, [sp], #4
 2403              	.LVL183:
 2404              	.L170:
 2405              	.LCFI21:
 2406              		.cfi_restore_state
2001:ThirdParty/FreeRTOS/tasks.c ****         }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 152


 2407              		.loc 1 2001 13 is_stmt 1 view .LVU677
2001:ThirdParty/FreeRTOS/tasks.c ****         }
 2408              		.loc 1 2001 23 is_stmt 0 view .LVU678
 2409 002a FFF7FEFF 		bl	xTimerCreateTimerTask
 2410              	.LVL184:
2005:ThirdParty/FreeRTOS/tasks.c ****         }
 2411              		.loc 1 2005 37 is_stmt 1 view .LVU679
2010:ThirdParty/FreeRTOS/tasks.c ****     {
 2412              		.loc 1 2010 5 view .LVU680
2010:ThirdParty/FreeRTOS/tasks.c ****     {
 2413              		.loc 1 2010 7 is_stmt 0 view .LVU681
 2414 002e 0128     		cmp	r0, #1
 2415 0030 F3D1     		bne	.L166
2026:ThirdParty/FreeRTOS/tasks.c **** 
 2416              		.loc 1 2026 9 is_stmt 1 view .LVU682
 2417              	.LBB188:
 2418              	.LBI188:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2419              		.loc 2 194 34 view .LVU683
 2420              	.LBB189:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2421              		.loc 2 196 9 view .LVU684
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2422              		.loc 2 198 9 view .LVU685
 2423              		.syntax unified
 2424              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2425 0032 4FF05003 			mov r3, #80												
 2426 0036 83F31188 		msr basepri, r3											
 2427 003a BFF36F8F 		isb														
 2428 003e BFF34F8F 		dsb														
 2429              	
 2430              	@ 0 "" 2
 2431              		.thumb
 2432              		.syntax unified
 2433              	.LBE189:
 2434              	.LBE188:
2036:ThirdParty/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
 2435              		.loc 1 2036 9 view .LVU686
2036:ThirdParty/FreeRTOS/tasks.c ****         xSchedulerRunning = pdTRUE;
 2436              		.loc 1 2036 30 is_stmt 0 view .LVU687
 2437 0042 0F4B     		ldr	r3, .L172+16
 2438 0044 4FF0FF32 		mov	r2, #-1
 2439 0048 1A60     		str	r2, [r3]
2037:ThirdParty/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2440              		.loc 1 2037 9 is_stmt 1 view .LVU688
2037:ThirdParty/FreeRTOS/tasks.c ****         xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2441              		.loc 1 2037 27 is_stmt 0 view .LVU689
 2442 004a 0E4B     		ldr	r3, .L172+20
 2443 004c 0122     		movs	r2, #1
 2444 004e 1A60     		str	r2, [r3]
2038:ThirdParty/FreeRTOS/tasks.c **** 
 2445              		.loc 1 2038 9 is_stmt 1 view .LVU690
2038:ThirdParty/FreeRTOS/tasks.c **** 
 2446              		.loc 1 2038 20 is_stmt 0 view .LVU691
 2447 0050 0D4B     		ldr	r3, .L172+24
 2448 0052 0022     		movs	r2, #0
 2449 0054 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 153


2046:ThirdParty/FreeRTOS/tasks.c **** 
 2450              		.loc 1 2046 49 is_stmt 1 view .LVU692
2048:ThirdParty/FreeRTOS/tasks.c **** 
 2451              		.loc 1 2048 32 view .LVU693
2052:ThirdParty/FreeRTOS/tasks.c **** 
 2452              		.loc 1 2052 9 view .LVU694
 2453 0056 FFF7FEFF 		bl	xPortStartScheduler
 2454              	.LVL185:
2052:ThirdParty/FreeRTOS/tasks.c **** 
 2455              		.loc 1 2052 9 is_stmt 0 view .LVU695
 2456 005a E1E7     		b	.L167
 2457              	.LVL186:
 2458              	.L171:
2066:ThirdParty/FreeRTOS/tasks.c ****     }
 2459              		.loc 1 2066 9 is_stmt 1 view .LVU696
 2460              	.LBB190:
 2461              	.LBI190:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2462              		.loc 2 194 34 view .LVU697
 2463              	.LBB191:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2464              		.loc 2 196 9 view .LVU698
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2465              		.loc 2 198 9 view .LVU699
 2466              		.syntax unified
 2467              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2468 005c 4FF05003 			mov r3, #80												
 2469 0060 83F31188 		msr basepri, r3											
 2470 0064 BFF36F8F 		isb														
 2471 0068 BFF34F8F 		dsb														
 2472              	
 2473              	@ 0 "" 2
 2474              	.LVL187:
 2475              		.thumb
 2476              		.syntax unified
 2477              	.L168:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2478              		.loc 2 198 9 is_stmt 0 view .LVU700
 2479              	.LBE191:
 2480              	.LBE190:
2066:ThirdParty/FreeRTOS/tasks.c ****     }
 2481              		.loc 1 2066 9 is_stmt 1 discriminator 1 view .LVU701
2066:ThirdParty/FreeRTOS/tasks.c ****     }
 2482              		.loc 1 2066 9 discriminator 1 view .LVU702
 2483 006c FEE7     		b	.L168
 2484              	.L173:
 2485 006e 00BF     		.align	2
 2486              	.L172:
 2487 0070 00000000 		.word	xIdleTaskHandle
 2488 0074 00000000 		.word	.LC0
 2489 0078 00000000 		.word	prvIdleTask
 2490 007c 00000000 		.word	uxTopUsedPriority
 2491 0080 00000000 		.word	xNextTaskUnblockTime
 2492 0084 00000000 		.word	xSchedulerRunning
 2493 0088 00000000 		.word	xTickCount
 2494              		.cfi_endproc
 2495              	.LFE19:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 154


 2497              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2498              		.align	1
 2499              		.global	vTaskEndScheduler
 2500              		.syntax unified
 2501              		.thumb
 2502              		.thumb_func
 2504              	vTaskEndScheduler:
 2505              	.LFB20:
2080:ThirdParty/FreeRTOS/tasks.c ****     /* Stop the scheduler interrupts and call the portable scheduler end
 2506              		.loc 1 2080 1 view -0
 2507              		.cfi_startproc
 2508              		@ args = 0, pretend = 0, frame = 0
 2509              		@ frame_needed = 0, uses_anonymous_args = 0
 2510 0000 08B5     		push	{r3, lr}
 2511              	.LCFI22:
 2512              		.cfi_def_cfa_offset 8
 2513              		.cfi_offset 3, -8
 2514              		.cfi_offset 14, -4
2084:ThirdParty/FreeRTOS/tasks.c ****     xSchedulerRunning = pdFALSE;
 2515              		.loc 1 2084 5 view .LVU704
 2516              	.LBB192:
 2517              	.LBI192:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2518              		.loc 2 194 34 view .LVU705
 2519              	.LBB193:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2520              		.loc 2 196 9 view .LVU706
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2521              		.loc 2 198 9 view .LVU707
 2522              		.syntax unified
 2523              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2524 0002 4FF05003 			mov r3, #80												
 2525 0006 83F31188 		msr basepri, r3											
 2526 000a BFF36F8F 		isb														
 2527 000e BFF34F8F 		dsb														
 2528              	
 2529              	@ 0 "" 2
 2530              		.thumb
 2531              		.syntax unified
 2532              	.LBE193:
 2533              	.LBE192:
2085:ThirdParty/FreeRTOS/tasks.c ****     vPortEndScheduler();
 2534              		.loc 1 2085 5 view .LVU708
2085:ThirdParty/FreeRTOS/tasks.c ****     vPortEndScheduler();
 2535              		.loc 1 2085 23 is_stmt 0 view .LVU709
 2536 0012 034B     		ldr	r3, .L176
 2537 0014 0022     		movs	r2, #0
 2538 0016 1A60     		str	r2, [r3]
2086:ThirdParty/FreeRTOS/tasks.c **** }
 2539              		.loc 1 2086 5 is_stmt 1 view .LVU710
 2540 0018 FFF7FEFF 		bl	vPortEndScheduler
 2541              	.LVL188:
2087:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 2542              		.loc 1 2087 1 is_stmt 0 view .LVU711
 2543 001c 08BD     		pop	{r3, pc}
 2544              	.L177:
 2545 001e 00BF     		.align	2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 155


 2546              	.L176:
 2547 0020 00000000 		.word	xSchedulerRunning
 2548              		.cfi_endproc
 2549              	.LFE20:
 2551              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2552              		.align	1
 2553              		.global	vTaskSuspendAll
 2554              		.syntax unified
 2555              		.thumb
 2556              		.thumb_func
 2558              	vTaskSuspendAll:
 2559              	.LFB21:
2091:ThirdParty/FreeRTOS/tasks.c ****     /* A critical section is not required as the variable is of type
 2560              		.loc 1 2091 1 is_stmt 1 view -0
 2561              		.cfi_startproc
 2562              		@ args = 0, pretend = 0, frame = 0
 2563              		@ frame_needed = 0, uses_anonymous_args = 0
 2564              		@ link register save eliminated.
2099:ThirdParty/FreeRTOS/tasks.c **** 
 2565              		.loc 1 2099 27 view .LVU713
2103:ThirdParty/FreeRTOS/tasks.c **** 
 2566              		.loc 1 2103 5 view .LVU714
 2567 0000 024A     		ldr	r2, .L179
 2568 0002 1368     		ldr	r3, [r2]
 2569 0004 0133     		adds	r3, r3, #1
 2570 0006 1360     		str	r3, [r2]
2107:ThirdParty/FreeRTOS/tasks.c **** }
 2571              		.loc 1 2107 5 view .LVU715
2108:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 2572              		.loc 1 2108 1 is_stmt 0 view .LVU716
 2573 0008 7047     		bx	lr
 2574              	.L180:
 2575 000a 00BF     		.align	2
 2576              	.L179:
 2577 000c 00000000 		.word	uxSchedulerSuspended
 2578              		.cfi_endproc
 2579              	.LFE21:
 2581              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2582              		.align	1
 2583              		.global	xTaskGetTickCount
 2584              		.syntax unified
 2585              		.thumb
 2586              		.thumb_func
 2588              	xTaskGetTickCount:
 2589              	.LFB23:
2287:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xTicks;
 2590              		.loc 1 2287 1 is_stmt 1 view -0
 2591              		.cfi_startproc
 2592              		@ args = 0, pretend = 0, frame = 0
 2593              		@ frame_needed = 0, uses_anonymous_args = 0
 2594              		@ link register save eliminated.
2288:ThirdParty/FreeRTOS/tasks.c **** 
 2595              		.loc 1 2288 5 view .LVU718
2291:ThirdParty/FreeRTOS/tasks.c ****     {
 2596              		.loc 1 2291 35 view .LVU719
2293:ThirdParty/FreeRTOS/tasks.c ****     }
 2597              		.loc 1 2293 9 view .LVU720
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 156


2293:ThirdParty/FreeRTOS/tasks.c ****     }
 2598              		.loc 1 2293 16 is_stmt 0 view .LVU721
 2599 0000 014B     		ldr	r3, .L182
 2600 0002 1868     		ldr	r0, [r3]
 2601              	.LVL189:
2295:ThirdParty/FreeRTOS/tasks.c **** 
 2602              		.loc 1 2295 34 is_stmt 1 view .LVU722
2297:ThirdParty/FreeRTOS/tasks.c **** }
 2603              		.loc 1 2297 5 view .LVU723
2298:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2604              		.loc 1 2298 1 is_stmt 0 view .LVU724
 2605 0004 7047     		bx	lr
 2606              	.L183:
 2607 0006 00BF     		.align	2
 2608              	.L182:
 2609 0008 00000000 		.word	xTickCount
 2610              		.cfi_endproc
 2611              	.LFE23:
 2613              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2614              		.align	1
 2615              		.global	xTaskGetTickCountFromISR
 2616              		.syntax unified
 2617              		.thumb
 2618              		.thumb_func
 2620              	xTaskGetTickCountFromISR:
 2621              	.LFB24:
2302:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xReturn;
 2622              		.loc 1 2302 1 is_stmt 1 view -0
 2623              		.cfi_startproc
 2624              		@ args = 0, pretend = 0, frame = 0
 2625              		@ frame_needed = 0, uses_anonymous_args = 0
 2626 0000 08B5     		push	{r3, lr}
 2627              	.LCFI23:
 2628              		.cfi_def_cfa_offset 8
 2629              		.cfi_offset 3, -8
 2630              		.cfi_offset 14, -4
2303:ThirdParty/FreeRTOS/tasks.c ****     UBaseType_t uxSavedInterruptStatus;
 2631              		.loc 1 2303 5 view .LVU726
2304:ThirdParty/FreeRTOS/tasks.c **** 
 2632              		.loc 1 2304 5 view .LVU727
2320:ThirdParty/FreeRTOS/tasks.c **** 
 2633              		.loc 1 2320 5 view .LVU728
 2634 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2635              	.LVL190:
2322:ThirdParty/FreeRTOS/tasks.c ****     {
 2636              		.loc 1 2322 5 view .LVU729
2324:ThirdParty/FreeRTOS/tasks.c ****     }
 2637              		.loc 1 2324 9 view .LVU730
2324:ThirdParty/FreeRTOS/tasks.c ****     }
 2638              		.loc 1 2324 17 is_stmt 0 view .LVU731
 2639 0006 014B     		ldr	r3, .L186
 2640 0008 1868     		ldr	r0, [r3]
 2641              	.LVL191:
2326:ThirdParty/FreeRTOS/tasks.c **** 
 2642              		.loc 1 2326 5 is_stmt 1 view .LVU732
2328:ThirdParty/FreeRTOS/tasks.c **** }
 2643              		.loc 1 2328 5 view .LVU733
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 157


2329:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2644              		.loc 1 2329 1 is_stmt 0 view .LVU734
 2645 000a 08BD     		pop	{r3, pc}
 2646              	.L187:
 2647              		.align	2
 2648              	.L186:
 2649 000c 00000000 		.word	xTickCount
 2650              		.cfi_endproc
 2651              	.LFE24:
 2653              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2654              		.align	1
 2655              		.global	uxTaskGetNumberOfTasks
 2656              		.syntax unified
 2657              		.thumb
 2658              		.thumb_func
 2660              	uxTaskGetNumberOfTasks:
 2661              	.LFB25:
2333:ThirdParty/FreeRTOS/tasks.c ****     /* A critical section is not required because the variables are of type
 2662              		.loc 1 2333 1 is_stmt 1 view -0
 2663              		.cfi_startproc
 2664              		@ args = 0, pretend = 0, frame = 0
 2665              		@ frame_needed = 0, uses_anonymous_args = 0
 2666              		@ link register save eliminated.
2336:ThirdParty/FreeRTOS/tasks.c **** }
 2667              		.loc 1 2336 5 view .LVU736
2336:ThirdParty/FreeRTOS/tasks.c **** }
 2668              		.loc 1 2336 12 is_stmt 0 view .LVU737
 2669 0000 014B     		ldr	r3, .L189
 2670 0002 1868     		ldr	r0, [r3]
2337:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2671              		.loc 1 2337 1 view .LVU738
 2672 0004 7047     		bx	lr
 2673              	.L190:
 2674 0006 00BF     		.align	2
 2675              	.L189:
 2676 0008 00000000 		.word	uxCurrentNumberOfTasks
 2677              		.cfi_endproc
 2678              	.LFE25:
 2680              		.section	.text.pcTaskGetName,"ax",%progbits
 2681              		.align	1
 2682              		.global	pcTaskGetName
 2683              		.syntax unified
 2684              		.thumb
 2685              		.thumb_func
 2687              	pcTaskGetName:
 2688              	.LVL192:
 2689              	.LFB26:
2341:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
 2690              		.loc 1 2341 1 is_stmt 1 view -0
 2691              		.cfi_startproc
 2692              		@ args = 0, pretend = 0, frame = 0
 2693              		@ frame_needed = 0, uses_anonymous_args = 0
 2694              		@ link register save eliminated.
2342:ThirdParty/FreeRTOS/tasks.c **** 
 2695              		.loc 1 2342 5 view .LVU740
2346:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 2696              		.loc 1 2346 5 view .LVU741
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 158


2346:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 2697              		.loc 1 2346 13 is_stmt 0 view .LVU742
 2698 0000 0346     		mov	r3, r0
 2699 0002 10B1     		cbz	r0, .L194
 2700              	.LVL193:
 2701              	.L192:
2347:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2702              		.loc 1 2347 26 is_stmt 1 discriminator 2 view .LVU743
2348:ThirdParty/FreeRTOS/tasks.c **** }
 2703              		.loc 1 2348 5 discriminator 2 view .LVU744
2349:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 2704              		.loc 1 2349 1 is_stmt 0 discriminator 2 view .LVU745
 2705 0004 03F13400 		add	r0, r3, #52
 2706 0008 7047     		bx	lr
 2707              	.LVL194:
 2708              	.L194:
2346:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTCB );
 2709              		.loc 1 2346 13 discriminator 1 view .LVU746
 2710 000a 064B     		ldr	r3, .L195
 2711 000c 1B68     		ldr	r3, [r3]
 2712              	.LVL195:
2347:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2713              		.loc 1 2347 5 is_stmt 1 discriminator 1 view .LVU747
 2714 000e 002B     		cmp	r3, #0
 2715 0010 F8D1     		bne	.L192
2347:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2716              		.loc 1 2347 5 view .LVU748
 2717              	.LBB194:
 2718              	.LBI194:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2719              		.loc 2 194 34 view .LVU749
 2720              	.LBB195:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2721              		.loc 2 196 9 view .LVU750
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2722              		.loc 2 198 9 view .LVU751
 2723              		.syntax unified
 2724              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2725 0012 4FF05003 			mov r3, #80												
 2726 0016 83F31188 		msr basepri, r3											
 2727 001a BFF36F8F 		isb														
 2728 001e BFF34F8F 		dsb														
 2729              	
 2730              	@ 0 "" 2
 2731              	.LVL196:
 2732              		.thumb
 2733              		.syntax unified
 2734              	.L193:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2735              		.loc 2 198 9 is_stmt 0 view .LVU752
 2736              	.LBE195:
 2737              	.LBE194:
2347:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2738              		.loc 1 2347 5 is_stmt 1 discriminator 1 view .LVU753
2347:ThirdParty/FreeRTOS/tasks.c ****     return &( pxTCB->pcTaskName[ 0 ] );
 2739              		.loc 1 2347 5 discriminator 1 view .LVU754
 2740 0022 FEE7     		b	.L193
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 159


 2741              	.L196:
 2742              		.align	2
 2743              	.L195:
 2744 0024 00000000 		.word	pxCurrentTCB
 2745              		.cfi_endproc
 2746              	.LFE26:
 2748              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2749              		.align	1
 2750              		.global	xTaskIncrementTick
 2751              		.syntax unified
 2752              		.thumb
 2753              		.thumb_func
 2755              	xTaskIncrementTick:
 2756              	.LFB29:
2721:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB;
 2757              		.loc 1 2721 1 view -0
 2758              		.cfi_startproc
 2759              		@ args = 0, pretend = 0, frame = 0
 2760              		@ frame_needed = 0, uses_anonymous_args = 0
 2761 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2762              	.LCFI24:
 2763              		.cfi_def_cfa_offset 24
 2764              		.cfi_offset 3, -24
 2765              		.cfi_offset 4, -20
 2766              		.cfi_offset 5, -16
 2767              		.cfi_offset 6, -12
 2768              		.cfi_offset 7, -8
 2769              		.cfi_offset 14, -4
2722:ThirdParty/FreeRTOS/tasks.c ****     TickType_t xItemValue;
 2770              		.loc 1 2722 5 view .LVU756
2723:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xSwitchRequired = pdFALSE;
 2771              		.loc 1 2723 5 view .LVU757
2724:ThirdParty/FreeRTOS/tasks.c **** 
 2772              		.loc 1 2724 5 view .LVU758
 2773              	.LVL197:
2729:ThirdParty/FreeRTOS/tasks.c **** 
 2774              		.loc 1 2729 43 view .LVU759
2731:ThirdParty/FreeRTOS/tasks.c ****     {
 2775              		.loc 1 2731 5 view .LVU760
2731:ThirdParty/FreeRTOS/tasks.c ****     {
 2776              		.loc 1 2731 30 is_stmt 0 view .LVU761
 2777 0002 524B     		ldr	r3, .L221
 2778 0004 1B68     		ldr	r3, [r3]
2731:ThirdParty/FreeRTOS/tasks.c ****     {
 2779              		.loc 1 2731 7 view .LVU762
 2780 0006 002B     		cmp	r3, #0
 2781 0008 40F09980 		bne	.L198
 2782              	.LBB196:
2735:ThirdParty/FreeRTOS/tasks.c **** 
 2783              		.loc 1 2735 9 is_stmt 1 view .LVU763
2735:ThirdParty/FreeRTOS/tasks.c **** 
 2784              		.loc 1 2735 55 is_stmt 0 view .LVU764
 2785 000c 504B     		ldr	r3, .L221+4
 2786 000e 1C68     		ldr	r4, [r3]
2735:ThirdParty/FreeRTOS/tasks.c **** 
 2787              		.loc 1 2735 26 view .LVU765
 2788 0010 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 160


 2789              	.LVL198:
2739:ThirdParty/FreeRTOS/tasks.c **** 
 2790              		.loc 1 2739 9 is_stmt 1 view .LVU766
2739:ThirdParty/FreeRTOS/tasks.c **** 
 2791              		.loc 1 2739 20 is_stmt 0 view .LVU767
 2792 0012 1C60     		str	r4, [r3]
2741:ThirdParty/FreeRTOS/tasks.c ****         {
 2793              		.loc 1 2741 9 is_stmt 1 view .LVU768
2741:ThirdParty/FreeRTOS/tasks.c ****         {
 2794              		.loc 1 2741 11 is_stmt 0 view .LVU769
 2795 0014 C4B9     		cbnz	r4, .L199
 2796              	.LBB197:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2797              		.loc 1 2743 13 is_stmt 1 view .LVU770
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2798              		.loc 1 2743 13 view .LVU771
 2799 0016 4F4B     		ldr	r3, .L221+8
 2800 0018 1B68     		ldr	r3, [r3]
 2801 001a 1B68     		ldr	r3, [r3]
 2802 001c 43B1     		cbz	r3, .L200
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2803              		.loc 1 2743 13 view .LVU772
 2804              	.LBB198:
 2805              	.LBI198:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 2806              		.loc 2 194 34 view .LVU773
 2807              	.LBB199:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 2808              		.loc 2 196 9 view .LVU774
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2809              		.loc 2 198 9 view .LVU775
 2810              		.syntax unified
 2811              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 2812 001e 4FF05003 			mov r3, #80												
 2813 0022 83F31188 		msr basepri, r3											
 2814 0026 BFF36F8F 		isb														
 2815 002a BFF34F8F 		dsb														
 2816              	
 2817              	@ 0 "" 2
 2818              	.LVL199:
 2819              		.thumb
 2820              		.syntax unified
 2821              	.L201:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 2822              		.loc 2 198 9 is_stmt 0 view .LVU776
 2823              	.LBE199:
 2824              	.LBE198:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2825              		.loc 1 2743 13 is_stmt 1 discriminator 1 view .LVU777
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2826              		.loc 1 2743 13 discriminator 1 view .LVU778
 2827 002e FEE7     		b	.L201
 2828              	.L200:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2829              		.loc 1 2743 13 discriminator 2 view .LVU779
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2830              		.loc 1 2743 13 discriminator 2 view .LVU780
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 161


 2831 0030 484A     		ldr	r2, .L221+8
 2832 0032 1168     		ldr	r1, [r2]
 2833              	.LVL200:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2834              		.loc 1 2743 13 discriminator 2 view .LVU781
 2835 0034 484B     		ldr	r3, .L221+12
 2836 0036 1868     		ldr	r0, [r3]
 2837 0038 1060     		str	r0, [r2]
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2838              		.loc 1 2743 13 discriminator 2 view .LVU782
 2839 003a 1960     		str	r1, [r3]
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2840              		.loc 1 2743 13 discriminator 2 view .LVU783
 2841 003c 474A     		ldr	r2, .L221+16
 2842 003e 1368     		ldr	r3, [r2]
 2843 0040 0133     		adds	r3, r3, #1
 2844 0042 1360     		str	r3, [r2]
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2845              		.loc 1 2743 13 discriminator 2 view .LVU784
 2846 0044 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2847              	.LVL201:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2848              		.loc 1 2743 13 is_stmt 0 discriminator 2 view .LVU785
 2849              	.LBE197:
2743:ThirdParty/FreeRTOS/tasks.c ****         }
 2850              		.loc 1 2743 39 is_stmt 1 discriminator 2 view .LVU786
 2851              	.L199:
2747:ThirdParty/FreeRTOS/tasks.c ****         }
 2852              		.loc 1 2747 37 view .LVU787
2754:ThirdParty/FreeRTOS/tasks.c ****         {
 2853              		.loc 1 2754 9 view .LVU788
2754:ThirdParty/FreeRTOS/tasks.c ****         {
 2854              		.loc 1 2754 29 is_stmt 0 view .LVU789
 2855 0048 454B     		ldr	r3, .L221+20
 2856 004a 1B68     		ldr	r3, [r3]
2754:ThirdParty/FreeRTOS/tasks.c ****         {
 2857              		.loc 1 2754 11 view .LVU790
 2858 004c A342     		cmp	r3, r4
 2859 004e 11D9     		bls	.L213
 2860              	.LBE196:
2724:ThirdParty/FreeRTOS/tasks.c **** 
 2861              		.loc 1 2724 16 view .LVU791
 2862 0050 0020     		movs	r0, #0
 2863              	.LVL202:
 2864              	.L203:
 2865              	.LBB205:
2841:ThirdParty/FreeRTOS/tasks.c ****             {
 2866              		.loc 1 2841 13 is_stmt 1 view .LVU792
2841:ThirdParty/FreeRTOS/tasks.c ****             {
 2867              		.loc 1 2841 17 is_stmt 0 view .LVU793
 2868 0052 444B     		ldr	r3, .L221+24
 2869 0054 1B68     		ldr	r3, [r3]
 2870 0056 DB6A     		ldr	r3, [r3, #44]
 2871 0058 03EB8303 		add	r3, r3, r3, lsl #2
 2872 005c 9A00     		lsls	r2, r3, #2
 2873 005e 424B     		ldr	r3, .L221+28
 2874 0060 9B58     		ldr	r3, [r3, r2]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 162


2841:ThirdParty/FreeRTOS/tasks.c ****             {
 2875              		.loc 1 2841 15 view .LVU794
 2876 0062 012B     		cmp	r3, #1
 2877 0064 00D9     		bls	.L211
2843:ThirdParty/FreeRTOS/tasks.c ****             }
 2878              		.loc 1 2843 33 view .LVU795
 2879 0066 0120     		movs	r0, #1
 2880              	.LVL203:
 2881              	.L211:
2847:ThirdParty/FreeRTOS/tasks.c ****             }
 2882              		.loc 1 2847 41 is_stmt 1 view .LVU796
2869:ThirdParty/FreeRTOS/tasks.c ****             {
 2883              		.loc 1 2869 13 view .LVU797
2869:ThirdParty/FreeRTOS/tasks.c ****             {
 2884              		.loc 1 2869 31 is_stmt 0 view .LVU798
 2885 0068 404B     		ldr	r3, .L221+32
 2886 006a 1B68     		ldr	r3, [r3]
2869:ThirdParty/FreeRTOS/tasks.c ****             {
 2887              		.loc 1 2869 15 view .LVU799
 2888 006c 002B     		cmp	r3, #0
 2889 006e 6BD0     		beq	.L197
2871:ThirdParty/FreeRTOS/tasks.c ****             }
 2890              		.loc 1 2871 33 view .LVU800
 2891 0070 0120     		movs	r0, #1
 2892              	.LVL204:
2871:ThirdParty/FreeRTOS/tasks.c ****             }
 2893              		.loc 1 2871 33 view .LVU801
 2894              	.LBE205:
2893:ThirdParty/FreeRTOS/tasks.c **** }
 2895              		.loc 1 2893 5 is_stmt 1 view .LVU802
2893:ThirdParty/FreeRTOS/tasks.c **** }
 2896              		.loc 1 2893 12 is_stmt 0 view .LVU803
 2897 0072 69E0     		b	.L197
 2898              	.LVL205:
 2899              	.L213:
2724:ThirdParty/FreeRTOS/tasks.c **** 
 2900              		.loc 1 2724 16 view .LVU804
 2901 0074 0020     		movs	r0, #0
 2902 0076 37E0     		b	.L202
 2903              	.LVL206:
 2904              	.L218:
 2905              	.LBB206:
2765:ThirdParty/FreeRTOS/tasks.c ****                     break;
 2906              		.loc 1 2765 21 is_stmt 1 view .LVU805
2765:ThirdParty/FreeRTOS/tasks.c ****                     break;
 2907              		.loc 1 2765 42 is_stmt 0 view .LVU806
 2908 0078 394B     		ldr	r3, .L221+20
 2909 007a 4FF0FF32 		mov	r2, #-1
 2910 007e 1A60     		str	r2, [r3]
2766:ThirdParty/FreeRTOS/tasks.c ****                 }
 2911              		.loc 1 2766 21 is_stmt 1 view .LVU807
 2912 0080 E7E7     		b	.L203
 2913              	.LVL207:
 2914              	.L219:
2784:ThirdParty/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
 2915              		.loc 1 2784 25 view .LVU808
2784:ThirdParty/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 163


 2916              		.loc 1 2784 46 is_stmt 0 view .LVU809
 2917 0082 374B     		ldr	r3, .L221+20
 2918              	.LVL208:
2784:ThirdParty/FreeRTOS/tasks.c ****                         break; /*lint !e9011 Code structure here is deemed easier to understand wit
 2919              		.loc 1 2784 46 view .LVU810
 2920 0084 1A60     		str	r2, [r3]
2785:ThirdParty/FreeRTOS/tasks.c ****                     }
 2921              		.loc 1 2785 25 is_stmt 1 view .LVU811
 2922 0086 E4E7     		b	.L203
 2923              	.LVL209:
 2924              	.L220:
 2925              	.LBB200:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 2926              		.loc 1 2793 21 discriminator 1 view .LVU812
 2927 0088 D968     		ldr	r1, [r3, #12]
 2928 008a 5160     		str	r1, [r2, #4]
 2929 008c 42E0     		b	.L206
 2930              	.LVL210:
 2931              	.L208:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 2932              		.loc 1 2793 21 is_stmt 0 discriminator 1 view .LVU813
 2933              	.LBE200:
 2934              	.LBB201:
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 2935              		.loc 1 2799 25 is_stmt 1 discriminator 3 view .LVU814
 2936 008e 0021     		movs	r1, #0
 2937 0090 9962     		str	r1, [r3, #40]
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 2938              		.loc 1 2799 25 discriminator 3 view .LVU815
 2939 0092 1168     		ldr	r1, [r2]
 2940 0094 0139     		subs	r1, r1, #1
 2941 0096 1160     		str	r1, [r2]
 2942              	.LBE201:
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 2943              		.loc 1 2799 70 discriminator 3 view .LVU816
 2944              	.LVL211:
 2945              	.L207:
2803:ThirdParty/FreeRTOS/tasks.c ****                     }
 2946              		.loc 1 2803 49 view .LVU817
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2947              		.loc 1 2808 21 view .LVU818
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2948              		.loc 1 2808 21 view .LVU819
 2949 0098 DA6A     		ldr	r2, [r3, #44]
 2950 009a 0121     		movs	r1, #1
 2951 009c 9140     		lsls	r1, r1, r2
 2952 009e 344E     		ldr	r6, .L221+36
 2953 00a0 3768     		ldr	r7, [r6]
 2954 00a2 3943     		orrs	r1, r1, r7
 2955 00a4 3160     		str	r1, [r6]
 2956              	.LBB202:
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2957              		.loc 1 2808 21 view .LVU820
 2958 00a6 3049     		ldr	r1, .L221+28
 2959 00a8 02EB8202 		add	r2, r2, r2, lsl #2
 2960 00ac 4FEA820C 		lsl	ip, r2, #2
 2961 00b0 8C44     		add	ip, ip, r1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 164


 2962 00b2 DCF80420 		ldr	r2, [ip, #4]
 2963              	.LVL212:
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2964              		.loc 1 2808 21 view .LVU821
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2965              		.loc 1 2808 21 view .LVU822
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2966              		.loc 1 2808 21 view .LVU823
 2967 00b6 9A60     		str	r2, [r3, #8]
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2968              		.loc 1 2808 21 view .LVU824
 2969 00b8 9668     		ldr	r6, [r2, #8]
 2970 00ba DE60     		str	r6, [r3, #12]
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2971              		.loc 1 2808 21 view .LVU825
 2972 00bc 7560     		str	r5, [r6, #4]
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2973              		.loc 1 2808 21 view .LVU826
 2974 00be 9560     		str	r5, [r2, #8]
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2975              		.loc 1 2808 21 view .LVU827
 2976 00c0 DA6A     		ldr	r2, [r3, #44]
 2977              	.LVL213:
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2978              		.loc 1 2808 21 is_stmt 0 view .LVU828
 2979 00c2 02EB820C 		add	ip, r2, r2, lsl #2
 2980 00c6 4FEA8C05 		lsl	r5, ip, #2
 2981 00ca 6E18     		adds	r6, r5, r1
 2982 00cc 5E61     		str	r6, [r3, #20]
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2983              		.loc 1 2808 21 is_stmt 1 view .LVU829
 2984 00ce 4D59     		ldr	r5, [r1, r5]
 2985 00d0 0135     		adds	r5, r5, #1
 2986 00d2 4FEA8C0C 		lsl	ip, ip, #2
 2987 00d6 41F80C50 		str	r5, [r1, ip]
 2988              	.LBE202:
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2989              		.loc 1 2808 21 view .LVU830
2808:ThirdParty/FreeRTOS/tasks.c **** 
 2990              		.loc 1 2808 51 view .LVU831
2822:ThirdParty/FreeRTOS/tasks.c ****                         {
 2991              		.loc 1 2822 25 view .LVU832
2822:ThirdParty/FreeRTOS/tasks.c ****                         {
 2992              		.loc 1 2822 34 is_stmt 0 view .LVU833
 2993 00da DA6A     		ldr	r2, [r3, #44]
2822:ThirdParty/FreeRTOS/tasks.c ****                         {
 2994              		.loc 1 2822 61 view .LVU834
 2995 00dc 214B     		ldr	r3, .L221+24
 2996              	.LVL214:
2822:ThirdParty/FreeRTOS/tasks.c ****                         {
 2997              		.loc 1 2822 61 view .LVU835
 2998 00de 1B68     		ldr	r3, [r3]
 2999 00e0 DB6A     		ldr	r3, [r3, #44]
2822:ThirdParty/FreeRTOS/tasks.c ****                         {
 3000              		.loc 1 2822 27 view .LVU836
 3001 00e2 9A42     		cmp	r2, r3
 3002 00e4 00D9     		bls	.L202
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 165


2824:ThirdParty/FreeRTOS/tasks.c ****                         }
 3003              		.loc 1 2824 45 view .LVU837
 3004 00e6 0120     		movs	r0, #1
 3005              	.LVL215:
 3006              	.L202:
2756:ThirdParty/FreeRTOS/tasks.c ****             {
 3007              		.loc 1 2756 13 is_stmt 1 view .LVU838
2758:ThirdParty/FreeRTOS/tasks.c ****                 {
 3008              		.loc 1 2758 17 view .LVU839
2758:ThirdParty/FreeRTOS/tasks.c ****                 {
 3009              		.loc 1 2758 21 is_stmt 0 view .LVU840
 3010 00e8 1A4B     		ldr	r3, .L221+8
 3011 00ea 1B68     		ldr	r3, [r3]
 3012 00ec 1B68     		ldr	r3, [r3]
2758:ThirdParty/FreeRTOS/tasks.c ****                 {
 3013              		.loc 1 2758 19 view .LVU841
 3014 00ee 002B     		cmp	r3, #0
 3015 00f0 C2D0     		beq	.L218
2774:ThirdParty/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 3016              		.loc 1 2774 21 is_stmt 1 view .LVU842
2774:ThirdParty/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 3017              		.loc 1 2774 29 is_stmt 0 view .LVU843
 3018 00f2 184B     		ldr	r3, .L221+8
 3019 00f4 1B68     		ldr	r3, [r3]
 3020 00f6 DB68     		ldr	r3, [r3, #12]
2774:ThirdParty/FreeRTOS/tasks.c ****                     xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 3021              		.loc 1 2774 27 view .LVU844
 3022 00f8 DB68     		ldr	r3, [r3, #12]
 3023              	.LVL216:
2775:ThirdParty/FreeRTOS/tasks.c **** 
 3024              		.loc 1 2775 21 is_stmt 1 view .LVU845
2775:ThirdParty/FreeRTOS/tasks.c **** 
 3025              		.loc 1 2775 32 is_stmt 0 view .LVU846
 3026 00fa 5A68     		ldr	r2, [r3, #4]
 3027              	.LVL217:
2777:ThirdParty/FreeRTOS/tasks.c ****                     {
 3028              		.loc 1 2777 21 is_stmt 1 view .LVU847
2777:ThirdParty/FreeRTOS/tasks.c ****                     {
 3029              		.loc 1 2777 23 is_stmt 0 view .LVU848
 3030 00fc 9442     		cmp	r4, r2
 3031 00fe C0D3     		bcc	.L219
2789:ThirdParty/FreeRTOS/tasks.c ****                     }
 3032              		.loc 1 2789 49 is_stmt 1 view .LVU849
 3033              	.LBB203:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3034              		.loc 1 2793 21 view .LVU850
 3035 0100 5A69     		ldr	r2, [r3, #20]
 3036              	.LVL218:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3037              		.loc 1 2793 21 view .LVU851
 3038 0102 9D68     		ldr	r5, [r3, #8]
 3039 0104 D968     		ldr	r1, [r3, #12]
 3040 0106 A960     		str	r1, [r5, #8]
 3041              	.LVL219:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3042              		.loc 1 2793 21 view .LVU852
 3043 0108 9D68     		ldr	r5, [r3, #8]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 166


 3044 010a 4D60     		str	r5, [r1, #4]
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3045              		.loc 1 2793 21 view .LVU853
 3046 010c 5168     		ldr	r1, [r2, #4]
 3047 010e 1D1D     		adds	r5, r3, #4
 3048 0110 A942     		cmp	r1, r5
 3049 0112 B9D0     		beq	.L220
 3050              	.L206:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3051              		.loc 1 2793 21 discriminator 3 view .LVU854
 3052 0114 0021     		movs	r1, #0
 3053 0116 5961     		str	r1, [r3, #20]
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3054              		.loc 1 2793 21 discriminator 3 view .LVU855
 3055 0118 1168     		ldr	r1, [r2]
 3056 011a 0139     		subs	r1, r1, #1
 3057 011c 1160     		str	r1, [r2]
 3058              	.LBE203:
2793:ThirdParty/FreeRTOS/tasks.c **** 
 3059              		.loc 1 2793 66 discriminator 3 view .LVU856
2797:ThirdParty/FreeRTOS/tasks.c ****                     {
 3060              		.loc 1 2797 21 discriminator 3 view .LVU857
2797:ThirdParty/FreeRTOS/tasks.c ****                     {
 3061              		.loc 1 2797 25 is_stmt 0 discriminator 3 view .LVU858
 3062 011e 9A6A     		ldr	r2, [r3, #40]
 3063              	.LVL220:
2797:ThirdParty/FreeRTOS/tasks.c ****                     {
 3064              		.loc 1 2797 23 discriminator 3 view .LVU859
 3065 0120 002A     		cmp	r2, #0
 3066 0122 B9D0     		beq	.L207
 3067              	.LBB204:
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 3068              		.loc 1 2799 25 is_stmt 1 view .LVU860
 3069              	.LVL221:
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 3070              		.loc 1 2799 25 view .LVU861
 3071 0124 DE69     		ldr	r6, [r3, #28]
 3072 0126 196A     		ldr	r1, [r3, #32]
 3073 0128 B160     		str	r1, [r6, #8]
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 3074              		.loc 1 2799 25 view .LVU862
 3075 012a DE69     		ldr	r6, [r3, #28]
 3076 012c 4E60     		str	r6, [r1, #4]
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 3077              		.loc 1 2799 25 view .LVU863
 3078 012e 5668     		ldr	r6, [r2, #4]
 3079 0130 03F11801 		add	r1, r3, #24
 3080 0134 8E42     		cmp	r6, r1
 3081 0136 AAD1     		bne	.L208
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
 3082              		.loc 1 2799 25 discriminator 1 view .LVU864
 3083 0138 196A     		ldr	r1, [r3, #32]
 3084 013a 5160     		str	r1, [r2, #4]
 3085 013c A7E7     		b	.L208
 3086              	.LVL222:
 3087              	.L198:
2799:ThirdParty/FreeRTOS/tasks.c ****                     }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 167


 3088              		.loc 1 2799 25 is_stmt 0 discriminator 1 view .LVU865
 3089              	.LBE204:
 3090              	.LBE206:
2882:ThirdParty/FreeRTOS/tasks.c **** 
 3091              		.loc 1 2882 9 is_stmt 1 view .LVU866
 3092 013e 0D4A     		ldr	r2, .L221+40
 3093 0140 1368     		ldr	r3, [r2]
 3094 0142 0133     		adds	r3, r3, #1
 3095 0144 1360     		str	r3, [r2]
2724:ThirdParty/FreeRTOS/tasks.c **** 
 3096              		.loc 1 2724 16 is_stmt 0 view .LVU867
 3097 0146 0020     		movs	r0, #0
 3098              	.LVL223:
 3099              	.L197:
2894:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3100              		.loc 1 2894 1 view .LVU868
 3101 0148 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3102              	.L222:
 3103 014a 00BF     		.align	2
 3104              	.L221:
 3105 014c 00000000 		.word	uxSchedulerSuspended
 3106 0150 00000000 		.word	xTickCount
 3107 0154 00000000 		.word	pxDelayedTaskList
 3108 0158 00000000 		.word	pxOverflowDelayedTaskList
 3109 015c 00000000 		.word	xNumOfOverflows
 3110 0160 00000000 		.word	xNextTaskUnblockTime
 3111 0164 00000000 		.word	pxCurrentTCB
 3112 0168 00000000 		.word	pxReadyTasksLists
 3113 016c 00000000 		.word	xYieldPending
 3114 0170 00000000 		.word	uxTopReadyPriority
 3115 0174 00000000 		.word	xPendedTicks
 3116              		.cfi_endproc
 3117              	.LFE29:
 3119              		.section	.text.xTaskResumeAll,"ax",%progbits
 3120              		.align	1
 3121              		.global	xTaskResumeAll
 3122              		.syntax unified
 3123              		.thumb
 3124              		.thumb_func
 3126              	xTaskResumeAll:
 3127              	.LFB22:
2175:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxTCB = NULL;
 3128              		.loc 1 2175 1 is_stmt 1 view -0
 3129              		.cfi_startproc
 3130              		@ args = 0, pretend = 0, frame = 0
 3131              		@ frame_needed = 0, uses_anonymous_args = 0
 3132 0000 38B5     		push	{r3, r4, r5, lr}
 3133              	.LCFI25:
 3134              		.cfi_def_cfa_offset 16
 3135              		.cfi_offset 3, -16
 3136              		.cfi_offset 4, -12
 3137              		.cfi_offset 5, -8
 3138              		.cfi_offset 14, -4
2176:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
 3139              		.loc 1 2176 5 view .LVU870
 3140              	.LVL224:
2177:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 168


 3141              		.loc 1 2177 5 view .LVU871
2181:ThirdParty/FreeRTOS/tasks.c **** 
 3142              		.loc 1 2181 5 view .LVU872
 3143 0002 4A4B     		ldr	r3, .L243
 3144 0004 1B68     		ldr	r3, [r3]
 3145 0006 43B9     		cbnz	r3, .L224
2181:ThirdParty/FreeRTOS/tasks.c **** 
 3146              		.loc 1 2181 5 view .LVU873
 3147              	.LBB207:
 3148              	.LBI207:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3149              		.loc 2 194 34 view .LVU874
 3150              	.LBB208:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3151              		.loc 2 196 9 view .LVU875
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3152              		.loc 2 198 9 view .LVU876
 3153              		.syntax unified
 3154              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3155 0008 4FF05003 			mov r3, #80												
 3156 000c 83F31188 		msr basepri, r3											
 3157 0010 BFF36F8F 		isb														
 3158 0014 BFF34F8F 		dsb														
 3159              	
 3160              	@ 0 "" 2
 3161              	.LVL225:
 3162              		.thumb
 3163              		.syntax unified
 3164              	.L225:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3165              		.loc 2 198 9 is_stmt 0 view .LVU877
 3166              	.LBE208:
 3167              	.LBE207:
2181:ThirdParty/FreeRTOS/tasks.c **** 
 3168              		.loc 1 2181 5 is_stmt 1 discriminator 1 view .LVU878
2181:ThirdParty/FreeRTOS/tasks.c **** 
 3169              		.loc 1 2181 5 discriminator 1 view .LVU879
 3170 0018 FEE7     		b	.L225
 3171              	.L224:
2181:ThirdParty/FreeRTOS/tasks.c **** 
 3172              		.loc 1 2181 41 discriminator 2 view .LVU880
2188:ThirdParty/FreeRTOS/tasks.c ****     {
 3173              		.loc 1 2188 5 discriminator 2 view .LVU881
 3174 001a FFF7FEFF 		bl	vPortEnterCritical
 3175              	.LVL226:
2190:ThirdParty/FreeRTOS/tasks.c **** 
 3176              		.loc 1 2190 9 discriminator 2 view .LVU882
 3177 001e 434B     		ldr	r3, .L243
 3178 0020 1A68     		ldr	r2, [r3]
 3179 0022 013A     		subs	r2, r2, #1
 3180 0024 1A60     		str	r2, [r3]
2192:ThirdParty/FreeRTOS/tasks.c ****         {
 3181              		.loc 1 2192 9 discriminator 2 view .LVU883
2192:ThirdParty/FreeRTOS/tasks.c ****         {
 3182              		.loc 1 2192 34 is_stmt 0 discriminator 2 view .LVU884
 3183 0026 1B68     		ldr	r3, [r3]
2192:ThirdParty/FreeRTOS/tasks.c ****         {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 169


 3184              		.loc 1 2192 11 discriminator 2 view .LVU885
 3185 0028 002B     		cmp	r3, #0
 3186 002a 7AD1     		bne	.L236
2194:ThirdParty/FreeRTOS/tasks.c ****             {
 3187              		.loc 1 2194 13 is_stmt 1 view .LVU886
2194:ThirdParty/FreeRTOS/tasks.c ****             {
 3188              		.loc 1 2194 40 is_stmt 0 view .LVU887
 3189 002c 404B     		ldr	r3, .L243+4
 3190 002e 1B68     		ldr	r3, [r3]
2194:ThirdParty/FreeRTOS/tasks.c ****             {
 3191              		.loc 1 2194 15 view .LVU888
 3192 0030 3BB9     		cbnz	r3, .L237
2177:ThirdParty/FreeRTOS/tasks.c **** 
 3193              		.loc 1 2177 16 view .LVU889
 3194 0032 0024     		movs	r4, #0
 3195 0034 76E0     		b	.L226
 3196              	.LVL227:
 3197              	.L240:
 3198              	.LBB209:
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3199              		.loc 1 2201 21 is_stmt 1 discriminator 1 view .LVU890
 3200 0036 196A     		ldr	r1, [r3, #32]
 3201 0038 5160     		str	r1, [r2, #4]
 3202 003a 15E0     		b	.L228
 3203              	.LVL228:
 3204              	.L241:
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3205              		.loc 1 2201 21 is_stmt 0 discriminator 1 view .LVU891
 3206              	.LBE209:
 3207              	.LBB210:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3208              		.loc 1 2203 21 is_stmt 1 discriminator 1 view .LVU892
 3209 003c D968     		ldr	r1, [r3, #12]
 3210 003e 5160     		str	r1, [r2, #4]
 3211 0040 21E0     		b	.L229
 3212              	.LVL229:
 3213              	.L237:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3214              		.loc 1 2203 21 is_stmt 0 discriminator 1 view .LVU893
 3215              	.LBE210:
2176:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xAlreadyYielded = pdFALSE;
 3216              		.loc 1 2176 13 view .LVU894
 3217 0042 0023     		movs	r3, #0
 3218              	.LVL230:
 3219              	.L227:
2214:ThirdParty/FreeRTOS/tasks.c ****                     }
 3220              		.loc 1 2214 49 is_stmt 1 view .LVU895
2198:ThirdParty/FreeRTOS/tasks.c ****                 {
 3221              		.loc 1 2198 64 view .LVU896
2198:ThirdParty/FreeRTOS/tasks.c ****                 {
 3222              		.loc 1 2198 24 is_stmt 0 view .LVU897
 3223 0044 3B4A     		ldr	r2, .L243+8
 3224 0046 1268     		ldr	r2, [r2]
2198:ThirdParty/FreeRTOS/tasks.c ****                 {
 3225              		.loc 1 2198 64 view .LVU898
 3226 0048 002A     		cmp	r2, #0
 3227 004a 47D0     		beq	.L239
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 170


2200:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3228              		.loc 1 2200 21 is_stmt 1 view .LVU899
2200:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3229              		.loc 1 2200 29 is_stmt 0 view .LVU900
 3230 004c 394B     		ldr	r3, .L243+8
 3231              	.LVL231:
2200:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3232              		.loc 1 2200 29 view .LVU901
 3233 004e DB68     		ldr	r3, [r3, #12]
2200:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 3234              		.loc 1 2200 27 view .LVU902
 3235 0050 DB68     		ldr	r3, [r3, #12]
 3236              	.LVL232:
 3237              	.LBB211:
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3238              		.loc 1 2201 21 is_stmt 1 view .LVU903
 3239 0052 9A6A     		ldr	r2, [r3, #40]
 3240              	.LVL233:
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3241              		.loc 1 2201 21 view .LVU904
 3242 0054 D869     		ldr	r0, [r3, #28]
 3243 0056 196A     		ldr	r1, [r3, #32]
 3244 0058 8160     		str	r1, [r0, #8]
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3245              		.loc 1 2201 21 view .LVU905
 3246 005a D869     		ldr	r0, [r3, #28]
 3247 005c 4860     		str	r0, [r1, #4]
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3248              		.loc 1 2201 21 view .LVU906
 3249 005e 5068     		ldr	r0, [r2, #4]
 3250 0060 03F11801 		add	r1, r3, #24
 3251 0064 8842     		cmp	r0, r1
 3252 0066 E6D0     		beq	.L240
 3253              	.L228:
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3254              		.loc 1 2201 21 discriminator 3 view .LVU907
 3255 0068 0021     		movs	r1, #0
 3256 006a 9962     		str	r1, [r3, #40]
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3257              		.loc 1 2201 21 discriminator 3 view .LVU908
 3258 006c 1168     		ldr	r1, [r2]
 3259 006e 0139     		subs	r1, r1, #1
 3260 0070 1160     		str	r1, [r2]
 3261              	.LBE211:
2201:ThirdParty/FreeRTOS/tasks.c ****                     portMEMORY_BARRIER();
 3262              		.loc 1 2201 66 discriminator 3 view .LVU909
2202:ThirdParty/FreeRTOS/tasks.c ****                     listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 3263              		.loc 1 2202 21 discriminator 3 view .LVU910
 3264              	.LBB212:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3265              		.loc 1 2203 21 discriminator 3 view .LVU911
 3266 0072 5A69     		ldr	r2, [r3, #20]
 3267              	.LVL234:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3268              		.loc 1 2203 21 discriminator 3 view .LVU912
 3269 0074 9868     		ldr	r0, [r3, #8]
 3270 0076 D968     		ldr	r1, [r3, #12]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 171


 3271 0078 8160     		str	r1, [r0, #8]
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3272              		.loc 1 2203 21 discriminator 3 view .LVU913
 3273 007a 9868     		ldr	r0, [r3, #8]
 3274 007c 4860     		str	r0, [r1, #4]
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3275              		.loc 1 2203 21 discriminator 3 view .LVU914
 3276 007e 5168     		ldr	r1, [r2, #4]
 3277 0080 181D     		adds	r0, r3, #4
 3278 0082 8142     		cmp	r1, r0
 3279 0084 DAD0     		beq	.L241
 3280              	.L229:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3281              		.loc 1 2203 21 discriminator 3 view .LVU915
 3282 0086 0021     		movs	r1, #0
 3283 0088 5961     		str	r1, [r3, #20]
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3284              		.loc 1 2203 21 discriminator 3 view .LVU916
 3285 008a 1168     		ldr	r1, [r2]
 3286 008c 0139     		subs	r1, r1, #1
 3287 008e 1160     		str	r1, [r2]
 3288              	.LBE212:
2203:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 3289              		.loc 1 2203 66 discriminator 3 view .LVU917
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3290              		.loc 1 2204 21 discriminator 3 view .LVU918
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3291              		.loc 1 2204 21 discriminator 3 view .LVU919
 3292 0090 DA6A     		ldr	r2, [r3, #44]
 3293              	.LVL235:
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3294              		.loc 1 2204 21 is_stmt 0 discriminator 3 view .LVU920
 3295 0092 0121     		movs	r1, #1
 3296 0094 9140     		lsls	r1, r1, r2
 3297 0096 284C     		ldr	r4, .L243+12
 3298 0098 2568     		ldr	r5, [r4]
 3299 009a 2943     		orrs	r1, r1, r5
 3300 009c 2160     		str	r1, [r4]
 3301              	.LBB213:
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3302              		.loc 1 2204 21 is_stmt 1 discriminator 3 view .LVU921
 3303 009e 2749     		ldr	r1, .L243+16
 3304 00a0 02EB8202 		add	r2, r2, r2, lsl #2
 3305 00a4 01EB8202 		add	r2, r1, r2, lsl #2
 3306 00a8 5268     		ldr	r2, [r2, #4]
 3307              	.LVL236:
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3308              		.loc 1 2204 21 discriminator 3 view .LVU922
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3309              		.loc 1 2204 21 discriminator 3 view .LVU923
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3310              		.loc 1 2204 21 discriminator 3 view .LVU924
 3311 00aa 9A60     		str	r2, [r3, #8]
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3312              		.loc 1 2204 21 discriminator 3 view .LVU925
 3313 00ac 9468     		ldr	r4, [r2, #8]
 3314 00ae DC60     		str	r4, [r3, #12]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 172


2204:ThirdParty/FreeRTOS/tasks.c **** 
 3315              		.loc 1 2204 21 discriminator 3 view .LVU926
 3316 00b0 6060     		str	r0, [r4, #4]
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3317              		.loc 1 2204 21 discriminator 3 view .LVU927
 3318 00b2 9060     		str	r0, [r2, #8]
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3319              		.loc 1 2204 21 discriminator 3 view .LVU928
 3320 00b4 DA6A     		ldr	r2, [r3, #44]
 3321              	.LVL237:
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3322              		.loc 1 2204 21 is_stmt 0 discriminator 3 view .LVU929
 3323 00b6 02EB8200 		add	r0, r2, r2, lsl #2
 3324 00ba 8400     		lsls	r4, r0, #2
 3325 00bc 01EB8000 		add	r0, r1, r0, lsl #2
 3326 00c0 5861     		str	r0, [r3, #20]
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3327              		.loc 1 2204 21 is_stmt 1 discriminator 3 view .LVU930
 3328 00c2 0859     		ldr	r0, [r1, r4]
 3329 00c4 0130     		adds	r0, r0, #1
 3330 00c6 0851     		str	r0, [r1, r4]
 3331              	.LBE213:
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3332              		.loc 1 2204 21 discriminator 3 view .LVU931
2204:ThirdParty/FreeRTOS/tasks.c **** 
 3333              		.loc 1 2204 51 discriminator 3 view .LVU932
2208:ThirdParty/FreeRTOS/tasks.c ****                     {
 3334              		.loc 1 2208 21 discriminator 3 view .LVU933
2208:ThirdParty/FreeRTOS/tasks.c ****                     {
 3335              		.loc 1 2208 30 is_stmt 0 discriminator 3 view .LVU934
 3336 00c8 D96A     		ldr	r1, [r3, #44]
2208:ThirdParty/FreeRTOS/tasks.c ****                     {
 3337              		.loc 1 2208 58 discriminator 3 view .LVU935
 3338 00ca 1D4A     		ldr	r2, .L243+20
 3339 00cc 1268     		ldr	r2, [r2]
 3340 00ce D26A     		ldr	r2, [r2, #44]
2208:ThirdParty/FreeRTOS/tasks.c ****                     {
 3341              		.loc 1 2208 23 discriminator 3 view .LVU936
 3342 00d0 9142     		cmp	r1, r2
 3343 00d2 B7D3     		bcc	.L227
2210:ThirdParty/FreeRTOS/tasks.c ****                     }
 3344              		.loc 1 2210 25 is_stmt 1 view .LVU937
2210:ThirdParty/FreeRTOS/tasks.c ****                     }
 3345              		.loc 1 2210 39 is_stmt 0 view .LVU938
 3346 00d4 1B4A     		ldr	r2, .L243+24
 3347 00d6 0121     		movs	r1, #1
 3348 00d8 1160     		str	r1, [r2]
 3349 00da B3E7     		b	.L227
 3350              	.LVL238:
 3351              	.L239:
2218:ThirdParty/FreeRTOS/tasks.c ****                 {
 3352              		.loc 1 2218 17 is_stmt 1 view .LVU939
2218:ThirdParty/FreeRTOS/tasks.c ****                 {
 3353              		.loc 1 2218 19 is_stmt 0 view .LVU940
 3354 00dc 0BB1     		cbz	r3, .L232
2226:ThirdParty/FreeRTOS/tasks.c ****                 }
 3355              		.loc 1 2226 21 is_stmt 1 view .LVU941
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 173


 3356 00de FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3357              	.LVL239:
 3358              	.L232:
 3359              	.LBB214:
2234:ThirdParty/FreeRTOS/tasks.c **** 
 3360              		.loc 1 2234 21 view .LVU942
2234:ThirdParty/FreeRTOS/tasks.c **** 
 3361              		.loc 1 2234 32 is_stmt 0 view .LVU943
 3362 00e2 194B     		ldr	r3, .L243+28
 3363 00e4 1C68     		ldr	r4, [r3]
 3364              	.LVL240:
2236:ThirdParty/FreeRTOS/tasks.c ****                     {
 3365              		.loc 1 2236 21 is_stmt 1 view .LVU944
2236:ThirdParty/FreeRTOS/tasks.c ****                     {
 3366              		.loc 1 2236 23 is_stmt 0 view .LVU945
 3367 00e6 84B9     		cbnz	r4, .L235
 3368              	.L233:
2256:ThirdParty/FreeRTOS/tasks.c ****                     }
 3369              		.loc 1 2256 49 is_stmt 1 view .LVU946
 3370              	.LBE214:
2260:ThirdParty/FreeRTOS/tasks.c ****                 {
 3371              		.loc 1 2260 17 view .LVU947
2260:ThirdParty/FreeRTOS/tasks.c ****                 {
 3372              		.loc 1 2260 35 is_stmt 0 view .LVU948
 3373 00e8 164B     		ldr	r3, .L243+24
 3374 00ea 1C68     		ldr	r4, [r3]
 3375              	.LVL241:
2260:ThirdParty/FreeRTOS/tasks.c ****                 {
 3376              		.loc 1 2260 19 view .LVU949
 3377 00ec D4B1     		cbz	r4, .L226
2264:ThirdParty/FreeRTOS/tasks.c ****                     }
 3378              		.loc 1 2264 25 is_stmt 1 view .LVU950
 3379              	.LVL242:
2267:ThirdParty/FreeRTOS/tasks.c ****                 }
 3380              		.loc 1 2267 21 view .LVU951
 3381 00ee 4FF0E023 		mov	r3, #-536813568
 3382 00f2 4FF08052 		mov	r2, #268435456
 3383 00f6 C3F8042D 		str	r2, [r3, #3332]
2267:ThirdParty/FreeRTOS/tasks.c ****                 }
 3384              		.loc 1 2267 21 view .LVU952
 3385              		.syntax unified
 3386              	@ 2267 "ThirdParty/FreeRTOS/tasks.c" 1
 3387 00fa BFF34F8F 		dsb
 3388              	@ 0 "" 2
2267:ThirdParty/FreeRTOS/tasks.c ****                 }
 3389              		.loc 1 2267 21 view .LVU953
 3390              	@ 2267 "ThirdParty/FreeRTOS/tasks.c" 1
 3391 00fe BFF36F8F 		isb
 3392              	@ 0 "" 2
2267:ThirdParty/FreeRTOS/tasks.c ****                 }
 3393              		.loc 1 2267 52 view .LVU954
2264:ThirdParty/FreeRTOS/tasks.c ****                     }
 3394              		.loc 1 2264 41 is_stmt 0 view .LVU955
 3395              		.thumb
 3396              		.syntax unified
 3397 0102 0124     		movs	r4, #1
 3398 0104 0EE0     		b	.L226
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 174


 3399              	.LVL243:
 3400              	.L234:
 3401              	.LBB215:
2246:ThirdParty/FreeRTOS/tasks.c ****                             }
 3402              		.loc 1 2246 57 is_stmt 1 view .LVU956
2249:ThirdParty/FreeRTOS/tasks.c ****                         } while( xPendedCounts > ( TickType_t ) 0U );
 3403              		.loc 1 2249 29 view .LVU957
2250:ThirdParty/FreeRTOS/tasks.c **** 
 3404              		.loc 1 2250 48 view .LVU958
 3405 0106 013C     		subs	r4, r4, #1
 3406              	.LVL244:
2250:ThirdParty/FreeRTOS/tasks.c **** 
 3407              		.loc 1 2250 48 is_stmt 0 view .LVU959
 3408 0108 07D0     		beq	.L242
 3409              	.L235:
2238:ThirdParty/FreeRTOS/tasks.c ****                         {
 3410              		.loc 1 2238 25 is_stmt 1 view .LVU960
2240:ThirdParty/FreeRTOS/tasks.c ****                             {
 3411              		.loc 1 2240 29 view .LVU961
2240:ThirdParty/FreeRTOS/tasks.c ****                             {
 3412              		.loc 1 2240 33 is_stmt 0 view .LVU962
 3413 010a FFF7FEFF 		bl	xTaskIncrementTick
 3414              	.LVL245:
2240:ThirdParty/FreeRTOS/tasks.c ****                             {
 3415              		.loc 1 2240 31 view .LVU963
 3416 010e 0028     		cmp	r0, #0
 3417 0110 F9D0     		beq	.L234
2242:ThirdParty/FreeRTOS/tasks.c ****                             }
 3418              		.loc 1 2242 33 is_stmt 1 view .LVU964
2242:ThirdParty/FreeRTOS/tasks.c ****                             }
 3419              		.loc 1 2242 47 is_stmt 0 view .LVU965
 3420 0112 0C4B     		ldr	r3, .L243+24
 3421 0114 0122     		movs	r2, #1
 3422 0116 1A60     		str	r2, [r3]
 3423 0118 F5E7     		b	.L234
 3424              	.L242:
2252:ThirdParty/FreeRTOS/tasks.c ****                     }
 3425              		.loc 1 2252 25 is_stmt 1 view .LVU966
2252:ThirdParty/FreeRTOS/tasks.c ****                     }
 3426              		.loc 1 2252 38 is_stmt 0 view .LVU967
 3427 011a 0B4B     		ldr	r3, .L243+28
 3428 011c 0022     		movs	r2, #0
 3429 011e 1A60     		str	r2, [r3]
 3430 0120 E2E7     		b	.L233
 3431              	.LVL246:
 3432              	.L236:
2252:ThirdParty/FreeRTOS/tasks.c ****                     }
 3433              		.loc 1 2252 38 view .LVU968
 3434              	.LBE215:
2177:ThirdParty/FreeRTOS/tasks.c **** 
 3435              		.loc 1 2177 16 view .LVU969
 3436 0122 0024     		movs	r4, #0
 3437              	.LVL247:
 3438              	.L226:
2277:ThirdParty/FreeRTOS/tasks.c ****         }
 3439              		.loc 1 2277 37 is_stmt 1 view .LVU970
2280:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 175


 3440              		.loc 1 2280 5 view .LVU971
 3441 0124 FFF7FEFF 		bl	vPortExitCritical
 3442              	.LVL248:
2282:ThirdParty/FreeRTOS/tasks.c **** }
 3443              		.loc 1 2282 5 view .LVU972
2283:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3444              		.loc 1 2283 1 is_stmt 0 view .LVU973
 3445 0128 2046     		mov	r0, r4
 3446 012a 38BD     		pop	{r3, r4, r5, pc}
 3447              	.LVL249:
 3448              	.L244:
2283:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 3449              		.loc 1 2283 1 view .LVU974
 3450              		.align	2
 3451              	.L243:
 3452 012c 00000000 		.word	uxSchedulerSuspended
 3453 0130 00000000 		.word	uxCurrentNumberOfTasks
 3454 0134 00000000 		.word	xPendingReadyList
 3455 0138 00000000 		.word	uxTopReadyPriority
 3456 013c 00000000 		.word	pxReadyTasksLists
 3457 0140 00000000 		.word	pxCurrentTCB
 3458 0144 00000000 		.word	xYieldPending
 3459 0148 00000000 		.word	xPendedTicks
 3460              		.cfi_endproc
 3461              	.LFE22:
 3463              		.section	.text.xTaskDelayUntil,"ax",%progbits
 3464              		.align	1
 3465              		.global	xTaskDelayUntil
 3466              		.syntax unified
 3467              		.thumb
 3468              		.thumb_func
 3470              	xTaskDelayUntil:
 3471              	.LVL250:
 3472              	.LFB9:
1216:ThirdParty/FreeRTOS/tasks.c ****         TickType_t xTimeToWake;
 3473              		.loc 1 1216 5 is_stmt 1 view -0
 3474              		.cfi_startproc
 3475              		@ args = 0, pretend = 0, frame = 0
 3476              		@ frame_needed = 0, uses_anonymous_args = 0
1216:ThirdParty/FreeRTOS/tasks.c ****         TickType_t xTimeToWake;
 3477              		.loc 1 1216 5 is_stmt 0 view .LVU976
 3478 0000 38B5     		push	{r3, r4, r5, lr}
 3479              	.LCFI26:
 3480              		.cfi_def_cfa_offset 16
 3481              		.cfi_offset 3, -16
 3482              		.cfi_offset 4, -12
 3483              		.cfi_offset 5, -8
 3484              		.cfi_offset 14, -4
1217:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
 3485              		.loc 1 1217 9 is_stmt 1 view .LVU977
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3486              		.loc 1 1218 9 view .LVU978
 3487              	.LVL251:
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3488              		.loc 1 1220 9 view .LVU979
 3489 0002 58B1     		cbz	r0, .L261
 3490 0004 0C46     		mov	r4, r1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 176


 3491 0006 0546     		mov	r5, r0
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3492              		.loc 1 1220 43 discriminator 2 view .LVU980
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3493              		.loc 1 1221 9 discriminator 2 view .LVU981
 3494 0008 89B9     		cbnz	r1, .L248
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3495              		.loc 1 1221 9 view .LVU982
 3496              	.LBB216:
 3497              	.LBI216:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3498              		.loc 2 194 34 view .LVU983
 3499              	.LBB217:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3500              		.loc 2 196 9 view .LVU984
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3501              		.loc 2 198 9 view .LVU985
 3502              		.syntax unified
 3503              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3504 000a 4FF05003 			mov r3, #80												
 3505 000e 83F31188 		msr basepri, r3											
 3506 0012 BFF36F8F 		isb														
 3507 0016 BFF34F8F 		dsb														
 3508              	
 3509              	@ 0 "" 2
 3510              	.LVL252:
 3511              		.thumb
 3512              		.syntax unified
 3513              	.L249:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3514              		.loc 2 198 9 is_stmt 0 view .LVU986
 3515              	.LBE217:
 3516              	.LBE216:
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3517              		.loc 1 1221 9 is_stmt 1 discriminator 2 view .LVU987
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3518              		.loc 1 1221 9 discriminator 2 view .LVU988
 3519 001a FEE7     		b	.L249
 3520              	.L261:
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3521              		.loc 1 1220 9 view .LVU989
 3522              	.LBB218:
 3523              	.LBI218:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3524              		.loc 2 194 34 view .LVU990
 3525              	.LBB219:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3526              		.loc 2 196 9 view .LVU991
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3527              		.loc 2 198 9 view .LVU992
 3528              		.syntax unified
 3529              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3530 001c 4FF05003 			mov r3, #80												
 3531 0020 83F31188 		msr basepri, r3											
 3532 0024 BFF36F8F 		isb														
 3533 0028 BFF34F8F 		dsb														
 3534              	
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 177


 3535              	@ 0 "" 2
 3536              	.LVL253:
 3537              		.thumb
 3538              		.syntax unified
 3539              	.L247:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3540              		.loc 2 198 9 is_stmt 0 view .LVU993
 3541              	.LBE219:
 3542              	.LBE218:
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3543              		.loc 1 1220 9 is_stmt 1 discriminator 1 view .LVU994
1220:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( ( xTimeIncrement > 0U ) );
 3544              		.loc 1 1220 9 discriminator 1 view .LVU995
 3545 002c FEE7     		b	.L247
 3546              	.L248:
1221:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxSchedulerSuspended == 0 );
 3547              		.loc 1 1221 48 discriminator 2 view .LVU996
1222:ThirdParty/FreeRTOS/tasks.c **** 
 3548              		.loc 1 1222 9 discriminator 2 view .LVU997
 3549 002e 1E4B     		ldr	r3, .L262
 3550 0030 1B68     		ldr	r3, [r3]
 3551 0032 43B1     		cbz	r3, .L250
1222:ThirdParty/FreeRTOS/tasks.c **** 
 3552              		.loc 1 1222 9 view .LVU998
 3553              	.LBB220:
 3554              	.LBI220:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3555              		.loc 2 194 34 view .LVU999
 3556              	.LBB221:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3557              		.loc 2 196 9 view .LVU1000
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3558              		.loc 2 198 9 view .LVU1001
 3559              		.syntax unified
 3560              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3561 0034 4FF05003 			mov r3, #80												
 3562 0038 83F31188 		msr basepri, r3											
 3563 003c BFF36F8F 		isb														
 3564 0040 BFF34F8F 		dsb														
 3565              	
 3566              	@ 0 "" 2
 3567              	.LVL254:
 3568              		.thumb
 3569              		.syntax unified
 3570              	.L251:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3571              		.loc 2 198 9 is_stmt 0 view .LVU1002
 3572              	.LBE221:
 3573              	.LBE220:
1222:ThirdParty/FreeRTOS/tasks.c **** 
 3574              		.loc 1 1222 9 is_stmt 1 discriminator 3 view .LVU1003
1222:ThirdParty/FreeRTOS/tasks.c **** 
 3575              		.loc 1 1222 9 discriminator 3 view .LVU1004
 3576 0044 FEE7     		b	.L251
 3577              	.L250:
1222:ThirdParty/FreeRTOS/tasks.c **** 
 3578              		.loc 1 1222 50 discriminator 2 view .LVU1005
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 178


1224:ThirdParty/FreeRTOS/tasks.c ****         {
 3579              		.loc 1 1224 9 discriminator 2 view .LVU1006
 3580 0046 FFF7FEFF 		bl	vTaskSuspendAll
 3581              	.LVL255:
 3582              	.LBB222:
1228:ThirdParty/FreeRTOS/tasks.c **** 
 3583              		.loc 1 1228 13 discriminator 2 view .LVU1007
1228:ThirdParty/FreeRTOS/tasks.c **** 
 3584              		.loc 1 1228 30 is_stmt 0 discriminator 2 view .LVU1008
 3585 004a 184B     		ldr	r3, .L262+4
 3586 004c 1868     		ldr	r0, [r3]
 3587              	.LVL256:
1231:ThirdParty/FreeRTOS/tasks.c **** 
 3588              		.loc 1 1231 13 is_stmt 1 discriminator 2 view .LVU1009
1231:ThirdParty/FreeRTOS/tasks.c **** 
 3589              		.loc 1 1231 27 is_stmt 0 discriminator 2 view .LVU1010
 3590 004e 2B68     		ldr	r3, [r5]
1231:ThirdParty/FreeRTOS/tasks.c **** 
 3591              		.loc 1 1231 25 discriminator 2 view .LVU1011
 3592 0050 1C44     		add	r4, r4, r3
 3593              	.LVL257:
1233:ThirdParty/FreeRTOS/tasks.c ****             {
 3594              		.loc 1 1233 13 is_stmt 1 discriminator 2 view .LVU1012
1233:ThirdParty/FreeRTOS/tasks.c ****             {
 3595              		.loc 1 1233 15 is_stmt 0 discriminator 2 view .LVU1013
 3596 0052 8342     		cmp	r3, r0
 3597 0054 0BD9     		bls	.L252
1240:ThirdParty/FreeRTOS/tasks.c ****                 {
 3598              		.loc 1 1240 17 is_stmt 1 view .LVU1014
1240:ThirdParty/FreeRTOS/tasks.c ****                 {
 3599              		.loc 1 1240 19 is_stmt 0 view .LVU1015
 3600 0056 A342     		cmp	r3, r4
 3601 0058 02D8     		bhi	.L253
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3602              		.loc 1 1265 13 is_stmt 1 view .LVU1016
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3603              		.loc 1 1265 33 is_stmt 0 view .LVU1017
 3604 005a 2C60     		str	r4, [r5]
1267:ThirdParty/FreeRTOS/tasks.c ****             {
 3605              		.loc 1 1267 13 is_stmt 1 view .LVU1018
 3606              	.LBE222:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3607              		.loc 1 1218 37 is_stmt 0 view .LVU1019
 3608 005c 0024     		movs	r4, #0
 3609              	.LVL258:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3610              		.loc 1 1218 37 view .LVU1020
 3611 005e 10E0     		b	.L254
 3612              	.LVL259:
 3613              	.L253:
 3614              	.LBB223:
1240:ThirdParty/FreeRTOS/tasks.c ****                 {
 3615              		.loc 1 1240 59 discriminator 1 view .LVU1021
 3616 0060 A042     		cmp	r0, r4
 3617 0062 02D3     		bcc	.L255
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3618              		.loc 1 1265 13 is_stmt 1 view .LVU1022
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 179


1265:ThirdParty/FreeRTOS/tasks.c **** 
 3619              		.loc 1 1265 33 is_stmt 0 view .LVU1023
 3620 0064 2C60     		str	r4, [r5]
1267:ThirdParty/FreeRTOS/tasks.c ****             {
 3621              		.loc 1 1267 13 is_stmt 1 view .LVU1024
 3622              	.LBE223:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3623              		.loc 1 1218 37 is_stmt 0 view .LVU1025
 3624 0066 0024     		movs	r4, #0
 3625              	.LVL260:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3626              		.loc 1 1218 37 view .LVU1026
 3627 0068 0BE0     		b	.L254
 3628              	.LVL261:
 3629              	.L255:
 3630              	.LBB224:
1242:ThirdParty/FreeRTOS/tasks.c ****                 }
 3631              		.loc 1 1242 21 is_stmt 1 view .LVU1027
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3632              		.loc 1 1265 13 view .LVU1028
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3633              		.loc 1 1265 33 is_stmt 0 view .LVU1029
 3634 006a 2C60     		str	r4, [r5]
1267:ThirdParty/FreeRTOS/tasks.c ****             {
 3635              		.loc 1 1267 13 is_stmt 1 view .LVU1030
 3636 006c 04E0     		b	.L256
 3637              	.LVL262:
 3638              	.L252:
1254:ThirdParty/FreeRTOS/tasks.c ****                 {
 3639              		.loc 1 1254 17 view .LVU1031
1254:ThirdParty/FreeRTOS/tasks.c ****                 {
 3640              		.loc 1 1254 19 is_stmt 0 view .LVU1032
 3641 006e A342     		cmp	r3, r4
 3642 0070 01D8     		bhi	.L257
1254:ThirdParty/FreeRTOS/tasks.c ****                 {
 3643              		.loc 1 1254 59 discriminator 1 view .LVU1033
 3644 0072 A042     		cmp	r0, r4
 3645 0074 14D2     		bcs	.L258
 3646              	.L257:
1256:ThirdParty/FreeRTOS/tasks.c ****                 }
 3647              		.loc 1 1256 21 is_stmt 1 view .LVU1034
 3648              	.LVL263:
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3649              		.loc 1 1265 13 view .LVU1035
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3650              		.loc 1 1265 33 is_stmt 0 view .LVU1036
 3651 0076 2C60     		str	r4, [r5]
1267:ThirdParty/FreeRTOS/tasks.c ****             {
 3652              		.loc 1 1267 13 is_stmt 1 view .LVU1037
 3653              	.L256:
1269:ThirdParty/FreeRTOS/tasks.c **** 
 3654              		.loc 1 1269 53 view .LVU1038
1273:ThirdParty/FreeRTOS/tasks.c ****             }
 3655              		.loc 1 1273 17 view .LVU1039
 3656 0078 0021     		movs	r1, #0
 3657 007a 201A     		subs	r0, r4, r0
 3658              	.LVL264:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 180


1273:ThirdParty/FreeRTOS/tasks.c ****             }
 3659              		.loc 1 1273 17 is_stmt 0 view .LVU1040
 3660 007c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3661              	.LVL265:
 3662 0080 0124     		movs	r4, #1
 3663              	.LVL266:
 3664              	.L254:
1277:ThirdParty/FreeRTOS/tasks.c ****             }
 3665              		.loc 1 1277 41 is_stmt 1 view .LVU1041
 3666              	.LBE224:
1280:ThirdParty/FreeRTOS/tasks.c **** 
 3667              		.loc 1 1280 9 view .LVU1042
1280:ThirdParty/FreeRTOS/tasks.c **** 
 3668              		.loc 1 1280 27 is_stmt 0 view .LVU1043
 3669 0082 FFF7FEFF 		bl	xTaskResumeAll
 3670              	.LVL267:
1284:ThirdParty/FreeRTOS/tasks.c ****         {
 3671              		.loc 1 1284 9 is_stmt 1 view .LVU1044
1284:ThirdParty/FreeRTOS/tasks.c ****         {
 3672              		.loc 1 1284 11 is_stmt 0 view .LVU1045
 3673 0086 48B9     		cbnz	r0, .L245
1286:ThirdParty/FreeRTOS/tasks.c ****         }
 3674              		.loc 1 1286 13 is_stmt 1 view .LVU1046
 3675 0088 4FF0E023 		mov	r3, #-536813568
 3676 008c 4FF08052 		mov	r2, #268435456
 3677 0090 C3F8042D 		str	r2, [r3, #3332]
1286:ThirdParty/FreeRTOS/tasks.c ****         }
 3678              		.loc 1 1286 13 view .LVU1047
 3679              		.syntax unified
 3680              	@ 1286 "ThirdParty/FreeRTOS/tasks.c" 1
 3681 0094 BFF34F8F 		dsb
 3682              	@ 0 "" 2
1286:ThirdParty/FreeRTOS/tasks.c ****         }
 3683              		.loc 1 1286 13 view .LVU1048
 3684              	@ 1286 "ThirdParty/FreeRTOS/tasks.c" 1
 3685 0098 BFF36F8F 		isb
 3686              	@ 0 "" 2
1286:ThirdParty/FreeRTOS/tasks.c ****         }
 3687              		.loc 1 1286 35 view .LVU1049
1290:ThirdParty/FreeRTOS/tasks.c ****         }
 3688              		.loc 1 1290 37 view .LVU1050
1293:ThirdParty/FreeRTOS/tasks.c ****     }
 3689              		.loc 1 1293 9 view .LVU1051
 3690              		.thumb
 3691              		.syntax unified
 3692              	.L245:
1294:ThirdParty/FreeRTOS/tasks.c **** 
 3693              		.loc 1 1294 5 is_stmt 0 view .LVU1052
 3694 009c 2046     		mov	r0, r4
 3695              	.LVL268:
1294:ThirdParty/FreeRTOS/tasks.c **** 
 3696              		.loc 1 1294 5 view .LVU1053
 3697 009e 38BD     		pop	{r3, r4, r5, pc}
 3698              	.LVL269:
 3699              	.L258:
 3700              	.LBB225:
1265:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 181


 3701              		.loc 1 1265 13 is_stmt 1 view .LVU1054
1265:ThirdParty/FreeRTOS/tasks.c **** 
 3702              		.loc 1 1265 33 is_stmt 0 view .LVU1055
 3703 00a0 2C60     		str	r4, [r5]
1267:ThirdParty/FreeRTOS/tasks.c ****             {
 3704              		.loc 1 1267 13 is_stmt 1 view .LVU1056
 3705              	.LBE225:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3706              		.loc 1 1218 37 is_stmt 0 view .LVU1057
 3707 00a2 0024     		movs	r4, #0
 3708              	.LVL270:
1218:ThirdParty/FreeRTOS/tasks.c **** 
 3709              		.loc 1 1218 37 view .LVU1058
 3710 00a4 EDE7     		b	.L254
 3711              	.L263:
 3712 00a6 00BF     		.align	2
 3713              	.L262:
 3714 00a8 00000000 		.word	uxSchedulerSuspended
 3715 00ac 00000000 		.word	xTickCount
 3716              		.cfi_endproc
 3717              	.LFE9:
 3719              		.section	.text.vTaskDelay,"ax",%progbits
 3720              		.align	1
 3721              		.global	vTaskDelay
 3722              		.syntax unified
 3723              		.thumb
 3724              		.thumb_func
 3726              	vTaskDelay:
 3727              	.LVL271:
 3728              	.LFB10:
1302:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 3729              		.loc 1 1302 5 is_stmt 1 view -0
 3730              		.cfi_startproc
 3731              		@ args = 0, pretend = 0, frame = 0
 3732              		@ frame_needed = 0, uses_anonymous_args = 0
1302:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xAlreadyYielded = pdFALSE;
 3733              		.loc 1 1302 5 is_stmt 0 view .LVU1060
 3734 0000 10B5     		push	{r4, lr}
 3735              	.LCFI27:
 3736              		.cfi_def_cfa_offset 8
 3737              		.cfi_offset 4, -8
 3738              		.cfi_offset 14, -4
1303:ThirdParty/FreeRTOS/tasks.c **** 
 3739              		.loc 1 1303 9 is_stmt 1 view .LVU1061
 3740              	.LVL272:
1306:ThirdParty/FreeRTOS/tasks.c ****         {
 3741              		.loc 1 1306 9 view .LVU1062
1306:ThirdParty/FreeRTOS/tasks.c ****         {
 3742              		.loc 1 1306 11 is_stmt 0 view .LVU1063
 3743 0002 A8B1     		cbz	r0, .L265
 3744 0004 0446     		mov	r4, r0
1308:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3745              		.loc 1 1308 13 is_stmt 1 view .LVU1064
 3746 0006 104B     		ldr	r3, .L270
 3747 0008 1B68     		ldr	r3, [r3]
 3748 000a 43B1     		cbz	r3, .L266
1308:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 182


 3749              		.loc 1 1308 13 view .LVU1065
 3750              	.LBB226:
 3751              	.LBI226:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3752              		.loc 2 194 34 view .LVU1066
 3753              	.LBB227:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3754              		.loc 2 196 9 view .LVU1067
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3755              		.loc 2 198 9 view .LVU1068
 3756              		.syntax unified
 3757              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3758 000c 4FF05003 			mov r3, #80												
 3759 0010 83F31188 		msr basepri, r3											
 3760 0014 BFF36F8F 		isb														
 3761 0018 BFF34F8F 		dsb														
 3762              	
 3763              	@ 0 "" 2
 3764              	.LVL273:
 3765              		.thumb
 3766              		.syntax unified
 3767              	.L267:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3768              		.loc 2 198 9 is_stmt 0 view .LVU1069
 3769              	.LBE227:
 3770              	.LBE226:
1308:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3771              		.loc 1 1308 13 is_stmt 1 discriminator 1 view .LVU1070
1308:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3772              		.loc 1 1308 13 discriminator 1 view .LVU1071
 3773 001c FEE7     		b	.L267
 3774              	.L266:
1308:ThirdParty/FreeRTOS/tasks.c ****             vTaskSuspendAll();
 3775              		.loc 1 1308 54 discriminator 2 view .LVU1072
1309:ThirdParty/FreeRTOS/tasks.c ****             {
 3776              		.loc 1 1309 13 discriminator 2 view .LVU1073
 3777 001e FFF7FEFF 		bl	vTaskSuspendAll
 3778              	.LVL274:
1311:ThirdParty/FreeRTOS/tasks.c **** 
 3779              		.loc 1 1311 34 discriminator 2 view .LVU1074
1320:ThirdParty/FreeRTOS/tasks.c ****             }
 3780              		.loc 1 1320 17 discriminator 2 view .LVU1075
 3781 0022 0021     		movs	r1, #0
 3782 0024 2046     		mov	r0, r4
 3783 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3784              	.LVL275:
1322:ThirdParty/FreeRTOS/tasks.c ****         }
 3785              		.loc 1 1322 13 discriminator 2 view .LVU1076
1322:ThirdParty/FreeRTOS/tasks.c ****         }
 3786              		.loc 1 1322 31 is_stmt 0 discriminator 2 view .LVU1077
 3787 002a FFF7FEFF 		bl	xTaskResumeAll
 3788              	.LVL276:
1326:ThirdParty/FreeRTOS/tasks.c ****         }
 3789              		.loc 1 1326 37 is_stmt 1 discriminator 2 view .LVU1078
1331:ThirdParty/FreeRTOS/tasks.c ****         {
 3790              		.loc 1 1331 9 discriminator 2 view .LVU1079
1331:ThirdParty/FreeRTOS/tasks.c ****         {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 183


 3791              		.loc 1 1331 11 is_stmt 0 discriminator 2 view .LVU1080
 3792 002e 48B9     		cbnz	r0, .L264
 3793              	.LVL277:
 3794              	.L265:
1333:ThirdParty/FreeRTOS/tasks.c ****         }
 3795              		.loc 1 1333 13 is_stmt 1 view .LVU1081
 3796 0030 4FF0E023 		mov	r3, #-536813568
 3797 0034 4FF08052 		mov	r2, #268435456
 3798 0038 C3F8042D 		str	r2, [r3, #3332]
1333:ThirdParty/FreeRTOS/tasks.c ****         }
 3799              		.loc 1 1333 13 view .LVU1082
 3800              		.syntax unified
 3801              	@ 1333 "ThirdParty/FreeRTOS/tasks.c" 1
 3802 003c BFF34F8F 		dsb
 3803              	@ 0 "" 2
1333:ThirdParty/FreeRTOS/tasks.c ****         }
 3804              		.loc 1 1333 13 view .LVU1083
 3805              	@ 1333 "ThirdParty/FreeRTOS/tasks.c" 1
 3806 0040 BFF36F8F 		isb
 3807              	@ 0 "" 2
1333:ThirdParty/FreeRTOS/tasks.c ****         }
 3808              		.loc 1 1333 35 view .LVU1084
1337:ThirdParty/FreeRTOS/tasks.c ****         }
 3809              		.loc 1 1337 37 view .LVU1085
 3810              		.thumb
 3811              		.syntax unified
 3812              	.L264:
1339:ThirdParty/FreeRTOS/tasks.c **** 
 3813              		.loc 1 1339 5 is_stmt 0 view .LVU1086
 3814 0044 10BD     		pop	{r4, pc}
 3815              	.L271:
 3816 0046 00BF     		.align	2
 3817              	.L270:
 3818 0048 00000000 		.word	uxSchedulerSuspended
 3819              		.cfi_endproc
 3820              	.LFE10:
 3822              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3823              		.align	1
 3824              		.global	xTaskCatchUpTicks
 3825              		.syntax unified
 3826              		.thumb
 3827              		.thumb_func
 3829              	xTaskCatchUpTicks:
 3830              	.LVL278:
 3831              	.LFB28:
2617:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
 3832              		.loc 1 2617 1 is_stmt 1 view -0
 3833              		.cfi_startproc
 3834              		@ args = 0, pretend = 0, frame = 0
 3835              		@ frame_needed = 0, uses_anonymous_args = 0
2618:ThirdParty/FreeRTOS/tasks.c **** 
 3836              		.loc 1 2618 5 view .LVU1088
2622:ThirdParty/FreeRTOS/tasks.c **** 
 3837              		.loc 1 2622 5 view .LVU1089
 3838 0000 0D4B     		ldr	r3, .L277
 3839 0002 1B68     		ldr	r3, [r3]
 3840 0004 43B1     		cbz	r3, .L273
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 184


2622:ThirdParty/FreeRTOS/tasks.c **** 
 3841              		.loc 1 2622 5 view .LVU1090
 3842              	.LBB228:
 3843              	.LBI228:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3844              		.loc 2 194 34 view .LVU1091
 3845              	.LBB229:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3846              		.loc 2 196 9 view .LVU1092
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3847              		.loc 2 198 9 view .LVU1093
 3848              		.syntax unified
 3849              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3850 0006 4FF05003 			mov r3, #80												
 3851 000a 83F31188 		msr basepri, r3											
 3852 000e BFF36F8F 		isb														
 3853 0012 BFF34F8F 		dsb														
 3854              	
 3855              	@ 0 "" 2
 3856              	.LVL279:
 3857              		.thumb
 3858              		.syntax unified
 3859              	.L274:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3860              		.loc 2 198 9 is_stmt 0 view .LVU1094
 3861              	.LBE229:
 3862              	.LBE228:
2622:ThirdParty/FreeRTOS/tasks.c **** 
 3863              		.loc 1 2622 5 is_stmt 1 discriminator 1 view .LVU1095
2622:ThirdParty/FreeRTOS/tasks.c **** 
 3864              		.loc 1 2622 5 discriminator 1 view .LVU1096
 3865 0016 FEE7     		b	.L274
 3866              	.L273:
2617:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xYieldOccurred;
 3867              		.loc 1 2617 1 is_stmt 0 discriminator 2 view .LVU1097
 3868 0018 10B5     		push	{r4, lr}
 3869              	.LCFI28:
 3870              		.cfi_def_cfa_offset 8
 3871              		.cfi_offset 4, -8
 3872              		.cfi_offset 14, -4
 3873 001a 0446     		mov	r4, r0
2622:ThirdParty/FreeRTOS/tasks.c **** 
 3874              		.loc 1 2622 46 is_stmt 1 discriminator 2 view .LVU1098
2626:ThirdParty/FreeRTOS/tasks.c **** 
 3875              		.loc 1 2626 5 discriminator 2 view .LVU1099
 3876 001c FFF7FEFF 		bl	vTaskSuspendAll
 3877              	.LVL280:
2629:ThirdParty/FreeRTOS/tasks.c ****     {
 3878              		.loc 1 2629 5 discriminator 2 view .LVU1100
 3879 0020 FFF7FEFF 		bl	vPortEnterCritical
 3880              	.LVL281:
2631:ThirdParty/FreeRTOS/tasks.c ****     }
 3881              		.loc 1 2631 9 discriminator 2 view .LVU1101
2631:ThirdParty/FreeRTOS/tasks.c ****     }
 3882              		.loc 1 2631 22 is_stmt 0 discriminator 2 view .LVU1102
 3883 0024 054A     		ldr	r2, .L277+4
 3884 0026 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 185


 3885 0028 2344     		add	r3, r3, r4
 3886 002a 1360     		str	r3, [r2]
2633:ThirdParty/FreeRTOS/tasks.c ****     xYieldOccurred = xTaskResumeAll();
 3887              		.loc 1 2633 5 is_stmt 1 discriminator 2 view .LVU1103
 3888 002c FFF7FEFF 		bl	vPortExitCritical
 3889              	.LVL282:
2634:ThirdParty/FreeRTOS/tasks.c **** 
 3890              		.loc 1 2634 5 discriminator 2 view .LVU1104
2634:ThirdParty/FreeRTOS/tasks.c **** 
 3891              		.loc 1 2634 22 is_stmt 0 discriminator 2 view .LVU1105
 3892 0030 FFF7FEFF 		bl	xTaskResumeAll
 3893              	.LVL283:
2636:ThirdParty/FreeRTOS/tasks.c **** }
 3894              		.loc 1 2636 5 is_stmt 1 discriminator 2 view .LVU1106
2637:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 3895              		.loc 1 2637 1 is_stmt 0 discriminator 2 view .LVU1107
 3896 0034 10BD     		pop	{r4, pc}
 3897              	.LVL284:
 3898              	.L278:
2637:ThirdParty/FreeRTOS/tasks.c **** /*----------------------------------------------------------*/
 3899              		.loc 1 2637 1 discriminator 2 view .LVU1108
 3900 0036 00BF     		.align	2
 3901              	.L277:
 3902 0038 00000000 		.word	uxSchedulerSuspended
 3903 003c 00000000 		.word	xPendedTicks
 3904              		.cfi_endproc
 3905              	.LFE28:
 3907              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3908              		.align	1
 3909              		.global	vTaskSwitchContext
 3910              		.syntax unified
 3911              		.thumb
 3912              		.thumb_func
 3914              	vTaskSwitchContext:
 3915              	.LFB30:
3010:ThirdParty/FreeRTOS/tasks.c ****     if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3916              		.loc 1 3010 1 is_stmt 1 view -0
 3917              		.cfi_startproc
 3918              		@ args = 0, pretend = 0, frame = 0
 3919              		@ frame_needed = 0, uses_anonymous_args = 0
 3920              		@ link register save eliminated.
3011:ThirdParty/FreeRTOS/tasks.c ****     {
 3921              		.loc 1 3011 5 view .LVU1110
3011:ThirdParty/FreeRTOS/tasks.c ****     {
 3922              		.loc 1 3011 30 is_stmt 0 view .LVU1111
 3923 0000 204B     		ldr	r3, .L286
 3924 0002 1B68     		ldr	r3, [r3]
3011:ThirdParty/FreeRTOS/tasks.c ****     {
 3925              		.loc 1 3011 7 view .LVU1112
 3926 0004 1BB1     		cbz	r3, .L280
3015:ThirdParty/FreeRTOS/tasks.c ****     }
 3927              		.loc 1 3015 9 is_stmt 1 view .LVU1113
3015:ThirdParty/FreeRTOS/tasks.c ****     }
 3928              		.loc 1 3015 23 is_stmt 0 view .LVU1114
 3929 0006 204B     		ldr	r3, .L286+4
 3930 0008 0122     		movs	r2, #1
 3931 000a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 186


 3932 000c 7047     		bx	lr
 3933              	.L280:
3019:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
 3934              		.loc 1 3019 9 is_stmt 1 view .LVU1115
3019:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_OUT();
 3935              		.loc 1 3019 23 is_stmt 0 view .LVU1116
 3936 000e 1E4B     		ldr	r3, .L286+4
 3937 0010 0022     		movs	r2, #0
 3938 0012 1A60     		str	r2, [r3]
3020:ThirdParty/FreeRTOS/tasks.c **** 
 3939              		.loc 1 3020 33 is_stmt 1 view .LVU1117
3051:ThirdParty/FreeRTOS/tasks.c **** 
 3940              		.loc 1 3051 39 view .LVU1118
 3941              	.LBB230:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3942              		.loc 1 3062 9 view .LVU1119
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3943              		.loc 1 3062 9 view .LVU1120
 3944 0014 1D4B     		ldr	r3, .L286+8
 3945 0016 1B68     		ldr	r3, [r3]
 3946              	.LVL285:
 3947              	.LBB231:
 3948              	.LBI231:
 132:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 3949              		.loc 2 132 66 view .LVU1121
 3950              	.LBB232:
 134:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3951              		.loc 2 134 13 view .LVU1122
 136:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3952              		.loc 2 136 13 view .LVU1123
 3953              		.syntax unified
 3954              	@ 136 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3955 0018 B3FA83F3 		clz r3, r3
 3956              	@ 0 "" 2
 3957              	.LVL286:
 136:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3958              		.loc 2 136 13 is_stmt 0 view .LVU1124
 3959              		.thumb
 3960              		.syntax unified
 3961 001c DBB2     		uxtb	r3, r3
 3962              	.LVL287:
 138:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 3963              		.loc 2 138 13 is_stmt 1 view .LVU1125
 138:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 3964              		.loc 2 138 13 is_stmt 0 view .LVU1126
 3965              	.LBE232:
 3966              	.LBE231:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3967              		.loc 1 3062 9 view .LVU1127
 3968 001e C3F11F03 		rsb	r3, r3, #31
 3969              	.LVL288:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3970              		.loc 1 3062 9 is_stmt 1 view .LVU1128
 3971 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3972 0026 8A00     		lsls	r2, r1, #2
 3973 0028 1949     		ldr	r1, .L286+12
 3974 002a 8A58     		ldr	r2, [r1, r2]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 187


 3975 002c 42B9     		cbnz	r2, .L282
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3976              		.loc 1 3062 9 view .LVU1129
 3977              	.LBB233:
 3978              	.LBI233:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 3979              		.loc 2 194 34 view .LVU1130
 3980              	.LBB234:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 3981              		.loc 2 196 9 view .LVU1131
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3982              		.loc 2 198 9 view .LVU1132
 3983              		.syntax unified
 3984              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 3985 002e 4FF05003 			mov r3, #80												
 3986 0032 83F31188 		msr basepri, r3											
 3987 0036 BFF36F8F 		isb														
 3988 003a BFF34F8F 		dsb														
 3989              	
 3990              	@ 0 "" 2
 3991              	.LVL289:
 3992              		.thumb
 3993              		.syntax unified
 3994              	.L283:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 3995              		.loc 2 198 9 is_stmt 0 view .LVU1133
 3996              	.LBE234:
 3997              	.LBE233:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3998              		.loc 1 3062 9 is_stmt 1 discriminator 1 view .LVU1134
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 3999              		.loc 1 3062 9 discriminator 1 view .LVU1135
 4000 003e FEE7     		b	.L283
 4001              	.LVL290:
 4002              	.L282:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4003              		.loc 1 3062 9 discriminator 2 view .LVU1136
 4004              	.LBB235:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4005              		.loc 1 3062 9 discriminator 2 view .LVU1137
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4006              		.loc 1 3062 9 discriminator 2 view .LVU1138
 4007 0040 1348     		ldr	r0, .L286+12
 4008 0042 03EB8301 		add	r1, r3, r3, lsl #2
 4009 0046 8A00     		lsls	r2, r1, #2
 4010 0048 0244     		add	r2, r2, r0
 4011 004a 5168     		ldr	r1, [r2, #4]
 4012 004c 4968     		ldr	r1, [r1, #4]
 4013 004e 5160     		str	r1, [r2, #4]
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4014              		.loc 1 3062 9 discriminator 2 view .LVU1139
 4015 0050 03EB830C 		add	ip, r3, r3, lsl #2
 4016 0054 4FEA8C02 		lsl	r2, ip, #2
 4017 0058 0832     		adds	r2, r2, #8
 4018 005a 0244     		add	r2, r2, r0
 4019 005c 9142     		cmp	r1, r2
 4020 005e 09D0     		beq	.L285
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 188


 4021              	.L284:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4022              		.loc 1 3062 9 discriminator 6 view .LVU1140
 4023 0060 03EB8303 		add	r3, r3, r3, lsl #2
 4024              	.LVL291:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4025              		.loc 1 3062 9 is_stmt 0 discriminator 6 view .LVU1141
 4026 0064 9A00     		lsls	r2, r3, #2
 4027 0066 0A4B     		ldr	r3, .L286+12
 4028 0068 1344     		add	r3, r3, r2
 4029 006a 5B68     		ldr	r3, [r3, #4]
 4030 006c DA68     		ldr	r2, [r3, #12]
 4031 006e 094B     		ldr	r3, .L286+16
 4032 0070 1A60     		str	r2, [r3]
 4033              	.LBE235:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4034              		.loc 1 3062 9 is_stmt 1 discriminator 6 view .LVU1142
 4035              	.LBE230:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4036              		.loc 1 3062 43 discriminator 6 view .LVU1143
3063:ThirdParty/FreeRTOS/tasks.c **** 
 4037              		.loc 1 3063 32 discriminator 6 view .LVU1144
3080:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4038              		.loc 1 3080 1 is_stmt 0 discriminator 6 view .LVU1145
 4039 0072 7047     		bx	lr
 4040              	.LVL292:
 4041              	.L285:
 4042              	.LBB237:
 4043              	.LBB236:
3062:ThirdParty/FreeRTOS/tasks.c ****         traceTASK_SWITCHED_IN();
 4044              		.loc 1 3062 9 is_stmt 1 discriminator 4 view .LVU1146
 4045 0074 4868     		ldr	r0, [r1, #4]
 4046 0076 6246     		mov	r2, ip
 4047 0078 9100     		lsls	r1, r2, #2
 4048 007a 054A     		ldr	r2, .L286+12
 4049 007c 0A44     		add	r2, r2, r1
 4050 007e 5060     		str	r0, [r2, #4]
 4051 0080 EEE7     		b	.L284
 4052              	.L287:
 4053 0082 00BF     		.align	2
 4054              	.L286:
 4055 0084 00000000 		.word	uxSchedulerSuspended
 4056 0088 00000000 		.word	xYieldPending
 4057 008c 00000000 		.word	uxTopReadyPriority
 4058 0090 00000000 		.word	pxReadyTasksLists
 4059 0094 00000000 		.word	pxCurrentTCB
 4060              	.LBE236:
 4061              	.LBE237:
 4062              		.cfi_endproc
 4063              	.LFE30:
 4065              		.section	.text.vTaskSuspend,"ax",%progbits
 4066              		.align	1
 4067              		.global	vTaskSuspend
 4068              		.syntax unified
 4069              		.thumb
 4070              		.thumb_func
 4072              	vTaskSuspend:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 189


 4073              	.LVL293:
 4074              	.LFB15:
1674:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 4075              		.loc 1 1674 5 view -0
 4076              		.cfi_startproc
 4077              		@ args = 0, pretend = 0, frame = 0
 4078              		@ frame_needed = 0, uses_anonymous_args = 0
1674:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 4079              		.loc 1 1674 5 is_stmt 0 view .LVU1148
 4080 0000 38B5     		push	{r3, r4, r5, lr}
 4081              	.LCFI29:
 4082              		.cfi_def_cfa_offset 16
 4083              		.cfi_offset 3, -16
 4084              		.cfi_offset 4, -12
 4085              		.cfi_offset 5, -8
 4086              		.cfi_offset 14, -4
 4087 0002 0446     		mov	r4, r0
1675:ThirdParty/FreeRTOS/tasks.c **** 
 4088              		.loc 1 1675 9 is_stmt 1 view .LVU1149
1677:ThirdParty/FreeRTOS/tasks.c ****         {
 4089              		.loc 1 1677 9 view .LVU1150
 4090 0004 FFF7FEFF 		bl	vPortEnterCritical
 4091              	.LVL294:
1681:ThirdParty/FreeRTOS/tasks.c **** 
 4092              		.loc 1 1681 13 view .LVU1151
1681:ThirdParty/FreeRTOS/tasks.c **** 
 4093              		.loc 1 1681 21 is_stmt 0 view .LVU1152
 4094 0008 54B3     		cbz	r4, .L302
 4095              	.LVL295:
 4096              	.L289:
1683:ThirdParty/FreeRTOS/tasks.c **** 
 4097              		.loc 1 1683 39 is_stmt 1 discriminator 4 view .LVU1153
1687:ThirdParty/FreeRTOS/tasks.c ****             {
 4098              		.loc 1 1687 13 discriminator 4 view .LVU1154
1687:ThirdParty/FreeRTOS/tasks.c ****             {
 4099              		.loc 1 1687 17 is_stmt 0 discriminator 4 view .LVU1155
 4100 000a 251D     		adds	r5, r4, #4
 4101 000c 2846     		mov	r0, r5
 4102 000e FFF7FEFF 		bl	uxListRemove
 4103              	.LVL296:
1687:ThirdParty/FreeRTOS/tasks.c ****             {
 4104              		.loc 1 1687 15 discriminator 4 view .LVU1156
 4105 0012 70B9     		cbnz	r0, .L290
1689:ThirdParty/FreeRTOS/tasks.c ****             }
 4106              		.loc 1 1689 17 is_stmt 1 view .LVU1157
 4107 0014 E26A     		ldr	r2, [r4, #44]
 4108 0016 02EB8203 		add	r3, r2, r2, lsl #2
 4109 001a 9B00     		lsls	r3, r3, #2
 4110 001c 2F49     		ldr	r1, .L306
 4111 001e CB58     		ldr	r3, [r1, r3]
 4112 0020 3BB9     		cbnz	r3, .L290
1689:ThirdParty/FreeRTOS/tasks.c ****             }
 4113              		.loc 1 1689 17 discriminator 1 view .LVU1158
 4114 0022 0123     		movs	r3, #1
 4115 0024 03FA02F2 		lsl	r2, r3, r2
 4116 0028 2D49     		ldr	r1, .L306+4
 4117 002a 0B68     		ldr	r3, [r1]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 190


 4118 002c 23EA0203 		bic	r3, r3, r2
 4119 0030 0B60     		str	r3, [r1]
 4120              	.L290:
1693:ThirdParty/FreeRTOS/tasks.c ****             }
 4121              		.loc 1 1693 41 view .LVU1159
1697:ThirdParty/FreeRTOS/tasks.c ****             {
 4122              		.loc 1 1697 13 view .LVU1160
1697:ThirdParty/FreeRTOS/tasks.c ****             {
 4123              		.loc 1 1697 17 is_stmt 0 view .LVU1161
 4124 0032 A36A     		ldr	r3, [r4, #40]
1697:ThirdParty/FreeRTOS/tasks.c ****             {
 4125              		.loc 1 1697 15 view .LVU1162
 4126 0034 1BB1     		cbz	r3, .L291
1699:ThirdParty/FreeRTOS/tasks.c ****             }
 4127              		.loc 1 1699 17 is_stmt 1 view .LVU1163
1699:ThirdParty/FreeRTOS/tasks.c ****             }
 4128              		.loc 1 1699 26 is_stmt 0 view .LVU1164
 4129 0036 04F11800 		add	r0, r4, #24
 4130 003a FFF7FEFF 		bl	uxListRemove
 4131              	.LVL297:
 4132              	.L291:
1703:ThirdParty/FreeRTOS/tasks.c ****             }
 4133              		.loc 1 1703 41 is_stmt 1 view .LVU1165
1706:ThirdParty/FreeRTOS/tasks.c **** 
 4134              		.loc 1 1706 13 view .LVU1166
 4135 003e 2946     		mov	r1, r5
 4136 0040 2848     		ldr	r0, .L306+8
 4137 0042 FFF7FEFF 		bl	vListInsertEnd
 4138              	.LVL298:
 4139              	.LBB238:
1710:ThirdParty/FreeRTOS/tasks.c **** 
 4140              		.loc 1 1710 17 view .LVU1167
1712:ThirdParty/FreeRTOS/tasks.c ****                 {
 4141              		.loc 1 1712 17 view .LVU1168
1712:ThirdParty/FreeRTOS/tasks.c ****                 {
 4142              		.loc 1 1712 24 is_stmt 0 view .LVU1169
 4143 0046 0023     		movs	r3, #0
 4144              	.LVL299:
 4145              	.L292:
1712:ThirdParty/FreeRTOS/tasks.c ****                 {
 4146              		.loc 1 1712 31 is_stmt 1 discriminator 1 view .LVU1170
 4147 0048 002B     		cmp	r3, #0
 4148 004a 0CDD     		ble	.L294
 4149              	.LBE238:
1724:ThirdParty/FreeRTOS/tasks.c **** 
 4150              		.loc 1 1724 9 view .LVU1171
 4151 004c FFF7FEFF 		bl	vPortExitCritical
 4152              	.LVL300:
1726:ThirdParty/FreeRTOS/tasks.c ****         {
 4153              		.loc 1 1726 9 view .LVU1172
1726:ThirdParty/FreeRTOS/tasks.c ****         {
 4154              		.loc 1 1726 31 is_stmt 0 view .LVU1173
 4155 0050 254B     		ldr	r3, .L306+12
 4156 0052 1B68     		ldr	r3, [r3]
1726:ThirdParty/FreeRTOS/tasks.c ****         {
 4157              		.loc 1 1726 11 view .LVU1174
 4158 0054 A3B9     		cbnz	r3, .L303
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 191


 4159              	.L295:
1738:ThirdParty/FreeRTOS/tasks.c ****         }
 4160              		.loc 1 1738 37 is_stmt 1 view .LVU1175
1741:ThirdParty/FreeRTOS/tasks.c ****         {
 4161              		.loc 1 1741 9 view .LVU1176
1741:ThirdParty/FreeRTOS/tasks.c ****         {
 4162              		.loc 1 1741 19 is_stmt 0 view .LVU1177
 4163 0056 254B     		ldr	r3, .L306+16
 4164 0058 1B68     		ldr	r3, [r3]
1741:ThirdParty/FreeRTOS/tasks.c ****         {
 4165              		.loc 1 1741 11 view .LVU1178
 4166 005a A342     		cmp	r3, r4
 4167 005c 17D0     		beq	.L304
 4168              	.L288:
1772:ThirdParty/FreeRTOS/tasks.c **** 
 4169              		.loc 1 1772 5 view .LVU1179
 4170 005e 38BD     		pop	{r3, r4, r5, pc}
 4171              	.LVL301:
 4172              	.L302:
1681:ThirdParty/FreeRTOS/tasks.c **** 
 4173              		.loc 1 1681 21 discriminator 1 view .LVU1180
 4174 0060 224B     		ldr	r3, .L306+16
 4175 0062 1C68     		ldr	r4, [r3]
 4176              	.LVL302:
1681:ThirdParty/FreeRTOS/tasks.c **** 
 4177              		.loc 1 1681 21 discriminator 1 view .LVU1181
 4178 0064 D1E7     		b	.L289
 4179              	.LVL303:
 4180              	.L294:
 4181              	.LBB239:
1714:ThirdParty/FreeRTOS/tasks.c ****                     {
 4182              		.loc 1 1714 21 is_stmt 1 view .LVU1182
1714:ThirdParty/FreeRTOS/tasks.c ****                     {
 4183              		.loc 1 1714 45 is_stmt 0 view .LVU1183
 4184 0066 E218     		adds	r2, r4, r3
 4185 0068 92F85420 		ldrb	r2, [r2, #84]	@ zero_extendqisi2
 4186 006c D2B2     		uxtb	r2, r2
1714:ThirdParty/FreeRTOS/tasks.c ****                     {
 4187              		.loc 1 1714 23 view .LVU1184
 4188 006e 012A     		cmp	r2, #1
 4189 0070 01D0     		beq	.L305
 4190              	.L293:
1712:ThirdParty/FreeRTOS/tasks.c ****                 {
 4191              		.loc 1 1712 73 is_stmt 1 discriminator 2 view .LVU1185
 4192 0072 0133     		adds	r3, r3, #1
 4193              	.LVL304:
1712:ThirdParty/FreeRTOS/tasks.c ****                 {
 4194              		.loc 1 1712 73 is_stmt 0 discriminator 2 view .LVU1186
 4195 0074 E8E7     		b	.L292
 4196              	.L305:
1718:ThirdParty/FreeRTOS/tasks.c ****                     }
 4197              		.loc 1 1718 25 is_stmt 1 view .LVU1187
1718:ThirdParty/FreeRTOS/tasks.c ****                     }
 4198              		.loc 1 1718 51 is_stmt 0 view .LVU1188
 4199 0076 E218     		adds	r2, r4, r3
 4200 0078 0021     		movs	r1, #0
 4201 007a 82F85410 		strb	r1, [r2, #84]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 192


 4202 007e F8E7     		b	.L293
 4203              	.LVL305:
 4204              	.L303:
1718:ThirdParty/FreeRTOS/tasks.c ****                     }
 4205              		.loc 1 1718 51 view .LVU1189
 4206              	.LBE239:
1730:ThirdParty/FreeRTOS/tasks.c ****             {
 4207              		.loc 1 1730 13 is_stmt 1 view .LVU1190
 4208 0080 FFF7FEFF 		bl	vPortEnterCritical
 4209              	.LVL306:
1732:ThirdParty/FreeRTOS/tasks.c ****             }
 4210              		.loc 1 1732 17 view .LVU1191
 4211 0084 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 4212              	.LVL307:
1734:ThirdParty/FreeRTOS/tasks.c ****         }
 4213              		.loc 1 1734 13 view .LVU1192
 4214 0088 FFF7FEFF 		bl	vPortExitCritical
 4215              	.LVL308:
 4216 008c E3E7     		b	.L295
 4217              	.L304:
1743:ThirdParty/FreeRTOS/tasks.c ****             {
 4218              		.loc 1 1743 13 view .LVU1193
1743:ThirdParty/FreeRTOS/tasks.c ****             {
 4219              		.loc 1 1743 35 is_stmt 0 view .LVU1194
 4220 008e 164B     		ldr	r3, .L306+12
 4221 0090 1B68     		ldr	r3, [r3]
1743:ThirdParty/FreeRTOS/tasks.c ****             {
 4222              		.loc 1 1743 15 view .LVU1195
 4223 0092 B3B1     		cbz	r3, .L297
1746:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4224              		.loc 1 1746 17 is_stmt 1 view .LVU1196
 4225 0094 164B     		ldr	r3, .L306+20
 4226 0096 1B68     		ldr	r3, [r3]
 4227 0098 43B1     		cbz	r3, .L298
1746:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4228              		.loc 1 1746 17 view .LVU1197
 4229              	.LBB240:
 4230              	.LBI240:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4231              		.loc 2 194 34 view .LVU1198
 4232              	.LBB241:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4233              		.loc 2 196 9 view .LVU1199
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4234              		.loc 2 198 9 view .LVU1200
 4235              		.syntax unified
 4236              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4237 009a 4FF05003 			mov r3, #80												
 4238 009e 83F31188 		msr basepri, r3											
 4239 00a2 BFF36F8F 		isb														
 4240 00a6 BFF34F8F 		dsb														
 4241              	
 4242              	@ 0 "" 2
 4243              	.LVL309:
 4244              		.thumb
 4245              		.syntax unified
 4246              	.L299:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 193


 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4247              		.loc 2 198 9 is_stmt 0 view .LVU1201
 4248              	.LBE241:
 4249              	.LBE240:
1746:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4250              		.loc 1 1746 17 is_stmt 1 discriminator 1 view .LVU1202
1746:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4251              		.loc 1 1746 17 discriminator 1 view .LVU1203
 4252 00aa FEE7     		b	.L299
 4253              	.L298:
1746:ThirdParty/FreeRTOS/tasks.c ****                 portYIELD_WITHIN_API();
 4254              		.loc 1 1746 58 discriminator 2 view .LVU1204
1747:ThirdParty/FreeRTOS/tasks.c ****             }
 4255              		.loc 1 1747 17 discriminator 2 view .LVU1205
 4256 00ac 4FF0E023 		mov	r3, #-536813568
 4257 00b0 4FF08052 		mov	r2, #268435456
 4258 00b4 C3F8042D 		str	r2, [r3, #3332]
1747:ThirdParty/FreeRTOS/tasks.c ****             }
 4259              		.loc 1 1747 17 discriminator 2 view .LVU1206
 4260              		.syntax unified
 4261              	@ 1747 "ThirdParty/FreeRTOS/tasks.c" 1
 4262 00b8 BFF34F8F 		dsb
 4263              	@ 0 "" 2
1747:ThirdParty/FreeRTOS/tasks.c ****             }
 4264              		.loc 1 1747 17 discriminator 2 view .LVU1207
 4265              	@ 1747 "ThirdParty/FreeRTOS/tasks.c" 1
 4266 00bc BFF36F8F 		isb
 4267              	@ 0 "" 2
1747:ThirdParty/FreeRTOS/tasks.c ****             }
 4268              		.loc 1 1747 39 discriminator 2 view .LVU1208
 4269              		.thumb
 4270              		.syntax unified
 4271 00c0 CDE7     		b	.L288
 4272              	.L297:
1754:ThirdParty/FreeRTOS/tasks.c ****                 {
 4273              		.loc 1 1754 17 view .LVU1209
1754:ThirdParty/FreeRTOS/tasks.c ****                 {
 4274              		.loc 1 1754 21 is_stmt 0 view .LVU1210
 4275 00c2 084B     		ldr	r3, .L306+8
 4276 00c4 1A68     		ldr	r2, [r3]
1754:ThirdParty/FreeRTOS/tasks.c ****                 {
 4277              		.loc 1 1754 68 view .LVU1211
 4278 00c6 0B4B     		ldr	r3, .L306+24
 4279 00c8 1B68     		ldr	r3, [r3]
1754:ThirdParty/FreeRTOS/tasks.c ****                 {
 4280              		.loc 1 1754 19 view .LVU1212
 4281 00ca 9A42     		cmp	r2, r3
 4282 00cc 03D1     		bne	.L300
1760:ThirdParty/FreeRTOS/tasks.c ****                 }
 4283              		.loc 1 1760 21 is_stmt 1 view .LVU1213
1760:ThirdParty/FreeRTOS/tasks.c ****                 }
 4284              		.loc 1 1760 34 is_stmt 0 view .LVU1214
 4285 00ce 074B     		ldr	r3, .L306+16
 4286 00d0 0022     		movs	r2, #0
 4287 00d2 1A60     		str	r2, [r3]
 4288 00d4 C3E7     		b	.L288
 4289              	.L300:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 194


1764:ThirdParty/FreeRTOS/tasks.c ****                 }
 4290              		.loc 1 1764 21 is_stmt 1 view .LVU1215
 4291 00d6 FFF7FEFF 		bl	vTaskSwitchContext
 4292              	.LVL310:
1770:ThirdParty/FreeRTOS/tasks.c ****         }
 4293              		.loc 1 1770 37 view .LVU1216
1772:ThirdParty/FreeRTOS/tasks.c **** 
 4294              		.loc 1 1772 5 is_stmt 0 view .LVU1217
 4295 00da C0E7     		b	.L288
 4296              	.L307:
 4297              		.align	2
 4298              	.L306:
 4299 00dc 00000000 		.word	pxReadyTasksLists
 4300 00e0 00000000 		.word	uxTopReadyPriority
 4301 00e4 00000000 		.word	xSuspendedTaskList
 4302 00e8 00000000 		.word	xSchedulerRunning
 4303 00ec 00000000 		.word	pxCurrentTCB
 4304 00f0 00000000 		.word	uxSchedulerSuspended
 4305 00f4 00000000 		.word	uxCurrentNumberOfTasks
 4306              		.cfi_endproc
 4307              	.LFE15:
 4309              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 4310              		.align	1
 4311              		.global	vTaskPlaceOnEventList
 4312              		.syntax unified
 4313              		.thumb
 4314              		.thumb_func
 4316              	vTaskPlaceOnEventList:
 4317              	.LVL311:
 4318              	.LFB31:
3085:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4319              		.loc 1 3085 1 is_stmt 1 view -0
 4320              		.cfi_startproc
 4321              		@ args = 0, pretend = 0, frame = 0
 4322              		@ frame_needed = 0, uses_anonymous_args = 0
3086:ThirdParty/FreeRTOS/tasks.c **** 
 4323              		.loc 1 3086 5 view .LVU1219
 4324 0000 58B1     		cbz	r0, .L313
3085:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4325              		.loc 1 3085 1 is_stmt 0 discriminator 2 view .LVU1220
 4326 0002 10B5     		push	{r4, lr}
 4327              	.LCFI30:
 4328              		.cfi_def_cfa_offset 8
 4329              		.cfi_offset 4, -8
 4330              		.cfi_offset 14, -4
 4331 0004 0C46     		mov	r4, r1
3086:ThirdParty/FreeRTOS/tasks.c **** 
 4332              		.loc 1 3086 32 is_stmt 1 discriminator 2 view .LVU1221
3102:ThirdParty/FreeRTOS/tasks.c **** 
 4333              		.loc 1 3102 5 discriminator 2 view .LVU1222
3102:ThirdParty/FreeRTOS/tasks.c **** 
 4334              		.loc 1 3102 46 is_stmt 0 discriminator 2 view .LVU1223
 4335 0006 094A     		ldr	r2, .L314
 4336 0008 1168     		ldr	r1, [r2]
 4337              	.LVL312:
3102:ThirdParty/FreeRTOS/tasks.c **** 
 4338              		.loc 1 3102 5 discriminator 2 view .LVU1224
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 195


 4339 000a 1831     		adds	r1, r1, #24
 4340 000c FFF7FEFF 		bl	vListInsert
 4341              	.LVL313:
3104:ThirdParty/FreeRTOS/tasks.c **** }
 4342              		.loc 1 3104 5 is_stmt 1 discriminator 2 view .LVU1225
 4343 0010 0121     		movs	r1, #1
 4344 0012 2046     		mov	r0, r4
 4345 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4346              	.LVL314:
3105:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4347              		.loc 1 3105 1 is_stmt 0 discriminator 2 view .LVU1226
 4348 0018 10BD     		pop	{r4, pc}
 4349              	.LVL315:
 4350              	.L313:
 4351              	.LCFI31:
 4352              		.cfi_def_cfa_offset 0
 4353              		.cfi_restore 4
 4354              		.cfi_restore 14
3086:ThirdParty/FreeRTOS/tasks.c **** 
 4355              		.loc 1 3086 5 is_stmt 1 view .LVU1227
 4356              	.LBB242:
 4357              	.LBI242:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4358              		.loc 2 194 34 view .LVU1228
 4359              	.LBB243:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4360              		.loc 2 196 9 view .LVU1229
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4361              		.loc 2 198 9 view .LVU1230
 4362              		.syntax unified
 4363              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4364 001a 4FF05003 			mov r3, #80												
 4365 001e 83F31188 		msr basepri, r3											
 4366 0022 BFF36F8F 		isb														
 4367 0026 BFF34F8F 		dsb														
 4368              	
 4369              	@ 0 "" 2
 4370              	.LVL316:
 4371              		.thumb
 4372              		.syntax unified
 4373              	.L310:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4374              		.loc 2 198 9 is_stmt 0 view .LVU1231
 4375              	.LBE243:
 4376              	.LBE242:
3086:ThirdParty/FreeRTOS/tasks.c **** 
 4377              		.loc 1 3086 5 is_stmt 1 discriminator 1 view .LVU1232
3086:ThirdParty/FreeRTOS/tasks.c **** 
 4378              		.loc 1 3086 5 discriminator 1 view .LVU1233
 4379 002a FEE7     		b	.L310
 4380              	.L315:
 4381              		.align	2
 4382              	.L314:
 4383 002c 00000000 		.word	pxCurrentTCB
 4384              		.cfi_endproc
 4385              	.LFE31:
 4387              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 196


 4388              		.align	1
 4389              		.global	vTaskPlaceOnUnorderedEventList
 4390              		.syntax unified
 4391              		.thumb
 4392              		.thumb_func
 4394              	vTaskPlaceOnUnorderedEventList:
 4395              	.LVL317:
 4396              	.LFB32:
3111:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4397              		.loc 1 3111 1 view -0
 4398              		.cfi_startproc
 4399              		@ args = 0, pretend = 0, frame = 0
 4400              		@ frame_needed = 0, uses_anonymous_args = 0
3111:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxEventList );
 4401              		.loc 1 3111 1 is_stmt 0 view .LVU1235
 4402 0000 38B5     		push	{r3, r4, r5, lr}
 4403              	.LCFI32:
 4404              		.cfi_def_cfa_offset 16
 4405              		.cfi_offset 3, -16
 4406              		.cfi_offset 4, -12
 4407              		.cfi_offset 5, -8
 4408              		.cfi_offset 14, -4
3112:ThirdParty/FreeRTOS/tasks.c **** 
 4409              		.loc 1 3112 5 is_stmt 1 view .LVU1236
 4410 0002 60B1     		cbz	r0, .L322
 4411 0004 0346     		mov	r3, r0
3112:ThirdParty/FreeRTOS/tasks.c **** 
 4412              		.loc 1 3112 32 discriminator 2 view .LVU1237
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4413              		.loc 1 3116 5 discriminator 2 view .LVU1238
 4414 0006 1848     		ldr	r0, .L323
 4415              	.LVL318:
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4416              		.loc 1 3116 5 is_stmt 0 discriminator 2 view .LVU1239
 4417 0008 0068     		ldr	r0, [r0]
 4418 000a 88B9     		cbnz	r0, .L319
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4419              		.loc 1 3116 5 is_stmt 1 view .LVU1240
 4420              	.LBB244:
 4421              	.LBI244:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4422              		.loc 2 194 34 view .LVU1241
 4423              	.LBB245:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4424              		.loc 2 196 9 view .LVU1242
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4425              		.loc 2 198 9 view .LVU1243
 4426              		.syntax unified
 4427              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4428 000c 4FF05003 			mov r3, #80												
 4429 0010 83F31188 		msr basepri, r3											
 4430 0014 BFF36F8F 		isb														
 4431 0018 BFF34F8F 		dsb														
 4432              	
 4433              	@ 0 "" 2
 4434              	.LVL319:
 4435              		.thumb
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 197


 4436              		.syntax unified
 4437              	.L320:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4438              		.loc 2 198 9 is_stmt 0 view .LVU1244
 4439              	.LBE245:
 4440              	.LBE244:
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4441              		.loc 1 3116 5 is_stmt 1 discriminator 2 view .LVU1245
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4442              		.loc 1 3116 5 discriminator 2 view .LVU1246
 4443 001c FEE7     		b	.L320
 4444              	.LVL320:
 4445              	.L322:
3112:ThirdParty/FreeRTOS/tasks.c **** 
 4446              		.loc 1 3112 5 view .LVU1247
 4447              	.LBB246:
 4448              	.LBI246:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4449              		.loc 2 194 34 view .LVU1248
 4450              	.LBB247:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4451              		.loc 2 196 9 view .LVU1249
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4452              		.loc 2 198 9 view .LVU1250
 4453              		.syntax unified
 4454              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4455 001e 4FF05003 			mov r3, #80												
 4456 0022 83F31188 		msr basepri, r3											
 4457 0026 BFF36F8F 		isb														
 4458 002a BFF34F8F 		dsb														
 4459              	
 4460              	@ 0 "" 2
 4461              	.LVL321:
 4462              		.thumb
 4463              		.syntax unified
 4464              	.L318:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4465              		.loc 2 198 9 is_stmt 0 view .LVU1251
 4466              	.LBE247:
 4467              	.LBE246:
3112:ThirdParty/FreeRTOS/tasks.c **** 
 4468              		.loc 1 3112 5 is_stmt 1 discriminator 1 view .LVU1252
3112:ThirdParty/FreeRTOS/tasks.c **** 
 4469              		.loc 1 3112 5 discriminator 1 view .LVU1253
 4470 002e FEE7     		b	.L318
 4471              	.LVL322:
 4472              	.L319:
3116:ThirdParty/FreeRTOS/tasks.c **** 
 4473              		.loc 1 3116 46 discriminator 2 view .LVU1254
3121:ThirdParty/FreeRTOS/tasks.c **** 
 4474              		.loc 1 3121 5 discriminator 2 view .LVU1255
 4475 0030 0E48     		ldr	r0, .L323+4
 4476 0032 0468     		ldr	r4, [r0]
 4477 0034 41F00041 		orr	r1, r1, #-2147483648
 4478              	.LVL323:
3121:ThirdParty/FreeRTOS/tasks.c **** 
 4479              		.loc 1 3121 5 is_stmt 0 discriminator 2 view .LVU1256
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 198


 4480 0038 A161     		str	r1, [r4, #24]
 4481              	.LBB248:
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4482              		.loc 1 3128 5 is_stmt 1 discriminator 2 view .LVU1257
 4483 003a 5968     		ldr	r1, [r3, #4]
 4484              	.LVL324:
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4485              		.loc 1 3128 5 discriminator 2 view .LVU1258
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4486              		.loc 1 3128 5 discriminator 2 view .LVU1259
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4487              		.loc 1 3128 5 discriminator 2 view .LVU1260
 4488 003c 0468     		ldr	r4, [r0]
 4489 003e E161     		str	r1, [r4, #28]
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4490              		.loc 1 3128 5 discriminator 2 view .LVU1261
 4491 0040 0568     		ldr	r5, [r0]
 4492 0042 8C68     		ldr	r4, [r1, #8]
 4493 0044 2C62     		str	r4, [r5, #32]
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4494              		.loc 1 3128 5 discriminator 2 view .LVU1262
 4495 0046 0568     		ldr	r5, [r0]
 4496 0048 1835     		adds	r5, r5, #24
 4497 004a 6560     		str	r5, [r4, #4]
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4498              		.loc 1 3128 5 discriminator 2 view .LVU1263
 4499 004c 0468     		ldr	r4, [r0]
 4500 004e 1834     		adds	r4, r4, #24
 4501 0050 8C60     		str	r4, [r1, #8]
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4502              		.loc 1 3128 5 discriminator 2 view .LVU1264
 4503 0052 0168     		ldr	r1, [r0]
 4504              	.LVL325:
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4505              		.loc 1 3128 5 is_stmt 0 discriminator 2 view .LVU1265
 4506 0054 8B62     		str	r3, [r1, #40]
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4507              		.loc 1 3128 5 is_stmt 1 discriminator 2 view .LVU1266
 4508 0056 1968     		ldr	r1, [r3]
 4509 0058 0131     		adds	r1, r1, #1
 4510 005a 1960     		str	r1, [r3]
 4511              	.LBE248:
3128:ThirdParty/FreeRTOS/tasks.c **** 
 4512              		.loc 1 3128 69 discriminator 2 view .LVU1267
3130:ThirdParty/FreeRTOS/tasks.c **** }
 4513              		.loc 1 3130 5 discriminator 2 view .LVU1268
 4514 005c 0121     		movs	r1, #1
 4515 005e 1046     		mov	r0, r2
 4516 0060 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4517              	.LVL326:
3131:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4518              		.loc 1 3131 1 is_stmt 0 discriminator 2 view .LVU1269
 4519 0064 38BD     		pop	{r3, r4, r5, pc}
 4520              	.L324:
 4521 0066 00BF     		.align	2
 4522              	.L323:
 4523 0068 00000000 		.word	uxSchedulerSuspended
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 199


 4524 006c 00000000 		.word	pxCurrentTCB
 4525              		.cfi_endproc
 4526              	.LFE32:
 4528              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 4529              		.align	1
 4530              		.global	vTaskPlaceOnEventListRestricted
 4531              		.syntax unified
 4532              		.thumb
 4533              		.thumb_func
 4535              	vTaskPlaceOnEventListRestricted:
 4536              	.LVL327:
 4537              	.LFB33:
3139:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxEventList );
 4538              		.loc 1 3139 5 is_stmt 1 view -0
 4539              		.cfi_startproc
 4540              		@ args = 0, pretend = 0, frame = 0
 4541              		@ frame_needed = 0, uses_anonymous_args = 0
3139:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( pxEventList );
 4542              		.loc 1 3139 5 is_stmt 0 view .LVU1271
 4543 0000 38B5     		push	{r3, r4, r5, lr}
 4544              	.LCFI33:
 4545              		.cfi_def_cfa_offset 16
 4546              		.cfi_offset 3, -16
 4547              		.cfi_offset 4, -12
 4548              		.cfi_offset 5, -8
 4549              		.cfi_offset 14, -4
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4550              		.loc 1 3140 9 is_stmt 1 view .LVU1272
 4551 0002 D8B1     		cbz	r0, .L331
 4552 0004 8C46     		mov	ip, r1
 4553 0006 1146     		mov	r1, r2
 4554              	.LVL328:
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4555              		.loc 1 3140 9 is_stmt 0 view .LVU1273
 4556 0008 0546     		mov	r5, r0
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4557              		.loc 1 3140 36 is_stmt 1 discriminator 2 view .LVU1274
 4558              	.LBB249:
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4559              		.loc 1 3152 9 discriminator 2 view .LVU1275
 4560 000a 4268     		ldr	r2, [r0, #4]
 4561              	.LVL329:
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4562              		.loc 1 3152 9 discriminator 2 view .LVU1276
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4563              		.loc 1 3152 9 discriminator 2 view .LVU1277
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4564              		.loc 1 3152 9 discriminator 2 view .LVU1278
 4565 000c 104B     		ldr	r3, .L332
 4566 000e 1868     		ldr	r0, [r3]
 4567              	.LVL330:
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4568              		.loc 1 3152 9 is_stmt 0 discriminator 2 view .LVU1279
 4569 0010 C261     		str	r2, [r0, #28]
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4570              		.loc 1 3152 9 is_stmt 1 discriminator 2 view .LVU1280
 4571 0012 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 200


 4572 0014 9468     		ldr	r4, [r2, #8]
 4573 0016 0462     		str	r4, [r0, #32]
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4574              		.loc 1 3152 9 discriminator 2 view .LVU1281
 4575 0018 1868     		ldr	r0, [r3]
 4576 001a 1830     		adds	r0, r0, #24
 4577 001c 6060     		str	r0, [r4, #4]
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4578              		.loc 1 3152 9 discriminator 2 view .LVU1282
 4579 001e 1868     		ldr	r0, [r3]
 4580 0020 1830     		adds	r0, r0, #24
 4581 0022 9060     		str	r0, [r2, #8]
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4582              		.loc 1 3152 9 discriminator 2 view .LVU1283
 4583 0024 1B68     		ldr	r3, [r3]
 4584 0026 9D62     		str	r5, [r3, #40]
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4585              		.loc 1 3152 9 discriminator 2 view .LVU1284
 4586 0028 2B68     		ldr	r3, [r5]
 4587 002a 0133     		adds	r3, r3, #1
 4588 002c 2B60     		str	r3, [r5]
 4589              	.LBE249:
3152:ThirdParty/FreeRTOS/tasks.c **** 
 4590              		.loc 1 3152 73 discriminator 2 view .LVU1285
3157:ThirdParty/FreeRTOS/tasks.c ****         {
 4591              		.loc 1 3157 9 discriminator 2 view .LVU1286
3157:ThirdParty/FreeRTOS/tasks.c ****         {
 4592              		.loc 1 3157 11 is_stmt 0 discriminator 2 view .LVU1287
 4593 002e 09B1     		cbz	r1, .L328
3159:ThirdParty/FreeRTOS/tasks.c ****         }
 4594              		.loc 1 3159 26 view .LVU1288
 4595 0030 4FF0FF3C 		mov	ip, #-1
 4596              	.LVL331:
 4597              	.L328:
3162:ThirdParty/FreeRTOS/tasks.c ****         prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 4598              		.loc 1 3162 63 is_stmt 1 view .LVU1289
3163:ThirdParty/FreeRTOS/tasks.c ****     }
 4599              		.loc 1 3163 9 view .LVU1290
 4600 0034 6046     		mov	r0, ip
 4601 0036 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4602              	.LVL332:
3164:ThirdParty/FreeRTOS/tasks.c **** 
 4603              		.loc 1 3164 5 is_stmt 0 view .LVU1291
 4604 003a 38BD     		pop	{r3, r4, r5, pc}
 4605              	.LVL333:
 4606              	.L331:
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4607              		.loc 1 3140 9 is_stmt 1 view .LVU1292
 4608              	.LBB250:
 4609              	.LBI250:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4610              		.loc 2 194 34 view .LVU1293
 4611              	.LBB251:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4612              		.loc 2 196 9 view .LVU1294
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4613              		.loc 2 198 9 view .LVU1295
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 201


 4614              		.syntax unified
 4615              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4616 003c 4FF05003 			mov r3, #80												
 4617 0040 83F31188 		msr basepri, r3											
 4618 0044 BFF36F8F 		isb														
 4619 0048 BFF34F8F 		dsb														
 4620              	
 4621              	@ 0 "" 2
 4622              	.LVL334:
 4623              		.thumb
 4624              		.syntax unified
 4625              	.L327:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4626              		.loc 2 198 9 is_stmt 0 view .LVU1296
 4627              	.LBE251:
 4628              	.LBE250:
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4629              		.loc 1 3140 9 is_stmt 1 discriminator 1 view .LVU1297
3140:ThirdParty/FreeRTOS/tasks.c **** 
 4630              		.loc 1 3140 9 discriminator 1 view .LVU1298
 4631 004c FEE7     		b	.L327
 4632              	.L333:
 4633 004e 00BF     		.align	2
 4634              	.L332:
 4635 0050 00000000 		.word	pxCurrentTCB
 4636              		.cfi_endproc
 4637              	.LFE33:
 4639              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 4640              		.align	1
 4641              		.global	xTaskRemoveFromEventList
 4642              		.syntax unified
 4643              		.thumb
 4644              		.thumb_func
 4646              	xTaskRemoveFromEventList:
 4647              	.LVL335:
 4648              	.LFB34:
3170:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4649              		.loc 1 3170 1 view -0
 4650              		.cfi_startproc
 4651              		@ args = 0, pretend = 0, frame = 0
 4652              		@ frame_needed = 0, uses_anonymous_args = 0
 4653              		@ link register save eliminated.
3171:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 4654              		.loc 1 3171 5 view .LVU1300
3172:ThirdParty/FreeRTOS/tasks.c **** 
 4655              		.loc 1 3172 5 view .LVU1301
3187:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4656              		.loc 1 3187 5 view .LVU1302
3187:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4657              		.loc 1 3187 22 is_stmt 0 view .LVU1303
 4658 0000 C368     		ldr	r3, [r0, #12]
3187:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4659              		.loc 1 3187 20 view .LVU1304
 4660 0002 DB68     		ldr	r3, [r3, #12]
 4661              	.LVL336:
3188:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4662              		.loc 1 3188 5 is_stmt 1 view .LVU1305
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 202


 4663 0004 002B     		cmp	r3, #0
 4664 0006 4AD0     		beq	.L345
3170:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4665              		.loc 1 3170 1 is_stmt 0 discriminator 2 view .LVU1306
 4666 0008 30B4     		push	{r4, r5}
 4667              	.LCFI34:
 4668              		.cfi_def_cfa_offset 8
 4669              		.cfi_offset 4, -8
 4670              		.cfi_offset 5, -4
3188:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4671              		.loc 1 3188 35 is_stmt 1 discriminator 2 view .LVU1307
 4672              	.LBB252:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4673              		.loc 1 3189 5 discriminator 2 view .LVU1308
 4674 000a 9A6A     		ldr	r2, [r3, #40]
 4675              	.LVL337:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4676              		.loc 1 3189 5 discriminator 2 view .LVU1309
 4677 000c D869     		ldr	r0, [r3, #28]
 4678              	.LVL338:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4679              		.loc 1 3189 5 is_stmt 0 discriminator 2 view .LVU1310
 4680 000e 196A     		ldr	r1, [r3, #32]
 4681 0010 8160     		str	r1, [r0, #8]
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4682              		.loc 1 3189 5 is_stmt 1 discriminator 2 view .LVU1311
 4683 0012 D869     		ldr	r0, [r3, #28]
 4684 0014 4860     		str	r0, [r1, #4]
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4685              		.loc 1 3189 5 discriminator 2 view .LVU1312
 4686 0016 5168     		ldr	r1, [r2, #4]
 4687 0018 03F11800 		add	r0, r3, #24
 4688 001c 8142     		cmp	r1, r0
 4689 001e 47D0     		beq	.L346
 4690              	.L337:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4691              		.loc 1 3189 5 discriminator 3 view .LVU1313
 4692 0020 0021     		movs	r1, #0
 4693 0022 9962     		str	r1, [r3, #40]
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4694              		.loc 1 3189 5 discriminator 3 view .LVU1314
 4695 0024 1168     		ldr	r1, [r2]
 4696 0026 0139     		subs	r1, r1, #1
 4697 0028 1160     		str	r1, [r2]
 4698              	.LBE252:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4699              		.loc 1 3189 59 discriminator 3 view .LVU1315
3191:ThirdParty/FreeRTOS/tasks.c ****     {
 4700              		.loc 1 3191 5 discriminator 3 view .LVU1316
3191:ThirdParty/FreeRTOS/tasks.c ****     {
 4701              		.loc 1 3191 30 is_stmt 0 discriminator 3 view .LVU1317
 4702 002a 2B4A     		ldr	r2, .L348
 4703              	.LVL339:
3191:ThirdParty/FreeRTOS/tasks.c ****     {
 4704              		.loc 1 3191 30 discriminator 3 view .LVU1318
 4705 002c 1268     		ldr	r2, [r2]
3191:ThirdParty/FreeRTOS/tasks.c ****     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 203


 4706              		.loc 1 3191 7 discriminator 3 view .LVU1319
 4707 002e 002A     		cmp	r2, #0
 4708 0030 44D1     		bne	.L338
 4709              	.LBB253:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4710              		.loc 1 3193 9 is_stmt 1 view .LVU1320
 4711 0032 5A69     		ldr	r2, [r3, #20]
 4712              	.LVL340:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4713              		.loc 1 3193 9 view .LVU1321
 4714 0034 9868     		ldr	r0, [r3, #8]
 4715 0036 D968     		ldr	r1, [r3, #12]
 4716 0038 8160     		str	r1, [r0, #8]
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4717              		.loc 1 3193 9 view .LVU1322
 4718 003a 9868     		ldr	r0, [r3, #8]
 4719 003c 4860     		str	r0, [r1, #4]
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4720              		.loc 1 3193 9 view .LVU1323
 4721 003e 5168     		ldr	r1, [r2, #4]
 4722 0040 181D     		adds	r0, r3, #4
 4723 0042 8142     		cmp	r1, r0
 4724 0044 37D0     		beq	.L347
 4725              	.L339:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4726              		.loc 1 3193 9 discriminator 3 view .LVU1324
 4727 0046 0021     		movs	r1, #0
 4728 0048 5961     		str	r1, [r3, #20]
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4729              		.loc 1 3193 9 discriminator 3 view .LVU1325
 4730 004a 1168     		ldr	r1, [r2]
 4731 004c 0139     		subs	r1, r1, #1
 4732 004e 1160     		str	r1, [r2]
 4733              	.LBE253:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4734              		.loc 1 3193 63 discriminator 3 view .LVU1326
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4735              		.loc 1 3194 9 discriminator 3 view .LVU1327
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4736              		.loc 1 3194 9 discriminator 3 view .LVU1328
 4737 0050 DA6A     		ldr	r2, [r3, #44]
 4738              	.LVL341:
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4739              		.loc 1 3194 9 is_stmt 0 discriminator 3 view .LVU1329
 4740 0052 0121     		movs	r1, #1
 4741 0054 9140     		lsls	r1, r1, r2
 4742 0056 214C     		ldr	r4, .L348+4
 4743 0058 2568     		ldr	r5, [r4]
 4744 005a 2943     		orrs	r1, r1, r5
 4745 005c 2160     		str	r1, [r4]
 4746              	.LBB254:
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4747              		.loc 1 3194 9 is_stmt 1 discriminator 3 view .LVU1330
 4748 005e 2049     		ldr	r1, .L348+8
 4749 0060 02EB8202 		add	r2, r2, r2, lsl #2
 4750 0064 01EB8202 		add	r2, r1, r2, lsl #2
 4751 0068 5268     		ldr	r2, [r2, #4]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 204


 4752              	.LVL342:
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4753              		.loc 1 3194 9 discriminator 3 view .LVU1331
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4754              		.loc 1 3194 9 discriminator 3 view .LVU1332
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4755              		.loc 1 3194 9 discriminator 3 view .LVU1333
 4756 006a 9A60     		str	r2, [r3, #8]
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4757              		.loc 1 3194 9 discriminator 3 view .LVU1334
 4758 006c 9468     		ldr	r4, [r2, #8]
 4759 006e DC60     		str	r4, [r3, #12]
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4760              		.loc 1 3194 9 discriminator 3 view .LVU1335
 4761 0070 6060     		str	r0, [r4, #4]
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4762              		.loc 1 3194 9 discriminator 3 view .LVU1336
 4763 0072 9060     		str	r0, [r2, #8]
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4764              		.loc 1 3194 9 discriminator 3 view .LVU1337
 4765 0074 DA6A     		ldr	r2, [r3, #44]
 4766              	.LVL343:
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4767              		.loc 1 3194 9 is_stmt 0 discriminator 3 view .LVU1338
 4768 0076 02EB8200 		add	r0, r2, r2, lsl #2
 4769 007a 8400     		lsls	r4, r0, #2
 4770 007c 01EB8000 		add	r0, r1, r0, lsl #2
 4771 0080 5861     		str	r0, [r3, #20]
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4772              		.loc 1 3194 9 is_stmt 1 discriminator 3 view .LVU1339
 4773 0082 0859     		ldr	r0, [r1, r4]
 4774 0084 0130     		adds	r0, r0, #1
 4775 0086 0851     		str	r0, [r1, r4]
 4776              	.LBE254:
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4777              		.loc 1 3194 9 discriminator 3 view .LVU1340
3194:ThirdParty/FreeRTOS/tasks.c **** 
 4778              		.loc 1 3194 48 discriminator 3 view .LVU1341
 4779              	.LVL344:
 4780              	.L340:
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4781              		.loc 1 3214 86 discriminator 1 view .LVU1342
3217:ThirdParty/FreeRTOS/tasks.c ****     {
 4782              		.loc 1 3217 5 discriminator 1 view .LVU1343
3217:ThirdParty/FreeRTOS/tasks.c ****     {
 4783              		.loc 1 3217 23 is_stmt 0 discriminator 1 view .LVU1344
 4784 0088 DA6A     		ldr	r2, [r3, #44]
3217:ThirdParty/FreeRTOS/tasks.c ****     {
 4785              		.loc 1 3217 50 discriminator 1 view .LVU1345
 4786 008a 164B     		ldr	r3, .L348+12
 4787              	.LVL345:
3217:ThirdParty/FreeRTOS/tasks.c ****     {
 4788              		.loc 1 3217 50 discriminator 1 view .LVU1346
 4789 008c 1B68     		ldr	r3, [r3]
 4790 008e DB6A     		ldr	r3, [r3, #44]
3217:ThirdParty/FreeRTOS/tasks.c ****     {
 4791              		.loc 1 3217 7 discriminator 1 view .LVU1347
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 205


 4792 0090 9A42     		cmp	r2, r3
 4793 0092 1FD9     		bls	.L342
3222:ThirdParty/FreeRTOS/tasks.c **** 
 4794              		.loc 1 3222 9 is_stmt 1 view .LVU1348
 4795              	.LVL346:
3226:ThirdParty/FreeRTOS/tasks.c ****     }
 4796              		.loc 1 3226 9 view .LVU1349
3226:ThirdParty/FreeRTOS/tasks.c ****     }
 4797              		.loc 1 3226 23 is_stmt 0 view .LVU1350
 4798 0094 0120     		movs	r0, #1
 4799 0096 144B     		ldr	r3, .L348+16
 4800 0098 1860     		str	r0, [r3]
 4801              	.LVL347:
 4802              	.L334:
3234:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 4803              		.loc 1 3234 1 view .LVU1351
 4804 009a 30BC     		pop	{r4, r5}
 4805              	.LCFI35:
 4806              		.cfi_restore 5
 4807              		.cfi_restore 4
 4808              		.cfi_def_cfa_offset 0
 4809 009c 7047     		bx	lr
 4810              	.LVL348:
 4811              	.L345:
3188:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4812              		.loc 1 3188 5 is_stmt 1 view .LVU1352
 4813              	.LBB255:
 4814              	.LBI255:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 4815              		.loc 2 194 34 view .LVU1353
 4816              	.LBB256:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4817              		.loc 2 196 9 view .LVU1354
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4818              		.loc 2 198 9 view .LVU1355
 4819              		.syntax unified
 4820              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4821 009e 4FF05003 			mov r3, #80												
 4822 00a2 83F31188 		msr basepri, r3											
 4823 00a6 BFF36F8F 		isb														
 4824 00aa BFF34F8F 		dsb														
 4825              	
 4826              	@ 0 "" 2
 4827              	.LVL349:
 4828              		.thumb
 4829              		.syntax unified
 4830              	.L336:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4831              		.loc 2 198 9 is_stmt 0 view .LVU1356
 4832              	.LBE256:
 4833              	.LBE255:
3188:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4834              		.loc 1 3188 5 is_stmt 1 discriminator 1 view .LVU1357
3188:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 4835              		.loc 1 3188 5 discriminator 1 view .LVU1358
 4836 00ae FEE7     		b	.L336
 4837              	.LVL350:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 206


 4838              	.L346:
 4839              	.LCFI36:
 4840              		.cfi_def_cfa_offset 8
 4841              		.cfi_offset 4, -8
 4842              		.cfi_offset 5, -4
 4843              	.LBB257:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4844              		.loc 1 3189 5 discriminator 1 view .LVU1359
 4845 00b0 196A     		ldr	r1, [r3, #32]
 4846 00b2 5160     		str	r1, [r2, #4]
 4847 00b4 B4E7     		b	.L337
 4848              	.LVL351:
 4849              	.L347:
3189:ThirdParty/FreeRTOS/tasks.c **** 
 4850              		.loc 1 3189 5 is_stmt 0 discriminator 1 view .LVU1360
 4851              	.LBE257:
 4852              	.LBB258:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4853              		.loc 1 3193 9 is_stmt 1 discriminator 1 view .LVU1361
 4854 00b6 D968     		ldr	r1, [r3, #12]
 4855 00b8 5160     		str	r1, [r2, #4]
 4856 00ba C4E7     		b	.L339
 4857              	.LVL352:
 4858              	.L338:
3193:ThirdParty/FreeRTOS/tasks.c ****         prvAddTaskToReadyList( pxUnblockedTCB );
 4859              		.loc 1 3193 9 is_stmt 0 discriminator 1 view .LVU1362
 4860              	.LBE258:
 4861              	.LBB259:
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4862              		.loc 1 3214 9 is_stmt 1 view .LVU1363
 4863 00bc 0B4A     		ldr	r2, .L348+20
 4864 00be 5168     		ldr	r1, [r2, #4]
 4865              	.LVL353:
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4866              		.loc 1 3214 9 view .LVU1364
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4867              		.loc 1 3214 9 view .LVU1365
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4868              		.loc 1 3214 9 view .LVU1366
 4869 00c0 D961     		str	r1, [r3, #28]
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4870              		.loc 1 3214 9 view .LVU1367
 4871 00c2 8C68     		ldr	r4, [r1, #8]
 4872 00c4 1C62     		str	r4, [r3, #32]
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4873              		.loc 1 3214 9 view .LVU1368
 4874 00c6 6060     		str	r0, [r4, #4]
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4875              		.loc 1 3214 9 view .LVU1369
 4876 00c8 8860     		str	r0, [r1, #8]
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4877              		.loc 1 3214 9 view .LVU1370
 4878 00ca 9A62     		str	r2, [r3, #40]
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4879              		.loc 1 3214 9 view .LVU1371
 4880 00cc 1168     		ldr	r1, [r2]
 4881              	.LVL354:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 207


3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4882              		.loc 1 3214 9 is_stmt 0 view .LVU1372
 4883 00ce 0131     		adds	r1, r1, #1
 4884 00d0 1160     		str	r1, [r2]
 4885 00d2 D9E7     		b	.L340
 4886              	.LVL355:
 4887              	.L342:
3214:ThirdParty/FreeRTOS/tasks.c ****     }
 4888              		.loc 1 3214 9 view .LVU1373
 4889              	.LBE259:
3230:ThirdParty/FreeRTOS/tasks.c ****     }
 4890              		.loc 1 3230 17 view .LVU1374
 4891 00d4 0020     		movs	r0, #0
 4892              	.LVL356:
3233:ThirdParty/FreeRTOS/tasks.c **** }
 4893              		.loc 1 3233 5 is_stmt 1 view .LVU1375
3233:ThirdParty/FreeRTOS/tasks.c **** }
 4894              		.loc 1 3233 12 is_stmt 0 view .LVU1376
 4895 00d6 E0E7     		b	.L334
 4896              	.L349:
 4897              		.align	2
 4898              	.L348:
 4899 00d8 00000000 		.word	uxSchedulerSuspended
 4900 00dc 00000000 		.word	uxTopReadyPriority
 4901 00e0 00000000 		.word	pxReadyTasksLists
 4902 00e4 00000000 		.word	pxCurrentTCB
 4903 00e8 00000000 		.word	xYieldPending
 4904 00ec 00000000 		.word	xPendingReadyList
 4905              		.cfi_endproc
 4906              	.LFE34:
 4908              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 4909              		.align	1
 4910              		.global	vTaskRemoveFromUnorderedEventList
 4911              		.syntax unified
 4912              		.thumb
 4913              		.thumb_func
 4915              	vTaskRemoveFromUnorderedEventList:
 4916              	.LVL357:
 4917              	.LFB35:
3239:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4918              		.loc 1 3239 1 is_stmt 1 view -0
 4919              		.cfi_startproc
 4920              		@ args = 0, pretend = 0, frame = 0
 4921              		@ frame_needed = 0, uses_anonymous_args = 0
 4922              		@ link register save eliminated.
3240:ThirdParty/FreeRTOS/tasks.c **** 
 4923              		.loc 1 3240 5 view .LVU1378
3244:ThirdParty/FreeRTOS/tasks.c **** 
 4924              		.loc 1 3244 5 view .LVU1379
 4925 0000 324B     		ldr	r3, .L363
 4926 0002 1B68     		ldr	r3, [r3]
 4927 0004 43B9     		cbnz	r3, .L351
3244:ThirdParty/FreeRTOS/tasks.c **** 
 4928              		.loc 1 3244 5 view .LVU1380
 4929              	.LBB260:
 4930              	.LBI260:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 208


 4931              		.loc 2 194 34 view .LVU1381
 4932              	.LBB261:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 4933              		.loc 2 196 9 view .LVU1382
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4934              		.loc 2 198 9 view .LVU1383
 4935              		.syntax unified
 4936              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 4937 0006 4FF05003 			mov r3, #80												
 4938 000a 83F31188 		msr basepri, r3											
 4939 000e BFF36F8F 		isb														
 4940 0012 BFF34F8F 		dsb														
 4941              	
 4942              	@ 0 "" 2
 4943              	.LVL358:
 4944              		.thumb
 4945              		.syntax unified
 4946              	.L352:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 4947              		.loc 2 198 9 is_stmt 0 view .LVU1384
 4948              	.LBE261:
 4949              	.LBE260:
3244:ThirdParty/FreeRTOS/tasks.c **** 
 4950              		.loc 1 3244 5 is_stmt 1 discriminator 1 view .LVU1385
3244:ThirdParty/FreeRTOS/tasks.c **** 
 4951              		.loc 1 3244 5 discriminator 1 view .LVU1386
 4952 0016 FEE7     		b	.L352
 4953              	.L351:
3244:ThirdParty/FreeRTOS/tasks.c **** 
 4954              		.loc 1 3244 52 discriminator 2 view .LVU1387
3247:ThirdParty/FreeRTOS/tasks.c **** 
 4955              		.loc 1 3247 5 discriminator 2 view .LVU1388
 4956 0018 41F00041 		orr	r1, r1, #-2147483648
 4957              	.LVL359:
3247:ThirdParty/FreeRTOS/tasks.c **** 
 4958              		.loc 1 3247 5 is_stmt 0 discriminator 2 view .LVU1389
 4959 001c 0160     		str	r1, [r0]
3251:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4960              		.loc 1 3251 5 is_stmt 1 discriminator 2 view .LVU1390
3251:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxUnblockedTCB );
 4961              		.loc 1 3251 20 is_stmt 0 discriminator 2 view .LVU1391
 4962 001e C268     		ldr	r2, [r0, #12]
 4963              	.LVL360:
3252:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 4964              		.loc 1 3252 5 is_stmt 1 discriminator 2 view .LVU1392
 4965 0020 002A     		cmp	r2, #0
 4966 0022 44D0     		beq	.L360
3239:ThirdParty/FreeRTOS/tasks.c ****     TCB_t * pxUnblockedTCB;
 4967              		.loc 1 3239 1 is_stmt 0 discriminator 2 view .LVU1393
 4968 0024 30B4     		push	{r4, r5}
 4969              	.LCFI37:
 4970              		.cfi_def_cfa_offset 8
 4971              		.cfi_offset 4, -8
 4972              		.cfi_offset 5, -4
3252:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 4973              		.loc 1 3252 35 is_stmt 1 discriminator 2 view .LVU1394
 4974              	.LBB262:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 209


3253:ThirdParty/FreeRTOS/tasks.c **** 
 4975              		.loc 1 3253 5 discriminator 2 view .LVU1395
 4976 0026 0369     		ldr	r3, [r0, #16]
 4977              	.LVL361:
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4978              		.loc 1 3253 5 discriminator 2 view .LVU1396
 4979 0028 4468     		ldr	r4, [r0, #4]
 4980 002a 8168     		ldr	r1, [r0, #8]
 4981 002c A160     		str	r1, [r4, #8]
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4982              		.loc 1 3253 5 discriminator 2 view .LVU1397
 4983 002e 4468     		ldr	r4, [r0, #4]
 4984 0030 4C60     		str	r4, [r1, #4]
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4985              		.loc 1 3253 5 discriminator 2 view .LVU1398
 4986 0032 5968     		ldr	r1, [r3, #4]
 4987 0034 8142     		cmp	r1, r0
 4988 0036 43D0     		beq	.L361
 4989              	.L355:
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4990              		.loc 1 3253 5 discriminator 3 view .LVU1399
 4991 0038 0021     		movs	r1, #0
 4992 003a 0161     		str	r1, [r0, #16]
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4993              		.loc 1 3253 5 discriminator 3 view .LVU1400
 4994 003c 1968     		ldr	r1, [r3]
 4995 003e 0139     		subs	r1, r1, #1
 4996 0040 1960     		str	r1, [r3]
 4997              	.LBE262:
3253:ThirdParty/FreeRTOS/tasks.c **** 
 4998              		.loc 1 3253 39 discriminator 3 view .LVU1401
 4999              	.LBB263:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 5000              		.loc 1 3272 5 discriminator 3 view .LVU1402
 5001 0042 5369     		ldr	r3, [r2, #20]
 5002              	.LVL362:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 5003              		.loc 1 3272 5 discriminator 3 view .LVU1403
 5004 0044 9068     		ldr	r0, [r2, #8]
 5005              	.LVL363:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 5006              		.loc 1 3272 5 is_stmt 0 discriminator 3 view .LVU1404
 5007 0046 D168     		ldr	r1, [r2, #12]
 5008 0048 8160     		str	r1, [r0, #8]
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 5009              		.loc 1 3272 5 is_stmt 1 discriminator 3 view .LVU1405
 5010 004a 9068     		ldr	r0, [r2, #8]
 5011 004c 4860     		str	r0, [r1, #4]
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 5012              		.loc 1 3272 5 discriminator 3 view .LVU1406
 5013 004e 5968     		ldr	r1, [r3, #4]
 5014 0050 101D     		adds	r0, r2, #4
 5015 0052 8142     		cmp	r1, r0
 5016 0054 37D0     		beq	.L362
 5017              	.L356:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 5018              		.loc 1 3272 5 discriminator 3 view .LVU1407
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 210


 5019 0056 0021     		movs	r1, #0
 5020 0058 5161     		str	r1, [r2, #20]
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 5021              		.loc 1 3272 5 discriminator 3 view .LVU1408
 5022 005a 1968     		ldr	r1, [r3]
 5023 005c 0139     		subs	r1, r1, #1
 5024 005e 1960     		str	r1, [r3]
 5025              	.LBE263:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 5026              		.loc 1 3272 59 discriminator 3 view .LVU1409
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5027              		.loc 1 3273 5 discriminator 3 view .LVU1410
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5028              		.loc 1 3273 5 discriminator 3 view .LVU1411
 5029 0060 D36A     		ldr	r3, [r2, #44]
 5030              	.LVL364:
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5031              		.loc 1 3273 5 is_stmt 0 discriminator 3 view .LVU1412
 5032 0062 0121     		movs	r1, #1
 5033 0064 9940     		lsls	r1, r1, r3
 5034 0066 1A4C     		ldr	r4, .L363+4
 5035 0068 2568     		ldr	r5, [r4]
 5036 006a 2943     		orrs	r1, r1, r5
 5037 006c 2160     		str	r1, [r4]
 5038              	.LBB264:
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5039              		.loc 1 3273 5 is_stmt 1 discriminator 3 view .LVU1413
 5040 006e 1949     		ldr	r1, .L363+8
 5041 0070 03EB8303 		add	r3, r3, r3, lsl #2
 5042 0074 01EB8303 		add	r3, r1, r3, lsl #2
 5043 0078 5B68     		ldr	r3, [r3, #4]
 5044              	.LVL365:
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5045              		.loc 1 3273 5 discriminator 3 view .LVU1414
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5046              		.loc 1 3273 5 discriminator 3 view .LVU1415
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5047              		.loc 1 3273 5 discriminator 3 view .LVU1416
 5048 007a 9360     		str	r3, [r2, #8]
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5049              		.loc 1 3273 5 discriminator 3 view .LVU1417
 5050 007c 9C68     		ldr	r4, [r3, #8]
 5051 007e D460     		str	r4, [r2, #12]
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5052              		.loc 1 3273 5 discriminator 3 view .LVU1418
 5053 0080 6060     		str	r0, [r4, #4]
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5054              		.loc 1 3273 5 discriminator 3 view .LVU1419
 5055 0082 9860     		str	r0, [r3, #8]
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5056              		.loc 1 3273 5 discriminator 3 view .LVU1420
 5057 0084 D36A     		ldr	r3, [r2, #44]
 5058              	.LVL366:
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5059              		.loc 1 3273 5 is_stmt 0 discriminator 3 view .LVU1421
 5060 0086 03EB8300 		add	r0, r3, r3, lsl #2
 5061 008a 8400     		lsls	r4, r0, #2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 211


 5062 008c 01EB8000 		add	r0, r1, r0, lsl #2
 5063 0090 5061     		str	r0, [r2, #20]
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5064              		.loc 1 3273 5 is_stmt 1 discriminator 3 view .LVU1422
 5065 0092 0859     		ldr	r0, [r1, r4]
 5066 0094 0130     		adds	r0, r0, #1
 5067 0096 0851     		str	r0, [r1, r4]
 5068              	.LBE264:
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5069              		.loc 1 3273 5 discriminator 3 view .LVU1423
3273:ThirdParty/FreeRTOS/tasks.c **** 
 5070              		.loc 1 3273 44 discriminator 3 view .LVU1424
3275:ThirdParty/FreeRTOS/tasks.c ****     {
 5071              		.loc 1 3275 5 discriminator 3 view .LVU1425
3275:ThirdParty/FreeRTOS/tasks.c ****     {
 5072              		.loc 1 3275 23 is_stmt 0 discriminator 3 view .LVU1426
 5073 0098 D26A     		ldr	r2, [r2, #44]
 5074              	.LVL367:
3275:ThirdParty/FreeRTOS/tasks.c ****     {
 5075              		.loc 1 3275 50 discriminator 3 view .LVU1427
 5076 009a 0F4B     		ldr	r3, .L363+12
 5077 009c 1B68     		ldr	r3, [r3]
 5078 009e DB6A     		ldr	r3, [r3, #44]
3275:ThirdParty/FreeRTOS/tasks.c ****     {
 5079              		.loc 1 3275 7 discriminator 3 view .LVU1428
 5080 00a0 9A42     		cmp	r2, r3
 5081 00a2 02D9     		bls	.L350
3281:ThirdParty/FreeRTOS/tasks.c ****     }
 5082              		.loc 1 3281 9 is_stmt 1 view .LVU1429
3281:ThirdParty/FreeRTOS/tasks.c ****     }
 5083              		.loc 1 3281 23 is_stmt 0 view .LVU1430
 5084 00a4 0D4B     		ldr	r3, .L363+16
 5085 00a6 0122     		movs	r2, #1
 5086 00a8 1A60     		str	r2, [r3]
 5087              	.L350:
3283:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5088              		.loc 1 3283 1 view .LVU1431
 5089 00aa 30BC     		pop	{r4, r5}
 5090              	.LCFI38:
 5091              		.cfi_restore 5
 5092              		.cfi_restore 4
 5093              		.cfi_def_cfa_offset 0
 5094 00ac 7047     		bx	lr
 5095              	.LVL368:
 5096              	.L360:
3252:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 5097              		.loc 1 3252 5 is_stmt 1 view .LVU1432
 5098              	.LBB265:
 5099              	.LBI265:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5100              		.loc 2 194 34 view .LVU1433
 5101              	.LBB266:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5102              		.loc 2 196 9 view .LVU1434
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5103              		.loc 2 198 9 view .LVU1435
 5104              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 212


 5105              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5106 00ae 4FF05003 			mov r3, #80												
 5107 00b2 83F31188 		msr basepri, r3											
 5108 00b6 BFF36F8F 		isb														
 5109 00ba BFF34F8F 		dsb														
 5110              	
 5111              	@ 0 "" 2
 5112              	.LVL369:
 5113              		.thumb
 5114              		.syntax unified
 5115              	.L354:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5116              		.loc 2 198 9 is_stmt 0 view .LVU1436
 5117              	.LBE266:
 5118              	.LBE265:
3252:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 5119              		.loc 1 3252 5 is_stmt 1 discriminator 2 view .LVU1437
3252:ThirdParty/FreeRTOS/tasks.c ****     listREMOVE_ITEM( pxEventListItem );
 5120              		.loc 1 3252 5 discriminator 2 view .LVU1438
 5121 00be FEE7     		b	.L354
 5122              	.LVL370:
 5123              	.L361:
 5124              	.LCFI39:
 5125              		.cfi_def_cfa_offset 8
 5126              		.cfi_offset 4, -8
 5127              		.cfi_offset 5, -4
 5128              	.LBB267:
3253:ThirdParty/FreeRTOS/tasks.c **** 
 5129              		.loc 1 3253 5 discriminator 1 view .LVU1439
 5130 00c0 8168     		ldr	r1, [r0, #8]
 5131 00c2 5960     		str	r1, [r3, #4]
 5132 00c4 B8E7     		b	.L355
 5133              	.LVL371:
 5134              	.L362:
3253:ThirdParty/FreeRTOS/tasks.c **** 
 5135              		.loc 1 3253 5 is_stmt 0 discriminator 1 view .LVU1440
 5136              	.LBE267:
 5137              	.LBB268:
3272:ThirdParty/FreeRTOS/tasks.c ****     prvAddTaskToReadyList( pxUnblockedTCB );
 5138              		.loc 1 3272 5 is_stmt 1 discriminator 1 view .LVU1441
 5139 00c6 D168     		ldr	r1, [r2, #12]
 5140 00c8 5960     		str	r1, [r3, #4]
 5141 00ca C4E7     		b	.L356
 5142              	.L364:
 5143              		.align	2
 5144              	.L363:
 5145 00cc 00000000 		.word	uxSchedulerSuspended
 5146 00d0 00000000 		.word	uxTopReadyPriority
 5147 00d4 00000000 		.word	pxReadyTasksLists
 5148 00d8 00000000 		.word	pxCurrentTCB
 5149 00dc 00000000 		.word	xYieldPending
 5150              	.LBE268:
 5151              		.cfi_endproc
 5152              	.LFE35:
 5154              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 5155              		.align	1
 5156              		.global	vTaskSetTimeOutState
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 213


 5157              		.syntax unified
 5158              		.thumb
 5159              		.thumb_func
 5161              	vTaskSetTimeOutState:
 5162              	.LVL372:
 5163              	.LFB36:
3287:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
 5164              		.loc 1 3287 1 view -0
 5165              		.cfi_startproc
 5166              		@ args = 0, pretend = 0, frame = 0
 5167              		@ frame_needed = 0, uses_anonymous_args = 0
3288:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5168              		.loc 1 3288 5 view .LVU1443
 5169 0000 60B1     		cbz	r0, .L370
3287:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTimeOut );
 5170              		.loc 1 3287 1 is_stmt 0 discriminator 2 view .LVU1444
 5171 0002 10B5     		push	{r4, lr}
 5172              	.LCFI40:
 5173              		.cfi_def_cfa_offset 8
 5174              		.cfi_offset 4, -8
 5175              		.cfi_offset 14, -4
 5176 0004 0446     		mov	r4, r0
3288:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5177              		.loc 1 3288 30 is_stmt 1 discriminator 2 view .LVU1445
3289:ThirdParty/FreeRTOS/tasks.c ****     {
 5178              		.loc 1 3289 5 discriminator 2 view .LVU1446
 5179 0006 FFF7FEFF 		bl	vPortEnterCritical
 5180              	.LVL373:
3291:ThirdParty/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
 5181              		.loc 1 3291 9 discriminator 2 view .LVU1447
3291:ThirdParty/FreeRTOS/tasks.c ****         pxTimeOut->xTimeOnEntering = xTickCount;
 5182              		.loc 1 3291 35 is_stmt 0 discriminator 2 view .LVU1448
 5183 000a 094B     		ldr	r3, .L371
 5184 000c 1B68     		ldr	r3, [r3]
 5185 000e 2360     		str	r3, [r4]
3292:ThirdParty/FreeRTOS/tasks.c ****     }
 5186              		.loc 1 3292 9 is_stmt 1 discriminator 2 view .LVU1449
3292:ThirdParty/FreeRTOS/tasks.c ****     }
 5187              		.loc 1 3292 36 is_stmt 0 discriminator 2 view .LVU1450
 5188 0010 084B     		ldr	r3, .L371+4
 5189 0012 1B68     		ldr	r3, [r3]
 5190 0014 6360     		str	r3, [r4, #4]
3294:ThirdParty/FreeRTOS/tasks.c **** }
 5191              		.loc 1 3294 5 is_stmt 1 discriminator 2 view .LVU1451
 5192 0016 FFF7FEFF 		bl	vPortExitCritical
 5193              	.LVL374:
3295:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5194              		.loc 1 3295 1 is_stmt 0 discriminator 2 view .LVU1452
 5195 001a 10BD     		pop	{r4, pc}
 5196              	.LVL375:
 5197              	.L370:
 5198              	.LCFI41:
 5199              		.cfi_def_cfa_offset 0
 5200              		.cfi_restore 4
 5201              		.cfi_restore 14
3288:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5202              		.loc 1 3288 5 is_stmt 1 view .LVU1453
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 214


 5203              	.LBB269:
 5204              	.LBI269:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5205              		.loc 2 194 34 view .LVU1454
 5206              	.LBB270:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5207              		.loc 2 196 9 view .LVU1455
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5208              		.loc 2 198 9 view .LVU1456
 5209              		.syntax unified
 5210              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5211 001c 4FF05003 			mov r3, #80												
 5212 0020 83F31188 		msr basepri, r3											
 5213 0024 BFF36F8F 		isb														
 5214 0028 BFF34F8F 		dsb														
 5215              	
 5216              	@ 0 "" 2
 5217              	.LVL376:
 5218              		.thumb
 5219              		.syntax unified
 5220              	.L367:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5221              		.loc 2 198 9 is_stmt 0 view .LVU1457
 5222              	.LBE270:
 5223              	.LBE269:
3288:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5224              		.loc 1 3288 5 is_stmt 1 discriminator 1 view .LVU1458
3288:ThirdParty/FreeRTOS/tasks.c ****     taskENTER_CRITICAL();
 5225              		.loc 1 3288 5 discriminator 1 view .LVU1459
 5226 002c FEE7     		b	.L367
 5227              	.L372:
 5228 002e 00BF     		.align	2
 5229              	.L371:
 5230 0030 00000000 		.word	xNumOfOverflows
 5231 0034 00000000 		.word	xTickCount
 5232              		.cfi_endproc
 5233              	.LFE36:
 5235              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 5236              		.align	1
 5237              		.global	vTaskInternalSetTimeOutState
 5238              		.syntax unified
 5239              		.thumb
 5240              		.thumb_func
 5242              	vTaskInternalSetTimeOutState:
 5243              	.LVL377:
 5244              	.LFB37:
3299:ThirdParty/FreeRTOS/tasks.c ****     /* For internal use only as it does not use a critical section. */
 5245              		.loc 1 3299 1 view -0
 5246              		.cfi_startproc
 5247              		@ args = 0, pretend = 0, frame = 0
 5248              		@ frame_needed = 0, uses_anonymous_args = 0
 5249              		@ link register save eliminated.
3301:ThirdParty/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 5250              		.loc 1 3301 5 view .LVU1461
3301:ThirdParty/FreeRTOS/tasks.c ****     pxTimeOut->xTimeOnEntering = xTickCount;
 5251              		.loc 1 3301 31 is_stmt 0 view .LVU1462
 5252 0000 034B     		ldr	r3, .L374
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 215


 5253 0002 1B68     		ldr	r3, [r3]
 5254 0004 0360     		str	r3, [r0]
3302:ThirdParty/FreeRTOS/tasks.c **** }
 5255              		.loc 1 3302 5 is_stmt 1 view .LVU1463
3302:ThirdParty/FreeRTOS/tasks.c **** }
 5256              		.loc 1 3302 32 is_stmt 0 view .LVU1464
 5257 0006 034B     		ldr	r3, .L374+4
 5258 0008 1B68     		ldr	r3, [r3]
 5259 000a 4360     		str	r3, [r0, #4]
3303:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5260              		.loc 1 3303 1 view .LVU1465
 5261 000c 7047     		bx	lr
 5262              	.L375:
 5263 000e 00BF     		.align	2
 5264              	.L374:
 5265 0010 00000000 		.word	xNumOfOverflows
 5266 0014 00000000 		.word	xTickCount
 5267              		.cfi_endproc
 5268              	.LFE37:
 5270              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 5271              		.align	1
 5272              		.global	xTaskCheckForTimeOut
 5273              		.syntax unified
 5274              		.thumb
 5275              		.thumb_func
 5277              	xTaskCheckForTimeOut:
 5278              	.LVL378:
 5279              	.LFB38:
3308:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 5280              		.loc 1 3308 1 is_stmt 1 view -0
 5281              		.cfi_startproc
 5282              		@ args = 0, pretend = 0, frame = 0
 5283              		@ frame_needed = 0, uses_anonymous_args = 0
3308:ThirdParty/FreeRTOS/tasks.c ****     BaseType_t xReturn;
 5284              		.loc 1 3308 1 is_stmt 0 view .LVU1467
 5285 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5286              	.LCFI42:
 5287              		.cfi_def_cfa_offset 24
 5288              		.cfi_offset 3, -24
 5289              		.cfi_offset 4, -20
 5290              		.cfi_offset 5, -16
 5291              		.cfi_offset 6, -12
 5292              		.cfi_offset 7, -8
 5293              		.cfi_offset 14, -4
3309:ThirdParty/FreeRTOS/tasks.c **** 
 5294              		.loc 1 3309 5 is_stmt 1 view .LVU1468
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5295              		.loc 1 3311 5 view .LVU1469
 5296 0002 B8B1     		cbz	r0, .L386
 5297 0004 0C46     		mov	r4, r1
 5298 0006 0546     		mov	r5, r0
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5299              		.loc 1 3311 30 discriminator 2 view .LVU1470
3312:ThirdParty/FreeRTOS/tasks.c **** 
 5300              		.loc 1 3312 5 discriminator 2 view .LVU1471
 5301 0008 E9B1     		cbz	r1, .L387
3312:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 216


 5302              		.loc 1 3312 34 discriminator 2 view .LVU1472
3314:ThirdParty/FreeRTOS/tasks.c ****     {
 5303              		.loc 1 3314 5 discriminator 2 view .LVU1473
 5304 000a FFF7FEFF 		bl	vPortEnterCritical
 5305              	.LVL379:
 5306              	.LBB271:
3317:ThirdParty/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 5307              		.loc 1 3317 9 discriminator 2 view .LVU1474
3317:ThirdParty/FreeRTOS/tasks.c ****         const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 5308              		.loc 1 3317 26 is_stmt 0 discriminator 2 view .LVU1475
 5309 000e 1C4B     		ldr	r3, .L389
 5310 0010 1968     		ldr	r1, [r3]
 5311              	.LVL380:
3318:ThirdParty/FreeRTOS/tasks.c **** 
 5312              		.loc 1 3318 9 is_stmt 1 discriminator 2 view .LVU1476
3318:ThirdParty/FreeRTOS/tasks.c **** 
 5313              		.loc 1 3318 68 is_stmt 0 discriminator 2 view .LVU1477
 5314 0012 6B68     		ldr	r3, [r5, #4]
3318:ThirdParty/FreeRTOS/tasks.c **** 
 5315              		.loc 1 3318 26 discriminator 2 view .LVU1478
 5316 0014 C81A     		subs	r0, r1, r3
 5317              	.LVL381:
3332:ThirdParty/FreeRTOS/tasks.c ****             {
 5318              		.loc 1 3332 13 is_stmt 1 discriminator 2 view .LVU1479
3332:ThirdParty/FreeRTOS/tasks.c ****             {
 5319              		.loc 1 3332 17 is_stmt 0 discriminator 2 view .LVU1480
 5320 0016 2268     		ldr	r2, [r4]
3332:ThirdParty/FreeRTOS/tasks.c ****             {
 5321              		.loc 1 3332 15 discriminator 2 view .LVU1481
 5322 0018 B2F1FF3F 		cmp	r2, #-1
 5323 001c 2AD0     		beq	.L384
3342:ThirdParty/FreeRTOS/tasks.c ****         {
 5324              		.loc 1 3342 9 is_stmt 1 view .LVU1482
3342:ThirdParty/FreeRTOS/tasks.c ****         {
 5325              		.loc 1 3342 31 is_stmt 0 view .LVU1483
 5326 001e 194E     		ldr	r6, .L389+4
 5327 0020 3668     		ldr	r6, [r6]
3342:ThirdParty/FreeRTOS/tasks.c ****         {
 5328              		.loc 1 3342 11 view .LVU1484
 5329 0022 2F68     		ldr	r7, [r5]
 5330 0024 B742     		cmp	r7, r6
 5331 0026 17D0     		beq	.L382
3342:ThirdParty/FreeRTOS/tasks.c ****         {
 5332              		.loc 1 3342 62 discriminator 1 view .LVU1485
 5333 0028 8B42     		cmp	r3, r1
 5334 002a 15D8     		bhi	.L382
3349:ThirdParty/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 5335              		.loc 1 3349 13 is_stmt 1 view .LVU1486
 5336              	.LVL382:
3350:ThirdParty/FreeRTOS/tasks.c ****         }
 5337              		.loc 1 3350 13 view .LVU1487
3350:ThirdParty/FreeRTOS/tasks.c ****         }
 5338              		.loc 1 3350 28 is_stmt 0 view .LVU1488
 5339 002c 0023     		movs	r3, #0
 5340 002e 2360     		str	r3, [r4]
3349:ThirdParty/FreeRTOS/tasks.c ****             *pxTicksToWait = ( TickType_t ) 0;
 5341              		.loc 1 3349 21 view .LVU1489
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 217


 5342 0030 0124     		movs	r4, #1
 5343              	.LVL383:
3350:ThirdParty/FreeRTOS/tasks.c ****         }
 5344              		.loc 1 3350 28 view .LVU1490
 5345 0032 20E0     		b	.L381
 5346              	.LVL384:
 5347              	.L386:
3350:ThirdParty/FreeRTOS/tasks.c ****         }
 5348              		.loc 1 3350 28 view .LVU1491
 5349              	.LBE271:
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5350              		.loc 1 3311 5 is_stmt 1 view .LVU1492
 5351              	.LBB272:
 5352              	.LBI272:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5353              		.loc 2 194 34 view .LVU1493
 5354              	.LBB273:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5355              		.loc 2 196 9 view .LVU1494
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5356              		.loc 2 198 9 view .LVU1495
 5357              		.syntax unified
 5358              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5359 0034 4FF05003 			mov r3, #80												
 5360 0038 83F31188 		msr basepri, r3											
 5361 003c BFF36F8F 		isb														
 5362 0040 BFF34F8F 		dsb														
 5363              	
 5364              	@ 0 "" 2
 5365              	.LVL385:
 5366              		.thumb
 5367              		.syntax unified
 5368              	.L378:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5369              		.loc 2 198 9 is_stmt 0 view .LVU1496
 5370              	.LBE273:
 5371              	.LBE272:
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5372              		.loc 1 3311 5 is_stmt 1 discriminator 1 view .LVU1497
3311:ThirdParty/FreeRTOS/tasks.c ****     configASSERT( pxTicksToWait );
 5373              		.loc 1 3311 5 discriminator 1 view .LVU1498
 5374 0044 FEE7     		b	.L378
 5375              	.L387:
3312:ThirdParty/FreeRTOS/tasks.c **** 
 5376              		.loc 1 3312 5 view .LVU1499
 5377              	.LBB274:
 5378              	.LBI274:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 5379              		.loc 2 194 34 view .LVU1500
 5380              	.LBB275:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 5381              		.loc 2 196 9 view .LVU1501
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5382              		.loc 2 198 9 view .LVU1502
 5383              		.syntax unified
 5384              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 5385 0046 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 218


 5386 004a 83F31188 		msr basepri, r3											
 5387 004e BFF36F8F 		isb														
 5388 0052 BFF34F8F 		dsb														
 5389              	
 5390              	@ 0 "" 2
 5391              	.LVL386:
 5392              		.thumb
 5393              		.syntax unified
 5394              	.L380:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 5395              		.loc 2 198 9 is_stmt 0 view .LVU1503
 5396              	.LBE275:
 5397              	.LBE274:
3312:ThirdParty/FreeRTOS/tasks.c **** 
 5398              		.loc 1 3312 5 is_stmt 1 discriminator 2 view .LVU1504
3312:ThirdParty/FreeRTOS/tasks.c **** 
 5399              		.loc 1 3312 5 discriminator 2 view .LVU1505
 5400 0056 FEE7     		b	.L380
 5401              	.LVL387:
 5402              	.L382:
 5403              	.LBB276:
3352:ThirdParty/FreeRTOS/tasks.c ****         {
 5404              		.loc 1 3352 14 view .LVU1506
3352:ThirdParty/FreeRTOS/tasks.c ****         {
 5405              		.loc 1 3352 16 is_stmt 0 view .LVU1507
 5406 0058 8242     		cmp	r2, r0
 5407 005a 03D8     		bhi	.L388
3361:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
 5408              		.loc 1 3361 13 is_stmt 1 view .LVU1508
3361:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdTRUE;
 5409              		.loc 1 3361 28 is_stmt 0 view .LVU1509
 5410 005c 0023     		movs	r3, #0
 5411 005e 2360     		str	r3, [r4]
3362:ThirdParty/FreeRTOS/tasks.c ****         }
 5412              		.loc 1 3362 13 is_stmt 1 view .LVU1510
 5413              	.LVL388:
3362:ThirdParty/FreeRTOS/tasks.c ****         }
 5414              		.loc 1 3362 21 is_stmt 0 view .LVU1511
 5415 0060 0124     		movs	r4, #1
 5416              	.LVL389:
3362:ThirdParty/FreeRTOS/tasks.c ****         }
 5417              		.loc 1 3362 21 view .LVU1512
 5418 0062 08E0     		b	.L381
 5419              	.LVL390:
 5420              	.L388:
3355:ThirdParty/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 5421              		.loc 1 3355 13 is_stmt 1 view .LVU1513
3355:ThirdParty/FreeRTOS/tasks.c ****             vTaskInternalSetTimeOutState( pxTimeOut );
 5422              		.loc 1 3355 28 is_stmt 0 view .LVU1514
 5423 0064 5B1A     		subs	r3, r3, r1
 5424 0066 1344     		add	r3, r3, r2
 5425 0068 2360     		str	r3, [r4]
3356:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdFALSE;
 5426              		.loc 1 3356 13 is_stmt 1 view .LVU1515
 5427 006a 2846     		mov	r0, r5
 5428              	.LVL391:
3356:ThirdParty/FreeRTOS/tasks.c ****             xReturn = pdFALSE;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 219


 5429              		.loc 1 3356 13 is_stmt 0 view .LVU1516
 5430 006c FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 5431              	.LVL392:
3357:ThirdParty/FreeRTOS/tasks.c ****         }
 5432              		.loc 1 3357 13 is_stmt 1 view .LVU1517
3357:ThirdParty/FreeRTOS/tasks.c ****         }
 5433              		.loc 1 3357 21 is_stmt 0 view .LVU1518
 5434 0070 0024     		movs	r4, #0
 5435              	.LVL393:
3357:ThirdParty/FreeRTOS/tasks.c ****         }
 5436              		.loc 1 3357 21 view .LVU1519
 5437 0072 00E0     		b	.L381
 5438              	.LVL394:
 5439              	.L384:
3337:ThirdParty/FreeRTOS/tasks.c ****             }
 5440              		.loc 1 3337 25 view .LVU1520
 5441 0074 0024     		movs	r4, #0
 5442              	.LVL395:
 5443              	.L381:
3337:ThirdParty/FreeRTOS/tasks.c ****             }
 5444              		.loc 1 3337 25 view .LVU1521
 5445              	.LBE276:
3365:ThirdParty/FreeRTOS/tasks.c **** 
 5446              		.loc 1 3365 5 is_stmt 1 view .LVU1522
 5447 0076 FFF7FEFF 		bl	vPortExitCritical
 5448              	.LVL396:
3367:ThirdParty/FreeRTOS/tasks.c **** }
 5449              		.loc 1 3367 5 view .LVU1523
3368:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5450              		.loc 1 3368 1 is_stmt 0 view .LVU1524
 5451 007a 2046     		mov	r0, r4
 5452 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5453              	.LVL397:
 5454              	.L390:
3368:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5455              		.loc 1 3368 1 view .LVU1525
 5456 007e 00BF     		.align	2
 5457              	.L389:
 5458 0080 00000000 		.word	xTickCount
 5459 0084 00000000 		.word	xNumOfOverflows
 5460              		.cfi_endproc
 5461              	.LFE38:
 5463              		.section	.text.vTaskMissedYield,"ax",%progbits
 5464              		.align	1
 5465              		.global	vTaskMissedYield
 5466              		.syntax unified
 5467              		.thumb
 5468              		.thumb_func
 5470              	vTaskMissedYield:
 5471              	.LFB39:
3372:ThirdParty/FreeRTOS/tasks.c ****     xYieldPending = pdTRUE;
 5472              		.loc 1 3372 1 is_stmt 1 view -0
 5473              		.cfi_startproc
 5474              		@ args = 0, pretend = 0, frame = 0
 5475              		@ frame_needed = 0, uses_anonymous_args = 0
 5476              		@ link register save eliminated.
3373:ThirdParty/FreeRTOS/tasks.c **** }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 220


 5477              		.loc 1 3373 5 view .LVU1527
3373:ThirdParty/FreeRTOS/tasks.c **** }
 5478              		.loc 1 3373 19 is_stmt 0 view .LVU1528
 5479 0000 014B     		ldr	r3, .L392
 5480 0002 0122     		movs	r2, #1
 5481 0004 1A60     		str	r2, [r3]
3374:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 5482              		.loc 1 3374 1 view .LVU1529
 5483 0006 7047     		bx	lr
 5484              	.L393:
 5485              		.align	2
 5486              	.L392:
 5487 0008 00000000 		.word	xYieldPending
 5488              		.cfi_endproc
 5489              	.LFE39:
 5491              		.section	.text.uxTaskGetTaskNumber,"ax",%progbits
 5492              		.align	1
 5493              		.global	uxTaskGetTaskNumber
 5494              		.syntax unified
 5495              		.thumb
 5496              		.thumb_func
 5498              	uxTaskGetTaskNumber:
 5499              	.LVL398:
 5500              	.LFB40:
3380:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxReturn;
 5501              		.loc 1 3380 5 is_stmt 1 view -0
 5502              		.cfi_startproc
 5503              		@ args = 0, pretend = 0, frame = 0
 5504              		@ frame_needed = 0, uses_anonymous_args = 0
 5505              		@ link register save eliminated.
3381:ThirdParty/FreeRTOS/tasks.c ****         TCB_t const * pxTCB;
 5506              		.loc 1 3381 9 view .LVU1531
3382:ThirdParty/FreeRTOS/tasks.c **** 
 5507              		.loc 1 3382 9 view .LVU1532
3384:ThirdParty/FreeRTOS/tasks.c ****         {
 5508              		.loc 1 3384 9 view .LVU1533
3384:ThirdParty/FreeRTOS/tasks.c ****         {
 5509              		.loc 1 3384 11 is_stmt 0 view .LVU1534
 5510 0000 08B1     		cbz	r0, .L396
3386:ThirdParty/FreeRTOS/tasks.c ****             uxReturn = pxTCB->uxTaskNumber;
 5511              		.loc 1 3386 13 is_stmt 1 view .LVU1535
 5512              	.LVL399:
3387:ThirdParty/FreeRTOS/tasks.c ****         }
 5513              		.loc 1 3387 13 view .LVU1536
3387:ThirdParty/FreeRTOS/tasks.c ****         }
 5514              		.loc 1 3387 22 is_stmt 0 view .LVU1537
 5515 0002 406C     		ldr	r0, [r0, #68]
 5516              	.LVL400:
3387:ThirdParty/FreeRTOS/tasks.c ****         }
 5517              		.loc 1 3387 22 view .LVU1538
 5518 0004 7047     		bx	lr
 5519              	.LVL401:
 5520              	.L396:
3391:ThirdParty/FreeRTOS/tasks.c ****         }
 5521              		.loc 1 3391 22 view .LVU1539
 5522 0006 0020     		movs	r0, #0
 5523              	.LVL402:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 221


3394:ThirdParty/FreeRTOS/tasks.c ****     }
 5524              		.loc 1 3394 9 is_stmt 1 view .LVU1540
3395:ThirdParty/FreeRTOS/tasks.c **** 
 5525              		.loc 1 3395 5 is_stmt 0 view .LVU1541
 5526 0008 7047     		bx	lr
 5527              		.cfi_endproc
 5528              	.LFE40:
 5530              		.section	.text.vTaskSetTaskNumber,"ax",%progbits
 5531              		.align	1
 5532              		.global	vTaskSetTaskNumber
 5533              		.syntax unified
 5534              		.thumb
 5535              		.thumb_func
 5537              	vTaskSetTaskNumber:
 5538              	.LVL403:
 5539              	.LFB41:
3404:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 5540              		.loc 1 3404 5 is_stmt 1 view -0
 5541              		.cfi_startproc
 5542              		@ args = 0, pretend = 0, frame = 0
 5543              		@ frame_needed = 0, uses_anonymous_args = 0
 5544              		@ link register save eliminated.
3405:ThirdParty/FreeRTOS/tasks.c **** 
 5545              		.loc 1 3405 9 view .LVU1543
3407:ThirdParty/FreeRTOS/tasks.c ****         {
 5546              		.loc 1 3407 9 view .LVU1544
3407:ThirdParty/FreeRTOS/tasks.c ****         {
 5547              		.loc 1 3407 11 is_stmt 0 view .LVU1545
 5548 0000 00B1     		cbz	r0, .L397
3409:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->uxTaskNumber = uxHandle;
 5549              		.loc 1 3409 13 is_stmt 1 view .LVU1546
 5550              	.LVL404:
3410:ThirdParty/FreeRTOS/tasks.c ****         }
 5551              		.loc 1 3410 13 view .LVU1547
3410:ThirdParty/FreeRTOS/tasks.c ****         }
 5552              		.loc 1 3410 33 is_stmt 0 view .LVU1548
 5553 0002 4164     		str	r1, [r0, #68]
 5554              	.LVL405:
 5555              	.L397:
3412:ThirdParty/FreeRTOS/tasks.c **** 
 5556              		.loc 1 3412 5 view .LVU1549
 5557 0004 7047     		bx	lr
 5558              		.cfi_endproc
 5559              	.LFE41:
 5561              		.section	.text.vTaskGetInfo,"ax",%progbits
 5562              		.align	1
 5563              		.global	vTaskGetInfo
 5564              		.syntax unified
 5565              		.thumb
 5566              		.thumb_func
 5568              	vTaskGetInfo:
 5569              	.LVL406:
 5570              	.LFB45:
3723:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 5571              		.loc 1 3723 5 is_stmt 1 view -0
 5572              		.cfi_startproc
 5573              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 222


 5574              		@ frame_needed = 0, uses_anonymous_args = 0
3723:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 5575              		.loc 1 3723 5 is_stmt 0 view .LVU1551
 5576 0000 70B5     		push	{r4, r5, r6, lr}
 5577              	.LCFI43:
 5578              		.cfi_def_cfa_offset 16
 5579              		.cfi_offset 4, -16
 5580              		.cfi_offset 5, -12
 5581              		.cfi_offset 6, -8
 5582              		.cfi_offset 14, -4
 5583 0002 0C46     		mov	r4, r1
 5584 0004 1646     		mov	r6, r2
3724:ThirdParty/FreeRTOS/tasks.c **** 
 5585              		.loc 1 3724 9 is_stmt 1 view .LVU1552
3727:ThirdParty/FreeRTOS/tasks.c **** 
 5586              		.loc 1 3727 9 view .LVU1553
3727:ThirdParty/FreeRTOS/tasks.c **** 
 5587              		.loc 1 3727 17 is_stmt 0 view .LVU1554
 5588 0006 0546     		mov	r5, r0
 5589 0008 D0B1     		cbz	r0, .L408
 5590              	.LVL407:
 5591              	.L400:
3729:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
 5592              		.loc 1 3729 9 is_stmt 1 discriminator 4 view .LVU1555
3729:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName[ 0 ] );
 5593              		.loc 1 3729 31 is_stmt 0 discriminator 4 view .LVU1556
 5594 000a 2560     		str	r5, [r4]
3730:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 5595              		.loc 1 3730 9 is_stmt 1 discriminator 4 view .LVU1557
3730:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 5596              		.loc 1 3730 53 is_stmt 0 discriminator 4 view .LVU1558
 5597 000c 05F13402 		add	r2, r5, #52
3730:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 5598              		.loc 1 3730 34 discriminator 4 view .LVU1559
 5599 0010 6260     		str	r2, [r4, #4]
3731:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
 5600              		.loc 1 3731 9 is_stmt 1 discriminator 4 view .LVU1560
3731:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
 5601              		.loc 1 3731 48 is_stmt 0 discriminator 4 view .LVU1561
 5602 0012 EA6A     		ldr	r2, [r5, #44]
3731:ThirdParty/FreeRTOS/tasks.c ****         pxTaskStatus->pxStackBase = pxTCB->pxStack;
 5603              		.loc 1 3731 41 discriminator 4 view .LVU1562
 5604 0014 2261     		str	r2, [r4, #16]
3732:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 5605              		.loc 1 3732 9 is_stmt 1 discriminator 4 view .LVU1563
3732:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 5606              		.loc 1 3732 42 is_stmt 0 discriminator 4 view .LVU1564
 5607 0016 2A6B     		ldr	r2, [r5, #48]
3732:ThirdParty/FreeRTOS/tasks.c ****         #if ( ( portSTACK_GROWTH > 0 ) && ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 5608              		.loc 1 3732 35 discriminator 4 view .LVU1565
 5609 0018 E261     		str	r2, [r4, #28]
3737:ThirdParty/FreeRTOS/tasks.c **** 
 5610              		.loc 1 3737 9 is_stmt 1 discriminator 4 view .LVU1566
3737:ThirdParty/FreeRTOS/tasks.c **** 
 5611              		.loc 1 3737 42 is_stmt 0 discriminator 4 view .LVU1567
 5612 001a 2A6C     		ldr	r2, [r5, #64]
3737:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 223


 5613              		.loc 1 3737 35 discriminator 4 view .LVU1568
 5614 001c A260     		str	r2, [r4, #8]
3741:ThirdParty/FreeRTOS/tasks.c ****         }
 5615              		.loc 1 3741 13 is_stmt 1 discriminator 4 view .LVU1569
3741:ThirdParty/FreeRTOS/tasks.c ****         }
 5616              		.loc 1 3741 49 is_stmt 0 discriminator 4 view .LVU1570
 5617 001e AA6C     		ldr	r2, [r5, #72]
3741:ThirdParty/FreeRTOS/tasks.c ****         }
 5618              		.loc 1 3741 42 discriminator 4 view .LVU1571
 5619 0020 6261     		str	r2, [r4, #20]
3755:ThirdParty/FreeRTOS/tasks.c ****         }
 5620              		.loc 1 3755 13 is_stmt 1 discriminator 4 view .LVU1572
3755:ThirdParty/FreeRTOS/tasks.c ****         }
 5621              		.loc 1 3755 44 is_stmt 0 discriminator 4 view .LVU1573
 5622 0022 0022     		movs	r2, #0
 5623 0024 A261     		str	r2, [r4, #24]
3762:ThirdParty/FreeRTOS/tasks.c ****         {
 5624              		.loc 1 3762 9 is_stmt 1 discriminator 4 view .LVU1574
3762:ThirdParty/FreeRTOS/tasks.c ****         {
 5625              		.loc 1 3762 11 is_stmt 0 discriminator 4 view .LVU1575
 5626 0026 052B     		cmp	r3, #5
 5627 0028 19D0     		beq	.L401
3764:ThirdParty/FreeRTOS/tasks.c ****             {
 5628              		.loc 1 3764 13 is_stmt 1 view .LVU1576
3764:ThirdParty/FreeRTOS/tasks.c ****             {
 5629              		.loc 1 3764 23 is_stmt 0 view .LVU1577
 5630 002a 124A     		ldr	r2, .L412
 5631 002c 1268     		ldr	r2, [r2]
3764:ThirdParty/FreeRTOS/tasks.c ****             {
 5632              		.loc 1 3764 15 view .LVU1578
 5633 002e AA42     		cmp	r2, r5
 5634 0030 09D0     		beq	.L409
3770:ThirdParty/FreeRTOS/tasks.c **** 
 5635              		.loc 1 3770 17 is_stmt 1 view .LVU1579
3770:ThirdParty/FreeRTOS/tasks.c **** 
 5636              		.loc 1 3770 45 is_stmt 0 view .LVU1580
 5637 0032 2373     		strb	r3, [r4, #12]
3777:ThirdParty/FreeRTOS/tasks.c ****                     {
 5638              		.loc 1 3777 21 is_stmt 1 view .LVU1581
3777:ThirdParty/FreeRTOS/tasks.c ****                     {
 5639              		.loc 1 3777 23 is_stmt 0 view .LVU1582
 5640 0034 032B     		cmp	r3, #3
 5641 0036 09D0     		beq	.L410
 5642              	.LVL408:
 5643              	.L403:
3799:ThirdParty/FreeRTOS/tasks.c ****         {
 5644              		.loc 1 3799 9 is_stmt 1 view .LVU1583
3799:ThirdParty/FreeRTOS/tasks.c ****         {
 5645              		.loc 1 3799 11 is_stmt 0 view .LVU1584
 5646 0038 B6B9     		cbnz	r6, .L411
3813:ThirdParty/FreeRTOS/tasks.c ****         }
 5647              		.loc 1 3813 13 is_stmt 1 view .LVU1585
3813:ThirdParty/FreeRTOS/tasks.c ****         }
 5648              		.loc 1 3813 48 is_stmt 0 view .LVU1586
 5649 003a 0023     		movs	r3, #0
 5650 003c 2384     		strh	r3, [r4, #32]	@ movhi
 5651              	.L399:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 224


3815:ThirdParty/FreeRTOS/tasks.c **** 
 5652              		.loc 1 3815 5 view .LVU1587
 5653 003e 70BD     		pop	{r4, r5, r6, pc}
 5654              	.LVL409:
 5655              	.L408:
3727:ThirdParty/FreeRTOS/tasks.c **** 
 5656              		.loc 1 3727 17 discriminator 1 view .LVU1588
 5657 0040 0C4A     		ldr	r2, .L412
 5658              	.LVL410:
3727:ThirdParty/FreeRTOS/tasks.c **** 
 5659              		.loc 1 3727 17 discriminator 1 view .LVU1589
 5660 0042 1568     		ldr	r5, [r2]
 5661              	.LVL411:
3727:ThirdParty/FreeRTOS/tasks.c **** 
 5662              		.loc 1 3727 17 discriminator 1 view .LVU1590
 5663 0044 E1E7     		b	.L400
 5664              	.LVL412:
 5665              	.L409:
3766:ThirdParty/FreeRTOS/tasks.c ****             }
 5666              		.loc 1 3766 17 is_stmt 1 view .LVU1591
3766:ThirdParty/FreeRTOS/tasks.c ****             }
 5667              		.loc 1 3766 45 is_stmt 0 view .LVU1592
 5668 0046 0023     		movs	r3, #0
 5669              	.LVL413:
3766:ThirdParty/FreeRTOS/tasks.c ****             }
 5670              		.loc 1 3766 45 view .LVU1593
 5671 0048 2373     		strb	r3, [r4, #12]
 5672 004a F5E7     		b	.L403
 5673              	.LVL414:
 5674              	.L410:
3779:ThirdParty/FreeRTOS/tasks.c ****                         {
 5675              		.loc 1 3779 25 is_stmt 1 view .LVU1594
 5676 004c FFF7FEFF 		bl	vTaskSuspendAll
 5677              	.LVL415:
3781:ThirdParty/FreeRTOS/tasks.c ****                             {
 5678              		.loc 1 3781 29 view .LVU1595
3781:ThirdParty/FreeRTOS/tasks.c ****                             {
 5679              		.loc 1 3781 33 is_stmt 0 view .LVU1596
 5680 0050 AB6A     		ldr	r3, [r5, #40]
3781:ThirdParty/FreeRTOS/tasks.c ****                             {
 5681              		.loc 1 3781 31 view .LVU1597
 5682 0052 0BB1     		cbz	r3, .L404
3783:ThirdParty/FreeRTOS/tasks.c ****                             }
 5683              		.loc 1 3783 33 is_stmt 1 view .LVU1598
3783:ThirdParty/FreeRTOS/tasks.c ****                             }
 5684              		.loc 1 3783 61 is_stmt 0 view .LVU1599
 5685 0054 0223     		movs	r3, #2
 5686 0056 2373     		strb	r3, [r4, #12]
 5687              	.L404:
3786:ThirdParty/FreeRTOS/tasks.c ****                     }
 5688              		.loc 1 3786 25 is_stmt 1 view .LVU1600
3786:ThirdParty/FreeRTOS/tasks.c ****                     }
 5689              		.loc 1 3786 34 is_stmt 0 view .LVU1601
 5690 0058 FFF7FEFF 		bl	xTaskResumeAll
 5691              	.LVL416:
 5692 005c ECE7     		b	.L403
 5693              	.LVL417:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 225


 5694              	.L401:
3794:ThirdParty/FreeRTOS/tasks.c ****         }
 5695              		.loc 1 3794 13 is_stmt 1 view .LVU1602
3794:ThirdParty/FreeRTOS/tasks.c ****         }
 5696              		.loc 1 3794 43 is_stmt 0 view .LVU1603
 5697 005e 2846     		mov	r0, r5
 5698 0060 FFF7FEFF 		bl	eTaskGetState
 5699              	.LVL418:
3794:ThirdParty/FreeRTOS/tasks.c ****         }
 5700              		.loc 1 3794 41 view .LVU1604
 5701 0064 2073     		strb	r0, [r4, #12]
 5702 0066 E7E7     		b	.L403
 5703              	.L411:
3807:ThirdParty/FreeRTOS/tasks.c ****             }
 5704              		.loc 1 3807 17 is_stmt 1 view .LVU1605
3807:ThirdParty/FreeRTOS/tasks.c ****             }
 5705              		.loc 1 3807 54 is_stmt 0 view .LVU1606
 5706 0068 286B     		ldr	r0, [r5, #48]
 5707 006a FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 5708              	.LVL419:
3807:ThirdParty/FreeRTOS/tasks.c ****             }
 5709              		.loc 1 3807 52 view .LVU1607
 5710 006e 2084     		strh	r0, [r4, #32]	@ movhi
 5711 0070 E5E7     		b	.L399
 5712              	.L413:
 5713 0072 00BF     		.align	2
 5714              	.L412:
 5715 0074 00000000 		.word	pxCurrentTCB
 5716              		.cfi_endproc
 5717              	.LFE45:
 5719              		.section	.text.prvListTasksWithinSingleList,"ax",%progbits
 5720              		.align	1
 5721              		.syntax unified
 5722              		.thumb
 5723              		.thumb_func
 5725              	prvListTasksWithinSingleList:
 5726              	.LVL420:
 5727              	.LFB46:
3825:ThirdParty/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB;
 5728              		.loc 1 3825 5 is_stmt 1 view -0
 5729              		.cfi_startproc
 5730              		@ args = 0, pretend = 0, frame = 0
 5731              		@ frame_needed = 0, uses_anonymous_args = 0
3825:ThirdParty/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxNextTCB;
 5732              		.loc 1 3825 5 is_stmt 0 view .LVU1609
 5733 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 5734              	.LCFI44:
 5735              		.cfi_def_cfa_offset 32
 5736              		.cfi_offset 4, -32
 5737              		.cfi_offset 5, -28
 5738              		.cfi_offset 6, -24
 5739              		.cfi_offset 7, -20
 5740              		.cfi_offset 8, -16
 5741              		.cfi_offset 9, -12
 5742              		.cfi_offset 10, -8
 5743              		.cfi_offset 14, -4
3826:ThirdParty/FreeRTOS/tasks.c ****         configLIST_VOLATILE TCB_t * pxFirstTCB;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 226


 5744              		.loc 1 3826 29 is_stmt 1 view .LVU1610
3827:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0;
 5745              		.loc 1 3827 29 view .LVU1611
3828:ThirdParty/FreeRTOS/tasks.c **** 
 5746              		.loc 1 3828 9 view .LVU1612
 5747              	.LVL421:
3830:ThirdParty/FreeRTOS/tasks.c ****         {
 5748              		.loc 1 3830 9 view .LVU1613
3830:ThirdParty/FreeRTOS/tasks.c ****         {
 5749              		.loc 1 3830 13 is_stmt 0 view .LVU1614
 5750 0004 0C68     		ldr	r4, [r1]
3830:ThirdParty/FreeRTOS/tasks.c ****         {
 5751              		.loc 1 3830 11 view .LVU1615
 5752 0006 3CB3     		cbz	r4, .L414
 5753 0008 0746     		mov	r7, r0
 5754 000a 0D46     		mov	r5, r1
 5755 000c 9046     		mov	r8, r2
 5756              	.LBB277:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5757              		.loc 1 3832 13 is_stmt 1 view .LVU1616
 5758              	.LVL422:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5759              		.loc 1 3832 13 view .LVU1617
 5760 000e 4B68     		ldr	r3, [r1, #4]
 5761 0010 5B68     		ldr	r3, [r3, #4]
 5762 0012 4B60     		str	r3, [r1, #4]
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5763              		.loc 1 3832 13 view .LVU1618
 5764 0014 01F10809 		add	r9, r1, #8
 5765 0018 4B45     		cmp	r3, r9
 5766 001a 04D0     		beq	.L420
 5767              	.L416:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5768              		.loc 1 3832 13 discriminator 3 view .LVU1619
 5769 001c 6B68     		ldr	r3, [r5, #4]
 5770 001e D3F80CA0 		ldr	r10, [r3, #12]
 5771              	.LVL423:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5772              		.loc 1 3832 13 is_stmt 0 discriminator 3 view .LVU1620
 5773              	.LBE277:
3828:ThirdParty/FreeRTOS/tasks.c **** 
 5774              		.loc 1 3828 21 discriminator 3 view .LVU1621
 5775 0022 0024     		movs	r4, #0
 5776 0024 10E0     		b	.L418
 5777              	.LVL424:
 5778              	.L420:
 5779              	.LBB278:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5780              		.loc 1 3832 13 is_stmt 1 discriminator 1 view .LVU1622
 5781 0026 5B68     		ldr	r3, [r3, #4]
 5782 0028 4B60     		str	r3, [r1, #4]
 5783 002a F7E7     		b	.L416
 5784              	.LVL425:
 5785              	.L417:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5786              		.loc 1 3832 13 is_stmt 0 discriminator 1 view .LVU1623
 5787              	.LBE278:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 227


 5788              	.LBB279:
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5789              		.loc 1 3840 17 is_stmt 1 discriminator 3 view .LVU1624
 5790 002c 6B68     		ldr	r3, [r5, #4]
 5791 002e DE68     		ldr	r6, [r3, #12]
 5792              	.LVL426:
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5793              		.loc 1 3840 17 is_stmt 0 discriminator 3 view .LVU1625
 5794              	.LBE279:
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5795              		.loc 1 3840 65 is_stmt 1 discriminator 3 view .LVU1626
3841:ThirdParty/FreeRTOS/tasks.c ****                 uxTask++;
 5796              		.loc 1 3841 17 discriminator 3 view .LVU1627
3841:ThirdParty/FreeRTOS/tasks.c ****                 uxTask++;
 5797              		.loc 1 3841 79 is_stmt 0 discriminator 3 view .LVU1628
 5798 0030 04EBC401 		add	r1, r4, r4, lsl #3
3841:ThirdParty/FreeRTOS/tasks.c ****                 uxTask++;
 5799              		.loc 1 3841 17 discriminator 3 view .LVU1629
 5800 0034 4346     		mov	r3, r8
 5801 0036 0122     		movs	r2, #1
 5802 0038 07EB8101 		add	r1, r7, r1, lsl #2
 5803 003c 3046     		mov	r0, r6
 5804 003e FFF7FEFF 		bl	vTaskGetInfo
 5805              	.LVL427:
3842:ThirdParty/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
 5806              		.loc 1 3842 17 is_stmt 1 discriminator 3 view .LVU1630
3842:ThirdParty/FreeRTOS/tasks.c ****             } while( pxNextTCB != pxFirstTCB );
 5807              		.loc 1 3842 23 is_stmt 0 discriminator 3 view .LVU1631
 5808 0042 0134     		adds	r4, r4, #1
 5809              	.LVL428:
3843:ThirdParty/FreeRTOS/tasks.c ****         }
 5810              		.loc 1 3843 32 is_stmt 1 discriminator 3 view .LVU1632
 5811 0044 B245     		cmp	r10, r6
 5812 0046 07D0     		beq	.L414
 5813              	.LVL429:
 5814              	.L418:
3832:ThirdParty/FreeRTOS/tasks.c **** 
 5815              		.loc 1 3832 62 discriminator 4 view .LVU1633
3838:ThirdParty/FreeRTOS/tasks.c ****             {
 5816              		.loc 1 3838 13 discriminator 4 view .LVU1634
 5817              	.LBB280:
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5818              		.loc 1 3840 17 discriminator 4 view .LVU1635
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5819              		.loc 1 3840 17 discriminator 4 view .LVU1636
 5820 0048 6B68     		ldr	r3, [r5, #4]
 5821 004a 5968     		ldr	r1, [r3, #4]
 5822 004c 6960     		str	r1, [r5, #4]
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5823              		.loc 1 3840 17 discriminator 4 view .LVU1637
 5824 004e 8945     		cmp	r9, r1
 5825 0050 ECD1     		bne	.L417
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5826              		.loc 1 3840 17 discriminator 1 view .LVU1638
 5827 0052 4B68     		ldr	r3, [r1, #4]
 5828 0054 6B60     		str	r3, [r5, #4]
 5829 0056 E9E7     		b	.L417
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 228


 5830              	.LVL430:
 5831              	.L414:
3840:ThirdParty/FreeRTOS/tasks.c ****                 vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE,
 5832              		.loc 1 3840 17 is_stmt 0 discriminator 1 view .LVU1639
 5833              	.LBE280:
3851:ThirdParty/FreeRTOS/tasks.c **** 
 5834              		.loc 1 3851 5 view .LVU1640
 5835 0058 2046     		mov	r0, r4
 5836 005a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5837              		.cfi_endproc
 5838              	.LFE46:
 5840              		.section	.text.uxTaskGetSystemState,"ax",%progbits
 5841              		.align	1
 5842              		.global	uxTaskGetSystemState
 5843              		.syntax unified
 5844              		.thumb
 5845              		.thumb_func
 5847              	uxTaskGetSystemState:
 5848              	.LVL431:
 5849              	.LFB27:
2492:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 5850              		.loc 1 2492 5 is_stmt 1 view -0
 5851              		.cfi_startproc
 5852              		@ args = 0, pretend = 0, frame = 0
 5853              		@ frame_needed = 0, uses_anonymous_args = 0
2492:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 5854              		.loc 1 2492 5 is_stmt 0 view .LVU1642
 5855 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5856              	.LCFI45:
 5857              		.cfi_def_cfa_offset 24
 5858              		.cfi_offset 3, -24
 5859              		.cfi_offset 4, -20
 5860              		.cfi_offset 5, -16
 5861              		.cfi_offset 6, -12
 5862              		.cfi_offset 7, -8
 5863              		.cfi_offset 14, -4
 5864 0002 0646     		mov	r6, r0
 5865 0004 0C46     		mov	r4, r1
 5866 0006 1746     		mov	r7, r2
2493:ThirdParty/FreeRTOS/tasks.c **** 
 5867              		.loc 1 2493 9 is_stmt 1 view .LVU1643
 5868              	.LVL432:
2495:ThirdParty/FreeRTOS/tasks.c ****         {
 5869              		.loc 1 2495 9 view .LVU1644
 5870 0008 FFF7FEFF 		bl	vTaskSuspendAll
 5871              	.LVL433:
2498:ThirdParty/FreeRTOS/tasks.c ****             {
 5872              		.loc 1 2498 13 view .LVU1645
2498:ThirdParty/FreeRTOS/tasks.c ****             {
 5873              		.loc 1 2498 29 is_stmt 0 view .LVU1646
 5874 000c 224B     		ldr	r3, .L426
 5875 000e 1B68     		ldr	r3, [r3]
2498:ThirdParty/FreeRTOS/tasks.c ****             {
 5876              		.loc 1 2498 15 view .LVU1647
 5877 0010 A342     		cmp	r3, r4
 5878 0012 3BD8     		bhi	.L424
2493:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 229


 5879              		.loc 1 2493 33 view .LVU1648
 5880 0014 0525     		movs	r5, #5
2493:ThirdParty/FreeRTOS/tasks.c **** 
 5881              		.loc 1 2493 21 view .LVU1649
 5882 0016 0024     		movs	r4, #0
 5883              	.LVL434:
 5884              	.L423:
2502:ThirdParty/FreeRTOS/tasks.c ****                 {
 5885              		.loc 1 2502 17 is_stmt 1 discriminator 1 view .LVU1650
2504:ThirdParty/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
 5886              		.loc 1 2504 21 discriminator 1 view .LVU1651
2504:ThirdParty/FreeRTOS/tasks.c ****                     uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( px
 5887              		.loc 1 2504 28 is_stmt 0 discriminator 1 view .LVU1652
 5888 0018 013D     		subs	r5, r5, #1
 5889              	.LVL435:
2505:ThirdParty/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 5890              		.loc 1 2505 21 is_stmt 1 discriminator 1 view .LVU1653
2505:ThirdParty/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 5891              		.loc 1 2505 81 is_stmt 0 discriminator 1 view .LVU1654
 5892 001a 04EBC400 		add	r0, r4, r4, lsl #3
2505:ThirdParty/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 5893              		.loc 1 2505 31 discriminator 1 view .LVU1655
 5894 001e 05EB8501 		add	r1, r5, r5, lsl #2
 5895 0022 0122     		movs	r2, #1
 5896 0024 1D4B     		ldr	r3, .L426+4
 5897 0026 03EB8101 		add	r1, r3, r1, lsl #2
 5898 002a 06EB8000 		add	r0, r6, r0, lsl #2
 5899 002e FFF7FEFF 		bl	prvListTasksWithinSingleList
 5900              	.LVL436:
2505:ThirdParty/FreeRTOS/tasks.c ****                 } while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception
 5901              		.loc 1 2505 28 discriminator 1 view .LVU1656
 5902 0032 0444     		add	r4, r4, r0
 5903              	.LVL437:
2506:ThirdParty/FreeRTOS/tasks.c **** 
 5904              		.loc 1 2506 34 is_stmt 1 discriminator 1 view .LVU1657
 5905 0034 002D     		cmp	r5, #0
 5906 0036 EFD1     		bne	.L423
2510:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 5907              		.loc 1 2510 17 view .LVU1658
2510:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 5908              		.loc 1 2510 77 is_stmt 0 view .LVU1659
 5909 0038 04EBC400 		add	r0, r4, r4, lsl #3
2510:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 5910              		.loc 1 2510 27 view .LVU1660
 5911 003c 184B     		ldr	r3, .L426+8
 5912 003e 1968     		ldr	r1, [r3]
 5913 0040 0222     		movs	r2, #2
 5914 0042 06EB8000 		add	r0, r6, r0, lsl #2
 5915 0046 FFF7FEFF 		bl	prvListTasksWithinSingleList
 5916              	.LVL438:
2510:ThirdParty/FreeRTOS/tasks.c ****                 uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t 
 5917              		.loc 1 2510 24 view .LVU1661
 5918 004a 0444     		add	r4, r4, r0
 5919              	.LVL439:
2511:ThirdParty/FreeRTOS/tasks.c **** 
 5920              		.loc 1 2511 17 is_stmt 1 view .LVU1662
2511:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 230


 5921              		.loc 1 2511 77 is_stmt 0 view .LVU1663
 5922 004c 04EBC400 		add	r0, r4, r4, lsl #3
2511:ThirdParty/FreeRTOS/tasks.c **** 
 5923              		.loc 1 2511 27 view .LVU1664
 5924 0050 144B     		ldr	r3, .L426+12
 5925 0052 1968     		ldr	r1, [r3]
 5926 0054 0222     		movs	r2, #2
 5927 0056 06EB8000 		add	r0, r6, r0, lsl #2
 5928 005a FFF7FEFF 		bl	prvListTasksWithinSingleList
 5929              	.LVL440:
2511:ThirdParty/FreeRTOS/tasks.c **** 
 5930              		.loc 1 2511 24 view .LVU1665
 5931 005e 0444     		add	r4, r4, r0
 5932              	.LVL441:
2517:ThirdParty/FreeRTOS/tasks.c ****                 }
 5933              		.loc 1 2517 21 is_stmt 1 view .LVU1666
2517:ThirdParty/FreeRTOS/tasks.c ****                 }
 5934              		.loc 1 2517 81 is_stmt 0 view .LVU1667
 5935 0060 04EBC400 		add	r0, r4, r4, lsl #3
2517:ThirdParty/FreeRTOS/tasks.c ****                 }
 5936              		.loc 1 2517 31 view .LVU1668
 5937 0064 0422     		movs	r2, #4
 5938 0066 1049     		ldr	r1, .L426+16
 5939 0068 06EB8000 		add	r0, r6, r0, lsl #2
 5940 006c FFF7FEFF 		bl	prvListTasksWithinSingleList
 5941              	.LVL442:
2517:ThirdParty/FreeRTOS/tasks.c ****                 }
 5942              		.loc 1 2517 28 view .LVU1669
 5943 0070 0444     		add	r4, r4, r0
 5944              	.LVL443:
2525:ThirdParty/FreeRTOS/tasks.c ****                 }
 5945              		.loc 1 2525 21 is_stmt 1 view .LVU1670
2525:ThirdParty/FreeRTOS/tasks.c ****                 }
 5946              		.loc 1 2525 81 is_stmt 0 view .LVU1671
 5947 0072 04EBC400 		add	r0, r4, r4, lsl #3
2525:ThirdParty/FreeRTOS/tasks.c ****                 }
 5948              		.loc 1 2525 31 view .LVU1672
 5949 0076 0322     		movs	r2, #3
 5950 0078 0C49     		ldr	r1, .L426+20
 5951 007a 06EB8000 		add	r0, r6, r0, lsl #2
 5952 007e FFF7FEFF 		bl	prvListTasksWithinSingleList
 5953              	.LVL444:
2525:ThirdParty/FreeRTOS/tasks.c ****                 }
 5954              		.loc 1 2525 28 view .LVU1673
 5955 0082 0444     		add	r4, r4, r0
 5956              	.LVL445:
2542:ThirdParty/FreeRTOS/tasks.c ****                     {
 5957              		.loc 1 2542 21 is_stmt 1 view .LVU1674
2542:ThirdParty/FreeRTOS/tasks.c ****                     {
 5958              		.loc 1 2542 23 is_stmt 0 view .LVU1675
 5959 0084 1FB1     		cbz	r7, .L422
2544:ThirdParty/FreeRTOS/tasks.c ****                     }
 5960              		.loc 1 2544 25 is_stmt 1 view .LVU1676
2544:ThirdParty/FreeRTOS/tasks.c ****                     }
 5961              		.loc 1 2544 42 is_stmt 0 view .LVU1677
 5962 0086 0023     		movs	r3, #0
 5963 0088 3B60     		str	r3, [r7]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 231


 5964 008a 00E0     		b	.L422
 5965              	.LVL446:
 5966              	.L424:
2493:ThirdParty/FreeRTOS/tasks.c **** 
 5967              		.loc 1 2493 21 view .LVU1678
 5968 008c 0024     		movs	r4, #0
 5969              	.LVL447:
 5970              	.L422:
2551:ThirdParty/FreeRTOS/tasks.c ****             }
 5971              		.loc 1 2551 41 is_stmt 1 view .LVU1679
2554:ThirdParty/FreeRTOS/tasks.c **** 
 5972              		.loc 1 2554 9 view .LVU1680
2554:ThirdParty/FreeRTOS/tasks.c **** 
 5973              		.loc 1 2554 18 is_stmt 0 view .LVU1681
 5974 008e FFF7FEFF 		bl	xTaskResumeAll
 5975              	.LVL448:
2556:ThirdParty/FreeRTOS/tasks.c ****     }
 5976              		.loc 1 2556 9 is_stmt 1 view .LVU1682
2557:ThirdParty/FreeRTOS/tasks.c **** 
 5977              		.loc 1 2557 5 is_stmt 0 view .LVU1683
 5978 0092 2046     		mov	r0, r4
 5979 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5980              	.LVL449:
 5981              	.L427:
2557:ThirdParty/FreeRTOS/tasks.c **** 
 5982              		.loc 1 2557 5 view .LVU1684
 5983 0096 00BF     		.align	2
 5984              	.L426:
 5985 0098 00000000 		.word	uxCurrentNumberOfTasks
 5986 009c 00000000 		.word	pxReadyTasksLists
 5987 00a0 00000000 		.word	pxDelayedTaskList
 5988 00a4 00000000 		.word	pxOverflowDelayedTaskList
 5989 00a8 00000000 		.word	xTasksWaitingTermination
 5990 00ac 00000000 		.word	xSuspendedTaskList
 5991              		.cfi_endproc
 5992              	.LFE27:
 5994              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 5995              		.align	1
 5996              		.global	xTaskGetCurrentTaskHandle
 5997              		.syntax unified
 5998              		.thumb
 5999              		.thumb_func
 6001              	xTaskGetCurrentTaskHandle:
 6002              	.LFB50:
4023:ThirdParty/FreeRTOS/tasks.c ****         TaskHandle_t xReturn;
 6003              		.loc 1 4023 5 is_stmt 1 view -0
 6004              		.cfi_startproc
 6005              		@ args = 0, pretend = 0, frame = 0
 6006              		@ frame_needed = 0, uses_anonymous_args = 0
 6007              		@ link register save eliminated.
4024:ThirdParty/FreeRTOS/tasks.c **** 
 6008              		.loc 1 4024 9 view .LVU1686
4029:ThirdParty/FreeRTOS/tasks.c **** 
 6009              		.loc 1 4029 9 view .LVU1687
4029:ThirdParty/FreeRTOS/tasks.c **** 
 6010              		.loc 1 4029 17 is_stmt 0 view .LVU1688
 6011 0000 014B     		ldr	r3, .L429
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 232


 6012 0002 1868     		ldr	r0, [r3]
 6013              	.LVL450:
4031:ThirdParty/FreeRTOS/tasks.c ****     }
 6014              		.loc 1 4031 9 is_stmt 1 view .LVU1689
4032:ThirdParty/FreeRTOS/tasks.c **** 
 6015              		.loc 1 4032 5 is_stmt 0 view .LVU1690
 6016 0004 7047     		bx	lr
 6017              	.L430:
 6018 0006 00BF     		.align	2
 6019              	.L429:
 6020 0008 00000000 		.word	pxCurrentTCB
 6021              		.cfi_endproc
 6022              	.LFE50:
 6024              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 6025              		.align	1
 6026              		.global	xTaskGetSchedulerState
 6027              		.syntax unified
 6028              		.thumb
 6029              		.thumb_func
 6031              	xTaskGetSchedulerState:
 6032              	.LFB51:
4040:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 6033              		.loc 1 4040 5 is_stmt 1 view -0
 6034              		.cfi_startproc
 6035              		@ args = 0, pretend = 0, frame = 0
 6036              		@ frame_needed = 0, uses_anonymous_args = 0
 6037              		@ link register save eliminated.
4041:ThirdParty/FreeRTOS/tasks.c **** 
 6038              		.loc 1 4041 9 view .LVU1692
4043:ThirdParty/FreeRTOS/tasks.c ****         {
 6039              		.loc 1 4043 9 view .LVU1693
4043:ThirdParty/FreeRTOS/tasks.c ****         {
 6040              		.loc 1 4043 31 is_stmt 0 view .LVU1694
 6041 0000 054B     		ldr	r3, .L436
 6042 0002 1B68     		ldr	r3, [r3]
4043:ThirdParty/FreeRTOS/tasks.c ****         {
 6043              		.loc 1 4043 11 view .LVU1695
 6044 0004 33B1     		cbz	r3, .L433
4049:ThirdParty/FreeRTOS/tasks.c ****             {
 6045              		.loc 1 4049 13 is_stmt 1 view .LVU1696
4049:ThirdParty/FreeRTOS/tasks.c ****             {
 6046              		.loc 1 4049 38 is_stmt 0 view .LVU1697
 6047 0006 054B     		ldr	r3, .L436+4
 6048 0008 1B68     		ldr	r3, [r3]
4049:ThirdParty/FreeRTOS/tasks.c ****             {
 6049              		.loc 1 4049 15 view .LVU1698
 6050 000a 0BB1     		cbz	r3, .L435
4055:ThirdParty/FreeRTOS/tasks.c ****             }
 6051              		.loc 1 4055 25 view .LVU1699
 6052 000c 0020     		movs	r0, #0
 6053              	.LVL451:
4059:ThirdParty/FreeRTOS/tasks.c ****     }
 6054              		.loc 1 4059 9 is_stmt 1 view .LVU1700
4060:ThirdParty/FreeRTOS/tasks.c **** 
 6055              		.loc 1 4060 5 is_stmt 0 view .LVU1701
 6056 000e 7047     		bx	lr
 6057              	.LVL452:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 233


 6058              	.L435:
4051:ThirdParty/FreeRTOS/tasks.c ****             }
 6059              		.loc 1 4051 25 view .LVU1702
 6060 0010 0220     		movs	r0, #2
 6061 0012 7047     		bx	lr
 6062              	.L433:
4045:ThirdParty/FreeRTOS/tasks.c ****         }
 6063              		.loc 1 4045 21 view .LVU1703
 6064 0014 0120     		movs	r0, #1
 6065 0016 7047     		bx	lr
 6066              	.L437:
 6067              		.align	2
 6068              	.L436:
 6069 0018 00000000 		.word	xSchedulerRunning
 6070 001c 00000000 		.word	uxSchedulerSuspended
 6071              		.cfi_endproc
 6072              	.LFE51:
 6074              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 6075              		.align	1
 6076              		.global	xTaskPriorityInherit
 6077              		.syntax unified
 6078              		.thumb
 6079              		.thumb_func
 6081              	xTaskPriorityInherit:
 6082              	.LVL453:
 6083              	.LFB52:
4068:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 6084              		.loc 1 4068 5 is_stmt 1 view -0
 6085              		.cfi_startproc
 6086              		@ args = 0, pretend = 0, frame = 0
 6087              		@ frame_needed = 0, uses_anonymous_args = 0
4069:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
 6088              		.loc 1 4069 9 view .LVU1705
4070:ThirdParty/FreeRTOS/tasks.c **** 
 6089              		.loc 1 4070 9 view .LVU1706
4075:ThirdParty/FreeRTOS/tasks.c ****         {
 6090              		.loc 1 4075 9 view .LVU1707
4075:ThirdParty/FreeRTOS/tasks.c ****         {
 6091              		.loc 1 4075 11 is_stmt 0 view .LVU1708
 6092 0000 0028     		cmp	r0, #0
 6093 0002 54D0     		beq	.L444
4068:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 6094              		.loc 1 4068 5 view .LVU1709
 6095 0004 70B5     		push	{r4, r5, r6, lr}
 6096              	.LCFI46:
 6097              		.cfi_def_cfa_offset 16
 6098              		.cfi_offset 4, -16
 6099              		.cfi_offset 5, -12
 6100              		.cfi_offset 6, -8
 6101              		.cfi_offset 14, -4
 6102 0006 0446     		mov	r4, r0
4080:ThirdParty/FreeRTOS/tasks.c ****             {
 6103              		.loc 1 4080 13 is_stmt 1 view .LVU1710
4080:ThirdParty/FreeRTOS/tasks.c ****             {
 6104              		.loc 1 4080 33 is_stmt 0 view .LVU1711
 6105 0008 C36A     		ldr	r3, [r0, #44]
4080:ThirdParty/FreeRTOS/tasks.c ****             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 234


 6106              		.loc 1 4080 60 view .LVU1712
 6107 000a 2B4A     		ldr	r2, .L451
 6108 000c 1268     		ldr	r2, [r2]
 6109 000e D26A     		ldr	r2, [r2, #44]
4080:ThirdParty/FreeRTOS/tasks.c ****             {
 6110              		.loc 1 4080 15 view .LVU1713
 6111 0010 9342     		cmp	r3, r2
 6112 0012 44D2     		bcs	.L440
4085:ThirdParty/FreeRTOS/tasks.c ****                 {
 6113              		.loc 1 4085 17 is_stmt 1 view .LVU1714
4085:ThirdParty/FreeRTOS/tasks.c ****                 {
 6114              		.loc 1 4085 23 is_stmt 0 view .LVU1715
 6115 0014 8269     		ldr	r2, [r0, #24]
4085:ThirdParty/FreeRTOS/tasks.c ****                 {
 6116              		.loc 1 4085 19 view .LVU1716
 6117 0016 002A     		cmp	r2, #0
 6118 0018 05DB     		blt	.L441
4087:ThirdParty/FreeRTOS/tasks.c ****                 }
 6119              		.loc 1 4087 21 is_stmt 1 view .LVU1717
 6120 001a 274A     		ldr	r2, .L451
 6121 001c 1268     		ldr	r2, [r2]
 6122 001e D26A     		ldr	r2, [r2, #44]
 6123 0020 C2F10502 		rsb	r2, r2, #5
 6124 0024 8261     		str	r2, [r0, #24]
 6125              	.L441:
4091:ThirdParty/FreeRTOS/tasks.c ****                 }
 6126              		.loc 1 4091 45 view .LVU1718
4096:ThirdParty/FreeRTOS/tasks.c ****                 {
 6127              		.loc 1 4096 17 view .LVU1719
4096:ThirdParty/FreeRTOS/tasks.c ****                 {
 6128              		.loc 1 4096 21 is_stmt 0 view .LVU1720
 6129 0026 6169     		ldr	r1, [r4, #20]
 6130 0028 03EB8303 		add	r3, r3, r3, lsl #2
 6131 002c 234A     		ldr	r2, .L451+4
 6132 002e 02EB8303 		add	r3, r2, r3, lsl #2
4096:ThirdParty/FreeRTOS/tasks.c ****                 {
 6133              		.loc 1 4096 19 view .LVU1721
 6134 0032 9942     		cmp	r1, r3
 6135 0034 05D0     		beq	.L450
4117:ThirdParty/FreeRTOS/tasks.c ****                 }
 6136              		.loc 1 4117 21 is_stmt 1 view .LVU1722
4117:ThirdParty/FreeRTOS/tasks.c ****                 }
 6137              		.loc 1 4117 64 is_stmt 0 view .LVU1723
 6138 0036 204B     		ldr	r3, .L451
 6139 0038 1B68     		ldr	r3, [r3]
 6140 003a DB6A     		ldr	r3, [r3, #44]
4117:ThirdParty/FreeRTOS/tasks.c ****                 }
 6141              		.loc 1 4117 50 view .LVU1724
 6142 003c E362     		str	r3, [r4, #44]
4123:ThirdParty/FreeRTOS/tasks.c ****             }
 6143              		.loc 1 4123 25 view .LVU1725
 6144 003e 0120     		movs	r0, #1
 6145              	.LVL454:
 6146              	.L438:
4150:ThirdParty/FreeRTOS/tasks.c **** 
 6147              		.loc 1 4150 5 view .LVU1726
 6148 0040 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 235


 6149              	.LVL455:
 6150              	.L450:
4098:ThirdParty/FreeRTOS/tasks.c ****                     {
 6151              		.loc 1 4098 21 is_stmt 1 view .LVU1727
4098:ThirdParty/FreeRTOS/tasks.c ****                     {
 6152              		.loc 1 4098 25 is_stmt 0 view .LVU1728
 6153 0042 251D     		adds	r5, r4, #4
 6154 0044 2846     		mov	r0, r5
 6155              	.LVL456:
4098:ThirdParty/FreeRTOS/tasks.c ****                     {
 6156              		.loc 1 4098 25 view .LVU1729
 6157 0046 FFF7FEFF 		bl	uxListRemove
 6158              	.LVL457:
4098:ThirdParty/FreeRTOS/tasks.c ****                     {
 6159              		.loc 1 4098 23 view .LVU1730
 6160 004a 38B9     		cbnz	r0, .L443
4103:ThirdParty/FreeRTOS/tasks.c ****                     }
 6161              		.loc 1 4103 25 is_stmt 1 view .LVU1731
 6162 004c E36A     		ldr	r3, [r4, #44]
 6163 004e 0122     		movs	r2, #1
 6164 0050 9A40     		lsls	r2, r2, r3
 6165 0052 1B49     		ldr	r1, .L451+8
 6166 0054 0B68     		ldr	r3, [r1]
 6167 0056 23EA0203 		bic	r3, r3, r2
 6168 005a 0B60     		str	r3, [r1]
 6169              	.L443:
4107:ThirdParty/FreeRTOS/tasks.c ****                     }
 6170              		.loc 1 4107 49 view .LVU1732
4111:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 6171              		.loc 1 4111 21 view .LVU1733
4111:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 6172              		.loc 1 4111 64 is_stmt 0 view .LVU1734
 6173 005c 164B     		ldr	r3, .L451
 6174 005e 1B68     		ldr	r3, [r3]
 6175 0060 DB6A     		ldr	r3, [r3, #44]
4111:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxMutexHolderTCB );
 6176              		.loc 1 4111 50 view .LVU1735
 6177 0062 E362     		str	r3, [r4, #44]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6178              		.loc 1 4112 21 is_stmt 1 view .LVU1736
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6179              		.loc 1 4112 21 view .LVU1737
 6180 0064 0120     		movs	r0, #1
 6181 0066 00FA03F2 		lsl	r2, r0, r3
 6182 006a 1549     		ldr	r1, .L451+8
 6183 006c 0E68     		ldr	r6, [r1]
 6184 006e 3243     		orrs	r2, r2, r6
 6185 0070 0A60     		str	r2, [r1]
 6186              	.LBB281:
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6187              		.loc 1 4112 21 view .LVU1738
 6188 0072 124A     		ldr	r2, .L451+4
 6189 0074 03EB8303 		add	r3, r3, r3, lsl #2
 6190 0078 02EB8303 		add	r3, r2, r3, lsl #2
 6191 007c 5B68     		ldr	r3, [r3, #4]
 6192              	.LVL458:
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 236


 6193              		.loc 1 4112 21 view .LVU1739
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6194              		.loc 1 4112 21 view .LVU1740
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6195              		.loc 1 4112 21 view .LVU1741
 6196 007e A360     		str	r3, [r4, #8]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6197              		.loc 1 4112 21 view .LVU1742
 6198 0080 9968     		ldr	r1, [r3, #8]
 6199 0082 E160     		str	r1, [r4, #12]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6200              		.loc 1 4112 21 view .LVU1743
 6201 0084 4D60     		str	r5, [r1, #4]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6202              		.loc 1 4112 21 view .LVU1744
 6203 0086 9D60     		str	r5, [r3, #8]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6204              		.loc 1 4112 21 view .LVU1745
 6205 0088 E36A     		ldr	r3, [r4, #44]
 6206              	.LVL459:
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6207              		.loc 1 4112 21 is_stmt 0 view .LVU1746
 6208 008a 03EB8301 		add	r1, r3, r3, lsl #2
 6209 008e 8D00     		lsls	r5, r1, #2
 6210 0090 02EB8101 		add	r1, r2, r1, lsl #2
 6211 0094 6161     		str	r1, [r4, #20]
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6212              		.loc 1 4112 21 is_stmt 1 view .LVU1747
 6213 0096 5159     		ldr	r1, [r2, r5]
 6214 0098 0144     		add	r1, r1, r0
 6215 009a 5151     		str	r1, [r2, r5]
 6216              	.LBE281:
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6217              		.loc 1 4112 21 view .LVU1748
4112:ThirdParty/FreeRTOS/tasks.c ****                 }
 6218              		.loc 1 4112 62 view .LVU1749
 6219 009c D0E7     		b	.L438
 6220              	.LVL460:
 6221              	.L440:
4127:ThirdParty/FreeRTOS/tasks.c ****                 {
 6222              		.loc 1 4127 17 view .LVU1750
4127:ThirdParty/FreeRTOS/tasks.c ****                 {
 6223              		.loc 1 4127 37 is_stmt 0 view .LVU1751
 6224 009e 826C     		ldr	r2, [r0, #72]
4127:ThirdParty/FreeRTOS/tasks.c ****                 {
 6225              		.loc 1 4127 68 view .LVU1752
 6226 00a0 054B     		ldr	r3, .L451
 6227 00a2 1B68     		ldr	r3, [r3]
 6228 00a4 DB6A     		ldr	r3, [r3, #44]
4127:ThirdParty/FreeRTOS/tasks.c ****                 {
 6229              		.loc 1 4127 19 view .LVU1753
 6230 00a6 9A42     		cmp	r2, r3
 6231 00a8 03D3     		bcc	.L445
4070:ThirdParty/FreeRTOS/tasks.c **** 
 6232              		.loc 1 4070 20 view .LVU1754
 6233 00aa 0020     		movs	r0, #0
 6234              	.LVL461:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 237


4070:ThirdParty/FreeRTOS/tasks.c **** 
 6235              		.loc 1 4070 20 view .LVU1755
 6236 00ac C8E7     		b	.L438
 6237              	.LVL462:
 6238              	.L444:
 6239              	.LCFI47:
 6240              		.cfi_def_cfa_offset 0
 6241              		.cfi_restore 4
 6242              		.cfi_restore 5
 6243              		.cfi_restore 6
 6244              		.cfi_restore 14
4070:ThirdParty/FreeRTOS/tasks.c **** 
 6245              		.loc 1 4070 20 view .LVU1756
 6246 00ae 0020     		movs	r0, #0
 6247              	.LVL463:
4150:ThirdParty/FreeRTOS/tasks.c **** 
 6248              		.loc 1 4150 5 view .LVU1757
 6249 00b0 7047     		bx	lr
 6250              	.LVL464:
 6251              	.L445:
 6252              	.LCFI48:
 6253              		.cfi_def_cfa_offset 16
 6254              		.cfi_offset 4, -16
 6255              		.cfi_offset 5, -12
 6256              		.cfi_offset 6, -8
 6257              		.cfi_offset 14, -4
4136:ThirdParty/FreeRTOS/tasks.c ****                 }
 6258              		.loc 1 4136 29 view .LVU1758
 6259 00b2 0120     		movs	r0, #1
 6260              	.LVL465:
4146:ThirdParty/FreeRTOS/tasks.c ****         }
 6261              		.loc 1 4146 37 is_stmt 1 view .LVU1759
4149:ThirdParty/FreeRTOS/tasks.c ****     }
 6262              		.loc 1 4149 9 view .LVU1760
4149:ThirdParty/FreeRTOS/tasks.c ****     }
 6263              		.loc 1 4149 16 is_stmt 0 view .LVU1761
 6264 00b4 C4E7     		b	.L438
 6265              	.L452:
 6266 00b6 00BF     		.align	2
 6267              	.L451:
 6268 00b8 00000000 		.word	pxCurrentTCB
 6269 00bc 00000000 		.word	pxReadyTasksLists
 6270 00c0 00000000 		.word	uxTopReadyPriority
 6271              		.cfi_endproc
 6272              	.LFE52:
 6274              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 6275              		.align	1
 6276              		.global	xTaskPriorityDisinherit
 6277              		.syntax unified
 6278              		.thumb
 6279              		.thumb_func
 6281              	xTaskPriorityDisinherit:
 6282              	.LVL466:
 6283              	.LFB53:
4158:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 6284              		.loc 1 4158 5 is_stmt 1 view -0
 6285              		.cfi_startproc
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 238


 6286              		@ args = 0, pretend = 0, frame = 0
 6287              		@ frame_needed = 0, uses_anonymous_args = 0
4159:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdFALSE;
 6288              		.loc 1 4159 9 view .LVU1763
4160:ThirdParty/FreeRTOS/tasks.c **** 
 6289              		.loc 1 4160 9 view .LVU1764
4162:ThirdParty/FreeRTOS/tasks.c ****         {
 6290              		.loc 1 4162 9 view .LVU1765
4162:ThirdParty/FreeRTOS/tasks.c ****         {
 6291              		.loc 1 4162 11 is_stmt 0 view .LVU1766
 6292 0000 0028     		cmp	r0, #0
 6293 0002 51D0     		beq	.L460
4158:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 6294              		.loc 1 4158 5 view .LVU1767
 6295 0004 70B5     		push	{r4, r5, r6, lr}
 6296              	.LCFI49:
 6297              		.cfi_def_cfa_offset 16
 6298              		.cfi_offset 4, -16
 6299              		.cfi_offset 5, -12
 6300              		.cfi_offset 6, -8
 6301              		.cfi_offset 14, -4
 6302 0006 0446     		mov	r4, r0
4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 6303              		.loc 1 4168 13 is_stmt 1 view .LVU1768
 6304 0008 294B     		ldr	r3, .L468
 6305 000a 1B68     		ldr	r3, [r3]
 6306 000c 8342     		cmp	r3, r0
 6307 000e 08D0     		beq	.L455
4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 6308              		.loc 1 4168 13 view .LVU1769
 6309              	.LBB282:
 6310              	.LBI282:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6311              		.loc 2 194 34 view .LVU1770
 6312              	.LBB283:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6313              		.loc 2 196 9 view .LVU1771
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6314              		.loc 2 198 9 view .LVU1772
 6315              		.syntax unified
 6316              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6317 0010 4FF05003 			mov r3, #80												
 6318 0014 83F31188 		msr basepri, r3											
 6319 0018 BFF36F8F 		isb														
 6320 001c BFF34F8F 		dsb														
 6321              	
 6322              	@ 0 "" 2
 6323              	.LVL467:
 6324              		.thumb
 6325              		.syntax unified
 6326              	.L456:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6327              		.loc 2 198 9 is_stmt 0 view .LVU1773
 6328              	.LBE283:
 6329              	.LBE282:
4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 6330              		.loc 1 4168 13 is_stmt 1 discriminator 1 view .LVU1774
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 239


4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 6331              		.loc 1 4168 13 discriminator 1 view .LVU1775
 6332 0020 FEE7     		b	.L456
 6333              	.L455:
4168:ThirdParty/FreeRTOS/tasks.c ****             configASSERT( pxTCB->uxMutexesHeld );
 6334              		.loc 1 4168 50 discriminator 2 view .LVU1776
4169:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 6335              		.loc 1 4169 13 discriminator 2 view .LVU1777
 6336 0022 C36C     		ldr	r3, [r0, #76]
 6337 0024 43B9     		cbnz	r3, .L457
4169:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 6338              		.loc 1 4169 13 view .LVU1778
 6339              	.LBB284:
 6340              	.LBI284:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6341              		.loc 2 194 34 view .LVU1779
 6342              	.LBB285:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6343              		.loc 2 196 9 view .LVU1780
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6344              		.loc 2 198 9 view .LVU1781
 6345              		.syntax unified
 6346              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6347 0026 4FF05003 			mov r3, #80												
 6348 002a 83F31188 		msr basepri, r3											
 6349 002e BFF36F8F 		isb														
 6350 0032 BFF34F8F 		dsb														
 6351              	
 6352              	@ 0 "" 2
 6353              	.LVL468:
 6354              		.thumb
 6355              		.syntax unified
 6356              	.L458:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6357              		.loc 2 198 9 is_stmt 0 view .LVU1782
 6358              	.LBE285:
 6359              	.LBE284:
4169:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 6360              		.loc 1 4169 13 is_stmt 1 discriminator 2 view .LVU1783
4169:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 6361              		.loc 1 4169 13 discriminator 2 view .LVU1784
 6362 0036 FEE7     		b	.L458
 6363              	.L457:
4169:ThirdParty/FreeRTOS/tasks.c ****             ( pxTCB->uxMutexesHeld )--;
 6364              		.loc 1 4169 49 discriminator 2 view .LVU1785
4170:ThirdParty/FreeRTOS/tasks.c **** 
 6365              		.loc 1 4170 13 discriminator 2 view .LVU1786
4170:ThirdParty/FreeRTOS/tasks.c **** 
 6366              		.loc 1 4170 37 is_stmt 0 discriminator 2 view .LVU1787
 6367 0038 013B     		subs	r3, r3, #1
 6368 003a C364     		str	r3, [r0, #76]
4174:ThirdParty/FreeRTOS/tasks.c ****             {
 6369              		.loc 1 4174 13 is_stmt 1 discriminator 2 view .LVU1788
4174:ThirdParty/FreeRTOS/tasks.c ****             {
 6370              		.loc 1 4174 22 is_stmt 0 discriminator 2 view .LVU1789
 6371 003c C16A     		ldr	r1, [r0, #44]
4174:ThirdParty/FreeRTOS/tasks.c ****             {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 240


 6372              		.loc 1 4174 43 discriminator 2 view .LVU1790
 6373 003e 826C     		ldr	r2, [r0, #72]
4174:ThirdParty/FreeRTOS/tasks.c ****             {
 6374              		.loc 1 4174 15 discriminator 2 view .LVU1791
 6375 0040 9142     		cmp	r1, r2
 6376 0042 33D0     		beq	.L461
4177:ThirdParty/FreeRTOS/tasks.c ****                 {
 6377              		.loc 1 4177 17 is_stmt 1 view .LVU1792
4177:ThirdParty/FreeRTOS/tasks.c ****                 {
 6378              		.loc 1 4177 19 is_stmt 0 view .LVU1793
 6379 0044 0BB1     		cbz	r3, .L467
4160:ThirdParty/FreeRTOS/tasks.c **** 
 6380              		.loc 1 4160 20 view .LVU1794
 6381 0046 0020     		movs	r0, #0
 6382              	.LVL469:
4226:ThirdParty/FreeRTOS/tasks.c ****         }
 6383              		.loc 1 4226 37 is_stmt 1 view .LVU1795
4229:ThirdParty/FreeRTOS/tasks.c ****     }
 6384              		.loc 1 4229 9 view .LVU1796
 6385              	.L453:
4230:ThirdParty/FreeRTOS/tasks.c **** 
 6386              		.loc 1 4230 5 is_stmt 0 view .LVU1797
 6387 0048 70BD     		pop	{r4, r5, r6, pc}
 6388              	.LVL470:
 6389              	.L467:
4184:ThirdParty/FreeRTOS/tasks.c ****                     {
 6390              		.loc 1 4184 21 is_stmt 1 view .LVU1798
4184:ThirdParty/FreeRTOS/tasks.c ****                     {
 6391              		.loc 1 4184 25 is_stmt 0 view .LVU1799
 6392 004a 051D     		adds	r5, r0, #4
 6393 004c 2846     		mov	r0, r5
 6394              	.LVL471:
4184:ThirdParty/FreeRTOS/tasks.c ****                     {
 6395              		.loc 1 4184 25 view .LVU1800
 6396 004e FFF7FEFF 		bl	uxListRemove
 6397              	.LVL472:
4184:ThirdParty/FreeRTOS/tasks.c ****                     {
 6398              		.loc 1 4184 23 view .LVU1801
 6399 0052 38B9     		cbnz	r0, .L459
4186:ThirdParty/FreeRTOS/tasks.c ****                     }
 6400              		.loc 1 4186 25 is_stmt 1 view .LVU1802
 6401 0054 E36A     		ldr	r3, [r4, #44]
 6402 0056 0122     		movs	r2, #1
 6403 0058 9A40     		lsls	r2, r2, r3
 6404 005a 1649     		ldr	r1, .L468+4
 6405 005c 0B68     		ldr	r3, [r1]
 6406 005e 23EA0203 		bic	r3, r3, r2
 6407 0062 0B60     		str	r3, [r1]
 6408              	.L459:
4190:ThirdParty/FreeRTOS/tasks.c ****                     }
 6409              		.loc 1 4190 49 view .LVU1803
4195:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = pxTCB->uxBasePriority;
 6410              		.loc 1 4195 82 view .LVU1804
4196:ThirdParty/FreeRTOS/tasks.c **** 
 6411              		.loc 1 4196 21 view .LVU1805
4196:ThirdParty/FreeRTOS/tasks.c **** 
 6412              		.loc 1 4196 46 is_stmt 0 view .LVU1806
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 241


 6413 0064 A36C     		ldr	r3, [r4, #72]
4196:ThirdParty/FreeRTOS/tasks.c **** 
 6414              		.loc 1 4196 39 view .LVU1807
 6415 0066 E362     		str	r3, [r4, #44]
4201:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 6416              		.loc 1 4201 21 is_stmt 1 view .LVU1808
 6417 0068 C3F10502 		rsb	r2, r3, #5
 6418 006c A261     		str	r2, [r4, #24]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6419              		.loc 1 4202 21 view .LVU1809
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6420              		.loc 1 4202 21 view .LVU1810
 6421 006e 0120     		movs	r0, #1
 6422 0070 00FA03F2 		lsl	r2, r0, r3
 6423 0074 0F49     		ldr	r1, .L468+4
 6424 0076 0E68     		ldr	r6, [r1]
 6425 0078 3243     		orrs	r2, r2, r6
 6426 007a 0A60     		str	r2, [r1]
 6427              	.LBB286:
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6428              		.loc 1 4202 21 view .LVU1811
 6429 007c 0E4A     		ldr	r2, .L468+8
 6430 007e 03EB8303 		add	r3, r3, r3, lsl #2
 6431 0082 02EB8303 		add	r3, r2, r3, lsl #2
 6432 0086 5B68     		ldr	r3, [r3, #4]
 6433              	.LVL473:
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6434              		.loc 1 4202 21 view .LVU1812
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6435              		.loc 1 4202 21 view .LVU1813
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6436              		.loc 1 4202 21 view .LVU1814
 6437 0088 A360     		str	r3, [r4, #8]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6438              		.loc 1 4202 21 view .LVU1815
 6439 008a 9968     		ldr	r1, [r3, #8]
 6440 008c E160     		str	r1, [r4, #12]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6441              		.loc 1 4202 21 view .LVU1816
 6442 008e 4D60     		str	r5, [r1, #4]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6443              		.loc 1 4202 21 view .LVU1817
 6444 0090 9D60     		str	r5, [r3, #8]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6445              		.loc 1 4202 21 view .LVU1818
 6446 0092 E36A     		ldr	r3, [r4, #44]
 6447              	.LVL474:
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6448              		.loc 1 4202 21 is_stmt 0 view .LVU1819
 6449 0094 03EB8301 		add	r1, r3, r3, lsl #2
 6450 0098 8D00     		lsls	r5, r1, #2
 6451 009a 02EB8101 		add	r1, r2, r1, lsl #2
 6452 009e 6161     		str	r1, [r4, #20]
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6453              		.loc 1 4202 21 is_stmt 1 view .LVU1820
 6454 00a0 5159     		ldr	r1, [r2, r5]
 6455 00a2 0144     		add	r1, r1, r0
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 242


 6456 00a4 5151     		str	r1, [r2, r5]
 6457              	.LBE286:
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6458              		.loc 1 4202 21 view .LVU1821
4202:ThirdParty/FreeRTOS/tasks.c **** 
 6459              		.loc 1 4202 51 view .LVU1822
4212:ThirdParty/FreeRTOS/tasks.c ****                 }
 6460              		.loc 1 4212 21 view .LVU1823
 6461              	.LVL475:
4212:ThirdParty/FreeRTOS/tasks.c ****                 }
 6462              		.loc 1 4212 21 is_stmt 0 view .LVU1824
 6463 00a6 CFE7     		b	.L453
 6464              	.LVL476:
 6465              	.L460:
 6466              	.LCFI50:
 6467              		.cfi_def_cfa_offset 0
 6468              		.cfi_restore 4
 6469              		.cfi_restore 5
 6470              		.cfi_restore 6
 6471              		.cfi_restore 14
4160:ThirdParty/FreeRTOS/tasks.c **** 
 6472              		.loc 1 4160 20 view .LVU1825
 6473 00a8 0020     		movs	r0, #0
 6474              	.LVL477:
4230:ThirdParty/FreeRTOS/tasks.c **** 
 6475              		.loc 1 4230 5 view .LVU1826
 6476 00aa 7047     		bx	lr
 6477              	.LVL478:
 6478              	.L461:
 6479              	.LCFI51:
 6480              		.cfi_def_cfa_offset 16
 6481              		.cfi_offset 4, -16
 6482              		.cfi_offset 5, -12
 6483              		.cfi_offset 6, -8
 6484              		.cfi_offset 14, -4
4160:ThirdParty/FreeRTOS/tasks.c **** 
 6485              		.loc 1 4160 20 view .LVU1827
 6486 00ac 0020     		movs	r0, #0
 6487              	.LVL479:
4160:ThirdParty/FreeRTOS/tasks.c **** 
 6488              		.loc 1 4160 20 view .LVU1828
 6489 00ae CBE7     		b	.L453
 6490              	.L469:
 6491              		.align	2
 6492              	.L468:
 6493 00b0 00000000 		.word	pxCurrentTCB
 6494 00b4 00000000 		.word	uxTopReadyPriority
 6495 00b8 00000000 		.word	pxReadyTasksLists
 6496              		.cfi_endproc
 6497              	.LFE53:
 6499              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 6500              		.align	1
 6501              		.global	vTaskPriorityDisinheritAfterTimeout
 6502              		.syntax unified
 6503              		.thumb
 6504              		.thumb_func
 6506              	vTaskPriorityDisinheritAfterTimeout:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 243


 6507              	.LVL480:
 6508              	.LFB54:
4239:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 6509              		.loc 1 4239 5 is_stmt 1 view -0
 6510              		.cfi_startproc
 6511              		@ args = 0, pretend = 0, frame = 0
 6512              		@ frame_needed = 0, uses_anonymous_args = 0
4240:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 6513              		.loc 1 4240 9 view .LVU1830
4241:ThirdParty/FreeRTOS/tasks.c ****         const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 6514              		.loc 1 4241 9 view .LVU1831
4242:ThirdParty/FreeRTOS/tasks.c **** 
 6515              		.loc 1 4242 9 view .LVU1832
4244:ThirdParty/FreeRTOS/tasks.c ****         {
 6516              		.loc 1 4244 9 view .LVU1833
4244:ThirdParty/FreeRTOS/tasks.c ****         {
 6517              		.loc 1 4244 11 is_stmt 0 view .LVU1834
 6518 0000 0028     		cmp	r0, #0
 6519 0002 5CD0     		beq	.L480
4239:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * const pxTCB = pxMutexHolder;
 6520              		.loc 1 4239 5 view .LVU1835
 6521 0004 38B5     		push	{r3, r4, r5, lr}
 6522              	.LCFI52:
 6523              		.cfi_def_cfa_offset 16
 6524              		.cfi_offset 3, -16
 6525              		.cfi_offset 4, -12
 6526              		.cfi_offset 5, -8
 6527              		.cfi_offset 14, -4
 6528 0006 0446     		mov	r4, r0
4248:ThirdParty/FreeRTOS/tasks.c **** 
 6529              		.loc 1 4248 13 is_stmt 1 view .LVU1836
 6530 0008 C36C     		ldr	r3, [r0, #76]
 6531 000a 43B9     		cbnz	r3, .L472
4248:ThirdParty/FreeRTOS/tasks.c **** 
 6532              		.loc 1 4248 13 view .LVU1837
 6533              	.LBB287:
 6534              	.LBI287:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6535              		.loc 2 194 34 view .LVU1838
 6536              	.LBB288:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6537              		.loc 2 196 9 view .LVU1839
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6538              		.loc 2 198 9 view .LVU1840
 6539              		.syntax unified
 6540              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6541 000c 4FF05003 			mov r3, #80												
 6542 0010 83F31188 		msr basepri, r3											
 6543 0014 BFF36F8F 		isb														
 6544 0018 BFF34F8F 		dsb														
 6545              	
 6546              	@ 0 "" 2
 6547              	.LVL481:
 6548              		.thumb
 6549              		.syntax unified
 6550              	.L473:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 244


 6551              		.loc 2 198 9 is_stmt 0 view .LVU1841
 6552              	.LBE288:
 6553              	.LBE287:
4248:ThirdParty/FreeRTOS/tasks.c **** 
 6554              		.loc 1 4248 13 is_stmt 1 discriminator 1 view .LVU1842
4248:ThirdParty/FreeRTOS/tasks.c **** 
 6555              		.loc 1 4248 13 discriminator 1 view .LVU1843
 6556 001c FEE7     		b	.L473
 6557              	.L472:
4248:ThirdParty/FreeRTOS/tasks.c **** 
 6558              		.loc 1 4248 49 discriminator 2 view .LVU1844
4254:ThirdParty/FreeRTOS/tasks.c ****             {
 6559              		.loc 1 4254 13 discriminator 2 view .LVU1845
4254:ThirdParty/FreeRTOS/tasks.c ****             {
 6560              		.loc 1 4254 22 is_stmt 0 discriminator 2 view .LVU1846
 6561 001e 826C     		ldr	r2, [r0, #72]
4254:ThirdParty/FreeRTOS/tasks.c ****             {
 6562              		.loc 1 4254 15 discriminator 2 view .LVU1847
 6563 0020 8A42     		cmp	r2, r1
 6564 0022 00D2     		bcs	.L474
4256:ThirdParty/FreeRTOS/tasks.c ****             }
 6565              		.loc 1 4256 33 view .LVU1848
 6566 0024 0A46     		mov	r2, r1
 6567              	.L474:
 6568              	.LVL482:
4264:ThirdParty/FreeRTOS/tasks.c ****             {
 6569              		.loc 1 4264 13 is_stmt 1 view .LVU1849
4264:ThirdParty/FreeRTOS/tasks.c ****             {
 6570              		.loc 1 4264 22 is_stmt 0 view .LVU1850
 6571 0026 E16A     		ldr	r1, [r4, #44]
 6572              	.LVL483:
4264:ThirdParty/FreeRTOS/tasks.c ****             {
 6573              		.loc 1 4264 15 view .LVU1851
 6574 0028 9142     		cmp	r1, r2
 6575 002a 01D0     		beq	.L470
4270:ThirdParty/FreeRTOS/tasks.c ****                 {
 6576              		.loc 1 4270 17 is_stmt 1 view .LVU1852
4270:ThirdParty/FreeRTOS/tasks.c ****                 {
 6577              		.loc 1 4270 19 is_stmt 0 view .LVU1853
 6578 002c 012B     		cmp	r3, #1
 6579 002e 00D0     		beq	.L483
 6580              	.LVL484:
 6581              	.L470:
4336:ThirdParty/FreeRTOS/tasks.c **** 
 6582              		.loc 1 4336 5 view .LVU1854
 6583 0030 38BD     		pop	{r3, r4, r5, pc}
 6584              	.LVL485:
 6585              	.L483:
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6586              		.loc 1 4275 21 is_stmt 1 view .LVU1855
 6587 0032 234B     		ldr	r3, .L485
 6588 0034 1B68     		ldr	r3, [r3]
 6589 0036 A342     		cmp	r3, r4
 6590 0038 38D0     		beq	.L484
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6591              		.loc 1 4275 58 discriminator 2 view .LVU1856
4280:ThirdParty/FreeRTOS/tasks.c ****                     uxPriorityUsedOnEntry = pxTCB->uxPriority;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 245


 6592              		.loc 1 4280 76 discriminator 2 view .LVU1857
4281:ThirdParty/FreeRTOS/tasks.c ****                     pxTCB->uxPriority = uxPriorityToUse;
 6593              		.loc 1 4281 21 discriminator 2 view .LVU1858
 6594              	.LVL486:
4282:ThirdParty/FreeRTOS/tasks.c **** 
 6595              		.loc 1 4282 21 discriminator 2 view .LVU1859
4282:ThirdParty/FreeRTOS/tasks.c **** 
 6596              		.loc 1 4282 39 is_stmt 0 discriminator 2 view .LVU1860
 6597 003a E262     		str	r2, [r4, #44]
4286:ThirdParty/FreeRTOS/tasks.c ****                     {
 6598              		.loc 1 4286 21 is_stmt 1 discriminator 2 view .LVU1861
4286:ThirdParty/FreeRTOS/tasks.c ****                     {
 6599              		.loc 1 4286 27 is_stmt 0 discriminator 2 view .LVU1862
 6600 003c A369     		ldr	r3, [r4, #24]
4286:ThirdParty/FreeRTOS/tasks.c ****                     {
 6601              		.loc 1 4286 23 discriminator 2 view .LVU1863
 6602 003e 002B     		cmp	r3, #0
 6603 0040 02DB     		blt	.L477
4288:ThirdParty/FreeRTOS/tasks.c ****                     }
 6604              		.loc 1 4288 25 is_stmt 1 view .LVU1864
 6605 0042 C2F10502 		rsb	r2, r2, #5
 6606              	.LVL487:
4288:ThirdParty/FreeRTOS/tasks.c ****                     }
 6607              		.loc 1 4288 25 is_stmt 0 view .LVU1865
 6608 0046 A261     		str	r2, [r4, #24]
 6609              	.L477:
4292:ThirdParty/FreeRTOS/tasks.c ****                     }
 6610              		.loc 1 4292 49 is_stmt 1 view .LVU1866
4301:ThirdParty/FreeRTOS/tasks.c ****                     {
 6611              		.loc 1 4301 21 view .LVU1867
4301:ThirdParty/FreeRTOS/tasks.c ****                     {
 6612              		.loc 1 4301 25 is_stmt 0 view .LVU1868
 6613 0048 6269     		ldr	r2, [r4, #20]
 6614 004a 01EB8101 		add	r1, r1, r1, lsl #2
 6615              	.LVL488:
4301:ThirdParty/FreeRTOS/tasks.c ****                     {
 6616              		.loc 1 4301 25 view .LVU1869
 6617 004e 1D4B     		ldr	r3, .L485+4
 6618 0050 03EB8103 		add	r3, r3, r1, lsl #2
4301:ThirdParty/FreeRTOS/tasks.c ****                     {
 6619              		.loc 1 4301 23 view .LVU1870
 6620 0054 9A42     		cmp	r2, r3
 6621 0056 EBD1     		bne	.L470
4303:ThirdParty/FreeRTOS/tasks.c ****                         {
 6622              		.loc 1 4303 25 is_stmt 1 view .LVU1871
4303:ThirdParty/FreeRTOS/tasks.c ****                         {
 6623              		.loc 1 4303 29 is_stmt 0 view .LVU1872
 6624 0058 251D     		adds	r5, r4, #4
 6625 005a 2846     		mov	r0, r5
 6626              	.LVL489:
4303:ThirdParty/FreeRTOS/tasks.c ****                         {
 6627              		.loc 1 4303 29 view .LVU1873
 6628 005c FFF7FEFF 		bl	uxListRemove
 6629              	.LVL490:
4303:ThirdParty/FreeRTOS/tasks.c ****                         {
 6630              		.loc 1 4303 27 view .LVU1874
 6631 0060 38B9     		cbnz	r0, .L478
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 246


4308:ThirdParty/FreeRTOS/tasks.c ****                         }
 6632              		.loc 1 4308 29 is_stmt 1 view .LVU1875
 6633 0062 E36A     		ldr	r3, [r4, #44]
 6634 0064 0122     		movs	r2, #1
 6635 0066 9A40     		lsls	r2, r2, r3
 6636 0068 1749     		ldr	r1, .L485+8
 6637 006a 0B68     		ldr	r3, [r1]
 6638 006c 23EA0203 		bic	r3, r3, r2
 6639 0070 0B60     		str	r3, [r1]
 6640              	.L478:
4312:ThirdParty/FreeRTOS/tasks.c ****                         }
 6641              		.loc 1 4312 53 view .LVU1876
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6642              		.loc 1 4315 25 view .LVU1877
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6643              		.loc 1 4315 25 view .LVU1878
 6644 0072 E36A     		ldr	r3, [r4, #44]
 6645 0074 0122     		movs	r2, #1
 6646 0076 9A40     		lsls	r2, r2, r3
 6647 0078 1349     		ldr	r1, .L485+8
 6648 007a 0868     		ldr	r0, [r1]
 6649 007c 0243     		orrs	r2, r2, r0
 6650 007e 0A60     		str	r2, [r1]
 6651              	.LBB289:
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6652              		.loc 1 4315 25 view .LVU1879
 6653 0080 104A     		ldr	r2, .L485+4
 6654 0082 03EB8303 		add	r3, r3, r3, lsl #2
 6655 0086 02EB8303 		add	r3, r2, r3, lsl #2
 6656 008a 5B68     		ldr	r3, [r3, #4]
 6657              	.LVL491:
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6658              		.loc 1 4315 25 view .LVU1880
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6659              		.loc 1 4315 25 view .LVU1881
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6660              		.loc 1 4315 25 view .LVU1882
 6661 008c A360     		str	r3, [r4, #8]
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6662              		.loc 1 4315 25 view .LVU1883
 6663 008e 9968     		ldr	r1, [r3, #8]
 6664 0090 E160     		str	r1, [r4, #12]
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6665              		.loc 1 4315 25 view .LVU1884
 6666 0092 4D60     		str	r5, [r1, #4]
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6667              		.loc 1 4315 25 view .LVU1885
 6668 0094 9D60     		str	r5, [r3, #8]
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6669              		.loc 1 4315 25 view .LVU1886
 6670 0096 E36A     		ldr	r3, [r4, #44]
 6671              	.LVL492:
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6672              		.loc 1 4315 25 is_stmt 0 view .LVU1887
 6673 0098 03EB8301 		add	r1, r3, r3, lsl #2
 6674 009c 8800     		lsls	r0, r1, #2
 6675 009e 02EB8101 		add	r1, r2, r1, lsl #2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 247


 6676 00a2 6161     		str	r1, [r4, #20]
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6677              		.loc 1 4315 25 is_stmt 1 view .LVU1888
 6678 00a4 1158     		ldr	r1, [r2, r0]
 6679 00a6 0131     		adds	r1, r1, #1
 6680 00a8 1150     		str	r1, [r2, r0]
 6681              	.LBE289:
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6682              		.loc 1 4315 25 view .LVU1889
4315:ThirdParty/FreeRTOS/tasks.c ****                     }
 6683              		.loc 1 4315 55 view .LVU1890
4334:ThirdParty/FreeRTOS/tasks.c ****         }
 6684              		.loc 1 4334 37 view .LVU1891
4336:ThirdParty/FreeRTOS/tasks.c **** 
 6685              		.loc 1 4336 5 is_stmt 0 view .LVU1892
 6686 00aa C1E7     		b	.L470
 6687              	.LVL493:
 6688              	.L484:
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6689              		.loc 1 4275 21 is_stmt 1 view .LVU1893
 6690              	.LBB290:
 6691              	.LBI290:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6692              		.loc 2 194 34 view .LVU1894
 6693              	.LBB291:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6694              		.loc 2 196 9 view .LVU1895
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6695              		.loc 2 198 9 view .LVU1896
 6696              		.syntax unified
 6697              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6698 00ac 4FF05003 			mov r3, #80												
 6699 00b0 83F31188 		msr basepri, r3											
 6700 00b4 BFF36F8F 		isb														
 6701 00b8 BFF34F8F 		dsb														
 6702              	
 6703              	@ 0 "" 2
 6704              	.LVL494:
 6705              		.thumb
 6706              		.syntax unified
 6707              	.L476:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6708              		.loc 2 198 9 is_stmt 0 view .LVU1897
 6709              	.LBE291:
 6710              	.LBE290:
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6711              		.loc 1 4275 21 is_stmt 1 discriminator 2 view .LVU1898
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6712              		.loc 1 4275 21 discriminator 2 view .LVU1899
 6713 00bc FEE7     		b	.L476
 6714              	.LVL495:
 6715              	.L480:
 6716              	.LCFI53:
 6717              		.cfi_def_cfa_offset 0
 6718              		.cfi_restore 3
 6719              		.cfi_restore 4
 6720              		.cfi_restore 5
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 248


 6721              		.cfi_restore 14
4275:ThirdParty/FreeRTOS/tasks.c **** 
 6722              		.loc 1 4275 21 is_stmt 0 discriminator 2 view .LVU1900
 6723 00be 7047     		bx	lr
 6724              	.L486:
 6725              		.align	2
 6726              	.L485:
 6727 00c0 00000000 		.word	pxCurrentTCB
 6728 00c4 00000000 		.word	pxReadyTasksLists
 6729 00c8 00000000 		.word	uxTopReadyPriority
 6730              		.cfi_endproc
 6731              	.LFE54:
 6733              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 6734              		.align	1
 6735              		.global	uxTaskResetEventItemValue
 6736              		.syntax unified
 6737              		.thumb
 6738              		.thumb_func
 6740              	uxTaskResetEventItemValue:
 6741              	.LFB55:
4659:ThirdParty/FreeRTOS/tasks.c ****     TickType_t uxReturn;
 6742              		.loc 1 4659 1 is_stmt 1 view -0
 6743              		.cfi_startproc
 6744              		@ args = 0, pretend = 0, frame = 0
 6745              		@ frame_needed = 0, uses_anonymous_args = 0
 6746              		@ link register save eliminated.
4660:ThirdParty/FreeRTOS/tasks.c **** 
 6747              		.loc 1 4660 5 view .LVU1902
4662:ThirdParty/FreeRTOS/tasks.c **** 
 6748              		.loc 1 4662 5 view .LVU1903
4662:ThirdParty/FreeRTOS/tasks.c **** 
 6749              		.loc 1 4662 16 is_stmt 0 view .LVU1904
 6750 0000 044A     		ldr	r2, .L488
 6751 0002 1368     		ldr	r3, [r2]
4662:ThirdParty/FreeRTOS/tasks.c **** 
 6752              		.loc 1 4662 14 view .LVU1905
 6753 0004 9869     		ldr	r0, [r3, #24]
 6754              	.LVL496:
4666:ThirdParty/FreeRTOS/tasks.c **** 
 6755              		.loc 1 4666 5 is_stmt 1 view .LVU1906
 6756 0006 1368     		ldr	r3, [r2]
 6757 0008 DB6A     		ldr	r3, [r3, #44]
 6758 000a 1268     		ldr	r2, [r2]
 6759 000c C3F10503 		rsb	r3, r3, #5
 6760 0010 9361     		str	r3, [r2, #24]
4668:ThirdParty/FreeRTOS/tasks.c **** }
 6761              		.loc 1 4668 5 view .LVU1907
4669:ThirdParty/FreeRTOS/tasks.c **** /*-----------------------------------------------------------*/
 6762              		.loc 1 4669 1 is_stmt 0 view .LVU1908
 6763 0012 7047     		bx	lr
 6764              	.L489:
 6765              		.align	2
 6766              	.L488:
 6767 0014 00000000 		.word	pxCurrentTCB
 6768              		.cfi_endproc
 6769              	.LFE55:
 6771              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 249


 6772              		.align	1
 6773              		.global	pvTaskIncrementMutexHeldCount
 6774              		.syntax unified
 6775              		.thumb
 6776              		.thumb_func
 6778              	pvTaskIncrementMutexHeldCount:
 6779              	.LFB56:
4675:ThirdParty/FreeRTOS/tasks.c ****         /* If xSemaphoreCreateMutex() is called before any tasks have been created
 6780              		.loc 1 4675 5 is_stmt 1 view -0
 6781              		.cfi_startproc
 6782              		@ args = 0, pretend = 0, frame = 0
 6783              		@ frame_needed = 0, uses_anonymous_args = 0
 6784              		@ link register save eliminated.
4678:ThirdParty/FreeRTOS/tasks.c ****         {
 6785              		.loc 1 4678 9 view .LVU1910
4678:ThirdParty/FreeRTOS/tasks.c ****         {
 6786              		.loc 1 4678 26 is_stmt 0 view .LVU1911
 6787 0000 054B     		ldr	r3, .L492
 6788 0002 1B68     		ldr	r3, [r3]
4678:ThirdParty/FreeRTOS/tasks.c ****         {
 6789              		.loc 1 4678 11 view .LVU1912
 6790 0004 23B1     		cbz	r3, .L491
4680:ThirdParty/FreeRTOS/tasks.c ****         }
 6791              		.loc 1 4680 13 is_stmt 1 view .LVU1913
4680:ThirdParty/FreeRTOS/tasks.c ****         }
 6792              		.loc 1 4680 27 is_stmt 0 view .LVU1914
 6793 0006 044B     		ldr	r3, .L492
 6794 0008 1A68     		ldr	r2, [r3]
 6795 000a D36C     		ldr	r3, [r2, #76]
4680:ThirdParty/FreeRTOS/tasks.c ****         }
 6796              		.loc 1 4680 44 view .LVU1915
 6797 000c 0133     		adds	r3, r3, #1
 6798 000e D364     		str	r3, [r2, #76]
 6799              	.L491:
4683:ThirdParty/FreeRTOS/tasks.c ****     }
 6800              		.loc 1 4683 9 is_stmt 1 view .LVU1916
4683:ThirdParty/FreeRTOS/tasks.c ****     }
 6801              		.loc 1 4683 16 is_stmt 0 view .LVU1917
 6802 0010 014B     		ldr	r3, .L492
 6803 0012 1868     		ldr	r0, [r3]
4684:ThirdParty/FreeRTOS/tasks.c **** 
 6804              		.loc 1 4684 5 view .LVU1918
 6805 0014 7047     		bx	lr
 6806              	.L493:
 6807 0016 00BF     		.align	2
 6808              	.L492:
 6809 0018 00000000 		.word	pxCurrentTCB
 6810              		.cfi_endproc
 6811              	.LFE56:
 6813              		.section	.text.ulTaskGenericNotifyTake,"ax",%progbits
 6814              		.align	1
 6815              		.global	ulTaskGenericNotifyTake
 6816              		.syntax unified
 6817              		.thumb
 6818              		.thumb_func
 6820              	ulTaskGenericNotifyTake:
 6821              	.LVL497:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 250


 6822              	.LFB57:
4694:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 6823              		.loc 1 4694 5 is_stmt 1 view -0
 6824              		.cfi_startproc
 6825              		@ args = 0, pretend = 0, frame = 0
 6826              		@ frame_needed = 0, uses_anonymous_args = 0
4695:ThirdParty/FreeRTOS/tasks.c **** 
 6827              		.loc 1 4695 9 view .LVU1920
4697:ThirdParty/FreeRTOS/tasks.c **** 
 6828              		.loc 1 4697 9 view .LVU1921
 6829 0000 40B1     		cbz	r0, .L495
4697:ThirdParty/FreeRTOS/tasks.c **** 
 6830              		.loc 1 4697 9 view .LVU1922
 6831              	.LBB292:
 6832              	.LBI292:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 6833              		.loc 2 194 34 view .LVU1923
 6834              	.LBB293:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 6835              		.loc 2 196 9 view .LVU1924
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6836              		.loc 2 198 9 view .LVU1925
 6837              		.syntax unified
 6838              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 6839 0002 4FF05003 			mov r3, #80												
 6840 0006 83F31188 		msr basepri, r3											
 6841 000a BFF36F8F 		isb														
 6842 000e BFF34F8F 		dsb														
 6843              	
 6844              	@ 0 "" 2
 6845              	.LVL498:
 6846              		.thumb
 6847              		.syntax unified
 6848              	.L496:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 6849              		.loc 2 198 9 is_stmt 0 view .LVU1926
 6850              	.LBE293:
 6851              	.LBE292:
4697:ThirdParty/FreeRTOS/tasks.c **** 
 6852              		.loc 1 4697 9 is_stmt 1 discriminator 1 view .LVU1927
4697:ThirdParty/FreeRTOS/tasks.c **** 
 6853              		.loc 1 4697 9 discriminator 1 view .LVU1928
 6854 0012 FEE7     		b	.L496
 6855              	.L495:
4694:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 6856              		.loc 1 4694 5 is_stmt 0 discriminator 2 view .LVU1929
 6857 0014 70B5     		push	{r4, r5, r6, lr}
 6858              	.LCFI54:
 6859              		.cfi_def_cfa_offset 16
 6860              		.cfi_offset 4, -16
 6861              		.cfi_offset 5, -12
 6862              		.cfi_offset 6, -8
 6863              		.cfi_offset 14, -4
 6864 0016 0D46     		mov	r5, r1
 6865 0018 1446     		mov	r4, r2
 6866 001a 0646     		mov	r6, r0
4697:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 251


 6867              		.loc 1 4697 78 is_stmt 1 discriminator 2 view .LVU1930
4699:ThirdParty/FreeRTOS/tasks.c ****         {
 6868              		.loc 1 4699 9 discriminator 2 view .LVU1931
 6869 001c FFF7FEFF 		bl	vPortEnterCritical
 6870              	.LVL499:
4702:ThirdParty/FreeRTOS/tasks.c ****             {
 6871              		.loc 1 4702 13 discriminator 2 view .LVU1932
4702:ThirdParty/FreeRTOS/tasks.c ****             {
 6872              		.loc 1 4702 29 is_stmt 0 discriminator 2 view .LVU1933
 6873 0020 204B     		ldr	r3, .L503
 6874 0022 1B68     		ldr	r3, [r3]
4702:ThirdParty/FreeRTOS/tasks.c ****             {
 6875              		.loc 1 4702 46 discriminator 2 view .LVU1934
 6876 0024 06F11402 		add	r2, r6, #20
 6877 0028 53F82230 		ldr	r3, [r3, r2, lsl #2]
4702:ThirdParty/FreeRTOS/tasks.c ****             {
 6878              		.loc 1 4702 15 discriminator 2 view .LVU1935
 6879 002c 33B9     		cbnz	r3, .L497
4705:ThirdParty/FreeRTOS/tasks.c **** 
 6880              		.loc 1 4705 17 is_stmt 1 view .LVU1936
4705:ThirdParty/FreeRTOS/tasks.c **** 
 6881              		.loc 1 4705 29 is_stmt 0 view .LVU1937
 6882 002e 1D4B     		ldr	r3, .L503
 6883 0030 1B68     		ldr	r3, [r3]
4705:ThirdParty/FreeRTOS/tasks.c **** 
 6884              		.loc 1 4705 62 view .LVU1938
 6885 0032 3344     		add	r3, r3, r6
 6886 0034 0122     		movs	r2, #1
 6887 0036 83F85420 		strb	r2, [r3, #84]
4707:ThirdParty/FreeRTOS/tasks.c ****                 {
 6888              		.loc 1 4707 17 is_stmt 1 view .LVU1939
4707:ThirdParty/FreeRTOS/tasks.c ****                 {
 6889              		.loc 1 4707 19 is_stmt 0 view .LVU1940
 6890 003a E4B9     		cbnz	r4, .L502
 6891              	.L497:
4725:ThirdParty/FreeRTOS/tasks.c ****             }
 6892              		.loc 1 4725 41 is_stmt 1 view .LVU1941
4728:ThirdParty/FreeRTOS/tasks.c **** 
 6893              		.loc 1 4728 9 view .LVU1942
 6894 003c FFF7FEFF 		bl	vPortExitCritical
 6895              	.LVL500:
4730:ThirdParty/FreeRTOS/tasks.c ****         {
 6896              		.loc 1 4730 9 view .LVU1943
 6897 0040 FFF7FEFF 		bl	vPortEnterCritical
 6898              	.LVL501:
4732:ThirdParty/FreeRTOS/tasks.c ****             ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWait ];
 6899              		.loc 1 4732 51 view .LVU1944
4733:ThirdParty/FreeRTOS/tasks.c **** 
 6900              		.loc 1 4733 13 view .LVU1945
4733:ThirdParty/FreeRTOS/tasks.c **** 
 6901              		.loc 1 4733 36 is_stmt 0 view .LVU1946
 6902 0044 174B     		ldr	r3, .L503
 6903 0046 1B68     		ldr	r3, [r3]
4733:ThirdParty/FreeRTOS/tasks.c **** 
 6904              		.loc 1 4733 22 view .LVU1947
 6905 0048 06F11402 		add	r2, r6, #20
 6906 004c 53F82240 		ldr	r4, [r3, r2, lsl #2]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 252


 6907              	.LVL502:
4735:ThirdParty/FreeRTOS/tasks.c ****             {
 6908              		.loc 1 4735 13 is_stmt 1 view .LVU1948
4735:ThirdParty/FreeRTOS/tasks.c ****             {
 6909              		.loc 1 4735 15 is_stmt 0 view .LVU1949
 6910 0050 3CB1     		cbz	r4, .L498
4737:ThirdParty/FreeRTOS/tasks.c ****                 {
 6911              		.loc 1 4737 17 is_stmt 1 view .LVU1950
4737:ThirdParty/FreeRTOS/tasks.c ****                 {
 6912              		.loc 1 4737 19 is_stmt 0 view .LVU1951
 6913 0052 FDB1     		cbz	r5, .L499
4739:ThirdParty/FreeRTOS/tasks.c ****                 }
 6914              		.loc 1 4739 21 is_stmt 1 view .LVU1952
4739:ThirdParty/FreeRTOS/tasks.c ****                 }
 6915              		.loc 1 4739 33 is_stmt 0 view .LVU1953
 6916 0054 134B     		ldr	r3, .L503
 6917 0056 1A68     		ldr	r2, [r3]
4739:ThirdParty/FreeRTOS/tasks.c ****                 }
 6918              		.loc 1 4739 68 view .LVU1954
 6919 0058 06F11403 		add	r3, r6, #20
 6920 005c 0021     		movs	r1, #0
 6921 005e 42F82310 		str	r1, [r2, r3, lsl #2]
 6922              	.L498:
4748:ThirdParty/FreeRTOS/tasks.c ****             }
 6923              		.loc 1 4748 41 is_stmt 1 view .LVU1955
4751:ThirdParty/FreeRTOS/tasks.c ****         }
 6924              		.loc 1 4751 13 view .LVU1956
4751:ThirdParty/FreeRTOS/tasks.c ****         }
 6925              		.loc 1 4751 25 is_stmt 0 view .LVU1957
 6926 0062 104B     		ldr	r3, .L503
 6927 0064 1B68     		ldr	r3, [r3]
4751:ThirdParty/FreeRTOS/tasks.c ****         }
 6928              		.loc 1 4751 58 view .LVU1958
 6929 0066 3344     		add	r3, r3, r6
 6930 0068 0022     		movs	r2, #0
 6931 006a 83F85420 		strb	r2, [r3, #84]
4753:ThirdParty/FreeRTOS/tasks.c **** 
 6932              		.loc 1 4753 9 is_stmt 1 view .LVU1959
 6933 006e FFF7FEFF 		bl	vPortExitCritical
 6934              	.LVL503:
4755:ThirdParty/FreeRTOS/tasks.c ****     }
 6935              		.loc 1 4755 9 view .LVU1960
4756:ThirdParty/FreeRTOS/tasks.c **** 
 6936              		.loc 1 4756 5 is_stmt 0 view .LVU1961
 6937 0072 2046     		mov	r0, r4
 6938 0074 70BD     		pop	{r4, r5, r6, pc}
 6939              	.LVL504:
 6940              	.L502:
4709:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWait );
 6941              		.loc 1 4709 21 is_stmt 1 view .LVU1962
 6942 0076 1146     		mov	r1, r2
 6943 0078 2046     		mov	r0, r4
 6944 007a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 6945              	.LVL505:
4710:ThirdParty/FreeRTOS/tasks.c **** 
 6946              		.loc 1 4710 65 view .LVU1963
4716:ThirdParty/FreeRTOS/tasks.c ****                 }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 253


 6947              		.loc 1 4716 21 view .LVU1964
 6948 007e 4FF0E023 		mov	r3, #-536813568
 6949 0082 4FF08052 		mov	r2, #268435456
 6950 0086 C3F8042D 		str	r2, [r3, #3332]
4716:ThirdParty/FreeRTOS/tasks.c ****                 }
 6951              		.loc 1 4716 21 view .LVU1965
 6952              		.syntax unified
 6953              	@ 4716 "ThirdParty/FreeRTOS/tasks.c" 1
 6954 008a BFF34F8F 		dsb
 6955              	@ 0 "" 2
4716:ThirdParty/FreeRTOS/tasks.c ****                 }
 6956              		.loc 1 4716 21 view .LVU1966
 6957              	@ 4716 "ThirdParty/FreeRTOS/tasks.c" 1
 6958 008e BFF36F8F 		isb
 6959              	@ 0 "" 2
4716:ThirdParty/FreeRTOS/tasks.c ****                 }
 6960              		.loc 1 4716 43 view .LVU1967
 6961              		.thumb
 6962              		.syntax unified
 6963 0092 D3E7     		b	.L497
 6964              	.LVL506:
 6965              	.L499:
4743:ThirdParty/FreeRTOS/tasks.c ****                 }
 6966              		.loc 1 4743 21 view .LVU1968
4743:ThirdParty/FreeRTOS/tasks.c ****                 }
 6967              		.loc 1 4743 33 is_stmt 0 view .LVU1969
 6968 0094 034B     		ldr	r3, .L503
 6969 0096 1A68     		ldr	r2, [r3]
4743:ThirdParty/FreeRTOS/tasks.c ****                 }
 6970              		.loc 1 4743 79 view .LVU1970
 6971 0098 631E     		subs	r3, r4, #1
4743:ThirdParty/FreeRTOS/tasks.c ****                 }
 6972              		.loc 1 4743 68 view .LVU1971
 6973 009a 06F11401 		add	r1, r6, #20
 6974 009e 42F82130 		str	r3, [r2, r1, lsl #2]
 6975 00a2 DEE7     		b	.L498
 6976              	.L504:
 6977              		.align	2
 6978              	.L503:
 6979 00a4 00000000 		.word	pxCurrentTCB
 6980              		.cfi_endproc
 6981              	.LFE57:
 6983              		.section	.text.xTaskGenericNotifyWait,"ax",%progbits
 6984              		.align	1
 6985              		.global	xTaskGenericNotifyWait
 6986              		.syntax unified
 6987              		.thumb
 6988              		.thumb_func
 6990              	xTaskGenericNotifyWait:
 6991              	.LVL507:
 6992              	.LFB58:
4768:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 6993              		.loc 1 4768 5 is_stmt 1 view -0
 6994              		.cfi_startproc
 6995              		@ args = 4, pretend = 0, frame = 0
 6996              		@ frame_needed = 0, uses_anonymous_args = 0
4768:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 254


 6997              		.loc 1 4768 5 is_stmt 0 view .LVU1973
 6998 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6999              	.LCFI55:
 7000              		.cfi_def_cfa_offset 24
 7001              		.cfi_offset 3, -24
 7002              		.cfi_offset 4, -20
 7003              		.cfi_offset 5, -16
 7004              		.cfi_offset 6, -12
 7005              		.cfi_offset 7, -8
 7006              		.cfi_offset 14, -4
4769:ThirdParty/FreeRTOS/tasks.c **** 
 7007              		.loc 1 4769 9 is_stmt 1 view .LVU1974
4771:ThirdParty/FreeRTOS/tasks.c **** 
 7008              		.loc 1 4771 9 view .LVU1975
 7009 0002 40B1     		cbz	r0, .L506
4771:ThirdParty/FreeRTOS/tasks.c **** 
 7010              		.loc 1 4771 9 view .LVU1976
 7011              	.LBB294:
 7012              	.LBI294:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7013              		.loc 2 194 34 view .LVU1977
 7014              	.LBB295:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7015              		.loc 2 196 9 view .LVU1978
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7016              		.loc 2 198 9 view .LVU1979
 7017              		.syntax unified
 7018              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7019 0004 4FF05003 			mov r3, #80												
 7020 0008 83F31188 		msr basepri, r3											
 7021 000c BFF36F8F 		isb														
 7022 0010 BFF34F8F 		dsb														
 7023              	
 7024              	@ 0 "" 2
 7025              	.LVL508:
 7026              		.thumb
 7027              		.syntax unified
 7028              	.L507:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7029              		.loc 2 198 9 is_stmt 0 view .LVU1980
 7030              	.LBE295:
 7031              	.LBE294:
4771:ThirdParty/FreeRTOS/tasks.c **** 
 7032              		.loc 1 4771 9 is_stmt 1 discriminator 1 view .LVU1981
4771:ThirdParty/FreeRTOS/tasks.c **** 
 7033              		.loc 1 4771 9 discriminator 1 view .LVU1982
 7034 0014 FEE7     		b	.L507
 7035              	.LVL509:
 7036              	.L506:
4771:ThirdParty/FreeRTOS/tasks.c **** 
 7037              		.loc 1 4771 9 is_stmt 0 discriminator 1 view .LVU1983
 7038 0016 0D46     		mov	r5, r1
 7039 0018 1646     		mov	r6, r2
 7040 001a 1C46     		mov	r4, r3
 7041 001c 0746     		mov	r7, r0
4771:ThirdParty/FreeRTOS/tasks.c **** 
 7042              		.loc 1 4771 78 is_stmt 1 discriminator 2 view .LVU1984
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 255


4773:ThirdParty/FreeRTOS/tasks.c ****         {
 7043              		.loc 1 4773 9 discriminator 2 view .LVU1985
 7044 001e FFF7FEFF 		bl	vPortEnterCritical
 7045              	.LVL510:
4776:ThirdParty/FreeRTOS/tasks.c ****             {
 7046              		.loc 1 4776 13 discriminator 2 view .LVU1986
4776:ThirdParty/FreeRTOS/tasks.c ****             {
 7047              		.loc 1 4776 29 is_stmt 0 discriminator 2 view .LVU1987
 7048 0022 294B     		ldr	r3, .L515
 7049 0024 1B68     		ldr	r3, [r3]
4776:ThirdParty/FreeRTOS/tasks.c ****             {
 7050              		.loc 1 4776 44 discriminator 2 view .LVU1988
 7051 0026 3B44     		add	r3, r3, r7
 7052 0028 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 7053 002c DBB2     		uxtb	r3, r3
4776:ThirdParty/FreeRTOS/tasks.c ****             {
 7054              		.loc 1 4776 15 discriminator 2 view .LVU1989
 7055 002e 022B     		cmp	r3, #2
 7056 0030 10D0     		beq	.L508
4781:ThirdParty/FreeRTOS/tasks.c **** 
 7057              		.loc 1 4781 17 is_stmt 1 view .LVU1990
4781:ThirdParty/FreeRTOS/tasks.c **** 
 7058              		.loc 1 4781 29 is_stmt 0 view .LVU1991
 7059 0032 254A     		ldr	r2, .L515
 7060 0034 1168     		ldr	r1, [r2]
4781:ThirdParty/FreeRTOS/tasks.c **** 
 7061              		.loc 1 4781 46 view .LVU1992
 7062 0036 07F11400 		add	r0, r7, #20
 7063 003a 51F82030 		ldr	r3, [r1, r0, lsl #2]
4781:ThirdParty/FreeRTOS/tasks.c **** 
 7064              		.loc 1 4781 64 view .LVU1993
 7065 003e 23EA0503 		bic	r3, r3, r5
 7066 0042 41F82030 		str	r3, [r1, r0, lsl #2]
4784:ThirdParty/FreeRTOS/tasks.c **** 
 7067              		.loc 1 4784 17 is_stmt 1 view .LVU1994
4784:ThirdParty/FreeRTOS/tasks.c **** 
 7068              		.loc 1 4784 29 is_stmt 0 view .LVU1995
 7069 0046 1368     		ldr	r3, [r2]
4784:ThirdParty/FreeRTOS/tasks.c **** 
 7070              		.loc 1 4784 62 view .LVU1996
 7071 0048 3B44     		add	r3, r3, r7
 7072 004a 0122     		movs	r2, #1
 7073 004c 83F85420 		strb	r2, [r3, #84]
4786:ThirdParty/FreeRTOS/tasks.c ****                 {
 7074              		.loc 1 4786 17 is_stmt 1 view .LVU1997
4786:ThirdParty/FreeRTOS/tasks.c ****                 {
 7075              		.loc 1 4786 19 is_stmt 0 view .LVU1998
 7076 0050 069B     		ldr	r3, [sp, #24]
 7077 0052 F3B9     		cbnz	r3, .L513
 7078              	.LVL511:
 7079              	.L508:
4804:ThirdParty/FreeRTOS/tasks.c ****             }
 7080              		.loc 1 4804 41 is_stmt 1 view .LVU1999
4807:ThirdParty/FreeRTOS/tasks.c **** 
 7081              		.loc 1 4807 9 view .LVU2000
 7082 0054 FFF7FEFF 		bl	vPortExitCritical
 7083              	.LVL512:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 256


4809:ThirdParty/FreeRTOS/tasks.c ****         {
 7084              		.loc 1 4809 9 view .LVU2001
 7085 0058 FFF7FEFF 		bl	vPortEnterCritical
 7086              	.LVL513:
4811:ThirdParty/FreeRTOS/tasks.c **** 
 7087              		.loc 1 4811 51 view .LVU2002
4813:ThirdParty/FreeRTOS/tasks.c ****             {
 7088              		.loc 1 4813 13 view .LVU2003
4813:ThirdParty/FreeRTOS/tasks.c ****             {
 7089              		.loc 1 4813 15 is_stmt 0 view .LVU2004
 7090 005c 34B1     		cbz	r4, .L509
4817:ThirdParty/FreeRTOS/tasks.c ****             }
 7091              		.loc 1 4817 17 is_stmt 1 view .LVU2005
4817:ThirdParty/FreeRTOS/tasks.c ****             }
 7092              		.loc 1 4817 53 is_stmt 0 view .LVU2006
 7093 005e 1A4B     		ldr	r3, .L515
 7094 0060 1B68     		ldr	r3, [r3]
4817:ThirdParty/FreeRTOS/tasks.c ****             }
 7095              		.loc 1 4817 70 view .LVU2007
 7096 0062 07F11402 		add	r2, r7, #20
 7097 0066 53F82230 		ldr	r3, [r3, r2, lsl #2]
4817:ThirdParty/FreeRTOS/tasks.c ****             }
 7098              		.loc 1 4817 39 view .LVU2008
 7099 006a 2360     		str	r3, [r4]
 7100              	.L509:
4824:ThirdParty/FreeRTOS/tasks.c ****             {
 7101              		.loc 1 4824 13 is_stmt 1 view .LVU2009
4824:ThirdParty/FreeRTOS/tasks.c ****             {
 7102              		.loc 1 4824 29 is_stmt 0 view .LVU2010
 7103 006c 164B     		ldr	r3, .L515
 7104 006e 1B68     		ldr	r3, [r3]
4824:ThirdParty/FreeRTOS/tasks.c ****             {
 7105              		.loc 1 4824 44 view .LVU2011
 7106 0070 3B44     		add	r3, r3, r7
 7107 0072 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 7108 0076 DBB2     		uxtb	r3, r3
4824:ThirdParty/FreeRTOS/tasks.c ****             {
 7109              		.loc 1 4824 15 view .LVU2012
 7110 0078 022B     		cmp	r3, #2
 7111 007a 19D0     		beq	.L514
4827:ThirdParty/FreeRTOS/tasks.c ****             }
 7112              		.loc 1 4827 25 view .LVU2013
 7113 007c 0024     		movs	r4, #0
 7114              	.LVL514:
 7115              	.L510:
4837:ThirdParty/FreeRTOS/tasks.c ****         }
 7116              		.loc 1 4837 13 is_stmt 1 view .LVU2014
4837:ThirdParty/FreeRTOS/tasks.c ****         }
 7117              		.loc 1 4837 25 is_stmt 0 view .LVU2015
 7118 007e 124B     		ldr	r3, .L515
 7119 0080 1B68     		ldr	r3, [r3]
4837:ThirdParty/FreeRTOS/tasks.c ****         }
 7120              		.loc 1 4837 58 view .LVU2016
 7121 0082 3B44     		add	r3, r3, r7
 7122 0084 0022     		movs	r2, #0
 7123 0086 83F85420 		strb	r2, [r3, #84]
4839:ThirdParty/FreeRTOS/tasks.c **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 257


 7124              		.loc 1 4839 9 is_stmt 1 view .LVU2017
 7125 008a FFF7FEFF 		bl	vPortExitCritical
 7126              	.LVL515:
4841:ThirdParty/FreeRTOS/tasks.c ****     }
 7127              		.loc 1 4841 9 view .LVU2018
4842:ThirdParty/FreeRTOS/tasks.c **** 
 7128              		.loc 1 4842 5 is_stmt 0 view .LVU2019
 7129 008e 2046     		mov	r0, r4
 7130 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7131              	.LVL516:
 7132              	.L513:
4788:ThirdParty/FreeRTOS/tasks.c ****                     traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWait );
 7133              		.loc 1 4788 21 is_stmt 1 view .LVU2020
 7134 0092 1146     		mov	r1, r2
 7135 0094 1846     		mov	r0, r3
 7136 0096 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 7137              	.LVL517:
4789:ThirdParty/FreeRTOS/tasks.c **** 
 7138              		.loc 1 4789 65 view .LVU2021
4795:ThirdParty/FreeRTOS/tasks.c ****                 }
 7139              		.loc 1 4795 21 view .LVU2022
 7140 009a 4FF0E023 		mov	r3, #-536813568
 7141 009e 4FF08052 		mov	r2, #268435456
 7142 00a2 C3F8042D 		str	r2, [r3, #3332]
 7143              	.LVL518:
4795:ThirdParty/FreeRTOS/tasks.c ****                 }
 7144              		.loc 1 4795 21 view .LVU2023
 7145              		.syntax unified
 7146              	@ 4795 "ThirdParty/FreeRTOS/tasks.c" 1
 7147 00a6 BFF34F8F 		dsb
 7148              	@ 0 "" 2
4795:ThirdParty/FreeRTOS/tasks.c ****                 }
 7149              		.loc 1 4795 21 view .LVU2024
 7150              	@ 4795 "ThirdParty/FreeRTOS/tasks.c" 1
 7151 00aa BFF36F8F 		isb
 7152              	@ 0 "" 2
4795:ThirdParty/FreeRTOS/tasks.c ****                 }
 7153              		.loc 1 4795 43 view .LVU2025
 7154              		.thumb
 7155              		.syntax unified
 7156 00ae D1E7     		b	.L508
 7157              	.L514:
4833:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 7158              		.loc 1 4833 17 view .LVU2026
4833:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 7159              		.loc 1 4833 29 is_stmt 0 view .LVU2027
 7160 00b0 054B     		ldr	r3, .L515
 7161 00b2 1A68     		ldr	r2, [r3]
4833:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 7162              		.loc 1 4833 46 view .LVU2028
 7163 00b4 07F11401 		add	r1, r7, #20
 7164 00b8 52F82130 		ldr	r3, [r2, r1, lsl #2]
4833:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdTRUE;
 7165              		.loc 1 4833 64 view .LVU2029
 7166 00bc 23EA0603 		bic	r3, r3, r6
 7167 00c0 42F82130 		str	r3, [r2, r1, lsl #2]
4834:ThirdParty/FreeRTOS/tasks.c ****             }
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 258


 7168              		.loc 1 4834 17 is_stmt 1 view .LVU2030
 7169              	.LVL519:
4834:ThirdParty/FreeRTOS/tasks.c ****             }
 7170              		.loc 1 4834 25 is_stmt 0 view .LVU2031
 7171 00c4 0124     		movs	r4, #1
 7172              	.LVL520:
4834:ThirdParty/FreeRTOS/tasks.c ****             }
 7173              		.loc 1 4834 25 view .LVU2032
 7174 00c6 DAE7     		b	.L510
 7175              	.L516:
 7176              		.align	2
 7177              	.L515:
 7178 00c8 00000000 		.word	pxCurrentTCB
 7179              		.cfi_endproc
 7180              	.LFE58:
 7182              		.section	.text.xTaskGenericNotify,"ax",%progbits
 7183              		.align	1
 7184              		.global	xTaskGenericNotify
 7185              		.syntax unified
 7186              		.thumb
 7187              		.thumb_func
 7189              	xTaskGenericNotify:
 7190              	.LVL521:
 7191              	.LFB59:
4854:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7192              		.loc 1 4854 5 is_stmt 1 view -0
 7193              		.cfi_startproc
 7194              		@ args = 4, pretend = 0, frame = 0
 7195              		@ frame_needed = 0, uses_anonymous_args = 0
4854:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7196              		.loc 1 4854 5 is_stmt 0 view .LVU2034
 7197 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7198              	.LCFI56:
 7199              		.cfi_def_cfa_offset 24
 7200              		.cfi_offset 3, -24
 7201              		.cfi_offset 4, -20
 7202              		.cfi_offset 5, -16
 7203              		.cfi_offset 6, -12
 7204              		.cfi_offset 7, -8
 7205              		.cfi_offset 14, -4
4855:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
 7206              		.loc 1 4855 9 is_stmt 1 view .LVU2035
4856:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 7207              		.loc 1 4856 9 view .LVU2036
 7208              	.LVL522:
4857:ThirdParty/FreeRTOS/tasks.c **** 
 7209              		.loc 1 4857 9 view .LVU2037
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7210              		.loc 1 4859 9 view .LVU2038
 7211 0002 41B1     		cbz	r1, .L518
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7212              		.loc 1 4859 9 view .LVU2039
 7213              	.LBB296:
 7214              	.LBI296:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7215              		.loc 2 194 34 view .LVU2040
 7216              	.LBB297:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 259


 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7217              		.loc 2 196 9 view .LVU2041
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7218              		.loc 2 198 9 view .LVU2042
 7219              		.syntax unified
 7220              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7221 0004 4FF05003 			mov r3, #80												
 7222 0008 83F31188 		msr basepri, r3											
 7223 000c BFF36F8F 		isb														
 7224 0010 BFF34F8F 		dsb														
 7225              	
 7226              	@ 0 "" 2
 7227              	.LVL523:
 7228              		.thumb
 7229              		.syntax unified
 7230              	.L519:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7231              		.loc 2 198 9 is_stmt 0 view .LVU2043
 7232              	.LBE297:
 7233              	.LBE296:
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7234              		.loc 1 4859 9 is_stmt 1 discriminator 1 view .LVU2044
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7235              		.loc 1 4859 9 discriminator 1 view .LVU2045
 7236 0014 FEE7     		b	.L519
 7237              	.LVL524:
 7238              	.L518:
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7239              		.loc 1 4859 9 is_stmt 0 discriminator 1 view .LVU2046
 7240 0016 0446     		mov	r4, r0
 7241 0018 1746     		mov	r7, r2
 7242 001a 1E46     		mov	r6, r3
 7243 001c 0D46     		mov	r5, r1
4859:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( xTaskToNotify );
 7244              		.loc 1 4859 80 is_stmt 1 discriminator 2 view .LVU2047
4860:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 7245              		.loc 1 4860 9 discriminator 2 view .LVU2048
 7246 001e B8B1     		cbz	r0, .L540
4860:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 7247              		.loc 1 4860 38 discriminator 2 view .LVU2049
4861:ThirdParty/FreeRTOS/tasks.c **** 
 7248              		.loc 1 4861 9 discriminator 2 view .LVU2050
 7249              	.LVL525:
4863:ThirdParty/FreeRTOS/tasks.c ****         {
 7250              		.loc 1 4863 9 discriminator 2 view .LVU2051
 7251 0020 FFF7FEFF 		bl	vPortEnterCritical
 7252              	.LVL526:
4865:ThirdParty/FreeRTOS/tasks.c ****             {
 7253              		.loc 1 4865 13 discriminator 2 view .LVU2052
4865:ThirdParty/FreeRTOS/tasks.c ****             {
 7254              		.loc 1 4865 15 is_stmt 0 discriminator 2 view .LVU2053
 7255 0024 069B     		ldr	r3, [sp, #24]
 7256 0026 2BB1     		cbz	r3, .L522
4867:ThirdParty/FreeRTOS/tasks.c ****             }
 7257              		.loc 1 4867 17 is_stmt 1 view .LVU2054
4867:ThirdParty/FreeRTOS/tasks.c ****             }
 7258              		.loc 1 4867 71 is_stmt 0 view .LVU2055
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 260


 7259 0028 05F11403 		add	r3, r5, #20
 7260 002c 54F82330 		ldr	r3, [r4, r3, lsl #2]
4867:ThirdParty/FreeRTOS/tasks.c ****             }
 7261              		.loc 1 4867 47 view .LVU2056
 7262 0030 069A     		ldr	r2, [sp, #24]
 7263 0032 1360     		str	r3, [r2]
 7264              	.L522:
4870:ThirdParty/FreeRTOS/tasks.c **** 
 7265              		.loc 1 4870 13 is_stmt 1 view .LVU2057
4870:ThirdParty/FreeRTOS/tasks.c **** 
 7266              		.loc 1 4870 35 is_stmt 0 view .LVU2058
 7267 0034 6219     		adds	r2, r4, r5
 7268 0036 92F85430 		ldrb	r3, [r2, #84]	@ zero_extendqisi2
 7269 003a DBB2     		uxtb	r3, r3
 7270              	.LVL527:
4872:ThirdParty/FreeRTOS/tasks.c **** 
 7271              		.loc 1 4872 13 is_stmt 1 view .LVU2059
4872:ThirdParty/FreeRTOS/tasks.c **** 
 7272              		.loc 1 4872 53 is_stmt 0 view .LVU2060
 7273 003c 0221     		movs	r1, #2
 7274 003e 82F85410 		strb	r1, [r2, #84]
4874:ThirdParty/FreeRTOS/tasks.c ****             {
 7275              		.loc 1 4874 13 is_stmt 1 view .LVU2061
 7276 0042 042E     		cmp	r6, #4
 7277 0044 2BD8     		bhi	.L523
 7278 0046 DFE806F0 		tbb	[pc, r6]
 7279              	.L525:
 7280 004a 12       		.byte	(.L529-.L525)/2
 7281 004b 0C       		.byte	(.L528-.L525)/2
 7282 004c 19       		.byte	(.L527-.L525)/2
 7283 004d 20       		.byte	(.L526-.L525)/2
 7284 004e 24       		.byte	(.L524-.L525)/2
 7285              	.LVL528:
 7286 004f 00       		.p2align 1
 7287              	.L540:
4860:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 7288              		.loc 1 4860 9 view .LVU2062
 7289              	.LBB298:
 7290              	.LBI298:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7291              		.loc 2 194 34 view .LVU2063
 7292              	.LBB299:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7293              		.loc 2 196 9 view .LVU2064
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7294              		.loc 2 198 9 view .LVU2065
 7295              		.syntax unified
 7296              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7297 0050 4FF05003 			mov r3, #80												
 7298 0054 83F31188 		msr basepri, r3											
 7299 0058 BFF36F8F 		isb														
 7300 005c BFF34F8F 		dsb														
 7301              	
 7302              	@ 0 "" 2
 7303              	.LVL529:
 7304              		.thumb
 7305              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 261


 7306              	.L521:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7307              		.loc 2 198 9 is_stmt 0 view .LVU2066
 7308              	.LBE299:
 7309              	.LBE298:
4860:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 7310              		.loc 1 4860 9 is_stmt 1 discriminator 2 view .LVU2067
4860:ThirdParty/FreeRTOS/tasks.c ****         pxTCB = xTaskToNotify;
 7311              		.loc 1 4860 9 discriminator 2 view .LVU2068
 7312 0060 FEE7     		b	.L521
 7313              	.LVL530:
 7314              	.L528:
4877:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7315              		.loc 1 4877 21 view .LVU2069
4877:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7316              		.loc 1 4877 43 is_stmt 0 view .LVU2070
 7317 0062 1435     		adds	r5, r5, #20
 7318              	.LVL531:
4877:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7319              		.loc 1 4877 43 view .LVU2071
 7320 0064 54F82520 		ldr	r2, [r4, r5, lsl #2]
4877:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7321              		.loc 1 4877 63 view .LVU2072
 7322 0068 3A43     		orrs	r2, r2, r7
 7323 006a 44F82520 		str	r2, [r4, r5, lsl #2]
4878:ThirdParty/FreeRTOS/tasks.c **** 
 7324              		.loc 1 4878 21 is_stmt 1 view .LVU2073
 7325              	.LVL532:
 7326              	.L529:
4918:ThirdParty/FreeRTOS/tasks.c **** 
 7327              		.loc 1 4918 48 view .LVU2074
4922:ThirdParty/FreeRTOS/tasks.c ****             {
 7328              		.loc 1 4922 13 view .LVU2075
4922:ThirdParty/FreeRTOS/tasks.c ****             {
 7329              		.loc 1 4922 15 is_stmt 0 view .LVU2076
 7330 006e 012B     		cmp	r3, #1
 7331 0070 22D0     		beq	.L541
 7332 0072 0124     		movs	r4, #1
 7333              	.LVL533:
 7334              	.L530:
4959:ThirdParty/FreeRTOS/tasks.c ****             }
 7335              		.loc 1 4959 41 is_stmt 1 view .LVU2077
4962:ThirdParty/FreeRTOS/tasks.c **** 
 7336              		.loc 1 4962 9 view .LVU2078
 7337 0074 FFF7FEFF 		bl	vPortExitCritical
 7338              	.LVL534:
4964:ThirdParty/FreeRTOS/tasks.c ****     }
 7339              		.loc 1 4964 9 view .LVU2079
4965:ThirdParty/FreeRTOS/tasks.c **** 
 7340              		.loc 1 4965 5 is_stmt 0 view .LVU2080
 7341 0078 2046     		mov	r0, r4
 7342 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7343              	.LVL535:
 7344              	.L527:
4881:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7345              		.loc 1 4881 21 is_stmt 1 view .LVU2081
4881:ThirdParty/FreeRTOS/tasks.c ****                     break;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 262


 7346              		.loc 1 4881 45 is_stmt 0 view .LVU2082
 7347 007c 1435     		adds	r5, r5, #20
 7348              	.LVL536:
4881:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7349              		.loc 1 4881 45 view .LVU2083
 7350 007e 54F82520 		ldr	r2, [r4, r5, lsl #2]
4881:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7351              		.loc 1 4881 66 view .LVU2084
 7352 0082 0132     		adds	r2, r2, #1
 7353 0084 44F82520 		str	r2, [r4, r5, lsl #2]
4882:ThirdParty/FreeRTOS/tasks.c **** 
 7354              		.loc 1 4882 21 is_stmt 1 view .LVU2085
 7355 0088 F1E7     		b	.L529
 7356              	.LVL537:
 7357              	.L526:
4885:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7358              		.loc 1 4885 21 view .LVU2086
4885:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7359              		.loc 1 4885 63 is_stmt 0 view .LVU2087
 7360 008a 1435     		adds	r5, r5, #20
 7361              	.LVL538:
4885:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7362              		.loc 1 4885 63 view .LVU2088
 7363 008c 44F82570 		str	r7, [r4, r5, lsl #2]
4886:ThirdParty/FreeRTOS/tasks.c **** 
 7364              		.loc 1 4886 21 is_stmt 1 view .LVU2089
 7365 0090 EDE7     		b	.L529
 7366              	.LVL539:
 7367              	.L524:
4890:ThirdParty/FreeRTOS/tasks.c ****                     {
 7368              		.loc 1 4890 21 view .LVU2090
4890:ThirdParty/FreeRTOS/tasks.c ****                     {
 7369              		.loc 1 4890 23 is_stmt 0 view .LVU2091
 7370 0092 022B     		cmp	r3, #2
 7371 0094 5BD0     		beq	.L535
4892:ThirdParty/FreeRTOS/tasks.c ****                     }
 7372              		.loc 1 4892 25 is_stmt 1 view .LVU2092
4892:ThirdParty/FreeRTOS/tasks.c ****                     }
 7373              		.loc 1 4892 67 is_stmt 0 view .LVU2093
 7374 0096 1435     		adds	r5, r5, #20
 7375              	.LVL540:
4892:ThirdParty/FreeRTOS/tasks.c ****                     }
 7376              		.loc 1 4892 67 view .LVU2094
 7377 0098 44F82570 		str	r7, [r4, r5, lsl #2]
 7378 009c E7E7     		b	.L529
 7379              	.LVL541:
 7380              	.L523:
4913:ThirdParty/FreeRTOS/tasks.c **** 
 7381              		.loc 1 4913 21 is_stmt 1 view .LVU2095
 7382 009e 2E4A     		ldr	r2, .L543
 7383 00a0 1268     		ldr	r2, [r2]
 7384 00a2 002A     		cmp	r2, #0
 7385 00a4 E3D0     		beq	.L529
4913:ThirdParty/FreeRTOS/tasks.c **** 
 7386              		.loc 1 4913 21 view .LVU2096
 7387              	.LBB300:
 7388              	.LBI300:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 263


 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7389              		.loc 2 194 34 view .LVU2097
 7390              	.LBB301:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7391              		.loc 2 196 9 view .LVU2098
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7392              		.loc 2 198 9 view .LVU2099
 7393              		.syntax unified
 7394              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7395 00a6 4FF05003 			mov r3, #80												
 7396 00aa 83F31188 		msr basepri, r3											
 7397 00ae BFF36F8F 		isb														
 7398 00b2 BFF34F8F 		dsb														
 7399              	
 7400              	@ 0 "" 2
 7401              	.LVL542:
 7402              		.thumb
 7403              		.syntax unified
 7404              	.L531:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7405              		.loc 2 198 9 is_stmt 0 view .LVU2100
 7406              	.LBE301:
 7407              	.LBE300:
4913:ThirdParty/FreeRTOS/tasks.c **** 
 7408              		.loc 1 4913 21 is_stmt 1 discriminator 3 view .LVU2101
4913:ThirdParty/FreeRTOS/tasks.c **** 
 7409              		.loc 1 4913 21 discriminator 3 view .LVU2102
 7410 00b6 FEE7     		b	.L531
 7411              	.LVL543:
 7412              	.L541:
 7413              	.LBB302:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7414              		.loc 1 4924 17 view .LVU2103
 7415 00b8 6369     		ldr	r3, [r4, #20]
 7416              	.LVL544:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7417              		.loc 1 4924 17 view .LVU2104
 7418 00ba A168     		ldr	r1, [r4, #8]
 7419 00bc E268     		ldr	r2, [r4, #12]
 7420 00be 8A60     		str	r2, [r1, #8]
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7421              		.loc 1 4924 17 view .LVU2105
 7422 00c0 A168     		ldr	r1, [r4, #8]
 7423 00c2 5160     		str	r1, [r2, #4]
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7424              		.loc 1 4924 17 view .LVU2106
 7425 00c4 5A68     		ldr	r2, [r3, #4]
 7426 00c6 211D     		adds	r1, r4, #4
 7427 00c8 8A42     		cmp	r2, r1
 7428 00ca 2BD0     		beq	.L542
 7429              	.L532:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7430              		.loc 1 4924 17 discriminator 3 view .LVU2107
 7431 00cc 0022     		movs	r2, #0
 7432 00ce 6261     		str	r2, [r4, #20]
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7433              		.loc 1 4924 17 discriminator 3 view .LVU2108
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 264


 7434 00d0 1A68     		ldr	r2, [r3]
 7435 00d2 013A     		subs	r2, r2, #1
 7436 00d4 1A60     		str	r2, [r3]
 7437              	.LBE302:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7438              		.loc 1 4924 62 discriminator 3 view .LVU2109
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7439              		.loc 1 4925 17 discriminator 3 view .LVU2110
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7440              		.loc 1 4925 17 discriminator 3 view .LVU2111
 7441 00d6 E36A     		ldr	r3, [r4, #44]
 7442              	.LVL545:
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7443              		.loc 1 4925 17 is_stmt 0 discriminator 3 view .LVU2112
 7444 00d8 0122     		movs	r2, #1
 7445 00da 9A40     		lsls	r2, r2, r3
 7446 00dc 1F48     		ldr	r0, .L543+4
 7447 00de 0568     		ldr	r5, [r0]
 7448 00e0 2A43     		orrs	r2, r2, r5
 7449 00e2 0260     		str	r2, [r0]
 7450              	.LBB303:
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7451              		.loc 1 4925 17 is_stmt 1 discriminator 3 view .LVU2113
 7452 00e4 1E4A     		ldr	r2, .L543+8
 7453 00e6 03EB8303 		add	r3, r3, r3, lsl #2
 7454 00ea 02EB8303 		add	r3, r2, r3, lsl #2
 7455 00ee 5B68     		ldr	r3, [r3, #4]
 7456              	.LVL546:
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7457              		.loc 1 4925 17 discriminator 3 view .LVU2114
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7458              		.loc 1 4925 17 discriminator 3 view .LVU2115
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7459              		.loc 1 4925 17 discriminator 3 view .LVU2116
 7460 00f0 A360     		str	r3, [r4, #8]
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7461              		.loc 1 4925 17 discriminator 3 view .LVU2117
 7462 00f2 9868     		ldr	r0, [r3, #8]
 7463 00f4 E060     		str	r0, [r4, #12]
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7464              		.loc 1 4925 17 discriminator 3 view .LVU2118
 7465 00f6 4160     		str	r1, [r0, #4]
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7466              		.loc 1 4925 17 discriminator 3 view .LVU2119
 7467 00f8 9960     		str	r1, [r3, #8]
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7468              		.loc 1 4925 17 discriminator 3 view .LVU2120
 7469 00fa E36A     		ldr	r3, [r4, #44]
 7470              	.LVL547:
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7471              		.loc 1 4925 17 is_stmt 0 discriminator 3 view .LVU2121
 7472 00fc 03EB8301 		add	r1, r3, r3, lsl #2
 7473 0100 8800     		lsls	r0, r1, #2
 7474 0102 02EB8101 		add	r1, r2, r1, lsl #2
 7475 0106 6161     		str	r1, [r4, #20]
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7476              		.loc 1 4925 17 is_stmt 1 discriminator 3 view .LVU2122
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 265


 7477 0108 1158     		ldr	r1, [r2, r0]
 7478 010a 0131     		adds	r1, r1, #1
 7479 010c 1150     		str	r1, [r2, r0]
 7480              	.LBE303:
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7481              		.loc 1 4925 17 discriminator 3 view .LVU2123
4925:ThirdParty/FreeRTOS/tasks.c **** 
 7482              		.loc 1 4925 47 discriminator 3 view .LVU2124
4928:ThirdParty/FreeRTOS/tasks.c **** 
 7483              		.loc 1 4928 17 discriminator 3 view .LVU2125
 7484 010e A36A     		ldr	r3, [r4, #40]
 7485 0110 5BB1     		cbz	r3, .L533
4928:ThirdParty/FreeRTOS/tasks.c **** 
 7486              		.loc 1 4928 17 view .LVU2126
 7487              	.LBB304:
 7488              	.LBI304:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7489              		.loc 2 194 34 view .LVU2127
 7490              	.LBB305:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7491              		.loc 2 196 9 view .LVU2128
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7492              		.loc 2 198 9 view .LVU2129
 7493              		.syntax unified
 7494              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7495 0112 4FF05003 			mov r3, #80												
 7496 0116 83F31188 		msr basepri, r3											
 7497 011a BFF36F8F 		isb														
 7498 011e BFF34F8F 		dsb														
 7499              	
 7500              	@ 0 "" 2
 7501              	.LVL548:
 7502              		.thumb
 7503              		.syntax unified
 7504              	.L534:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7505              		.loc 2 198 9 is_stmt 0 view .LVU2130
 7506              	.LBE305:
 7507              	.LBE304:
4928:ThirdParty/FreeRTOS/tasks.c **** 
 7508              		.loc 1 4928 17 is_stmt 1 discriminator 4 view .LVU2131
4928:ThirdParty/FreeRTOS/tasks.c **** 
 7509              		.loc 1 4928 17 discriminator 4 view .LVU2132
 7510 0122 FEE7     		b	.L534
 7511              	.LVL549:
 7512              	.L542:
 7513              	.LBB306:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7514              		.loc 1 4924 17 discriminator 1 view .LVU2133
 7515 0124 E268     		ldr	r2, [r4, #12]
 7516 0126 5A60     		str	r2, [r3, #4]
 7517 0128 D0E7     		b	.L532
 7518              	.LVL550:
 7519              	.L533:
4924:ThirdParty/FreeRTOS/tasks.c ****                 prvAddTaskToReadyList( pxTCB );
 7520              		.loc 1 4924 17 is_stmt 0 discriminator 1 view .LVU2134
 7521              	.LBE306:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 266


4928:ThirdParty/FreeRTOS/tasks.c **** 
 7522              		.loc 1 4928 94 is_stmt 1 discriminator 2 view .LVU2135
4946:ThirdParty/FreeRTOS/tasks.c ****                 {
 7523              		.loc 1 4946 17 discriminator 2 view .LVU2136
4946:ThirdParty/FreeRTOS/tasks.c ****                 {
 7524              		.loc 1 4946 26 is_stmt 0 discriminator 2 view .LVU2137
 7525 012a E26A     		ldr	r2, [r4, #44]
4946:ThirdParty/FreeRTOS/tasks.c ****                 {
 7526              		.loc 1 4946 53 discriminator 2 view .LVU2138
 7527 012c 0D4B     		ldr	r3, .L543+12
 7528 012e 1B68     		ldr	r3, [r3]
 7529 0130 DB6A     		ldr	r3, [r3, #44]
4946:ThirdParty/FreeRTOS/tasks.c ****                 {
 7530              		.loc 1 4946 19 discriminator 2 view .LVU2139
 7531 0132 9A42     		cmp	r2, r3
 7532 0134 0DD9     		bls	.L537
4950:ThirdParty/FreeRTOS/tasks.c ****                 }
 7533              		.loc 1 4950 21 is_stmt 1 view .LVU2140
 7534 0136 4FF0E023 		mov	r3, #-536813568
 7535 013a 4FF08052 		mov	r2, #268435456
 7536 013e C3F8042D 		str	r2, [r3, #3332]
 7537              	.LVL551:
4950:ThirdParty/FreeRTOS/tasks.c ****                 }
 7538              		.loc 1 4950 21 view .LVU2141
 7539              		.syntax unified
 7540              	@ 4950 "ThirdParty/FreeRTOS/tasks.c" 1
 7541 0142 BFF34F8F 		dsb
 7542              	@ 0 "" 2
4950:ThirdParty/FreeRTOS/tasks.c ****                 }
 7543              		.loc 1 4950 21 view .LVU2142
 7544              	@ 4950 "ThirdParty/FreeRTOS/tasks.c" 1
 7545 0146 BFF36F8F 		isb
 7546              	@ 0 "" 2
4950:ThirdParty/FreeRTOS/tasks.c ****                 }
 7547              		.loc 1 4950 52 view .LVU2143
 7548              		.thumb
 7549              		.syntax unified
 7550 014a 0124     		movs	r4, #1
 7551              	.LVL552:
4950:ThirdParty/FreeRTOS/tasks.c ****                 }
 7552              		.loc 1 4950 52 is_stmt 0 view .LVU2144
 7553 014c 92E7     		b	.L530
 7554              	.LVL553:
 7555              	.L535:
4897:ThirdParty/FreeRTOS/tasks.c ****                     }
 7556              		.loc 1 4897 33 view .LVU2145
 7557 014e 0024     		movs	r4, #0
 7558              	.LVL554:
4897:ThirdParty/FreeRTOS/tasks.c ****                     }
 7559              		.loc 1 4897 33 view .LVU2146
 7560 0150 90E7     		b	.L530
 7561              	.LVL555:
 7562              	.L537:
4897:ThirdParty/FreeRTOS/tasks.c ****                     }
 7563              		.loc 1 4897 33 view .LVU2147
 7564 0152 0124     		movs	r4, #1
 7565              	.LVL556:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 267


4897:ThirdParty/FreeRTOS/tasks.c ****                     }
 7566              		.loc 1 4897 33 view .LVU2148
 7567 0154 8EE7     		b	.L530
 7568              	.L544:
 7569 0156 00BF     		.align	2
 7570              	.L543:
 7571 0158 00000000 		.word	xTickCount
 7572 015c 00000000 		.word	uxTopReadyPriority
 7573 0160 00000000 		.word	pxReadyTasksLists
 7574 0164 00000000 		.word	pxCurrentTCB
 7575              		.cfi_endproc
 7576              	.LFE59:
 7578              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 7579              		.align	1
 7580              		.global	xTaskGenericNotifyFromISR
 7581              		.syntax unified
 7582              		.thumb
 7583              		.thumb_func
 7585              	xTaskGenericNotifyFromISR:
 7586              	.LVL557:
 7587              	.LFB60:
4978:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7588              		.loc 1 4978 5 is_stmt 1 view -0
 7589              		.cfi_startproc
 7590              		@ args = 8, pretend = 0, frame = 0
 7591              		@ frame_needed = 0, uses_anonymous_args = 0
4978:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 7592              		.loc 1 4978 5 is_stmt 0 view .LVU2150
 7593 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 7594              	.LCFI57:
 7595              		.cfi_def_cfa_offset 24
 7596              		.cfi_offset 3, -24
 7597              		.cfi_offset 4, -20
 7598              		.cfi_offset 5, -16
 7599              		.cfi_offset 6, -12
 7600              		.cfi_offset 7, -8
 7601              		.cfi_offset 14, -4
4979:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 7602              		.loc 1 4979 9 is_stmt 1 view .LVU2151
4980:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn = pdPASS;
 7603              		.loc 1 4980 9 view .LVU2152
4981:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 7604              		.loc 1 4981 9 view .LVU2153
 7605              	.LVL558:
4982:ThirdParty/FreeRTOS/tasks.c **** 
 7606              		.loc 1 4982 9 view .LVU2154
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7607              		.loc 1 4984 9 view .LVU2155
 7608 0002 68B1     		cbz	r0, .L571
 7609 0004 0C46     		mov	r4, r1
 7610 0006 1746     		mov	r7, r2
 7611 0008 1D46     		mov	r5, r3
 7612 000a 0646     		mov	r6, r0
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7613              		.loc 1 4984 38 discriminator 2 view .LVU2156
4985:ThirdParty/FreeRTOS/tasks.c **** 
 7614              		.loc 1 4985 9 discriminator 2 view .LVU2157
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 268


 7615 000c 89B1     		cbz	r1, .L548
4985:ThirdParty/FreeRTOS/tasks.c **** 
 7616              		.loc 1 4985 9 view .LVU2158
 7617              	.LBB307:
 7618              	.LBI307:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7619              		.loc 2 194 34 view .LVU2159
 7620              	.LBB308:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7621              		.loc 2 196 9 view .LVU2160
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7622              		.loc 2 198 9 view .LVU2161
 7623              		.syntax unified
 7624              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7625 000e 4FF05003 			mov r3, #80												
 7626 0012 83F31188 		msr basepri, r3											
 7627 0016 BFF36F8F 		isb														
 7628 001a BFF34F8F 		dsb														
 7629              	
 7630              	@ 0 "" 2
 7631              	.LVL559:
 7632              		.thumb
 7633              		.syntax unified
 7634              	.L549:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7635              		.loc 2 198 9 is_stmt 0 view .LVU2162
 7636              	.LBE308:
 7637              	.LBE307:
4985:ThirdParty/FreeRTOS/tasks.c **** 
 7638              		.loc 1 4985 9 is_stmt 1 discriminator 2 view .LVU2163
4985:ThirdParty/FreeRTOS/tasks.c **** 
 7639              		.loc 1 4985 9 discriminator 2 view .LVU2164
 7640 001e FEE7     		b	.L549
 7641              	.LVL560:
 7642              	.L571:
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7643              		.loc 1 4984 9 view .LVU2165
 7644              	.LBB309:
 7645              	.LBI309:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7646              		.loc 2 194 34 view .LVU2166
 7647              	.LBB310:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7648              		.loc 2 196 9 view .LVU2167
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7649              		.loc 2 198 9 view .LVU2168
 7650              		.syntax unified
 7651              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7652 0020 4FF05003 			mov r3, #80												
 7653 0024 83F31188 		msr basepri, r3											
 7654 0028 BFF36F8F 		isb														
 7655 002c BFF34F8F 		dsb														
 7656              	
 7657              	@ 0 "" 2
 7658              	.LVL561:
 7659              		.thumb
 7660              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 269


 7661              	.L547:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7662              		.loc 2 198 9 is_stmt 0 view .LVU2169
 7663              	.LBE310:
 7664              	.LBE309:
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7665              		.loc 1 4984 9 is_stmt 1 discriminator 1 view .LVU2170
4984:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 7666              		.loc 1 4984 9 discriminator 1 view .LVU2171
 7667 0030 FEE7     		b	.L547
 7668              	.LVL562:
 7669              	.L548:
4985:ThirdParty/FreeRTOS/tasks.c **** 
 7670              		.loc 1 4985 80 discriminator 2 view .LVU2172
5003:ThirdParty/FreeRTOS/tasks.c **** 
 7671              		.loc 1 5003 9 discriminator 2 view .LVU2173
 7672 0032 FFF7FEFF 		bl	vPortValidateInterruptPriority
 7673              	.LVL563:
5005:ThirdParty/FreeRTOS/tasks.c **** 
 7674              		.loc 1 5005 9 discriminator 2 view .LVU2174
5007:ThirdParty/FreeRTOS/tasks.c ****         {
 7675              		.loc 1 5007 9 discriminator 2 view .LVU2175
 7676              	.LBB311:
 7677              	.LBI311:
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7678              		.loc 2 210 38 discriminator 2 view .LVU2176
 7679              	.LBB312:
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7680              		.loc 2 212 9 discriminator 2 view .LVU2177
 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7681              		.loc 2 214 9 discriminator 2 view .LVU2178
 7682              		.syntax unified
 7683              	@ 214 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7684 0036 EFF31182 			mrs r2, basepri											
 7685 003a 4FF05003 		mov r3, #80												
 7686 003e 83F31188 		msr basepri, r3											
 7687 0042 BFF36F8F 		isb														
 7688 0046 BFF34F8F 		dsb														
 7689              	
 7690              	@ 0 "" 2
 7691              	.LVL564:
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 7692              		.loc 2 226 9 discriminator 2 view .LVU2179
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 7693              		.loc 2 226 9 is_stmt 0 discriminator 2 view .LVU2180
 7694              		.thumb
 7695              		.syntax unified
 7696              	.LBE312:
 7697              	.LBE311:
5009:ThirdParty/FreeRTOS/tasks.c ****             {
 7698              		.loc 1 5009 13 is_stmt 1 discriminator 2 view .LVU2181
5009:ThirdParty/FreeRTOS/tasks.c ****             {
 7699              		.loc 1 5009 15 is_stmt 0 discriminator 2 view .LVU2182
 7700 004a 069B     		ldr	r3, [sp, #24]
 7701 004c 2BB1     		cbz	r3, .L550
5011:ThirdParty/FreeRTOS/tasks.c ****             }
 7702              		.loc 1 5011 17 is_stmt 1 view .LVU2183
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 270


5011:ThirdParty/FreeRTOS/tasks.c ****             }
 7703              		.loc 1 5011 71 is_stmt 0 view .LVU2184
 7704 004e 04F11403 		add	r3, r4, #20
 7705 0052 56F82330 		ldr	r3, [r6, r3, lsl #2]
5011:ThirdParty/FreeRTOS/tasks.c ****             }
 7706              		.loc 1 5011 47 view .LVU2185
 7707 0056 0699     		ldr	r1, [sp, #24]
 7708 0058 0B60     		str	r3, [r1]
 7709              	.L550:
5014:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 7710              		.loc 1 5014 13 is_stmt 1 view .LVU2186
5014:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 7711              		.loc 1 5014 35 is_stmt 0 view .LVU2187
 7712 005a 3119     		adds	r1, r6, r4
 7713 005c 91F85430 		ldrb	r3, [r1, #84]	@ zero_extendqisi2
 7714 0060 DBB2     		uxtb	r3, r3
 7715              	.LVL565:
5015:ThirdParty/FreeRTOS/tasks.c **** 
 7716              		.loc 1 5015 13 is_stmt 1 view .LVU2188
5015:ThirdParty/FreeRTOS/tasks.c **** 
 7717              		.loc 1 5015 53 is_stmt 0 view .LVU2189
 7718 0062 0220     		movs	r0, #2
 7719 0064 81F85400 		strb	r0, [r1, #84]
5017:ThirdParty/FreeRTOS/tasks.c ****             {
 7720              		.loc 1 5017 13 is_stmt 1 view .LVU2190
 7721 0068 042D     		cmp	r5, #4
 7722 006a 21D8     		bhi	.L551
 7723 006c DFE805F0 		tbb	[pc, r5]
 7724              	.L553:
 7725 0070 09       		.byte	(.L557-.L553)/2
 7726 0071 03       		.byte	(.L556-.L553)/2
 7727 0072 0F       		.byte	(.L555-.L553)/2
 7728 0073 16       		.byte	(.L554-.L553)/2
 7729 0074 1A       		.byte	(.L552-.L553)/2
 7730 0075 00       		.p2align 1
 7731              	.L556:
5020:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7732              		.loc 1 5020 21 view .LVU2191
5020:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7733              		.loc 1 5020 43 is_stmt 0 view .LVU2192
 7734 0076 1434     		adds	r4, r4, #20
 7735              	.LVL566:
5020:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7736              		.loc 1 5020 43 view .LVU2193
 7737 0078 56F82410 		ldr	r1, [r6, r4, lsl #2]
5020:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7738              		.loc 1 5020 63 view .LVU2194
 7739 007c 3943     		orrs	r1, r1, r7
 7740 007e 46F82410 		str	r1, [r6, r4, lsl #2]
5021:ThirdParty/FreeRTOS/tasks.c **** 
 7741              		.loc 1 5021 21 is_stmt 1 view .LVU2195
 7742              	.LVL567:
 7743              	.L557:
5060:ThirdParty/FreeRTOS/tasks.c **** 
 7744              		.loc 1 5060 57 view .LVU2196
5064:ThirdParty/FreeRTOS/tasks.c ****             {
 7745              		.loc 1 5064 13 view .LVU2197
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 271


5064:ThirdParty/FreeRTOS/tasks.c ****             {
 7746              		.loc 1 5064 15 is_stmt 0 view .LVU2198
 7747 0082 012B     		cmp	r3, #1
 7748 0084 21D0     		beq	.L572
 7749 0086 0120     		movs	r0, #1
 7750              	.LVL568:
 7751              	.L558:
5097:ThirdParty/FreeRTOS/tasks.c ****                 }
 7752              		.loc 1 5097 45 is_stmt 1 view .LVU2199
5101:ThirdParty/FreeRTOS/tasks.c **** 
 7753              		.loc 1 5101 9 view .LVU2200
 7754              	.LBB313:
 7755              	.LBI313:
 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7756              		.loc 2 230 34 view .LVU2201
 7757              	.LBB314:
 7758              		.loc 2 232 9 view .LVU2202
 7759              		.syntax unified
 7760              	@ 232 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7761 0088 82F31188 			msr basepri, r2	
 7762              	@ 0 "" 2
 7763              		.thumb
 7764              		.syntax unified
 7765              	.LBE314:
 7766              	.LBE313:
5103:ThirdParty/FreeRTOS/tasks.c ****     }
 7767              		.loc 1 5103 9 view .LVU2203
5104:ThirdParty/FreeRTOS/tasks.c **** 
 7768              		.loc 1 5104 5 is_stmt 0 view .LVU2204
 7769 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 7770              	.LVL569:
 7771              	.L555:
5024:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7772              		.loc 1 5024 21 is_stmt 1 view .LVU2205
5024:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7773              		.loc 1 5024 45 is_stmt 0 view .LVU2206
 7774 008e 1434     		adds	r4, r4, #20
 7775              	.LVL570:
5024:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7776              		.loc 1 5024 45 view .LVU2207
 7777 0090 56F82410 		ldr	r1, [r6, r4, lsl #2]
5024:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7778              		.loc 1 5024 66 view .LVU2208
 7779 0094 0131     		adds	r1, r1, #1
 7780 0096 46F82410 		str	r1, [r6, r4, lsl #2]
5025:ThirdParty/FreeRTOS/tasks.c **** 
 7781              		.loc 1 5025 21 is_stmt 1 view .LVU2209
 7782 009a F2E7     		b	.L557
 7783              	.LVL571:
 7784              	.L554:
5028:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7785              		.loc 1 5028 21 view .LVU2210
5028:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7786              		.loc 1 5028 63 is_stmt 0 view .LVU2211
 7787 009c 1434     		adds	r4, r4, #20
 7788              	.LVL572:
5028:ThirdParty/FreeRTOS/tasks.c ****                     break;
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 272


 7789              		.loc 1 5028 63 view .LVU2212
 7790 009e 46F82470 		str	r7, [r6, r4, lsl #2]
5029:ThirdParty/FreeRTOS/tasks.c **** 
 7791              		.loc 1 5029 21 is_stmt 1 view .LVU2213
 7792 00a2 EEE7     		b	.L557
 7793              	.LVL573:
 7794              	.L552:
5033:ThirdParty/FreeRTOS/tasks.c ****                     {
 7795              		.loc 1 5033 21 view .LVU2214
5033:ThirdParty/FreeRTOS/tasks.c ****                     {
 7796              		.loc 1 5033 23 is_stmt 0 view .LVU2215
 7797 00a4 022B     		cmp	r3, #2
 7798 00a6 6AD0     		beq	.L566
5035:ThirdParty/FreeRTOS/tasks.c ****                     }
 7799              		.loc 1 5035 25 is_stmt 1 view .LVU2216
5035:ThirdParty/FreeRTOS/tasks.c ****                     }
 7800              		.loc 1 5035 67 is_stmt 0 view .LVU2217
 7801 00a8 1434     		adds	r4, r4, #20
 7802              	.LVL574:
5035:ThirdParty/FreeRTOS/tasks.c ****                     }
 7803              		.loc 1 5035 67 view .LVU2218
 7804 00aa 46F82470 		str	r7, [r6, r4, lsl #2]
 7805 00ae E8E7     		b	.L557
 7806              	.LVL575:
 7807              	.L551:
5056:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7808              		.loc 1 5056 21 is_stmt 1 view .LVU2219
 7809 00b0 3549     		ldr	r1, .L574
 7810 00b2 0968     		ldr	r1, [r1]
 7811 00b4 0029     		cmp	r1, #0
 7812 00b6 E4D0     		beq	.L557
5056:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7813              		.loc 1 5056 21 view .LVU2220
 7814              	.LBB315:
 7815              	.LBI315:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7816              		.loc 2 194 34 view .LVU2221
 7817              	.LBB316:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7818              		.loc 2 196 9 view .LVU2222
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7819              		.loc 2 198 9 view .LVU2223
 7820              		.syntax unified
 7821              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7822 00b8 4FF05003 			mov r3, #80												
 7823 00bc 83F31188 		msr basepri, r3											
 7824 00c0 BFF36F8F 		isb														
 7825 00c4 BFF34F8F 		dsb														
 7826              	
 7827              	@ 0 "" 2
 7828              	.LVL576:
 7829              		.thumb
 7830              		.syntax unified
 7831              	.L559:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7832              		.loc 2 198 9 is_stmt 0 view .LVU2224
 7833              	.LBE316:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 273


 7834              	.LBE315:
5056:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7835              		.loc 1 5056 21 is_stmt 1 discriminator 3 view .LVU2225
5056:ThirdParty/FreeRTOS/tasks.c ****                     break;
 7836              		.loc 1 5056 21 discriminator 3 view .LVU2226
 7837 00c8 FEE7     		b	.L559
 7838              	.LVL577:
 7839              	.L572:
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7840              		.loc 1 5067 17 view .LVU2227
 7841 00ca B36A     		ldr	r3, [r6, #40]
 7842              	.LVL578:
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7843              		.loc 1 5067 17 is_stmt 0 view .LVU2228
 7844 00cc 43B1     		cbz	r3, .L560
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7845              		.loc 1 5067 17 is_stmt 1 view .LVU2229
 7846              	.LBB317:
 7847              	.LBI317:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 7848              		.loc 2 194 34 view .LVU2230
 7849              	.LBB318:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 7850              		.loc 2 196 9 view .LVU2231
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7851              		.loc 2 198 9 view .LVU2232
 7852              		.syntax unified
 7853              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 7854 00ce 4FF05003 			mov r3, #80												
 7855 00d2 83F31188 		msr basepri, r3											
 7856 00d6 BFF36F8F 		isb														
 7857 00da BFF34F8F 		dsb														
 7858              	
 7859              	@ 0 "" 2
 7860              	.LVL579:
 7861              		.thumb
 7862              		.syntax unified
 7863              	.L561:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 7864              		.loc 2 198 9 is_stmt 0 view .LVU2233
 7865              	.LBE318:
 7866              	.LBE317:
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7867              		.loc 1 5067 17 is_stmt 1 discriminator 4 view .LVU2234
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7868              		.loc 1 5067 17 discriminator 4 view .LVU2235
 7869 00de FEE7     		b	.L561
 7870              	.L560:
5067:ThirdParty/FreeRTOS/tasks.c **** 
 7871              		.loc 1 5067 94 discriminator 2 view .LVU2236
5069:ThirdParty/FreeRTOS/tasks.c ****                 {
 7872              		.loc 1 5069 17 discriminator 2 view .LVU2237
5069:ThirdParty/FreeRTOS/tasks.c ****                 {
 7873              		.loc 1 5069 42 is_stmt 0 discriminator 2 view .LVU2238
 7874 00e0 2A4B     		ldr	r3, .L574+4
 7875 00e2 1B68     		ldr	r3, [r3]
5069:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 274


 7876              		.loc 1 5069 19 discriminator 2 view .LVU2239
 7877 00e4 002B     		cmp	r3, #0
 7878 00e6 3CD1     		bne	.L562
 7879              	.LBB319:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7880              		.loc 1 5071 21 is_stmt 1 view .LVU2240
 7881 00e8 7369     		ldr	r3, [r6, #20]
 7882              	.LVL580:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7883              		.loc 1 5071 21 view .LVU2241
 7884 00ea B068     		ldr	r0, [r6, #8]
 7885 00ec F168     		ldr	r1, [r6, #12]
 7886 00ee 8160     		str	r1, [r0, #8]
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7887              		.loc 1 5071 21 view .LVU2242
 7888 00f0 B068     		ldr	r0, [r6, #8]
 7889 00f2 4860     		str	r0, [r1, #4]
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7890              		.loc 1 5071 21 view .LVU2243
 7891 00f4 5968     		ldr	r1, [r3, #4]
 7892 00f6 301D     		adds	r0, r6, #4
 7893 00f8 8142     		cmp	r1, r0
 7894 00fa 2FD0     		beq	.L573
 7895              	.L563:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7896              		.loc 1 5071 21 discriminator 3 view .LVU2244
 7897 00fc 0021     		movs	r1, #0
 7898 00fe 7161     		str	r1, [r6, #20]
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7899              		.loc 1 5071 21 discriminator 3 view .LVU2245
 7900 0100 1968     		ldr	r1, [r3]
 7901 0102 0139     		subs	r1, r1, #1
 7902 0104 1960     		str	r1, [r3]
 7903              	.LBE319:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7904              		.loc 1 5071 66 discriminator 3 view .LVU2246
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7905              		.loc 1 5072 21 discriminator 3 view .LVU2247
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7906              		.loc 1 5072 21 discriminator 3 view .LVU2248
 7907 0106 F36A     		ldr	r3, [r6, #44]
 7908              	.LVL581:
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7909              		.loc 1 5072 21 is_stmt 0 discriminator 3 view .LVU2249
 7910 0108 0121     		movs	r1, #1
 7911 010a 9940     		lsls	r1, r1, r3
 7912 010c 204C     		ldr	r4, .L574+8
 7913 010e 2568     		ldr	r5, [r4]
 7914 0110 2943     		orrs	r1, r1, r5
 7915 0112 2160     		str	r1, [r4]
 7916              	.LBB320:
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7917              		.loc 1 5072 21 is_stmt 1 discriminator 3 view .LVU2250
 7918 0114 1F49     		ldr	r1, .L574+12
 7919 0116 03EB8303 		add	r3, r3, r3, lsl #2
 7920 011a 01EB8303 		add	r3, r1, r3, lsl #2
 7921 011e 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 275


 7922              	.LVL582:
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7923              		.loc 1 5072 21 discriminator 3 view .LVU2251
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7924              		.loc 1 5072 21 discriminator 3 view .LVU2252
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7925              		.loc 1 5072 21 discriminator 3 view .LVU2253
 7926 0120 B360     		str	r3, [r6, #8]
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7927              		.loc 1 5072 21 discriminator 3 view .LVU2254
 7928 0122 9C68     		ldr	r4, [r3, #8]
 7929 0124 F460     		str	r4, [r6, #12]
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7930              		.loc 1 5072 21 discriminator 3 view .LVU2255
 7931 0126 6060     		str	r0, [r4, #4]
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7932              		.loc 1 5072 21 discriminator 3 view .LVU2256
 7933 0128 9860     		str	r0, [r3, #8]
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7934              		.loc 1 5072 21 discriminator 3 view .LVU2257
 7935 012a F36A     		ldr	r3, [r6, #44]
 7936              	.LVL583:
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7937              		.loc 1 5072 21 is_stmt 0 discriminator 3 view .LVU2258
 7938 012c 03EB8300 		add	r0, r3, r3, lsl #2
 7939 0130 8400     		lsls	r4, r0, #2
 7940 0132 01EB8000 		add	r0, r1, r0, lsl #2
 7941 0136 7061     		str	r0, [r6, #20]
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7942              		.loc 1 5072 21 is_stmt 1 discriminator 3 view .LVU2259
 7943 0138 0859     		ldr	r0, [r1, r4]
 7944 013a 0130     		adds	r0, r0, #1
 7945 013c 0851     		str	r0, [r1, r4]
 7946              	.LBE320:
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7947              		.loc 1 5072 21 discriminator 3 view .LVU2260
5072:ThirdParty/FreeRTOS/tasks.c ****                 }
 7948              		.loc 1 5072 51 discriminator 3 view .LVU2261
 7949              	.LVL584:
 7950              	.L564:
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7951              		.loc 1 5078 89 discriminator 1 view .LVU2262
5081:ThirdParty/FreeRTOS/tasks.c ****                 {
 7952              		.loc 1 5081 17 discriminator 1 view .LVU2263
5081:ThirdParty/FreeRTOS/tasks.c ****                 {
 7953              		.loc 1 5081 26 is_stmt 0 discriminator 1 view .LVU2264
 7954 013e F16A     		ldr	r1, [r6, #44]
5081:ThirdParty/FreeRTOS/tasks.c ****                 {
 7955              		.loc 1 5081 53 discriminator 1 view .LVU2265
 7956 0140 154B     		ldr	r3, .L574+16
 7957 0142 1B68     		ldr	r3, [r3]
 7958 0144 DB6A     		ldr	r3, [r3, #44]
5081:ThirdParty/FreeRTOS/tasks.c ****                 {
 7959              		.loc 1 5081 19 discriminator 1 view .LVU2266
 7960 0146 9942     		cmp	r1, r3
 7961 0148 1BD9     		bls	.L568
5085:ThirdParty/FreeRTOS/tasks.c ****                     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 276


 7962              		.loc 1 5085 21 is_stmt 1 view .LVU2267
5085:ThirdParty/FreeRTOS/tasks.c ****                     {
 7963              		.loc 1 5085 23 is_stmt 0 view .LVU2268
 7964 014a 079B     		ldr	r3, [sp, #28]
 7965 014c 13B1     		cbz	r3, .L565
5087:ThirdParty/FreeRTOS/tasks.c ****                     }
 7966              		.loc 1 5087 25 is_stmt 1 view .LVU2269
5087:ThirdParty/FreeRTOS/tasks.c ****                     }
 7967              		.loc 1 5087 52 is_stmt 0 view .LVU2270
 7968 014e 0123     		movs	r3, #1
 7969 0150 0799     		ldr	r1, [sp, #28]
 7970 0152 0B60     		str	r3, [r1]
 7971              	.L565:
5093:ThirdParty/FreeRTOS/tasks.c ****                 }
 7972              		.loc 1 5093 21 is_stmt 1 view .LVU2271
5093:ThirdParty/FreeRTOS/tasks.c ****                 }
 7973              		.loc 1 5093 35 is_stmt 0 view .LVU2272
 7974 0154 0120     		movs	r0, #1
 7975 0156 114B     		ldr	r3, .L574+20
 7976 0158 1860     		str	r0, [r3]
 7977 015a 95E7     		b	.L558
 7978              	.LVL585:
 7979              	.L573:
 7980              	.LBB321:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7981              		.loc 1 5071 21 is_stmt 1 discriminator 1 view .LVU2273
 7982 015c F168     		ldr	r1, [r6, #12]
 7983 015e 5960     		str	r1, [r3, #4]
 7984 0160 CCE7     		b	.L563
 7985              	.LVL586:
 7986              	.L562:
5071:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 7987              		.loc 1 5071 21 is_stmt 0 discriminator 1 view .LVU2274
 7988              	.LBE321:
 7989              	.LBB322:
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7990              		.loc 1 5078 21 is_stmt 1 view .LVU2275
 7991 0162 0F4B     		ldr	r3, .L574+24
 7992 0164 5968     		ldr	r1, [r3, #4]
 7993              	.LVL587:
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7994              		.loc 1 5078 21 view .LVU2276
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7995              		.loc 1 5078 21 view .LVU2277
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7996              		.loc 1 5078 21 view .LVU2278
 7997 0166 F161     		str	r1, [r6, #28]
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 7998              		.loc 1 5078 21 view .LVU2279
 7999 0168 8C68     		ldr	r4, [r1, #8]
 8000 016a 3462     		str	r4, [r6, #32]
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 8001              		.loc 1 5078 21 view .LVU2280
 8002 016c 06F11800 		add	r0, r6, #24
 8003 0170 6060     		str	r0, [r4, #4]
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 8004              		.loc 1 5078 21 view .LVU2281
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 277


 8005 0172 8860     		str	r0, [r1, #8]
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 8006              		.loc 1 5078 21 view .LVU2282
 8007 0174 B362     		str	r3, [r6, #40]
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 8008              		.loc 1 5078 21 view .LVU2283
 8009 0176 1968     		ldr	r1, [r3]
 8010              	.LVL588:
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 8011              		.loc 1 5078 21 is_stmt 0 view .LVU2284
 8012 0178 0131     		adds	r1, r1, #1
 8013 017a 1960     		str	r1, [r3]
 8014 017c DFE7     		b	.L564
 8015              	.LVL589:
 8016              	.L566:
5078:ThirdParty/FreeRTOS/tasks.c ****                 }
 8017              		.loc 1 5078 21 view .LVU2285
 8018              	.LBE322:
5040:ThirdParty/FreeRTOS/tasks.c ****                     }
 8019              		.loc 1 5040 33 view .LVU2286
 8020 017e 0020     		movs	r0, #0
 8021 0180 82E7     		b	.L558
 8022              	.LVL590:
 8023              	.L568:
5040:ThirdParty/FreeRTOS/tasks.c ****                     }
 8024              		.loc 1 5040 33 view .LVU2287
 8025 0182 0120     		movs	r0, #1
 8026 0184 80E7     		b	.L558
 8027              	.L575:
 8028 0186 00BF     		.align	2
 8029              	.L574:
 8030 0188 00000000 		.word	xTickCount
 8031 018c 00000000 		.word	uxSchedulerSuspended
 8032 0190 00000000 		.word	uxTopReadyPriority
 8033 0194 00000000 		.word	pxReadyTasksLists
 8034 0198 00000000 		.word	pxCurrentTCB
 8035 019c 00000000 		.word	xYieldPending
 8036 01a0 00000000 		.word	xPendingReadyList
 8037              		.cfi_endproc
 8038              	.LFE60:
 8040              		.section	.text.vTaskGenericNotifyGiveFromISR,"ax",%progbits
 8041              		.align	1
 8042              		.global	vTaskGenericNotifyGiveFromISR
 8043              		.syntax unified
 8044              		.thumb
 8045              		.thumb_func
 8047              	vTaskGenericNotifyGiveFromISR:
 8048              	.LVL591:
 8049              	.LFB61:
5114:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 8050              		.loc 1 5114 5 is_stmt 1 view -0
 8051              		.cfi_startproc
 8052              		@ args = 0, pretend = 0, frame = 0
 8053              		@ frame_needed = 0, uses_anonymous_args = 0
5114:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 8054              		.loc 1 5114 5 is_stmt 0 view .LVU2289
 8055 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 278


 8056              	.LCFI58:
 8057              		.cfi_def_cfa_offset 24
 8058              		.cfi_offset 3, -24
 8059              		.cfi_offset 4, -20
 8060              		.cfi_offset 5, -16
 8061              		.cfi_offset 6, -12
 8062              		.cfi_offset 7, -8
 8063              		.cfi_offset 14, -4
5115:ThirdParty/FreeRTOS/tasks.c ****         uint8_t ucOriginalNotifyState;
 8064              		.loc 1 5115 9 is_stmt 1 view .LVU2290
5116:ThirdParty/FreeRTOS/tasks.c ****         UBaseType_t uxSavedInterruptStatus;
 8065              		.loc 1 5116 9 view .LVU2291
5117:ThirdParty/FreeRTOS/tasks.c **** 
 8066              		.loc 1 5117 9 view .LVU2292
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 8067              		.loc 1 5119 9 view .LVU2293
 8068 0002 60B1     		cbz	r0, .L589
 8069 0004 0C46     		mov	r4, r1
 8070 0006 1546     		mov	r5, r2
 8071 0008 0646     		mov	r6, r0
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 8072              		.loc 1 5119 38 discriminator 2 view .LVU2294
5120:ThirdParty/FreeRTOS/tasks.c **** 
 8073              		.loc 1 5120 9 discriminator 2 view .LVU2295
 8074 000a 89B1     		cbz	r1, .L579
5120:ThirdParty/FreeRTOS/tasks.c **** 
 8075              		.loc 1 5120 9 view .LVU2296
 8076              	.LBB323:
 8077              	.LBI323:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8078              		.loc 2 194 34 view .LVU2297
 8079              	.LBB324:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 8080              		.loc 2 196 9 view .LVU2298
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8081              		.loc 2 198 9 view .LVU2299
 8082              		.syntax unified
 8083              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8084 000c 4FF05003 			mov r3, #80												
 8085 0010 83F31188 		msr basepri, r3											
 8086 0014 BFF36F8F 		isb														
 8087 0018 BFF34F8F 		dsb														
 8088              	
 8089              	@ 0 "" 2
 8090              	.LVL592:
 8091              		.thumb
 8092              		.syntax unified
 8093              	.L580:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8094              		.loc 2 198 9 is_stmt 0 view .LVU2300
 8095              	.LBE324:
 8096              	.LBE323:
5120:ThirdParty/FreeRTOS/tasks.c **** 
 8097              		.loc 1 5120 9 is_stmt 1 discriminator 2 view .LVU2301
5120:ThirdParty/FreeRTOS/tasks.c **** 
 8098              		.loc 1 5120 9 discriminator 2 view .LVU2302
 8099 001c FEE7     		b	.L580
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 279


 8100              	.L589:
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 8101              		.loc 1 5119 9 view .LVU2303
 8102              	.LBB325:
 8103              	.LBI325:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8104              		.loc 2 194 34 view .LVU2304
 8105              	.LBB326:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 8106              		.loc 2 196 9 view .LVU2305
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8107              		.loc 2 198 9 view .LVU2306
 8108              		.syntax unified
 8109              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8110 001e 4FF05003 			mov r3, #80												
 8111 0022 83F31188 		msr basepri, r3											
 8112 0026 BFF36F8F 		isb														
 8113 002a BFF34F8F 		dsb														
 8114              	
 8115              	@ 0 "" 2
 8116              	.LVL593:
 8117              		.thumb
 8118              		.syntax unified
 8119              	.L578:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8120              		.loc 2 198 9 is_stmt 0 view .LVU2307
 8121              	.LBE326:
 8122              	.LBE325:
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 8123              		.loc 1 5119 9 is_stmt 1 discriminator 1 view .LVU2308
5119:ThirdParty/FreeRTOS/tasks.c ****         configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
 8124              		.loc 1 5119 9 discriminator 1 view .LVU2309
 8125 002e FEE7     		b	.L578
 8126              	.L579:
5120:ThirdParty/FreeRTOS/tasks.c **** 
 8127              		.loc 1 5120 80 discriminator 2 view .LVU2310
5138:ThirdParty/FreeRTOS/tasks.c **** 
 8128              		.loc 1 5138 9 discriminator 2 view .LVU2311
 8129 0030 FFF7FEFF 		bl	vPortValidateInterruptPriority
 8130              	.LVL594:
5140:ThirdParty/FreeRTOS/tasks.c **** 
 8131              		.loc 1 5140 9 discriminator 2 view .LVU2312
5142:ThirdParty/FreeRTOS/tasks.c ****         {
 8132              		.loc 1 5142 9 discriminator 2 view .LVU2313
 8133              	.LBB327:
 8134              	.LBI327:
 210:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8135              		.loc 2 210 38 discriminator 2 view .LVU2314
 8136              	.LBB328:
 212:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 8137              		.loc 2 212 9 discriminator 2 view .LVU2315
 214:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8138              		.loc 2 214 9 discriminator 2 view .LVU2316
 8139              		.syntax unified
 8140              	@ 214 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8141 0034 EFF31181 			mrs r1, basepri											
 8142 0038 4FF05003 		mov r3, #80												
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 280


 8143 003c 83F31188 		msr basepri, r3											
 8144 0040 BFF36F8F 		isb														
 8145 0044 BFF34F8F 		dsb														
 8146              	
 8147              	@ 0 "" 2
 8148              	.LVL595:
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 8149              		.loc 2 226 9 discriminator 2 view .LVU2317
 226:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 8150              		.loc 2 226 9 is_stmt 0 discriminator 2 view .LVU2318
 8151              		.thumb
 8152              		.syntax unified
 8153              	.LBE328:
 8154              	.LBE327:
5144:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 8155              		.loc 1 5144 13 is_stmt 1 discriminator 2 view .LVU2319
5144:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
 8156              		.loc 1 5144 35 is_stmt 0 discriminator 2 view .LVU2320
 8157 0048 3219     		adds	r2, r6, r4
 8158 004a 92F85430 		ldrb	r3, [r2, #84]	@ zero_extendqisi2
 8159 004e DBB2     		uxtb	r3, r3
 8160              	.LVL596:
5145:ThirdParty/FreeRTOS/tasks.c **** 
 8161              		.loc 1 5145 13 is_stmt 1 discriminator 2 view .LVU2321
5145:ThirdParty/FreeRTOS/tasks.c **** 
 8162              		.loc 1 5145 53 is_stmt 0 discriminator 2 view .LVU2322
 8163 0050 0220     		movs	r0, #2
 8164 0052 82F85400 		strb	r0, [r2, #84]
5149:ThirdParty/FreeRTOS/tasks.c **** 
 8165              		.loc 1 5149 13 is_stmt 1 discriminator 2 view .LVU2323
5149:ThirdParty/FreeRTOS/tasks.c **** 
 8166              		.loc 1 5149 37 is_stmt 0 discriminator 2 view .LVU2324
 8167 0056 1434     		adds	r4, r4, #20
 8168              	.LVL597:
5149:ThirdParty/FreeRTOS/tasks.c **** 
 8169              		.loc 1 5149 37 discriminator 2 view .LVU2325
 8170 0058 56F82420 		ldr	r2, [r6, r4, lsl #2]
5149:ThirdParty/FreeRTOS/tasks.c **** 
 8171              		.loc 1 5149 58 discriminator 2 view .LVU2326
 8172 005c 0132     		adds	r2, r2, #1
 8173 005e 46F82420 		str	r2, [r6, r4, lsl #2]
5151:ThirdParty/FreeRTOS/tasks.c **** 
 8174              		.loc 1 5151 62 is_stmt 1 discriminator 2 view .LVU2327
5155:ThirdParty/FreeRTOS/tasks.c ****             {
 8175              		.loc 1 5155 13 discriminator 2 view .LVU2328
5155:ThirdParty/FreeRTOS/tasks.c ****             {
 8176              		.loc 1 5155 15 is_stmt 0 discriminator 2 view .LVU2329
 8177 0062 012B     		cmp	r3, #1
 8178 0064 02D0     		beq	.L590
 8179              	.LVL598:
 8180              	.L581:
5188:ThirdParty/FreeRTOS/tasks.c ****                 }
 8181              		.loc 1 5188 45 is_stmt 1 view .LVU2330
5192:ThirdParty/FreeRTOS/tasks.c ****     }
 8182              		.loc 1 5192 9 view .LVU2331
 8183              	.LBB329:
 8184              	.LBI329:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 281


 230:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8185              		.loc 2 230 34 view .LVU2332
 8186              	.LBB330:
 8187              		.loc 2 232 9 view .LVU2333
 8188              		.syntax unified
 8189              	@ 232 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8190 0066 81F31188 			msr basepri, r1	
 8191              	@ 0 "" 2
 8192              		.thumb
 8193              		.syntax unified
 8194              	.LBE330:
 8195              	.LBE329:
5193:ThirdParty/FreeRTOS/tasks.c **** 
 8196              		.loc 1 5193 5 is_stmt 0 view .LVU2334
 8197 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 8198              	.LVL599:
 8199              	.L590:
5158:ThirdParty/FreeRTOS/tasks.c **** 
 8200              		.loc 1 5158 17 is_stmt 1 view .LVU2335
 8201 006c B36A     		ldr	r3, [r6, #40]
 8202              	.LVL600:
5158:ThirdParty/FreeRTOS/tasks.c **** 
 8203              		.loc 1 5158 17 is_stmt 0 view .LVU2336
 8204 006e 43B1     		cbz	r3, .L582
5158:ThirdParty/FreeRTOS/tasks.c **** 
 8205              		.loc 1 5158 17 is_stmt 1 view .LVU2337
 8206              	.LBB331:
 8207              	.LBI331:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8208              		.loc 2 194 34 view .LVU2338
 8209              	.LBB332:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 8210              		.loc 2 196 9 view .LVU2339
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8211              		.loc 2 198 9 view .LVU2340
 8212              		.syntax unified
 8213              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8214 0070 4FF05003 			mov r3, #80												
 8215 0074 83F31188 		msr basepri, r3											
 8216 0078 BFF36F8F 		isb														
 8217 007c BFF34F8F 		dsb														
 8218              	
 8219              	@ 0 "" 2
 8220              	.LVL601:
 8221              		.thumb
 8222              		.syntax unified
 8223              	.L583:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8224              		.loc 2 198 9 is_stmt 0 view .LVU2341
 8225              	.LBE332:
 8226              	.LBE331:
5158:ThirdParty/FreeRTOS/tasks.c **** 
 8227              		.loc 1 5158 17 is_stmt 1 discriminator 3 view .LVU2342
5158:ThirdParty/FreeRTOS/tasks.c **** 
 8228              		.loc 1 5158 17 discriminator 3 view .LVU2343
 8229 0080 FEE7     		b	.L583
 8230              	.L582:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 282


5158:ThirdParty/FreeRTOS/tasks.c **** 
 8231              		.loc 1 5158 94 discriminator 2 view .LVU2344
5160:ThirdParty/FreeRTOS/tasks.c ****                 {
 8232              		.loc 1 5160 17 discriminator 2 view .LVU2345
5160:ThirdParty/FreeRTOS/tasks.c ****                 {
 8233              		.loc 1 5160 42 is_stmt 0 discriminator 2 view .LVU2346
 8234 0082 264B     		ldr	r3, .L592
 8235 0084 1B68     		ldr	r3, [r3]
5160:ThirdParty/FreeRTOS/tasks.c ****                 {
 8236              		.loc 1 5160 19 discriminator 2 view .LVU2347
 8237 0086 002B     		cmp	r3, #0
 8238 0088 3AD1     		bne	.L584
 8239              	.LBB333:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8240              		.loc 1 5162 21 is_stmt 1 view .LVU2348
 8241 008a 7369     		ldr	r3, [r6, #20]
 8242              	.LVL602:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8243              		.loc 1 5162 21 view .LVU2349
 8244 008c B068     		ldr	r0, [r6, #8]
 8245 008e F268     		ldr	r2, [r6, #12]
 8246 0090 8260     		str	r2, [r0, #8]
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8247              		.loc 1 5162 21 view .LVU2350
 8248 0092 B068     		ldr	r0, [r6, #8]
 8249 0094 5060     		str	r0, [r2, #4]
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8250              		.loc 1 5162 21 view .LVU2351
 8251 0096 5A68     		ldr	r2, [r3, #4]
 8252 0098 301D     		adds	r0, r6, #4
 8253 009a 8242     		cmp	r2, r0
 8254 009c 2DD0     		beq	.L591
 8255              	.L585:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8256              		.loc 1 5162 21 discriminator 3 view .LVU2352
 8257 009e 0022     		movs	r2, #0
 8258 00a0 7261     		str	r2, [r6, #20]
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8259              		.loc 1 5162 21 discriminator 3 view .LVU2353
 8260 00a2 1A68     		ldr	r2, [r3]
 8261 00a4 013A     		subs	r2, r2, #1
 8262 00a6 1A60     		str	r2, [r3]
 8263              	.LBE333:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8264              		.loc 1 5162 66 discriminator 3 view .LVU2354
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8265              		.loc 1 5163 21 discriminator 3 view .LVU2355
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8266              		.loc 1 5163 21 discriminator 3 view .LVU2356
 8267 00a8 F36A     		ldr	r3, [r6, #44]
 8268              	.LVL603:
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8269              		.loc 1 5163 21 is_stmt 0 discriminator 3 view .LVU2357
 8270 00aa 0122     		movs	r2, #1
 8271 00ac 9A40     		lsls	r2, r2, r3
 8272 00ae 1C4C     		ldr	r4, .L592+4
 8273 00b0 2768     		ldr	r7, [r4]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 283


 8274 00b2 3A43     		orrs	r2, r2, r7
 8275 00b4 2260     		str	r2, [r4]
 8276              	.LBB334:
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8277              		.loc 1 5163 21 is_stmt 1 discriminator 3 view .LVU2358
 8278 00b6 1B4A     		ldr	r2, .L592+8
 8279 00b8 03EB8303 		add	r3, r3, r3, lsl #2
 8280 00bc 02EB8303 		add	r3, r2, r3, lsl #2
 8281 00c0 5B68     		ldr	r3, [r3, #4]
 8282              	.LVL604:
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8283              		.loc 1 5163 21 discriminator 3 view .LVU2359
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8284              		.loc 1 5163 21 discriminator 3 view .LVU2360
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8285              		.loc 1 5163 21 discriminator 3 view .LVU2361
 8286 00c2 B360     		str	r3, [r6, #8]
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8287              		.loc 1 5163 21 discriminator 3 view .LVU2362
 8288 00c4 9C68     		ldr	r4, [r3, #8]
 8289 00c6 F460     		str	r4, [r6, #12]
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8290              		.loc 1 5163 21 discriminator 3 view .LVU2363
 8291 00c8 6060     		str	r0, [r4, #4]
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8292              		.loc 1 5163 21 discriminator 3 view .LVU2364
 8293 00ca 9860     		str	r0, [r3, #8]
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8294              		.loc 1 5163 21 discriminator 3 view .LVU2365
 8295 00cc F36A     		ldr	r3, [r6, #44]
 8296              	.LVL605:
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8297              		.loc 1 5163 21 is_stmt 0 discriminator 3 view .LVU2366
 8298 00ce 03EB8300 		add	r0, r3, r3, lsl #2
 8299 00d2 8400     		lsls	r4, r0, #2
 8300 00d4 02EB8000 		add	r0, r2, r0, lsl #2
 8301 00d8 7061     		str	r0, [r6, #20]
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8302              		.loc 1 5163 21 is_stmt 1 discriminator 3 view .LVU2367
 8303 00da 1059     		ldr	r0, [r2, r4]
 8304 00dc 0130     		adds	r0, r0, #1
 8305 00de 1051     		str	r0, [r2, r4]
 8306              	.LBE334:
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8307              		.loc 1 5163 21 discriminator 3 view .LVU2368
5163:ThirdParty/FreeRTOS/tasks.c ****                 }
 8308              		.loc 1 5163 51 discriminator 3 view .LVU2369
 8309              	.LVL606:
 8310              	.L586:
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8311              		.loc 1 5169 89 discriminator 1 view .LVU2370
5172:ThirdParty/FreeRTOS/tasks.c ****                 {
 8312              		.loc 1 5172 17 discriminator 1 view .LVU2371
5172:ThirdParty/FreeRTOS/tasks.c ****                 {
 8313              		.loc 1 5172 26 is_stmt 0 discriminator 1 view .LVU2372
 8314 00e0 F26A     		ldr	r2, [r6, #44]
5172:ThirdParty/FreeRTOS/tasks.c ****                 {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 284


 8315              		.loc 1 5172 53 discriminator 1 view .LVU2373
 8316 00e2 114B     		ldr	r3, .L592+12
 8317 00e4 1B68     		ldr	r3, [r3]
 8318 00e6 DB6A     		ldr	r3, [r3, #44]
5172:ThirdParty/FreeRTOS/tasks.c ****                 {
 8319              		.loc 1 5172 19 discriminator 1 view .LVU2374
 8320 00e8 9A42     		cmp	r2, r3
 8321 00ea BCD9     		bls	.L581
5176:ThirdParty/FreeRTOS/tasks.c ****                     {
 8322              		.loc 1 5176 21 is_stmt 1 view .LVU2375
5176:ThirdParty/FreeRTOS/tasks.c ****                     {
 8323              		.loc 1 5176 23 is_stmt 0 view .LVU2376
 8324 00ec 0DB1     		cbz	r5, .L587
5178:ThirdParty/FreeRTOS/tasks.c ****                     }
 8325              		.loc 1 5178 25 is_stmt 1 view .LVU2377
5178:ThirdParty/FreeRTOS/tasks.c ****                     }
 8326              		.loc 1 5178 52 is_stmt 0 view .LVU2378
 8327 00ee 0123     		movs	r3, #1
 8328 00f0 2B60     		str	r3, [r5]
 8329              	.L587:
5184:ThirdParty/FreeRTOS/tasks.c ****                 }
 8330              		.loc 1 5184 21 is_stmt 1 view .LVU2379
5184:ThirdParty/FreeRTOS/tasks.c ****                 }
 8331              		.loc 1 5184 35 is_stmt 0 view .LVU2380
 8332 00f2 0E4B     		ldr	r3, .L592+16
 8333 00f4 0122     		movs	r2, #1
 8334 00f6 1A60     		str	r2, [r3]
 8335 00f8 B5E7     		b	.L581
 8336              	.LVL607:
 8337              	.L591:
 8338              	.LBB335:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8339              		.loc 1 5162 21 is_stmt 1 discriminator 1 view .LVU2381
 8340 00fa F268     		ldr	r2, [r6, #12]
 8341 00fc 5A60     		str	r2, [r3, #4]
 8342 00fe CEE7     		b	.L585
 8343              	.LVL608:
 8344              	.L584:
5162:ThirdParty/FreeRTOS/tasks.c ****                     prvAddTaskToReadyList( pxTCB );
 8345              		.loc 1 5162 21 is_stmt 0 discriminator 1 view .LVU2382
 8346              	.LBE335:
 8347              	.LBB336:
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8348              		.loc 1 5169 21 is_stmt 1 view .LVU2383
 8349 0100 0B4B     		ldr	r3, .L592+20
 8350 0102 5A68     		ldr	r2, [r3, #4]
 8351              	.LVL609:
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8352              		.loc 1 5169 21 view .LVU2384
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8353              		.loc 1 5169 21 view .LVU2385
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8354              		.loc 1 5169 21 view .LVU2386
 8355 0104 F261     		str	r2, [r6, #28]
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8356              		.loc 1 5169 21 view .LVU2387
 8357 0106 9468     		ldr	r4, [r2, #8]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 285


 8358 0108 3462     		str	r4, [r6, #32]
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8359              		.loc 1 5169 21 view .LVU2388
 8360 010a 06F11800 		add	r0, r6, #24
 8361 010e 6060     		str	r0, [r4, #4]
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8362              		.loc 1 5169 21 view .LVU2389
 8363 0110 9060     		str	r0, [r2, #8]
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8364              		.loc 1 5169 21 view .LVU2390
 8365 0112 B362     		str	r3, [r6, #40]
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8366              		.loc 1 5169 21 view .LVU2391
 8367 0114 1A68     		ldr	r2, [r3]
 8368              	.LVL610:
5169:ThirdParty/FreeRTOS/tasks.c ****                 }
 8369              		.loc 1 5169 21 is_stmt 0 view .LVU2392
 8370 0116 0132     		adds	r2, r2, #1
 8371 0118 1A60     		str	r2, [r3]
 8372 011a E1E7     		b	.L586
 8373              	.L593:
 8374              		.align	2
 8375              	.L592:
 8376 011c 00000000 		.word	uxSchedulerSuspended
 8377 0120 00000000 		.word	uxTopReadyPriority
 8378 0124 00000000 		.word	pxReadyTasksLists
 8379 0128 00000000 		.word	pxCurrentTCB
 8380 012c 00000000 		.word	xYieldPending
 8381 0130 00000000 		.word	xPendingReadyList
 8382              	.LBE336:
 8383              		.cfi_endproc
 8384              	.LFE61:
 8386              		.section	.text.xTaskGenericNotifyStateClear,"ax",%progbits
 8387              		.align	1
 8388              		.global	xTaskGenericNotifyStateClear
 8389              		.syntax unified
 8390              		.thumb
 8391              		.thumb_func
 8393              	xTaskGenericNotifyStateClear:
 8394              	.LVL611:
 8395              	.LFB62:
5202:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 8396              		.loc 1 5202 5 is_stmt 1 view -0
 8397              		.cfi_startproc
 8398              		@ args = 0, pretend = 0, frame = 0
 8399              		@ frame_needed = 0, uses_anonymous_args = 0
5202:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 8400              		.loc 1 5202 5 is_stmt 0 view .LVU2394
 8401 0000 38B5     		push	{r3, r4, r5, lr}
 8402              	.LCFI59:
 8403              		.cfi_def_cfa_offset 16
 8404              		.cfi_offset 3, -16
 8405              		.cfi_offset 4, -12
 8406              		.cfi_offset 5, -8
 8407              		.cfi_offset 14, -4
5203:ThirdParty/FreeRTOS/tasks.c ****         BaseType_t xReturn;
 8408              		.loc 1 5203 9 is_stmt 1 view .LVU2395
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 286


5204:ThirdParty/FreeRTOS/tasks.c **** 
 8409              		.loc 1 5204 9 view .LVU2396
5206:ThirdParty/FreeRTOS/tasks.c **** 
 8410              		.loc 1 5206 9 view .LVU2397
 8411 0002 41B1     		cbz	r1, .L595
5206:ThirdParty/FreeRTOS/tasks.c **** 
 8412              		.loc 1 5206 9 view .LVU2398
 8413              	.LBB337:
 8414              	.LBI337:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 8415              		.loc 2 194 34 view .LVU2399
 8416              	.LBB338:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 8417              		.loc 2 196 9 view .LVU2400
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8418              		.loc 2 198 9 view .LVU2401
 8419              		.syntax unified
 8420              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 8421 0004 4FF05003 			mov r3, #80												
 8422 0008 83F31188 		msr basepri, r3											
 8423 000c BFF36F8F 		isb														
 8424 0010 BFF34F8F 		dsb														
 8425              	
 8426              	@ 0 "" 2
 8427              	.LVL612:
 8428              		.thumb
 8429              		.syntax unified
 8430              	.L596:
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         (
 8431              		.loc 2 198 9 is_stmt 0 view .LVU2402
 8432              	.LBE338:
 8433              	.LBE337:
5206:ThirdParty/FreeRTOS/tasks.c **** 
 8434              		.loc 1 5206 9 is_stmt 1 discriminator 1 view .LVU2403
5206:ThirdParty/FreeRTOS/tasks.c **** 
 8435              		.loc 1 5206 9 discriminator 1 view .LVU2404
 8436 0014 FEE7     		b	.L596
 8437              	.L595:
 8438 0016 0446     		mov	r4, r0
 8439 0018 0D46     		mov	r5, r1
5206:ThirdParty/FreeRTOS/tasks.c **** 
 8440              		.loc 1 5206 79 discriminator 2 view .LVU2405
5210:ThirdParty/FreeRTOS/tasks.c **** 
 8441              		.loc 1 5210 9 discriminator 2 view .LVU2406
5210:ThirdParty/FreeRTOS/tasks.c **** 
 8442              		.loc 1 5210 17 is_stmt 0 discriminator 2 view .LVU2407
 8443 001a 60B1     		cbz	r0, .L601
 8444              	.LVL613:
 8445              	.L597:
5212:ThirdParty/FreeRTOS/tasks.c ****         {
 8446              		.loc 1 5212 9 is_stmt 1 discriminator 4 view .LVU2408
 8447 001c FFF7FEFF 		bl	vPortEnterCritical
 8448              	.LVL614:
5214:ThirdParty/FreeRTOS/tasks.c ****             {
 8449              		.loc 1 5214 13 discriminator 4 view .LVU2409
5214:ThirdParty/FreeRTOS/tasks.c ****             {
 8450              		.loc 1 5214 37 is_stmt 0 discriminator 4 view .LVU2410
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 287


 8451 0020 6319     		adds	r3, r4, r5
 8452 0022 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 8453 0026 DBB2     		uxtb	r3, r3
5214:ThirdParty/FreeRTOS/tasks.c ****             {
 8454              		.loc 1 5214 15 discriminator 4 view .LVU2411
 8455 0028 022B     		cmp	r3, #2
 8456 002a 07D0     		beq	.L602
5221:ThirdParty/FreeRTOS/tasks.c ****             }
 8457              		.loc 1 5221 25 view .LVU2412
 8458 002c 0024     		movs	r4, #0
 8459              	.LVL615:
 8460              	.L598:
5224:ThirdParty/FreeRTOS/tasks.c **** 
 8461              		.loc 1 5224 9 is_stmt 1 view .LVU2413
 8462 002e FFF7FEFF 		bl	vPortExitCritical
 8463              	.LVL616:
5226:ThirdParty/FreeRTOS/tasks.c ****     }
 8464              		.loc 1 5226 9 view .LVU2414
5227:ThirdParty/FreeRTOS/tasks.c **** 
 8465              		.loc 1 5227 5 is_stmt 0 view .LVU2415
 8466 0032 2046     		mov	r0, r4
 8467 0034 38BD     		pop	{r3, r4, r5, pc}
 8468              	.LVL617:
 8469              	.L601:
5210:ThirdParty/FreeRTOS/tasks.c **** 
 8470              		.loc 1 5210 17 discriminator 1 view .LVU2416
 8471 0036 044B     		ldr	r3, .L603
 8472 0038 1C68     		ldr	r4, [r3]
 8473              	.LVL618:
5210:ThirdParty/FreeRTOS/tasks.c **** 
 8474              		.loc 1 5210 17 discriminator 1 view .LVU2417
 8475 003a EFE7     		b	.L597
 8476              	.LVL619:
 8477              	.L602:
5216:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 8478              		.loc 1 5216 17 is_stmt 1 view .LVU2418
5216:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 8479              		.loc 1 5216 56 is_stmt 0 view .LVU2419
 8480 003c 2C44     		add	r4, r4, r5
 8481              	.LVL620:
5216:ThirdParty/FreeRTOS/tasks.c ****                 xReturn = pdPASS;
 8482              		.loc 1 5216 56 view .LVU2420
 8483 003e 0023     		movs	r3, #0
 8484 0040 84F85430 		strb	r3, [r4, #84]
5217:ThirdParty/FreeRTOS/tasks.c ****             }
 8485              		.loc 1 5217 17 is_stmt 1 view .LVU2421
 8486              	.LVL621:
5217:ThirdParty/FreeRTOS/tasks.c ****             }
 8487              		.loc 1 5217 25 is_stmt 0 view .LVU2422
 8488 0044 0124     		movs	r4, #1
 8489 0046 F2E7     		b	.L598
 8490              	.L604:
 8491              		.align	2
 8492              	.L603:
 8493 0048 00000000 		.word	pxCurrentTCB
 8494              		.cfi_endproc
 8495              	.LFE62:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 288


 8497              		.section	.text.ulTaskGenericNotifyValueClear,"ax",%progbits
 8498              		.align	1
 8499              		.global	ulTaskGenericNotifyValueClear
 8500              		.syntax unified
 8501              		.thumb
 8502              		.thumb_func
 8504              	ulTaskGenericNotifyValueClear:
 8505              	.LVL622:
 8506              	.LFB63:
5237:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 8507              		.loc 1 5237 5 is_stmt 1 view -0
 8508              		.cfi_startproc
 8509              		@ args = 0, pretend = 0, frame = 0
 8510              		@ frame_needed = 0, uses_anonymous_args = 0
5237:ThirdParty/FreeRTOS/tasks.c ****         TCB_t * pxTCB;
 8511              		.loc 1 5237 5 is_stmt 0 view .LVU2424
 8512 0000 70B5     		push	{r4, r5, r6, lr}
 8513              	.LCFI60:
 8514              		.cfi_def_cfa_offset 16
 8515              		.cfi_offset 4, -16
 8516              		.cfi_offset 5, -12
 8517              		.cfi_offset 6, -8
 8518              		.cfi_offset 14, -4
 8519 0002 0C46     		mov	r4, r1
 8520 0004 1646     		mov	r6, r2
5238:ThirdParty/FreeRTOS/tasks.c ****         uint32_t ulReturn;
 8521              		.loc 1 5238 9 is_stmt 1 view .LVU2425
5239:ThirdParty/FreeRTOS/tasks.c **** 
 8522              		.loc 1 5239 9 view .LVU2426
5243:ThirdParty/FreeRTOS/tasks.c **** 
 8523              		.loc 1 5243 9 view .LVU2427
5243:ThirdParty/FreeRTOS/tasks.c **** 
 8524              		.loc 1 5243 17 is_stmt 0 view .LVU2428
 8525 0006 0546     		mov	r5, r0
 8526 0008 78B1     		cbz	r0, .L608
 8527              	.LVL623:
 8528              	.L606:
5245:ThirdParty/FreeRTOS/tasks.c ****         {
 8529              		.loc 1 5245 9 is_stmt 1 discriminator 4 view .LVU2429
 8530 000a FFF7FEFF 		bl	vPortEnterCritical
 8531              	.LVL624:
5249:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 8532              		.loc 1 5249 13 discriminator 4 view .LVU2430
5249:ThirdParty/FreeRTOS/tasks.c ****             pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
 8533              		.loc 1 5249 22 is_stmt 0 discriminator 4 view .LVU2431
 8534 000e 04F11401 		add	r1, r4, #20
 8535 0012 55F82140 		ldr	r4, [r5, r1, lsl #2]
 8536              	.LVL625:
5250:ThirdParty/FreeRTOS/tasks.c ****         }
 8537              		.loc 1 5250 13 is_stmt 1 discriminator 4 view .LVU2432
5250:ThirdParty/FreeRTOS/tasks.c ****         }
 8538              		.loc 1 5250 35 is_stmt 0 discriminator 4 view .LVU2433
 8539 0016 55F82130 		ldr	r3, [r5, r1, lsl #2]
5250:ThirdParty/FreeRTOS/tasks.c ****         }
 8540              		.loc 1 5250 54 discriminator 4 view .LVU2434
 8541 001a 23EA0603 		bic	r3, r3, r6
 8542 001e 45F82130 		str	r3, [r5, r1, lsl #2]
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 289


5252:ThirdParty/FreeRTOS/tasks.c **** 
 8543              		.loc 1 5252 9 is_stmt 1 discriminator 4 view .LVU2435
 8544 0022 FFF7FEFF 		bl	vPortExitCritical
 8545              	.LVL626:
5254:ThirdParty/FreeRTOS/tasks.c ****     }
 8546              		.loc 1 5254 9 discriminator 4 view .LVU2436
5255:ThirdParty/FreeRTOS/tasks.c **** 
 8547              		.loc 1 5255 5 is_stmt 0 discriminator 4 view .LVU2437
 8548 0026 2046     		mov	r0, r4
 8549 0028 70BD     		pop	{r4, r5, r6, pc}
 8550              	.LVL627:
 8551              	.L608:
5243:ThirdParty/FreeRTOS/tasks.c **** 
 8552              		.loc 1 5243 17 discriminator 1 view .LVU2438
 8553 002a 014B     		ldr	r3, .L609
 8554 002c 1D68     		ldr	r5, [r3]
 8555              	.LVL628:
5243:ThirdParty/FreeRTOS/tasks.c **** 
 8556              		.loc 1 5243 17 discriminator 1 view .LVU2439
 8557 002e ECE7     		b	.L606
 8558              	.L610:
 8559              		.align	2
 8560              	.L609:
 8561 0030 00000000 		.word	pxCurrentTCB
 8562              		.cfi_endproc
 8563              	.LFE63:
 8565              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 8566              		.align	2
 8569              	uxSchedulerSuspended:
 8570 0000 00000000 		.space	4
 8571              		.global	uxTopUsedPriority
 8572              		.section	.data.uxTopUsedPriority,"aw"
 8573              		.align	2
 8576              	uxTopUsedPriority:
 8577 0000 04000000 		.word	4
 8578              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 8579              		.align	2
 8582              	xIdleTaskHandle:
 8583 0000 00000000 		.space	4
 8584              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 8585              		.align	2
 8588              	xNextTaskUnblockTime:
 8589 0000 00000000 		.space	4
 8590              		.section	.bss.uxTaskNumber,"aw",%nobits
 8591              		.align	2
 8594              	uxTaskNumber:
 8595 0000 00000000 		.space	4
 8596              		.section	.bss.xNumOfOverflows,"aw",%nobits
 8597              		.align	2
 8600              	xNumOfOverflows:
 8601 0000 00000000 		.space	4
 8602              		.section	.bss.xYieldPending,"aw",%nobits
 8603              		.align	2
 8606              	xYieldPending:
 8607 0000 00000000 		.space	4
 8608              		.section	.bss.xPendedTicks,"aw",%nobits
 8609              		.align	2
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 290


 8612              	xPendedTicks:
 8613 0000 00000000 		.space	4
 8614              		.section	.bss.xSchedulerRunning,"aw",%nobits
 8615              		.align	2
 8618              	xSchedulerRunning:
 8619 0000 00000000 		.space	4
 8620              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 8621              		.align	2
 8624              	uxTopReadyPriority:
 8625 0000 00000000 		.space	4
 8626              		.section	.bss.xTickCount,"aw",%nobits
 8627              		.align	2
 8630              	xTickCount:
 8631 0000 00000000 		.space	4
 8632              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 8633              		.align	2
 8636              	uxCurrentNumberOfTasks:
 8637 0000 00000000 		.space	4
 8638              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 8639              		.align	2
 8642              	xSuspendedTaskList:
 8643 0000 00000000 		.space	20
 8643      00000000 
 8643      00000000 
 8643      00000000 
 8643      00000000 
 8644              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 8645              		.align	2
 8648              	uxDeletedTasksWaitingCleanUp:
 8649 0000 00000000 		.space	4
 8650              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 8651              		.align	2
 8654              	xTasksWaitingTermination:
 8655 0000 00000000 		.space	20
 8655      00000000 
 8655      00000000 
 8655      00000000 
 8655      00000000 
 8656              		.section	.bss.xPendingReadyList,"aw",%nobits
 8657              		.align	2
 8660              	xPendingReadyList:
 8661 0000 00000000 		.space	20
 8661      00000000 
 8661      00000000 
 8661      00000000 
 8661      00000000 
 8662              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 8663              		.align	2
 8666              	pxOverflowDelayedTaskList:
 8667 0000 00000000 		.space	4
 8668              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 8669              		.align	2
 8672              	pxDelayedTaskList:
 8673 0000 00000000 		.space	4
 8674              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 8675              		.align	2
 8678              	xDelayedTaskList2:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 291


 8679 0000 00000000 		.space	20
 8679      00000000 
 8679      00000000 
 8679      00000000 
 8679      00000000 
 8680              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 8681              		.align	2
 8684              	xDelayedTaskList1:
 8685 0000 00000000 		.space	20
 8685      00000000 
 8685      00000000 
 8685      00000000 
 8685      00000000 
 8686              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 8687              		.align	2
 8690              	pxReadyTasksLists:
 8691 0000 00000000 		.space	100
 8691      00000000 
 8691      00000000 
 8691      00000000 
 8691      00000000 
 8692              		.global	pxCurrentTCB
 8693              		.section	.bss.pxCurrentTCB,"aw",%nobits
 8694              		.align	2
 8697              	pxCurrentTCB:
 8698 0000 00000000 		.space	4
 8699              		.text
 8700              	.Letext0:
 8701              		.file 3 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/in
 8702              		.file 4 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/..
 8703              		.file 5 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/..
 8704              		.file 6 "ThirdParty/FreeRTOS/include/projdefs.h"
 8705              		.file 7 "ThirdParty/FreeRTOS/include/list.h"
 8706              		.file 8 "ThirdParty/FreeRTOS/include/task.h"
 8707              		.file 9 "ThirdParty/FreeRTOS/include/portable.h"
 8708              		.file 10 "ThirdParty/FreeRTOS/include/timers.h"
 8709              		.file 11 "C:\\ST\\STM32CubeCLT_1.16.0\\GNU-tools-for-STM32\\bin\\../lib/gcc/arm-none-eabi/12.3.1/.
 8710              		.file 12 "<built-in>"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 292


DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:21     .text.prvTaskIsTaskSuspended:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:26     .text.prvTaskIsTaskSuspended:00000000 prvTaskIsTaskSuspended
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:114    .text.prvTaskIsTaskSuspended:00000038 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8642   .bss.xSuspendedTaskList:00000000 xSuspendedTaskList
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8660   .bss.xPendingReadyList:00000000 xPendingReadyList
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:120    .text.prvTaskCheckFreeStackSpace:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:125    .text.prvTaskCheckFreeStackSpace:00000000 prvTaskCheckFreeStackSpace
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:168    .text.prvResetNextTaskUnblockTime:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:173    .text.prvResetNextTaskUnblockTime:00000000 prvResetNextTaskUnblockTime
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:208    .text.prvResetNextTaskUnblockTime:00000020 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8672   .bss.pxDelayedTaskList:00000000 pxDelayedTaskList
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8588   .bss.xNextTaskUnblockTime:00000000 xNextTaskUnblockTime
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:214    .text.prvDeleteTCB:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:219    .text.prvDeleteTCB:00000000 prvDeleteTCB
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:251    .text.prvInitialiseNewTask:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:256    .text.prvInitialiseNewTask:00000000 prvInitialiseNewTask
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:426    .text.prvInitialiseTaskLists:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:431    .text.prvInitialiseTaskLists:00000000 prvInitialiseTaskLists
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:504    .text.prvInitialiseTaskLists:00000048 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8690   .bss.pxReadyTasksLists:00000000 pxReadyTasksLists
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8684   .bss.xDelayedTaskList1:00000000 xDelayedTaskList1
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8678   .bss.xDelayedTaskList2:00000000 xDelayedTaskList2
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8654   .bss.xTasksWaitingTermination:00000000 xTasksWaitingTermination
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8666   .bss.pxOverflowDelayedTaskList:00000000 pxOverflowDelayedTaskList
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:516    .text.prvAddNewTaskToReadyList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:521    .text.prvAddNewTaskToReadyList:00000000 prvAddNewTaskToReadyList
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:686    .text.prvAddNewTaskToReadyList:000000b0 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8636   .bss.uxCurrentNumberOfTasks:00000000 uxCurrentNumberOfTasks
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8697   .bss.pxCurrentTCB:00000000 pxCurrentTCB
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8618   .bss.xSchedulerRunning:00000000 xSchedulerRunning
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8594   .bss.uxTaskNumber:00000000 uxTaskNumber
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8624   .bss.uxTopReadyPriority:00000000 uxTopReadyPriority
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:696    .text.prvCheckTasksWaitingTermination:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:701    .text.prvCheckTasksWaitingTermination:00000000 prvCheckTasksWaitingTermination
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:774    .text.prvCheckTasksWaitingTermination:00000040 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8648   .bss.uxDeletedTasksWaitingCleanUp:00000000 uxDeletedTasksWaitingCleanUp
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:781    .text.prvIdleTask:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:786    .text.prvIdleTask:00000000 prvIdleTask
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:835    .text.prvIdleTask:00000024 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:840    .text.prvAddCurrentTaskToDelayedList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:845    .text.prvAddCurrentTaskToDelayedList:00000000 prvAddCurrentTaskToDelayedList
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:991    .text.prvAddCurrentTaskToDelayedList:00000094 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8630   .bss.xTickCount:00000000 xTickCount
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1002   .text.xTaskCreate:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1008   .text.xTaskCreate:00000000 xTaskCreate
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1125   .text.vTaskDelete:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1131   .text.vTaskDelete:00000000 vTaskDelete
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1324   .text.vTaskDelete:000000c4 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8569   .bss.uxSchedulerSuspended:00000000 uxSchedulerSuspended
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1337   .text.eTaskGetState:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1343   .text.eTaskGetState:00000000 eTaskGetState
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1524   .text.eTaskGetState:00000088 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1533   .text.uxTaskPriorityGet:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1539   .text.uxTaskPriorityGet:00000000 uxTaskPriorityGet
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1585   .text.uxTaskPriorityGet:0000001c $d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 293


C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1590   .text.uxTaskPriorityGetFromISR:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1596   .text.uxTaskPriorityGetFromISR:00000000 uxTaskPriorityGetFromISR
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1675   .text.uxTaskPriorityGetFromISR:0000002c $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1680   .text.vTaskPrioritySet:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1686   .text.vTaskPrioritySet:00000000 vTaskPrioritySet
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1953   .text.vTaskPrioritySet:000000f4 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1960   .text.vTaskResume:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:1966   .text.vTaskResume:00000000 vTaskResume
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2121   .text.vTaskResume:00000094 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2128   .text.xTaskResumeFromISR:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2134   .text.xTaskResumeFromISR:00000000 xTaskResumeFromISR
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2336   .text.xTaskResumeFromISR:000000b4 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8606   .bss.xYieldPending:00000000 xYieldPending
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2346   .rodata.vTaskStartScheduler.str1.4:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2350   .text.vTaskStartScheduler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2356   .text.vTaskStartScheduler:00000000 vTaskStartScheduler
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2487   .text.vTaskStartScheduler:00000070 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8582   .bss.xIdleTaskHandle:00000000 xIdleTaskHandle
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8576   .data.uxTopUsedPriority:00000000 uxTopUsedPriority
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2498   .text.vTaskEndScheduler:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2504   .text.vTaskEndScheduler:00000000 vTaskEndScheduler
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2547   .text.vTaskEndScheduler:00000020 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2552   .text.vTaskSuspendAll:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2558   .text.vTaskSuspendAll:00000000 vTaskSuspendAll
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2577   .text.vTaskSuspendAll:0000000c $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2582   .text.xTaskGetTickCount:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2588   .text.xTaskGetTickCount:00000000 xTaskGetTickCount
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2609   .text.xTaskGetTickCount:00000008 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2614   .text.xTaskGetTickCountFromISR:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2620   .text.xTaskGetTickCountFromISR:00000000 xTaskGetTickCountFromISR
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2649   .text.xTaskGetTickCountFromISR:0000000c $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2654   .text.uxTaskGetNumberOfTasks:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2660   .text.uxTaskGetNumberOfTasks:00000000 uxTaskGetNumberOfTasks
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2676   .text.uxTaskGetNumberOfTasks:00000008 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2681   .text.pcTaskGetName:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2687   .text.pcTaskGetName:00000000 pcTaskGetName
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2744   .text.pcTaskGetName:00000024 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2749   .text.xTaskIncrementTick:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:2755   .text.xTaskIncrementTick:00000000 xTaskIncrementTick
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3105   .text.xTaskIncrementTick:0000014c $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8600   .bss.xNumOfOverflows:00000000 xNumOfOverflows
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8612   .bss.xPendedTicks:00000000 xPendedTicks
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3120   .text.xTaskResumeAll:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3126   .text.xTaskResumeAll:00000000 xTaskResumeAll
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3452   .text.xTaskResumeAll:0000012c $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3464   .text.xTaskDelayUntil:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3470   .text.xTaskDelayUntil:00000000 xTaskDelayUntil
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3714   .text.xTaskDelayUntil:000000a8 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3720   .text.vTaskDelay:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3726   .text.vTaskDelay:00000000 vTaskDelay
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3818   .text.vTaskDelay:00000048 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3823   .text.xTaskCatchUpTicks:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3829   .text.xTaskCatchUpTicks:00000000 xTaskCatchUpTicks
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3902   .text.xTaskCatchUpTicks:00000038 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3908   .text.vTaskSwitchContext:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:3914   .text.vTaskSwitchContext:00000000 vTaskSwitchContext
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4055   .text.vTaskSwitchContext:00000084 $d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 294


C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4066   .text.vTaskSuspend:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4072   .text.vTaskSuspend:00000000 vTaskSuspend
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4299   .text.vTaskSuspend:000000dc $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4310   .text.vTaskPlaceOnEventList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4316   .text.vTaskPlaceOnEventList:00000000 vTaskPlaceOnEventList
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4383   .text.vTaskPlaceOnEventList:0000002c $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4388   .text.vTaskPlaceOnUnorderedEventList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4394   .text.vTaskPlaceOnUnorderedEventList:00000000 vTaskPlaceOnUnorderedEventList
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4523   .text.vTaskPlaceOnUnorderedEventList:00000068 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4529   .text.vTaskPlaceOnEventListRestricted:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4535   .text.vTaskPlaceOnEventListRestricted:00000000 vTaskPlaceOnEventListRestricted
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4635   .text.vTaskPlaceOnEventListRestricted:00000050 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4640   .text.xTaskRemoveFromEventList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4646   .text.xTaskRemoveFromEventList:00000000 xTaskRemoveFromEventList
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4899   .text.xTaskRemoveFromEventList:000000d8 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4909   .text.vTaskRemoveFromUnorderedEventList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:4915   .text.vTaskRemoveFromUnorderedEventList:00000000 vTaskRemoveFromUnorderedEventList
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5145   .text.vTaskRemoveFromUnorderedEventList:000000cc $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5155   .text.vTaskSetTimeOutState:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5161   .text.vTaskSetTimeOutState:00000000 vTaskSetTimeOutState
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5230   .text.vTaskSetTimeOutState:00000030 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5236   .text.vTaskInternalSetTimeOutState:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5242   .text.vTaskInternalSetTimeOutState:00000000 vTaskInternalSetTimeOutState
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5265   .text.vTaskInternalSetTimeOutState:00000010 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5271   .text.xTaskCheckForTimeOut:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5277   .text.xTaskCheckForTimeOut:00000000 xTaskCheckForTimeOut
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5458   .text.xTaskCheckForTimeOut:00000080 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5464   .text.vTaskMissedYield:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5470   .text.vTaskMissedYield:00000000 vTaskMissedYield
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5487   .text.vTaskMissedYield:00000008 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5492   .text.uxTaskGetTaskNumber:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5498   .text.uxTaskGetTaskNumber:00000000 uxTaskGetTaskNumber
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5531   .text.vTaskSetTaskNumber:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5537   .text.vTaskSetTaskNumber:00000000 vTaskSetTaskNumber
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5562   .text.vTaskGetInfo:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5568   .text.vTaskGetInfo:00000000 vTaskGetInfo
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5715   .text.vTaskGetInfo:00000074 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5720   .text.prvListTasksWithinSingleList:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5725   .text.prvListTasksWithinSingleList:00000000 prvListTasksWithinSingleList
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5841   .text.uxTaskGetSystemState:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5847   .text.uxTaskGetSystemState:00000000 uxTaskGetSystemState
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5985   .text.uxTaskGetSystemState:00000098 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:5995   .text.xTaskGetCurrentTaskHandle:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6001   .text.xTaskGetCurrentTaskHandle:00000000 xTaskGetCurrentTaskHandle
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6020   .text.xTaskGetCurrentTaskHandle:00000008 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6025   .text.xTaskGetSchedulerState:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6031   .text.xTaskGetSchedulerState:00000000 xTaskGetSchedulerState
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6069   .text.xTaskGetSchedulerState:00000018 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6075   .text.xTaskPriorityInherit:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6081   .text.xTaskPriorityInherit:00000000 xTaskPriorityInherit
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6268   .text.xTaskPriorityInherit:000000b8 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6275   .text.xTaskPriorityDisinherit:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6281   .text.xTaskPriorityDisinherit:00000000 xTaskPriorityDisinherit
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6493   .text.xTaskPriorityDisinherit:000000b0 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6500   .text.vTaskPriorityDisinheritAfterTimeout:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6506   .text.vTaskPriorityDisinheritAfterTimeout:00000000 vTaskPriorityDisinheritAfterTimeout
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6727   .text.vTaskPriorityDisinheritAfterTimeout:000000c0 $d
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 295


C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6734   .text.uxTaskResetEventItemValue:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6740   .text.uxTaskResetEventItemValue:00000000 uxTaskResetEventItemValue
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6767   .text.uxTaskResetEventItemValue:00000014 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6772   .text.pvTaskIncrementMutexHeldCount:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6778   .text.pvTaskIncrementMutexHeldCount:00000000 pvTaskIncrementMutexHeldCount
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6809   .text.pvTaskIncrementMutexHeldCount:00000018 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6814   .text.ulTaskGenericNotifyTake:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6820   .text.ulTaskGenericNotifyTake:00000000 ulTaskGenericNotifyTake
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6979   .text.ulTaskGenericNotifyTake:000000a4 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6984   .text.xTaskGenericNotifyWait:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:6990   .text.xTaskGenericNotifyWait:00000000 xTaskGenericNotifyWait
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7178   .text.xTaskGenericNotifyWait:000000c8 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7183   .text.xTaskGenericNotify:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7189   .text.xTaskGenericNotify:00000000 xTaskGenericNotify
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7280   .text.xTaskGenericNotify:0000004a $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7571   .text.xTaskGenericNotify:00000158 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7579   .text.xTaskGenericNotifyFromISR:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7585   .text.xTaskGenericNotifyFromISR:00000000 xTaskGenericNotifyFromISR
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7725   .text.xTaskGenericNotifyFromISR:00000070 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8030   .text.xTaskGenericNotifyFromISR:00000188 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8041   .text.vTaskGenericNotifyGiveFromISR:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8047   .text.vTaskGenericNotifyGiveFromISR:00000000 vTaskGenericNotifyGiveFromISR
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8376   .text.vTaskGenericNotifyGiveFromISR:0000011c $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8387   .text.xTaskGenericNotifyStateClear:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8393   .text.xTaskGenericNotifyStateClear:00000000 xTaskGenericNotifyStateClear
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8493   .text.xTaskGenericNotifyStateClear:00000048 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8498   .text.ulTaskGenericNotifyValueClear:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8504   .text.ulTaskGenericNotifyValueClear:00000000 ulTaskGenericNotifyValueClear
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8561   .text.ulTaskGenericNotifyValueClear:00000030 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8566   .bss.uxSchedulerSuspended:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8573   .data.uxTopUsedPriority:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8579   .bss.xIdleTaskHandle:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8585   .bss.xNextTaskUnblockTime:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8591   .bss.uxTaskNumber:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8597   .bss.xNumOfOverflows:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8603   .bss.xYieldPending:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8609   .bss.xPendedTicks:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8615   .bss.xSchedulerRunning:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8621   .bss.uxTopReadyPriority:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8627   .bss.xTickCount:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8633   .bss.uxCurrentNumberOfTasks:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8639   .bss.xSuspendedTaskList:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8645   .bss.uxDeletedTasksWaitingCleanUp:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8651   .bss.xTasksWaitingTermination:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8657   .bss.xPendingReadyList:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8663   .bss.pxOverflowDelayedTaskList:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8669   .bss.pxDelayedTaskList:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8675   .bss.xDelayedTaskList2:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8681   .bss.xDelayedTaskList1:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8687   .bss.pxReadyTasksLists:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:8694   .bss.pxCurrentTCB:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7286   .text.xTaskGenericNotify:0000004f $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7286   .text.xTaskGenericNotify:00000050 $t
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7730   .text.xTaskGenericNotifyFromISR:00000075 $d
C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s:7730   .text.xTaskGenericNotifyFromISR:00000076 $t

UNDEFINED SYMBOLS
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\ccTHxVVO.s 			page 296


vPortFree
memset
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vPortExitCritical
uxListRemove
vListInsert
pvPortMalloc
vListInsertEnd
vPortValidateInterruptPriority
xTimerCreateTimerTask
xPortStartScheduler
vPortEndScheduler
