ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"Active_Object.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/ActiveObject/Active_Object.c"
  20              		.section	.text.Active_eventloop,"ax",%progbits
  21              		.align	1
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	Active_eventloop:
  27              	.LVL0:
  28              	.LFB140:
   1:Core/Src/ActiveObject/Active_Object.c **** #include "Active_Object.h"
   2:Core/Src/ActiveObject/Active_Object.c **** 
   3:Core/Src/ActiveObject/Active_Object.c **** /**
   4:Core/Src/ActiveObject/Active_Object.c ****  * HÃ m constructer
   5:Core/Src/ActiveObject/Active_Object.c ****  */
   6:Core/Src/ActiveObject/Active_Object.c **** void Active_ctor (Active * const self, DispatchHandler dispatch) {
   7:Core/Src/ActiveObject/Active_Object.c ****     /* Assign dispatch handler */
   8:Core/Src/ActiveObject/Active_Object.c ****     self->dispatch = dispatch;
   9:Core/Src/ActiveObject/Active_Object.c **** }
  10:Core/Src/ActiveObject/Active_Object.c **** 
  11:Core/Src/ActiveObject/Active_Object.c **** /*-------------------------------------------------------------------------------------------------
  12:Core/Src/ActiveObject/Active_Object.c **** /* Event-loop thread function for all Active Object (FreeRTOS task signature) */
  13:Core/Src/ActiveObject/Active_Object.c **** static void Active_eventloop (void *pvParameters) {
  29              		.loc 1 13 51 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  14:Core/Src/ActiveObject/Active_Object.c ****     Active *self = (Active *) pvParameters;
  33              		.loc 1 14 5 view .LVU1
  15:Core/Src/ActiveObject/Active_Object.c ****     static Event const initEvt = { INIT_SIG };
  34              		.loc 1 15 5 view .LVU2
  16:Core/Src/ActiveObject/Active_Object.c ****     /* Active object must be provided */
  17:Core/Src/ActiveObject/Active_Object.c ****     configASSERT(self);
  35              		.loc 1 17 5 view .LVU3
  36 0000 90B1     		cbz	r0, .L7
  13:Core/Src/ActiveObject/Active_Object.c ****     Active *self = (Active *) pvParameters;
  37              		.loc 1 13 51 is_stmt 0 view .LVU4
  38 0002 10B5     		push	{r4, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 2


  41              		.cfi_offset 4, -8
  42              		.cfi_offset 14, -4
  43 0004 82B0     		sub	sp, sp, #8
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 16
  46 0006 0446     		mov	r4, r0
  47              		.loc 1 17 23 is_stmt 1 discriminator 2 view .LVU5
  18:Core/Src/ActiveObject/Active_Object.c **** 
  19:Core/Src/ActiveObject/Active_Object.c ****     /* Initialize Active Object */
  20:Core/Src/ActiveObject/Active_Object.c ****     (*self->dispatch) (self, &initEvt);
  48              		.loc 1 20 5 view .LVU6
  49              		.loc 1 20 6 is_stmt 0 view .LVU7
  50 0008 D0F8B030 		ldr	r3, [r0, #176]
  51 000c 0B49     		ldr	r1, .L8
  52 000e 9847     		blx	r3
  53              	.LVL1:
  54              	.L4:
  21:Core/Src/ActiveObject/Active_Object.c ****     for(;;) {
  55              		.loc 1 21 5 is_stmt 1 view .LVU8
  56              	.LBB11:
  22:Core/Src/ActiveObject/Active_Object.c ****         Event * event;  /* Pointer to Event object (message) */
  57              		.loc 1 22 9 view .LVU9
  23:Core/Src/ActiveObject/Active_Object.c ****     
  24:Core/Src/ActiveObject/Active_Object.c ****         /* Wait for any event and receive it into object 'event' */
  25:Core/Src/ActiveObject/Active_Object.c ****         xQueueReceive(self->queue, &event, portMAX_DELAY);
  58              		.loc 1 25 9 view .LVU10
  59 0010 4FF0FF32 		mov	r2, #-1
  60 0014 01A9     		add	r1, sp, #4
  61 0016 E06D     		ldr	r0, [r4, #92]
  62 0018 FFF7FEFF 		bl	xQueueReceive
  63              	.LVL2:
  26:Core/Src/ActiveObject/Active_Object.c ****         /* Dispatch to Active Object 'self' */
  27:Core/Src/ActiveObject/Active_Object.c ****         (*self->dispatch) (self, event);
  64              		.loc 1 27 9 view .LVU11
  65              		.loc 1 27 10 is_stmt 0 view .LVU12
  66 001c D4F8B030 		ldr	r3, [r4, #176]
  67 0020 0199     		ldr	r1, [sp, #4]
  68 0022 2046     		mov	r0, r4
  69 0024 9847     		blx	r3
  70              	.LVL3:
  71              	.LBE11:
  21:Core/Src/ActiveObject/Active_Object.c ****         Event * event;  /* Pointer to Event object (message) */
  72              		.loc 1 21 5 is_stmt 1 view .LVU13
  73 0026 F3E7     		b	.L4
  74              	.LVL4:
  75              	.L7:
  76              	.LCFI2:
  77              		.cfi_def_cfa_offset 0
  78              		.cfi_restore 4
  79              		.cfi_restore 14
  17:Core/Src/ActiveObject/Active_Object.c **** 
  80              		.loc 1 17 5 discriminator 1 view .LVU14
  81              	.LBB12:
  82              	.LBI12:
  83              		.file 2 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h"
   1:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.5.1
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 3


   3:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2021 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * SPDX-License-Identifier: MIT
   6:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
   7:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   8:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   9:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
  10:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  11:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  12:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  13:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  14:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  15:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  16:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  17:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  19:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  20:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  21:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  22:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  23:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  24:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://www.FreeRTOS.org
  25:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * https://github.com/FreeRTOS
  26:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  27:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  28:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  30:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  31:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define PORTMACRO_H
  32:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  33:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef __cplusplus
  34:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern "C" {
  35:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  36:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  37:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  38:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  39:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  40:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  41:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  42:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *
  43:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  44:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  45:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  */
  46:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  48:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCHAR          char
  49:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portFLOAT         float
  50:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDOUBLE        double
  51:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portLONG          long
  52:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSHORT         short
  53:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_TYPE    uint32_t
  54:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBASE_TYPE     long
  55:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef portSTACK_TYPE   StackType_t;
  57:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef long             BaseType_t;
  58:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     typedef unsigned long    UBaseType_t;
  59:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 4


  60:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if ( configUSE_16_BIT_TICKS == 1 )
  61:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint16_t     TickType_t;
  62:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffff
  63:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #else
  64:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         typedef uint32_t     TickType_t;
  65:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portMAX_DELAY              ( TickType_t ) 0xffffffffUL
  66:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  68:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not need to be guarded with a critical section. */
  69:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portTICK_TYPE_IS_ATOMIC    1
  70:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
  71:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  72:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  73:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  74:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSTACK_GROWTH      ( -1 )
  75:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTICK_PERIOD_MS    ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  76:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portBYTE_ALIGNMENT    8
  77:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDONT_DISCARD      __attribute__( ( used ) )
  78:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  79:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  80:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  81:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD()                                 \
  82:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {                                                   \
  83:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Set a PendSV to request a context switch. */ \
  84:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT; \
  85:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****                                                         \
  86:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Barriers are normally not required but do ensure the code is completely \
  87:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****          * within the specified behaviour for the architecture. */ \
  88:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "dsb" ::: "memory" );                     \
  89:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "isb" );                                  \
  90:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
  91:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  92:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_INT_CTRL_REG     ( *( ( volatile uint32_t * ) 0xe000ed04 ) )
  93:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNVIC_PENDSVSET_BIT    ( 1UL << 28UL )
  94:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEND_SWITCHING_ISR( xSwitchRequired )    do { if( xSwitchRequired != pdFALSE ) portY
  95:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portYIELD_FROM_ISR( x )                     portEND_SWITCHING_ISR( x )
  96:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  97:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
  98:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  99:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortEnterCritical( void );
 100:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     extern void vPortExitCritical( void );
 101:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portSET_INTERRUPT_MASK_FROM_ISR()         ulPortRaiseBASEPRI()
 102:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portCLEAR_INTERRUPT_MASK_FROM_ISR( x )    vPortSetBASEPRI( x )
 103:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portDISABLE_INTERRUPTS()                  vPortRaiseBASEPRI()
 104:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENABLE_INTERRUPTS()                   vPortSetBASEPRI( 0 )
 105:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portENTER_CRITICAL()                      vPortEnterCritical()
 106:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portEXIT_CRITICAL()                       vPortExitCritical()
 107:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 109:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 110:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 111:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * not necessary for to use this port.  They are defined so the common demo files
 112:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****  * (which build with all the ports) will build. */
 113:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION_PROTO( vFunction, pvParameters )    void vFunction( void * pvParamete
 114:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portTASK_FUNCTION( vFunction, pvParameters )          void vFunction( void * pvParamete
 115:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 116:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 5


 117:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 118:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portSUPPRESS_TICKS_AND_SLEEP
 119:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 120:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime )    vPortSuppressTicksAndSleep( xE
 121:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 122:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 123:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 124:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 125:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 126:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define configUSE_PORT_OPTIMISED_TASK_SELECTION    1
 127:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 128:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 130:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 131:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Generic helper function. */
 132:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t 
 133:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 134:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             uint8_t ucReturn;
 135:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 136:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             __asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 137:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             return ucReturn;
 139:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 140:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 141:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Check the configuration. */
 142:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #if ( configMAX_PRIORITIES > 32 )
 143:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             #error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIO
 144:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #endif
 145:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 146:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* Store/clear the ready priorities in a bit map. */
 147:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities )    ( uxReadyPriorities )
 148:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities )     ( uxReadyPriorities )
 149:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 152:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities )    uxTopPriority = ( 3
 153:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 154:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 155:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 156:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 158:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifdef configASSERT
 159:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         void vPortValidateInterruptPriority( void );
 160:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()    vPortValidateInterruptPriority()
 161:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 162:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portNOP()
 165:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 166:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #define portINLINE              __inline
 167:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 168:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #ifndef portFORCE_INLINE
 169:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         #define portFORCE_INLINE    inline __attribute__( ( always_inline ) )
 170:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     #endif
 171:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 172:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 173:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 6


 174:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulCurrentInterrupt;
 175:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         BaseType_t xReturn;
 176:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         /* Obtain the number of the currently executing interrupt. */
 178:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile ( "mrs %0, ipsr" : "=r" ( ulCurrentInterrupt )::"memory" );
 179:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         if( ulCurrentInterrupt == 0 )
 181:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 182:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdFALSE;
 183:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 184:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         else
 185:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         {
 186:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****             xReturn = pdTRUE;
 187:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         }
 188:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         return xReturn;
 190:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     }
 191:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 192:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 193:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  84              		.loc 2 194 34 view .LVU15
  85              	.LBB13:
 195:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         uint32_t ulNewBASEPRI;
  86              		.loc 2 196 9 view .LVU16
 197:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 198:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****         __asm volatile
  87              		.loc 2 198 9 view .LVU17
  88              		.syntax unified
  89              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
  90 0028 4FF05003 			mov r3, #80												
  91 002c 83F31188 		msr basepri, r3											
  92 0030 BFF36F8F 		isb														
  93 0034 BFF34F8F 		dsb														
  94              	
  95              	@ 0 "" 2
  96              		.thumb
  97              		.syntax unified
  98              	.L3:
  99              	.LBE13:
 100              	.LBE12:
  17:Core/Src/ActiveObject/Active_Object.c **** 
 101              		.loc 1 17 5 discriminator 3 view .LVU18
  17:Core/Src/ActiveObject/Active_Object.c **** 
 102              		.loc 1 17 5 discriminator 3 view .LVU19
 103 0038 FEE7     		b	.L3
 104              	.L9:
 105 003a 00BF     		.align	2
 106              	.L8:
 107 003c 00000000 		.word	initEvt.0
 108              		.cfi_endproc
 109              	.LFE140:
 111              		.section	.text.Active_ctor,"ax",%progbits
 112              		.align	1
 113              		.global	Active_ctor
 114              		.syntax unified
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 7


 115              		.thumb
 116              		.thumb_func
 118              	Active_ctor:
 119              	.LVL5:
 120              	.LFB139:
   6:Core/Src/ActiveObject/Active_Object.c ****     /* Assign dispatch handler */
 121              		.loc 1 6 66 view -0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
   8:Core/Src/ActiveObject/Active_Object.c **** }
 126              		.loc 1 8 5 view .LVU21
   8:Core/Src/ActiveObject/Active_Object.c **** }
 127              		.loc 1 8 20 is_stmt 0 view .LVU22
 128 0000 C0F8B010 		str	r1, [r0, #176]
   9:Core/Src/ActiveObject/Active_Object.c **** 
 129              		.loc 1 9 1 view .LVU23
 130 0004 7047     		bx	lr
 131              		.cfi_endproc
 132              	.LFE139:
 134              		.section	.rodata.Active_start.str1.4,"aMS",%progbits,1
 135              		.align	2
 136              	.LC0:
 137 0000 414F00   		.ascii	"AO\000"
 138              		.section	.text.Active_start,"ax",%progbits
 139              		.align	1
 140              		.global	Active_start
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	Active_start:
 146              	.LVL6:
 147              	.LFB141:
  28:Core/Src/ActiveObject/Active_Object.c ****     }
  29:Core/Src/ActiveObject/Active_Object.c **** }
  30:Core/Src/ActiveObject/Active_Object.c **** /*-------------------------------------------------------------------------------------------------
  31:Core/Src/ActiveObject/Active_Object.c **** 
  32:Core/Src/ActiveObject/Active_Object.c **** 
  33:Core/Src/ActiveObject/Active_Object.c **** void Active_start (Active * const self,
  34:Core/Src/ActiveObject/Active_Object.c ****                    UBaseType_t uxPriority,      // priority (1-based)
  35:Core/Src/ActiveObject/Active_Object.c ****                    UBaseType_t uxQueueLength,   // 
  36:Core/Src/ActiveObject/Active_Object.c ****                    uint32_t usStackDepth)       //
  37:Core/Src/ActiveObject/Active_Object.c **** {   
 148              		.loc 1 37 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 37 1 is_stmt 0 view .LVU25
 153 0000 70B5     		push	{r4, r5, r6, lr}
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 16
 156              		.cfi_offset 4, -16
 157              		.cfi_offset 5, -12
 158              		.cfi_offset 6, -8
 159              		.cfi_offset 14, -4
 160 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 8


 161              	.LCFI4:
 162              		.cfi_def_cfa_offset 24
 163 0004 0446     		mov	r4, r0
 164 0006 0E46     		mov	r6, r1
 165 0008 1046     		mov	r0, r2
 166              	.LVL7:
 167              		.loc 1 37 1 view .LVU26
 168 000a 1D46     		mov	r5, r3
  38:Core/Src/ActiveObject/Active_Object.c ****     self->queue = xQueueCreate(uxQueueLength, sizeof(Event *));
 169              		.loc 1 38 5 is_stmt 1 view .LVU27
 170              		.loc 1 38 19 is_stmt 0 view .LVU28
 171 000c 0022     		movs	r2, #0
 172              	.LVL8:
 173              		.loc 1 38 19 view .LVU29
 174 000e 0421     		movs	r1, #4
 175              	.LVL9:
 176              		.loc 1 38 19 view .LVU30
 177 0010 FFF7FEFF 		bl	xQueueGenericCreate
 178              	.LVL10:
 179              		.loc 1 38 17 discriminator 1 view .LVU31
 180 0014 E065     		str	r0, [r4, #92]
  39:Core/Src/ActiveObject/Active_Object.c **** 
  40:Core/Src/ActiveObject/Active_Object.c ****     xTaskCreate(&Active_eventloop,              /* The thread function */
 181              		.loc 1 40 5 is_stmt 1 view .LVU32
 182 0016 0194     		str	r4, [sp, #4]
 183 0018 0096     		str	r6, [sp]
 184 001a 2346     		mov	r3, r4
 185 001c AAB2     		uxth	r2, r5
 186 001e 0849     		ldr	r1, .L16
 187 0020 0848     		ldr	r0, .L16+4
 188 0022 FFF7FEFF 		bl	xTaskCreate
 189              	.LVL11:
  41:Core/Src/ActiveObject/Active_Object.c ****                 "AO",                           /* The name of the task */
  42:Core/Src/ActiveObject/Active_Object.c ****                 usStackDepth,                   /* Stack depth */
  43:Core/Src/ActiveObject/Active_Object.c ****                 self,                           /* The pvParameters */
  44:Core/Src/ActiveObject/Active_Object.c ****                 uxPriority + tskIDLE_PRIORITY,  /* FreeROTS priority */
  45:Core/Src/ActiveObject/Active_Object.c ****                 &self->thread);                 /* pxCreatedTask */
  46:Core/Src/ActiveObject/Active_Object.c ****     /* Thread must be created */
  47:Core/Src/ActiveObject/Active_Object.c ****     configASSERT(self->thread);
 190              		.loc 1 47 5 view .LVU33
 191 0026 2368     		ldr	r3, [r4]
 192 0028 0BB1     		cbz	r3, .L15
  48:Core/Src/ActiveObject/Active_Object.c **** }
 193              		.loc 1 48 1 is_stmt 0 view .LVU34
 194 002a 02B0     		add	sp, sp, #8
 195              	.LCFI5:
 196              		.cfi_remember_state
 197              		.cfi_def_cfa_offset 16
 198              		@ sp needed
 199 002c 70BD     		pop	{r4, r5, r6, pc}
 200              	.LVL12:
 201              	.L15:
 202              	.LCFI6:
 203              		.cfi_restore_state
  47:Core/Src/ActiveObject/Active_Object.c **** }
 204              		.loc 1 47 5 is_stmt 1 discriminator 1 view .LVU35
 205              	.LBB14:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 9


 206              	.LBI14:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 207              		.loc 2 194 34 view .LVU36
 208              	.LBB15:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 209              		.loc 2 196 9 view .LVU37
 210              		.loc 2 198 9 view .LVU38
 211              		.syntax unified
 212              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 213 002e 4FF05003 			mov r3, #80												
 214 0032 83F31188 		msr basepri, r3											
 215 0036 BFF36F8F 		isb														
 216 003a BFF34F8F 		dsb														
 217              	
 218              	@ 0 "" 2
 219              		.thumb
 220              		.syntax unified
 221              	.L13:
 222              	.LBE15:
 223              	.LBE14:
  47:Core/Src/ActiveObject/Active_Object.c **** }
 224              		.loc 1 47 5 discriminator 3 view .LVU39
  47:Core/Src/ActiveObject/Active_Object.c **** }
 225              		.loc 1 47 5 discriminator 3 view .LVU40
 226 003e FEE7     		b	.L13
 227              	.L17:
 228              		.align	2
 229              	.L16:
 230 0040 00000000 		.word	.LC0
 231 0044 00000000 		.word	Active_eventloop
 232              		.cfi_endproc
 233              	.LFE141:
 235              		.section	.text.Active_post,"ax",%progbits
 236              		.align	1
 237              		.global	Active_post
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	Active_post:
 243              	.LVL13:
 244              	.LFB142:
  49:Core/Src/ActiveObject/Active_Object.c **** 
  50:Core/Src/ActiveObject/Active_Object.c **** void Active_post (Active * const self, Event const * const event) {
 245              		.loc 1 50 67 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 8
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		.loc 1 50 67 is_stmt 0 view .LVU42
 250 0000 00B5     		push	{lr}
 251              	.LCFI7:
 252              		.cfi_def_cfa_offset 4
 253              		.cfi_offset 14, -4
 254 0002 83B0     		sub	sp, sp, #12
 255              	.LCFI8:
 256              		.cfi_def_cfa_offset 16
 257 0004 0191     		str	r1, [sp, #4]
  51:Core/Src/ActiveObject/Active_Object.c ****     BaseType_t status = xQueueSendToBack(self->queue, (void *)&event, (TickType_t) 0);
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 10


 258              		.loc 1 51 5 is_stmt 1 view .LVU43
 259              		.loc 1 51 25 is_stmt 0 view .LVU44
 260 0006 0023     		movs	r3, #0
 261 0008 1A46     		mov	r2, r3
 262 000a 01A9     		add	r1, sp, #4
 263              	.LVL14:
 264              		.loc 1 51 25 view .LVU45
 265 000c C06D     		ldr	r0, [r0, #92]
 266              	.LVL15:
 267              		.loc 1 51 25 view .LVU46
 268 000e FFF7FEFF 		bl	xQueueGenericSend
 269              	.LVL16:
  52:Core/Src/ActiveObject/Active_Object.c ****     configASSERT(status == pdPASS);
 270              		.loc 1 52 5 is_stmt 1 view .LVU47
 271 0012 0128     		cmp	r0, #1
 272 0014 08D0     		beq	.L18
 273              		.loc 1 52 5 discriminator 1 view .LVU48
 274              	.LBB16:
 275              	.LBI16:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 276              		.loc 2 194 34 view .LVU49
 277              	.LBB17:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 278              		.loc 2 196 9 view .LVU50
 279              		.loc 2 198 9 view .LVU51
 280              		.syntax unified
 281              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 282 0016 4FF05003 			mov r3, #80												
 283 001a 83F31188 		msr basepri, r3											
 284 001e BFF36F8F 		isb														
 285 0022 BFF34F8F 		dsb														
 286              	
 287              	@ 0 "" 2
 288              		.thumb
 289              		.syntax unified
 290              	.L20:
 291              	.LBE17:
 292              	.LBE16:
 293              		.loc 1 52 5 discriminator 3 view .LVU52
 294              		.loc 1 52 5 discriminator 3 view .LVU53
 295 0026 FEE7     		b	.L20
 296              	.L18:
  53:Core/Src/ActiveObject/Active_Object.c **** }
 297              		.loc 1 53 1 is_stmt 0 view .LVU54
 298 0028 03B0     		add	sp, sp, #12
 299              	.LCFI9:
 300              		.cfi_def_cfa_offset 4
 301              		@ sp needed
 302 002a 5DF804FB 		ldr	pc, [sp], #4
 303              		.cfi_endproc
 304              	.LFE142:
 306              		.section	.text.Active_postFromISR,"ax",%progbits
 307              		.align	1
 308              		.global	Active_postFromISR
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 11


 313              	Active_postFromISR:
 314              	.LVL17:
 315              	.LFB143:
  54:Core/Src/ActiveObject/Active_Object.c **** 
  55:Core/Src/ActiveObject/Active_Object.c **** void Active_postFromISR (Active * const self, Event const * const event,
  56:Core/Src/ActiveObject/Active_Object.c ****                          BaseType_t *pxHigherPriorityTaskWoken)
  57:Core/Src/ActiveObject/Active_Object.c **** {
 316              		.loc 1 57 1 is_stmt 1 view -0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 8
 319              		@ frame_needed = 0, uses_anonymous_args = 0
 320              		.loc 1 57 1 is_stmt 0 view .LVU56
 321 0000 00B5     		push	{lr}
 322              	.LCFI10:
 323              		.cfi_def_cfa_offset 4
 324              		.cfi_offset 14, -4
 325 0002 83B0     		sub	sp, sp, #12
 326              	.LCFI11:
 327              		.cfi_def_cfa_offset 16
 328 0004 0191     		str	r1, [sp, #4]
  58:Core/Src/ActiveObject/Active_Object.c ****     BaseType_t status = xQueueSendToBackFromISR(self->queue, (void *)&event, pxHigherPriorityTaskWo
 329              		.loc 1 58 5 is_stmt 1 view .LVU57
 330              		.loc 1 58 25 is_stmt 0 view .LVU58
 331 0006 0023     		movs	r3, #0
 332 0008 01A9     		add	r1, sp, #4
 333              	.LVL18:
 334              		.loc 1 58 25 view .LVU59
 335 000a C06D     		ldr	r0, [r0, #92]
 336              	.LVL19:
 337              		.loc 1 58 25 view .LVU60
 338 000c FFF7FEFF 		bl	xQueueGenericSendFromISR
 339              	.LVL20:
  59:Core/Src/ActiveObject/Active_Object.c ****     configASSERT(status == pdPASS);
 340              		.loc 1 59 5 is_stmt 1 view .LVU61
 341 0010 0128     		cmp	r0, #1
 342 0012 08D0     		beq	.L22
 343              		.loc 1 59 5 discriminator 1 view .LVU62
 344              	.LBB18:
 345              	.LBI18:
 194:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h ****     {
 346              		.loc 2 194 34 view .LVU63
 347              	.LBB19:
 196:ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h **** 
 348              		.loc 2 196 9 view .LVU64
 349              		.loc 2 198 9 view .LVU65
 350              		.syntax unified
 351              	@ 198 "ThirdParty/FreeRTOS/portable/GCC/ARM_CM4F/portmacro.h" 1
 352 0014 4FF05003 			mov r3, #80												
 353 0018 83F31188 		msr basepri, r3											
 354 001c BFF36F8F 		isb														
 355 0020 BFF34F8F 		dsb														
 356              	
 357              	@ 0 "" 2
 358              		.thumb
 359              		.syntax unified
 360              	.L24:
 361              	.LBE19:
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 12


 362              	.LBE18:
 363              		.loc 1 59 5 discriminator 3 view .LVU66
 364              		.loc 1 59 5 discriminator 3 view .LVU67
 365 0024 FEE7     		b	.L24
 366              	.L22:
  60:Core/Src/ActiveObject/Active_Object.c **** }
 367              		.loc 1 60 1 is_stmt 0 view .LVU68
 368 0026 03B0     		add	sp, sp, #12
 369              	.LCFI12:
 370              		.cfi_def_cfa_offset 4
 371              		@ sp needed
 372 0028 5DF804FB 		ldr	pc, [sp], #4
 373              		.cfi_endproc
 374              	.LFE143:
 376              		.section	.rodata.initEvt.0,"a"
 377              		.align	2
 380              	initEvt.0:
 381 0000 0000     		.space	2
 382              		.text
 383              	.Letext0:
 384              		.file 3 "C:/ARM GNU Toolchain/arm-none-eabi/include/machine/_default_types.h"
 385              		.file 4 "C:/ARM GNU Toolchain/arm-none-eabi/include/sys/_stdint.h"
 386              		.file 5 "ThirdParty/FreeRTOS/include/projdefs.h"
 387              		.file 6 "ThirdParty/FreeRTOS/include/FreeRTOS.h"
 388              		.file 7 "ThirdParty/FreeRTOS/include/task.h"
 389              		.file 8 "ThirdParty/FreeRTOS/include/queue.h"
 390              		.file 9 "Core/Src/ActiveObject/Inc/Active_Object.h"
ARM GAS  C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 Active_Object.c
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:21     .text.Active_eventloop:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:26     .text.Active_eventloop:00000000 Active_eventloop
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:107    .text.Active_eventloop:0000003c $d
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:380    .rodata.initEvt.0:00000000 initEvt.0
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:112    .text.Active_ctor:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:118    .text.Active_ctor:00000000 Active_ctor
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:135    .rodata.Active_start.str1.4:00000000 $d
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:139    .text.Active_start:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:145    .text.Active_start:00000000 Active_start
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:230    .text.Active_start:00000040 $d
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:236    .text.Active_post:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:242    .text.Active_post:00000000 Active_post
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:307    .text.Active_postFromISR:00000000 $t
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:313    .text.Active_postFromISR:00000000 Active_postFromISR
C:\Users\Lamp\AppData\Local\Temp\cckH3my0.s:377    .rodata.initEvt.0:00000000 $d

UNDEFINED SYMBOLS
xQueueReceive
xQueueGenericCreate
xTaskCreate
xQueueGenericSend
xQueueGenericSendFromISR
